
//----------------------------------------------------
// The following code was generated by CUP v0.11b beta 20140226
//----------------------------------------------------

package jasmin;

import java_cup.runtime.*;
import java_cup.*;
import jas.*;
import java.io.*;
import java.util.Hashtable;
import java.util.List;
import java.util.ArrayList;
import java.io.FileReader;
import java.io.File;
import java.io.ObjectInputStream;
import java.io.FileInputStream;
import java_cup.runtime.XMLElement;

/** CUP v0.11b beta 20140226 generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
getFromFile("tables.out/shortarray_0.obj");

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

public static short[][] getFromFile(String filename) {
    try {
	    ClassLoader cl = java_cup.parser.class.getClassLoader();
       InputStream is = cl.getResourceAsStream(filename);
   	ObjectInputStream ois = new ObjectInputStream(is);
   	short[][] sa2 = (short[][]) ois.readObject();
   	return sa2;
  } catch (Throwable t) {
    throw new RuntimeException("oups: " + t);
  }
}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
getFromFile("tables.out/shortarray_1.obj");

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
getFromFile("tables.out/shortarray_2.obj");

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

	action_obj.scanner = scanner;
	action_obj.classFile = classFile;

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

    return scanner.next_token();

    }



	// parser code

	public Scanner scanner;
	public ClassFile classFile;
	
	public void report_error(String message, Object info)  {
    	classFile.report_error("Warning - " + message);
	}

	public void report_fatal_error(String message, Object info)  {
    	classFile.report_error("Error - " + message);
    	// System.exit(-1);
	}

	parser(ClassFile classFile, Scanner scanner) {
	    super();

	    this.scanner = scanner;
	    this.classFile = classFile;
	}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


    short access_val;
    public Scanner scanner;
    public ClassFile classFile;

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // jas_file ::= source_spec class_spec super_spec impls class_attrs synth_attr inner_class_attr encl_meth_attr class_depr_attr class_sig_attr class_annotation_attr fields methods 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("jas_file",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= jas_file EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // source_spec ::= DSOURCE Word SEP 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 classFile.setSource(w); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("source_spec",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // source_spec ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("source_spec",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // class_spec ::= DCLASS access Word_plus_keywords SEP 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.setClass(name,
                (short)(a.intValue() | RuntimeConstants.ACC_SUPER));
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_spec",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // class_spec ::= DINTERFACE access Word_plus_keywords SEP 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.setClass(name,
                (short)(a.intValue() |
                        RuntimeConstants.ACC_INTERFACE));
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_spec",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Word_plus_keywords ::= Word 
            {
              String RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = ScannerUtils.convertDots(w); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Word_plus_keywords ::= FROM 
            {
              String RESULT =null;
		 RESULT = "from"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Word_plus_keywords ::= TO 
            {
              String RESULT =null;
		 RESULT = "to"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Word_plus_keywords ::= USING 
            {
              String RESULT =null;
		 RESULT = "using"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Word_plus_keywords ::= IS 
            {
              String RESULT =null;
		 RESULT = "is"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Word_plus_keywords ::= METHOD 
            {
              String RESULT =null;
		 RESULT = "method"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Word_plus_keywords ::= LOOKUPSWITCH 
            {
              String RESULT =null;
		 RESULT = "lookupswitch"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Word_plus_keywords ::= TABLESWITCH 
            {
              String RESULT =null;
		 RESULT = "tableswitch"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Word_plus_keywords ::= DEFAULT 
            {
              String RESULT =null;
		 RESULT = "default"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Word_plus_keywords ::= Insn 
            {
              String RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = i; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Word_plus_keywords",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Insn ::= i_aaload 
            {
              String RESULT =null;
		 RESULT = "aaload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Insn ::= i_aastore 
            {
              String RESULT =null;
		 RESULT = "aastore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Insn ::= i_aconst_null 
            {
              String RESULT =null;
		 RESULT = "aconst_null" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Insn ::= i_aload 
            {
              String RESULT =null;
		 RESULT = "aload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Insn ::= i_aload_0 
            {
              String RESULT =null;
		 RESULT = "aload_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Insn ::= i_aload_1 
            {
              String RESULT =null;
		 RESULT = "aload_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Insn ::= i_aload_2 
            {
              String RESULT =null;
		 RESULT = "aload_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Insn ::= i_aload_3 
            {
              String RESULT =null;
		 RESULT = "aload_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Insn ::= i_anewarray 
            {
              String RESULT =null;
		 RESULT = "anewarray" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Insn ::= i_areturn 
            {
              String RESULT =null;
		 RESULT = "areturn" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Insn ::= i_arraylength 
            {
              String RESULT =null;
		 RESULT = "arraylength" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Insn ::= i_astore 
            {
              String RESULT =null;
		 RESULT = "astore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Insn ::= i_astore_0 
            {
              String RESULT =null;
		 RESULT = "astore_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Insn ::= i_astore_1 
            {
              String RESULT =null;
		 RESULT = "astore_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Insn ::= i_astore_2 
            {
              String RESULT =null;
		 RESULT = "astore_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Insn ::= i_astore_3 
            {
              String RESULT =null;
		 RESULT = "astore_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Insn ::= i_athrow 
            {
              String RESULT =null;
		 RESULT = "athrow" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Insn ::= i_baload 
            {
              String RESULT =null;
		 RESULT = "baload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Insn ::= i_bastore 
            {
              String RESULT =null;
		 RESULT = "bastore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Insn ::= i_bipush 
            {
              String RESULT =null;
		 RESULT = "bipush" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Insn ::= i_breakpoint 
            {
              String RESULT =null;
		 RESULT = "breakpoint" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Insn ::= i_caload 
            {
              String RESULT =null;
		 RESULT = "caload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Insn ::= i_castore 
            {
              String RESULT =null;
		 RESULT = "castore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Insn ::= i_checkcast 
            {
              String RESULT =null;
		 RESULT = "checkcast" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Insn ::= i_d2f 
            {
              String RESULT =null;
		 RESULT = "d2f" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Insn ::= i_d2i 
            {
              String RESULT =null;
		 RESULT = "d2i" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Insn ::= i_d2l 
            {
              String RESULT =null;
		 RESULT = "d2l" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Insn ::= i_dadd 
            {
              String RESULT =null;
		 RESULT = "dadd" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Insn ::= i_daload 
            {
              String RESULT =null;
		 RESULT = "daload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Insn ::= i_dastore 
            {
              String RESULT =null;
		 RESULT = "dastore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Insn ::= i_dcmpg 
            {
              String RESULT =null;
		 RESULT = "dcmpg" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Insn ::= i_dcmpl 
            {
              String RESULT =null;
		 RESULT = "dcmpl" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Insn ::= i_dconst_0 
            {
              String RESULT =null;
		 RESULT = "dconst_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Insn ::= i_dconst_1 
            {
              String RESULT =null;
		 RESULT = "dconst_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Insn ::= i_ddiv 
            {
              String RESULT =null;
		 RESULT = "ddiv" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Insn ::= i_dload 
            {
              String RESULT =null;
		 RESULT = "dload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Insn ::= i_dload_0 
            {
              String RESULT =null;
		 RESULT = "dload_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Insn ::= i_dload_1 
            {
              String RESULT =null;
		 RESULT = "dload_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Insn ::= i_dload_2 
            {
              String RESULT =null;
		 RESULT = "dload_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Insn ::= i_dload_3 
            {
              String RESULT =null;
		 RESULT = "dload_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Insn ::= i_dmul 
            {
              String RESULT =null;
		 RESULT = "dmul" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Insn ::= i_dneg 
            {
              String RESULT =null;
		 RESULT = "dneg" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Insn ::= i_drem 
            {
              String RESULT =null;
		 RESULT = "drem" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Insn ::= i_dreturn 
            {
              String RESULT =null;
		 RESULT = "dreturn" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Insn ::= i_dstore 
            {
              String RESULT =null;
		 RESULT = "dstore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Insn ::= i_dstore_0 
            {
              String RESULT =null;
		 RESULT = "dstore_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Insn ::= i_dstore_1 
            {
              String RESULT =null;
		 RESULT = "dstore_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Insn ::= i_dstore_2 
            {
              String RESULT =null;
		 RESULT = "dstore_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Insn ::= i_dstore_3 
            {
              String RESULT =null;
		 RESULT = "dstore_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Insn ::= i_dsub 
            {
              String RESULT =null;
		 RESULT = "dsub" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Insn ::= i_dup 
            {
              String RESULT =null;
		 RESULT = "dup" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Insn ::= i_dup2 
            {
              String RESULT =null;
		 RESULT = "dup2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Insn ::= i_dup2_x1 
            {
              String RESULT =null;
		 RESULT = "dup2_x1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Insn ::= i_dup2_x2 
            {
              String RESULT =null;
		 RESULT = "dup2_x2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Insn ::= i_dup_x1 
            {
              String RESULT =null;
		 RESULT = "dup_x1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Insn ::= i_dup_x2 
            {
              String RESULT =null;
		 RESULT = "dup_x2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Insn ::= i_f2d 
            {
              String RESULT =null;
		 RESULT = "f2d" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Insn ::= i_f2i 
            {
              String RESULT =null;
		 RESULT = "f2i" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Insn ::= i_f2l 
            {
              String RESULT =null;
		 RESULT = "f2l" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Insn ::= i_fadd 
            {
              String RESULT =null;
		 RESULT = "fadd" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Insn ::= i_faload 
            {
              String RESULT =null;
		 RESULT = "faload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Insn ::= i_fastore 
            {
              String RESULT =null;
		 RESULT = "fastore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Insn ::= i_fcmpg 
            {
              String RESULT =null;
		 RESULT = "fcmpg" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Insn ::= i_fcmpl 
            {
              String RESULT =null;
		 RESULT = "fcmpl" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Insn ::= i_fconst_0 
            {
              String RESULT =null;
		 RESULT = "fconst_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Insn ::= i_fconst_1 
            {
              String RESULT =null;
		 RESULT = "fconst_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Insn ::= i_fconst_2 
            {
              String RESULT =null;
		 RESULT = "fconst_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Insn ::= i_fdiv 
            {
              String RESULT =null;
		 RESULT = "fdiv" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Insn ::= i_fload 
            {
              String RESULT =null;
		 RESULT = "fload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Insn ::= i_fload_0 
            {
              String RESULT =null;
		 RESULT = "fload_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Insn ::= i_fload_1 
            {
              String RESULT =null;
		 RESULT = "fload_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Insn ::= i_fload_2 
            {
              String RESULT =null;
		 RESULT = "fload_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Insn ::= i_fload_3 
            {
              String RESULT =null;
		 RESULT = "fload_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Insn ::= i_fmul 
            {
              String RESULT =null;
		 RESULT = "fmul" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Insn ::= i_fneg 
            {
              String RESULT =null;
		 RESULT = "fneg" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Insn ::= i_frem 
            {
              String RESULT =null;
		 RESULT = "frem" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Insn ::= i_freturn 
            {
              String RESULT =null;
		 RESULT = "freturn" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Insn ::= i_fstore 
            {
              String RESULT =null;
		 RESULT = "fstore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Insn ::= i_fstore_0 
            {
              String RESULT =null;
		 RESULT = "fstore_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Insn ::= i_fstore_1 
            {
              String RESULT =null;
		 RESULT = "fstore_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Insn ::= i_fstore_2 
            {
              String RESULT =null;
		 RESULT = "fstore_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Insn ::= i_fstore_3 
            {
              String RESULT =null;
		 RESULT = "fstore_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Insn ::= i_fsub 
            {
              String RESULT =null;
		 RESULT = "fsub" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Insn ::= i_getfield 
            {
              String RESULT =null;
		 RESULT = "getfield" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Insn ::= i_getstatic 
            {
              String RESULT =null;
		 RESULT = "getstatic" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Insn ::= i_goto 
            {
              String RESULT =null;
		 RESULT = "goto" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Insn ::= i_goto_w 
            {
              String RESULT =null;
		 RESULT = "goto_w" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Insn ::= i_i2d 
            {
              String RESULT =null;
		 RESULT = "i2d" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Insn ::= i_i2f 
            {
              String RESULT =null;
		 RESULT = "i2f" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Insn ::= i_i2l 
            {
              String RESULT =null;
		 RESULT = "i2l" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Insn ::= i_iadd 
            {
              String RESULT =null;
		 RESULT = "iadd" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Insn ::= i_iaload 
            {
              String RESULT =null;
		 RESULT = "iaload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Insn ::= i_iand 
            {
              String RESULT =null;
		 RESULT = "iand" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Insn ::= i_iastore 
            {
              String RESULT =null;
		 RESULT = "iastore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Insn ::= i_iconst_0 
            {
              String RESULT =null;
		 RESULT = "iconst_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Insn ::= i_iconst_1 
            {
              String RESULT =null;
		 RESULT = "iconst_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Insn ::= i_iconst_2 
            {
              String RESULT =null;
		 RESULT = "iconst_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Insn ::= i_iconst_3 
            {
              String RESULT =null;
		 RESULT = "iconst_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Insn ::= i_iconst_4 
            {
              String RESULT =null;
		 RESULT = "iconst_4" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Insn ::= i_iconst_5 
            {
              String RESULT =null;
		 RESULT = "iconst_5" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Insn ::= i_iconst_m1 
            {
              String RESULT =null;
		 RESULT = "iconst_m1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Insn ::= i_idiv 
            {
              String RESULT =null;
		 RESULT = "idiv" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Insn ::= i_if_acmpeq 
            {
              String RESULT =null;
		 RESULT = "if_acmpeq" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Insn ::= i_if_acmpne 
            {
              String RESULT =null;
		 RESULT = "if_acmpne" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Insn ::= i_if_icmpeq 
            {
              String RESULT =null;
		 RESULT = "if_icmpeq" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Insn ::= i_if_icmpge 
            {
              String RESULT =null;
		 RESULT = "if_icmpge" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Insn ::= i_if_icmpgt 
            {
              String RESULT =null;
		 RESULT = "if_icmpgt" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Insn ::= i_if_icmple 
            {
              String RESULT =null;
		 RESULT = "if_icmple" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Insn ::= i_if_icmplt 
            {
              String RESULT =null;
		 RESULT = "if_icmplt" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Insn ::= i_if_icmpne 
            {
              String RESULT =null;
		 RESULT = "if_icmpne" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Insn ::= i_ifeq 
            {
              String RESULT =null;
		 RESULT = "ifeq" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Insn ::= i_ifge 
            {
              String RESULT =null;
		 RESULT = "ifge" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Insn ::= i_ifgt 
            {
              String RESULT =null;
		 RESULT = "ifgt" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Insn ::= i_ifle 
            {
              String RESULT =null;
		 RESULT = "ifle" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Insn ::= i_iflt 
            {
              String RESULT =null;
		 RESULT = "iflt" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Insn ::= i_ifne 
            {
              String RESULT =null;
		 RESULT = "ifne" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Insn ::= i_ifnonnull 
            {
              String RESULT =null;
		 RESULT = "ifnonnull" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Insn ::= i_ifnull 
            {
              String RESULT =null;
		 RESULT = "ifnull" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Insn ::= i_iinc 
            {
              String RESULT =null;
		 RESULT = "iinc" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Insn ::= i_iload 
            {
              String RESULT =null;
		 RESULT = "iload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Insn ::= i_iload_0 
            {
              String RESULT =null;
		 RESULT = "iload_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Insn ::= i_iload_1 
            {
              String RESULT =null;
		 RESULT = "iload_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Insn ::= i_iload_2 
            {
              String RESULT =null;
		 RESULT = "iload_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Insn ::= i_iload_3 
            {
              String RESULT =null;
		 RESULT = "iload_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Insn ::= i_imul 
            {
              String RESULT =null;
		 RESULT = "imul" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Insn ::= i_ineg 
            {
              String RESULT =null;
		 RESULT = "ineg" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Insn ::= i_instanceof 
            {
              String RESULT =null;
		 RESULT = "instanceof" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Insn ::= i_int2byte 
            {
              String RESULT =null;
		 RESULT = "int2byte" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Insn ::= i_int2char 
            {
              String RESULT =null;
		 RESULT = "int2char" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Insn ::= i_int2short 
            {
              String RESULT =null;
		 RESULT = "int2short" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Insn ::= i_i2b 
            {
              String RESULT =null;
		 RESULT = "i2b" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Insn ::= i_i2c 
            {
              String RESULT =null;
		 RESULT = "i2c" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Insn ::= i_i2s 
            {
              String RESULT =null;
		 RESULT = "i2s" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Insn ::= i_invokeinterface 
            {
              String RESULT =null;
		 RESULT = "invokeinterface" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Insn ::= i_invokenonvirtual 
            {
              String RESULT =null;
		 RESULT = "invokenonvirtual" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Insn ::= i_invokespecial 
            {
              String RESULT =null;
		 RESULT = "invokespecial" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Insn ::= i_invokestatic 
            {
              String RESULT =null;
		 RESULT = "invokestatic" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Insn ::= i_invokevirtual 
            {
              String RESULT =null;
		 RESULT = "invokevirtual" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Insn ::= i_invokedynamic 
            {
              String RESULT =null;
		 RESULT = "invokedynamic" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Insn ::= i_ior 
            {
              String RESULT =null;
		 RESULT = "ior" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Insn ::= i_irem 
            {
              String RESULT =null;
		 RESULT = "irem" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Insn ::= i_ireturn 
            {
              String RESULT =null;
		 RESULT = "ireturn" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Insn ::= i_ishl 
            {
              String RESULT =null;
		 RESULT = "ishl" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Insn ::= i_ishr 
            {
              String RESULT =null;
		 RESULT = "ishr" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Insn ::= i_istore 
            {
              String RESULT =null;
		 RESULT = "istore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // Insn ::= i_istore_0 
            {
              String RESULT =null;
		 RESULT = "istore_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // Insn ::= i_istore_1 
            {
              String RESULT =null;
		 RESULT = "istore_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Insn ::= i_istore_2 
            {
              String RESULT =null;
		 RESULT = "istore_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Insn ::= i_istore_3 
            {
              String RESULT =null;
		 RESULT = "istore_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // Insn ::= i_isub 
            {
              String RESULT =null;
		 RESULT = "isub" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // Insn ::= i_iushr 
            {
              String RESULT =null;
		 RESULT = "iushr" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // Insn ::= i_ixor 
            {
              String RESULT =null;
		 RESULT = "ixor" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Insn ::= i_jsr 
            {
              String RESULT =null;
		 RESULT = "jsr" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Insn ::= i_jsr_w 
            {
              String RESULT =null;
		 RESULT = "jsr_w" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Insn ::= i_l2d 
            {
              String RESULT =null;
		 RESULT = "l2d" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Insn ::= i_l2f 
            {
              String RESULT =null;
		 RESULT = "l2f" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // Insn ::= i_l2i 
            {
              String RESULT =null;
		 RESULT = "l2i" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // Insn ::= i_ladd 
            {
              String RESULT =null;
		 RESULT = "ladd" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // Insn ::= i_laload 
            {
              String RESULT =null;
		 RESULT = "laload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Insn ::= i_land 
            {
              String RESULT =null;
		 RESULT = "land" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Insn ::= i_lastore 
            {
              String RESULT =null;
		 RESULT = "lastore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Insn ::= i_lcmp 
            {
              String RESULT =null;
		 RESULT = "lcmp" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // Insn ::= i_lconst_0 
            {
              String RESULT =null;
		 RESULT = "lconst_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // Insn ::= i_lconst_1 
            {
              String RESULT =null;
		 RESULT = "lconst_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // Insn ::= i_ldc 
            {
              String RESULT =null;
		 RESULT = "ldc" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // Insn ::= i_ldc_w 
            {
              String RESULT =null;
		 RESULT = "ldc_w" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // Insn ::= i_ldc2_w 
            {
              String RESULT =null;
		 RESULT = "ldc2_w" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Insn ::= i_ldiv 
            {
              String RESULT =null;
		 RESULT = "ldiv" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // Insn ::= i_lload 
            {
              String RESULT =null;
		 RESULT = "lload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // Insn ::= i_lload_0 
            {
              String RESULT =null;
		 RESULT = "lload_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // Insn ::= i_lload_1 
            {
              String RESULT =null;
		 RESULT = "lload_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // Insn ::= i_lload_2 
            {
              String RESULT =null;
		 RESULT = "lload_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // Insn ::= i_lload_3 
            {
              String RESULT =null;
		 RESULT = "lload_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // Insn ::= i_lmul 
            {
              String RESULT =null;
		 RESULT = "lmul" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // Insn ::= i_lneg 
            {
              String RESULT =null;
		 RESULT = "lneg" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // Insn ::= i_lookupswitch 
            {
              String RESULT =null;
		 RESULT = "lookupswitch" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // Insn ::= i_lor 
            {
              String RESULT =null;
		 RESULT = "lor" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // Insn ::= i_lrem 
            {
              String RESULT =null;
		 RESULT = "lrem" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // Insn ::= i_lreturn 
            {
              String RESULT =null;
		 RESULT = "lreturn" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // Insn ::= i_lshl 
            {
              String RESULT =null;
		 RESULT = "lshl" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // Insn ::= i_lshr 
            {
              String RESULT =null;
		 RESULT = "lshr" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // Insn ::= i_lstore 
            {
              String RESULT =null;
		 RESULT = "lstore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // Insn ::= i_lstore_0 
            {
              String RESULT =null;
		 RESULT = "lstore_0" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // Insn ::= i_lstore_1 
            {
              String RESULT =null;
		 RESULT = "lstore_1" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // Insn ::= i_lstore_2 
            {
              String RESULT =null;
		 RESULT = "lstore_2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // Insn ::= i_lstore_3 
            {
              String RESULT =null;
		 RESULT = "lstore_3" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // Insn ::= i_lsub 
            {
              String RESULT =null;
		 RESULT = "lsub" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // Insn ::= i_lushr 
            {
              String RESULT =null;
		 RESULT = "lushr" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // Insn ::= i_lxor 
            {
              String RESULT =null;
		 RESULT = "lxor" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // Insn ::= i_monitorenter 
            {
              String RESULT =null;
		 RESULT = "monitorenter" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // Insn ::= i_monitorexit 
            {
              String RESULT =null;
		 RESULT = "monitorexit" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // Insn ::= i_multianewarray 
            {
              String RESULT =null;
		 RESULT = "multianewarray" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // Insn ::= i_new 
            {
              String RESULT =null;
		 RESULT = "new" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // Insn ::= i_newarray 
            {
              String RESULT =null;
		 RESULT = "newarray" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // Insn ::= i_nop 
            {
              String RESULT =null;
		 RESULT = "nop" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // Insn ::= i_pop 
            {
              String RESULT =null;
		 RESULT = "pop" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // Insn ::= i_pop2 
            {
              String RESULT =null;
		 RESULT = "pop2" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // Insn ::= i_putfield 
            {
              String RESULT =null;
		 RESULT = "putfield" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // Insn ::= i_putstatic 
            {
              String RESULT =null;
		 RESULT = "putstatic" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // Insn ::= i_ret 
            {
              String RESULT =null;
		 RESULT = "ret" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // Insn ::= i_ret_w 
            {
              String RESULT =null;
		 RESULT = "ret_w" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // Insn ::= i_return 
            {
              String RESULT =null;
		 RESULT = "return" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // Insn ::= i_saload 
            {
              String RESULT =null;
		 RESULT = "saload" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // Insn ::= i_sastore 
            {
              String RESULT =null;
		 RESULT = "sastore" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // Insn ::= i_sipush 
            {
              String RESULT =null;
		 RESULT = "sipush" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // Insn ::= i_swap 
            {
              String RESULT =null;
		 RESULT = "swap" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // Insn ::= i_tableswitch 
            {
              String RESULT =null;
		 RESULT = "tableswitch" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // Insn ::= i_wide 
            {
              String RESULT =null;
		 RESULT = "wide" ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Insn",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // NT$0 ::= 
            {
              Short RESULT =null;
 access_val = 0; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$0",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // access ::= NT$0 access_list 
            {
              Short RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Short) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Short(access_val); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // access_list ::= access_items 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_list",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // access_list ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_list",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // access_items ::= access_items access_item 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_items",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // access_items ::= access_item 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_items",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // access_item ::= PUBLIC 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_PUBLIC; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // access_item ::= PRIVATE 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_PRIVATE; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // access_item ::= PROTECTED 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_PROTECTED; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // access_item ::= STATIC 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_STATIC; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // access_item ::= FINAL 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_FINAL; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // access_item ::= SYNCHRONIZED 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_SYNCHRONIZED; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // access_item ::= VOLATILE 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_VOLATILE; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // access_item ::= TRANSIENT 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_TRANSIENT; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // access_item ::= NATIVE 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_NATIVE; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // access_item ::= INTERFACE 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_INTERFACE; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // access_item ::= ABSTRACT 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_ABSTRACT; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // access_item ::= STRICTFP 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_STRICTFP; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // access_item ::= ANNOTATION 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_ANNOTATION; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // access_item ::= ENUM 
            {
              Object RESULT =null;
		 access_val |= RuntimeConstants.ACC_ENUM; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("access_item",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // super_spec ::= DSUPER Word_plus_keywords SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.setSuperClass(name);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("super_spec",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // super_spec ::= DNOSUPER SEP 
            {
              Object RESULT =null;
		
            classFile.setNoSuperClass();
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("super_spec",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // impls ::= implements_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("impls",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // impls ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("impls",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // implements_list ::= implements_list implements_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("implements_list",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // implements_list ::= implements_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("implements_list",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // implements_spec ::= DIMPLEMENTS Word_plus_keywords SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 classFile.addInterface(name); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("implements_spec",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // class_depr_attr ::= deprecated_attr 
            {
              Object RESULT =null;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        classFile.addClassDeprAttr(dep_attr);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_depr_attr",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // class_sig_attr ::= signature_attr 
            {
              Object RESULT =null;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        classFile.addClassSigAttr(sig_attr);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_sig_attr",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // class_annotation_attr ::= annotation_attr_opt 
            {
              Object RESULT =null;
		int annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
    	if(annot_attr!=null) {
	        if(((VisibilityAnnotationAttr)annot_attr).getKind().equals("RuntimeVisible"))
	        	classFile.addClassAnnotAttrVisible(annot_attr);
	        else
	            classFile.addClassAnnotAttrInvisible(annot_attr);
	    }
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_annotation_attr",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // class_annotation_attr ::= annotation_attr annotation_attr 
            {
              Object RESULT =null;
		int annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int annot_attr2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int annot_attr2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object annot_attr2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        if(((VisibilityAnnotationAttr)annot_attr).getKind().equals("RuntimeVisible"))
        	classFile.addClassAnnotAttrVisible(annot_attr);
        else
            classFile.addClassAnnotAttrInvisible(annot_attr);
        if(((VisibilityAnnotationAttr)annot_attr2).getKind().equals("RuntimeVisible"))
        	classFile.addClassAnnotAttrVisible(annot_attr2);
        else
            classFile.addClassAnnotAttrInvisible(annot_attr2);        
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_annotation_attr",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // fields ::= field_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("fields",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // fields ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("fields",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // field_list ::= field_list field_item 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_list",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // field_list ::= field_item 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_list",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // field_item ::= field_spec field_attrs 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_item",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // field_item ::= field_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_item",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // field_spec ::= DFIELD access Str Word optional_default SEP deprecated_attr signature_attr annotation_attr_opt 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vis_annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object vis_annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.addField((short)a.intValue(), name, sig, v, dep_attr, sig_attr, vis_annot_attr, null);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_spec",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // field_spec ::= DFIELD access Str Word optional_default DSYNTHETIC SEP deprecated_attr signature_attr annotation_attr_opt 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vis_annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object vis_annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.addField((short)a.intValue(), name, sig, v, "synth", dep_attr, sig_attr, vis_annot_attr, null);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_spec",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // field_spec ::= DFIELD access Str Word optional_default SEP deprecated_attr signature_attr annotation_attr annotation_attr 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vis_annot_attr1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vis_annot_attr1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object vis_annot_attr1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attr2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vis_annot_attr2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object vis_annot_attr2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.addField((short)a.intValue(), name, sig, v, dep_attr, sig_attr, vis_annot_attr1, vis_annot_attr2);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_spec",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // field_spec ::= DFIELD access Str Word optional_default DSYNTHETIC SEP deprecated_attr signature_attr annotation_attr annotation_attr 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vis_annot_attr1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vis_annot_attr1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object vis_annot_attr1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attr2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vis_annot_attr2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object vis_annot_attr2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.addField((short)a.intValue(), name, sig, v, "synth", dep_attr, sig_attr, vis_annot_attr1, vis_annot_attr2);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_spec",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // optional_default ::= EQ item 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = v; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("optional_default",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // optional_default ::= 
            {
              Object RESULT =null;
		 RESULT = null; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("optional_default",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // item ::= Int 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Integer i = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = i; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("item",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // item ::= Num 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Number n = (Number)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = n; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("item",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // item ::= Str 
            {
              Object RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = s; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("item",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // methods ::= method_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("methods",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // methods ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("methods",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // method_list ::= method_list method_item 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_list",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // method_list ::= method_item 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_list",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // method_item ::= method_spec method_attrs 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_item",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // method_item ::= method_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_item",54, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // method_spec ::= defmethod statements endmethod 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_spec",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // method_spec ::= defmethod endmethod 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_spec",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // defmethod ::= DMETHOD access Word SEP 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Short i = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            String split[] = ScannerUtils.splitMethodSignature(name);
            classFile.newMethod(split[0], split[1], i.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("defmethod",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // endmethod ::= DEND METHOD SEP 
            {
              Object RESULT =null;
		
            classFile.endMethod();
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("endmethod",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // statements ::= statements statement 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("statements",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // statements ::= statement 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("statements",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // NT$1 ::= 
            {
              Object RESULT =null;
 classFile.setLine(scanner.token_line_num); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("NT$1",90, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // statement ::= NT$1 stmnt SEP 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("statement",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // stmnt ::= instruction 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmnt",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // stmnt ::= directive 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmnt",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // stmnt ::= error 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmnt",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // stmnt ::= label 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmnt",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // stmnt ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("stmnt",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // label ::= Word COLON 
            {
              Object RESULT =null;
		int labelleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int labelright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String label = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.plantLabel(label);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("label",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // directive ::= DVAR var_expr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // directive ::= DLIMIT limit_expr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // directive ::= DLINE line_expr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // directive ::= DTHROWS throws_expr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // directive ::= DCATCH catch_expr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // directive ::= DSET set_expr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // directive ::= DCODE_ATTR code_attr_expr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // directive ::= meth_synth_attr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // directive ::= meth_depr_attr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // directive ::= meth_sig_attr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000001(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // directive ::= meth_annotation_attr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // directive ::= meth_annotation_default_attr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // directive ::= meth_param_annotation_attr 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("directive",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // meth_synth_attr ::= DSYNTHETIC 
            {
              Object RESULT =null;
		
        classFile.addMethSynthAttr();
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("meth_synth_attr",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // meth_depr_attr ::= DDEPRECATED 
            {
              Object RESULT =null;
		
        classFile.addMethDeprAttr();
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("meth_depr_attr",69, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // meth_sig_attr ::= DSIG_ATTR Str 
            {
              Object RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        classFile.addMethSigAttr(s);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("meth_sig_attr",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // meth_annotation_attr ::= visibility_type SEP annotation_list DEND DANNOTATION_ATTR 
            {
              Object RESULT =null;
		int tvalleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tvalright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object tval = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
        RESULT = classFile.makeVisibilityAnnotation(tval, list);
        if(tval.equals("RuntimeVisible"))
        	classFile.addMethAnnotAttrVisible(RESULT);
        else
            classFile.addMethAnnotAttrInvisible(RESULT);        
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("meth_annotation_attr",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // meth_param_annotation_attr ::= DPARAM_ANNOT_ATTR visibility_type SEP annotation_attr_list DEND DPARAM_ANNOT_ATTR 
            {
              Object RESULT =null;
		int kindleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int kindright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object kind = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
        RESULT = classFile.makeParameterVisibilityAnnotation(kind, list);
        if(kind.equals("RuntimeVisible"))
        	classFile.addMethParamAnnotAttrVisible(RESULT);
        else
            classFile.addMethParamAnnotAttrInvisible(RESULT);        
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("meth_param_annotation_attr",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // annotation_attr_list ::= annotation_attr_list annotation_attr 
            {
              Object RESULT =null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = classFile.mergeNewAnnotAttr(list, elem);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_attr_list",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // annotation_attr_list ::= annotation_attr 
            {
              Object RESULT =null;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = classFile.makeNewAnnotAttrList(elem);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_attr_list",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // meth_annotation_default_attr ::= DANNOT_DEFAULT elem_val_pair DEND DANNOT_DEFAULT 
            {
              Object RESULT =null;
		int defleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int defright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object def = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
        classFile.addMethAnnotDefault(def);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("meth_annotation_default_attr",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // code_attr_expr ::= Word Str 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
               classFile.addSootCodeAttr(w, v);    
          ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("code_attr_expr",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // var_expr ::= Int IS Word Word FROM Word TO Word 
            {
              Object RESULT =null;
		int regleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int regright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Integer reg = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int slableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int slabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String slab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int elableft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int elabright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String elab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
             classFile.addVar(slab, elab, name,
                            sig, reg.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("var_expr",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // var_expr ::= Int IS Word Word 
            {
              Object RESULT =null;
		int regleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int regright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Integer reg = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
             classFile.addVar(null, null, name, sig, reg.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("var_expr",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // limit_expr ::= Word Int 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Integer v = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        // .limit locals
        if (w.equals("locals")
                 || w.equals("vars")) // "vars" for historic reasons
            classFile.setVarSize((short)v.intValue());
        // .limit stack
        else if (w.equals("stack"))
            classFile.setStackSize((short)v.intValue());
        else
            classFile.report_error(".limit expected \"stack\" or \"locals\", but got "
                          + w);
      ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("limit_expr",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // line_expr ::= Int 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Integer v = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 classFile.addLine(v.intValue()); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("line_expr",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // throws_expr ::= Word_plus_keywords 
            {
              Object RESULT =null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.addThrow(s);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("throws_expr",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // catch_expr ::= Word_plus_keywords FROM Word TO Word USING Word 
            {
              Object RESULT =null;
		int aclassleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int aclassright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String aclass = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int fromlableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int fromlabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String fromlab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int tolableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tolabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String tolab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int branchlableft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int branchlabright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String branchlab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.addCatch(aclass,
                            fromlab, tolab,
                            branchlab);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("catch_expr",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // set_expr ::= Word Int 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Integer v = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 scanner.dict.put(name, v); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_expr",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // set_expr ::= Word Word 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 scanner.dict.put(name, v); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_expr",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // set_expr ::= Word Num 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Number v = (Number)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 scanner.dict.put(name, v); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_expr",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // set_expr ::= Word Str 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 scanner.dict.put(name, v); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("set_expr",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // instruction ::= simple_instruction 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruction",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // instruction ::= complex_instruction 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruction",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // simple_instruction ::= Insn 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // simple_instruction ::= Insn Int Int 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Integer n2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i, n1.intValue(), n2.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // simple_instruction ::= Insn Int 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i, n.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // simple_instruction ::= Insn Num 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Number n = (Number)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i, n);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // simple_instruction ::= Insn Word_plus_keywords 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i, n);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // simple_instruction ::= Insn Word_plus_keywords Int 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Integer n2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i, n, n2.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // simple_instruction ::= Insn Word_plus_keywords Word_plus_keywords 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String n2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i, n1, n2);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // simple_instruction ::= Insn Str Word_plus_keywords Word_plus_keywords 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String n3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plant(i, n1, n2, n3);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // simple_instruction ::= Insn Str 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.plantString(i, n);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("simple_instruction",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // complex_instruction ::= LOOKUPSWITCH lookup 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("complex_instruction",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // complex_instruction ::= TABLESWITCH table 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("complex_instruction",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // lookup ::= lookup_args lookup_list_t lookup_default 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // lookup_args ::= SEP 
            {
              Object RESULT =null;
		 classFile.newLookupswitch(); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup_args",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // lookup_list_t ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup_list_t",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // lookup_list_t ::= lookup_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup_list_t",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // lookup_list ::= lookup_list lookup_entry 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup_list",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // lookup_list ::= lookup_entry 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup_list",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // lookup_entry ::= Int COLON Word SEP 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Integer i = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.addLookupswitch(i.intValue(), w);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup_entry",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // lookup_default ::= DEFAULT COLON Word 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 classFile.endLookupswitch(w); ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("lookup_default",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // table ::= table_args table_list_t table_default 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // table_args ::= Int SEP 
            {
              Object RESULT =null;
		int lowleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lowright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer low = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.newTableswitch(low.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_args",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // table_args ::= Int Int SEP 
            {
              Object RESULT =null;
		int lowleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int lowright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Integer low = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int highleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int highright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer high = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.newTableswitch(low.intValue(), high.intValue());
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_args",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // table_list_t ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_list_t",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // table_list_t ::= table_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_list_t",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // table_list ::= table_list table_entry 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_list",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // table_list ::= table_entry 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_list",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // table_entry ::= Word SEP 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
            classFile.addTableswitch(w);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_entry",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // table_default ::= DEFAULT COLON Word 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
            classFile.endTableswitch(w);
        ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("table_default",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // class_attrs ::= class_attr_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_attrs",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // class_attrs ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_attrs",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // class_attr_list ::= class_attr_list class_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_attr_list",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // class_attr_list ::= class_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_attr_list",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // class_attr_spec ::= DCLASS_ATTR Word Str SEP 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
		byte[] data = Base64.decode(v.toCharArray());
                classFile.addGenericAttrToClass(new GenericAttr(w, data));             
          ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("class_attr_spec",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // method_attrs ::= method_attr_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_attrs",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // method_attr_list ::= method_attr_list method_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_attr_list",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // method_attr_list ::= method_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_attr_list",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // method_attr_spec ::= DMETHOD_ATTR Word Str SEP 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
		 byte[] data = Base64.decode(v.toCharArray());
                classFile.addGenericAttrToMethod(w, data);	
          ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("method_attr_spec",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // field_attrs ::= field_attr_list 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_attrs",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // field_attr_list ::= field_attr_list field_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_attr_list",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // field_attr_list ::= field_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_attr_list",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // field_attr_spec ::= DFIELD_ATTR Word Str SEP 
            {
              Object RESULT =null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
		 byte[] data = Base64.decode(v.toCharArray());
                classFile.addGenericAttrToField(w, data);
          ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("field_attr_spec",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // inner_class_attr ::= DINNER_CLASS_ATTR SEP inner_class_attr_list end_inner_class_attr 
            {
              Object RESULT =null;
		
        classFile.addInnerClassAttr();
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("inner_class_attr",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // inner_class_attr ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("inner_class_attr",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // inner_class_attr_list ::= inner_class_attr_list inner_class_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("inner_class_attr_list",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // inner_class_attr_list ::= inner_class_attr_spec 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("inner_class_attr_list",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // inner_class_attr_spec ::= DINNER_CLASS_SPEC_ATTR Str Str Str access DEND DINNER_CLASS_SPEC_ATTR SEP 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Short d = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
        classFile.addInnerClassSpec(a, b, c, (short)d.intValue());
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("inner_class_attr_spec",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // end_inner_class_attr ::= DEND DINNER_CLASS_ATTR SEP 
            {
              Object RESULT =null;
		
        classFile.endInnerClassAttr();
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("end_inner_class_attr",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // synth_attr ::= DSYNTHETIC SEP 
            {
              Object RESULT =null;
		
        classFile.addClassSynthAttr();
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("synth_attr",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // synth_attr ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("synth_attr",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // encl_meth_attr ::= DENCLOSING_METH Str Str Str SEP 
            {
              Object RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        classFile.addEnclMethAttr(c, m, s);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("encl_meth_attr",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // encl_meth_attr ::= 
            {
              Object RESULT =null;
;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("encl_meth_attr",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // deprecated_attr ::= DDEPRECATED SEP 
            {
              Object RESULT =null;
		
        RESULT = "deprecated";
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("deprecated_attr",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // deprecated_attr ::= 
            {
              Object RESULT =null;
		
        /* empty */ RESULT = null;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("deprecated_attr",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // signature_attr ::= DSIG_ATTR Str SEP 
            {
              Object RESULT =null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = sig;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("signature_attr",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // signature_attr ::= 
            {
              Object RESULT =null;
		
        /* empty */ RESULT = null;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("signature_attr",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // visibility_type ::= DRUNTIME_VISIBLE 
            {
              Object RESULT =null;
		 RESULT = "RuntimeVisible"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("visibility_type",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // visibility_type ::= DRUNTIME_INVISIBLE 
            {
              Object RESULT =null;
		 RESULT = "RuntimeInvisible"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("visibility_type",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // param_visibility_type ::= DRUNTIME_PARAM_VISIBLE 
            {
              Object RESULT =null;
		 RESULT = "RuntimeVisibleParameter"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("param_visibility_type",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // param_visibility_type ::= DRUNTIME_PARAM_INVISIBLE 
            {
              Object RESULT =null;
		 RESULT = "RuntimeInvisibleParameter"; ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("param_visibility_type",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // annotation_attr_opt ::= annotation_attr 
            {
              Object RESULT =null;
		int attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		  
        RESULT = attr;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_attr_opt",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // annotation_attr_opt ::= 
            {
              Object RESULT =null;
		
        RESULT = null; /* empty */
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_attr_opt",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // annotation_attr ::= visibility_type SEP annotation_list_opt DEND DANNOTATION_ATTR SEP 
            {
              Object RESULT =null;
		int tvalleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int tvalright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object tval = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
        RESULT = classFile.makeVisibilityAnnotation(tval, list);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_attr",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // annotation_list_opt ::= annotation_list 
            {
              Object RESULT =null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = list;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_list_opt",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // annotation_list_opt ::= 
            {
              Object RESULT =null;
		
        RESULT = null;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_list_opt",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // annotation_list ::= annotation_list annotation 
            {
              Object RESULT =null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = classFile.mergeNewAnnotation(list, elem);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_list",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // annotation_list ::= annotation 
            {
              Object RESULT =null;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = classFile.makeNewAnnotationList(elem);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation_list",75, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // annotation ::= DANNOTATION Str SEP elem_val_pair_list_opt DEND DANNOTATION SEP 
            {
              Object RESULT =null;
		int annotation_typeleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int annotation_typeright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String annotation_type = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int elemsleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int elemsright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object elems = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
        RESULT = classFile.makeAnnotation(annotation_type, elems);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("annotation",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // elem_val_pair_list_opt ::= elem_val_pair_list 
            {
              Object RESULT =null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = list;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair_list_opt",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // elem_val_pair_list_opt ::= 
            {
              Object RESULT =null;
		
        RESULT = null;
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair_list_opt",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // elem_val_pair_list ::= elem_val_pair_list elem_val_pair 
            {
              Object RESULT =null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = classFile.mergeNewElemValPair(list, elem);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair_list",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // elem_val_pair_list ::= elem_val_pair 
            {
              Object RESULT =null;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		
        RESULT = classFile.makeNewElemValPairList(elem);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair_list",77, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // elem_val_pair ::= DELEM INT_KIND Str Int SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'I', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // elem_val_pair ::= DELEM SHORT_KIND Str Int SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'S', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // elem_val_pair ::= DELEM BYTE_KIND Str Int SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'B', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // elem_val_pair ::= DELEM CHAR_KIND Str Int SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'C', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // elem_val_pair ::= DELEM BOOL_KIND Str Int SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'Z', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // elem_val_pair ::= DELEM LONG_KIND Str item SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'J', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // elem_val_pair ::= DELEM FLOAT_KIND Str item SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'F', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // elem_val_pair ::= DELEM DOUB_KIND Str item SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 'D', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // elem_val_pair ::= DELEM STR_KIND Str Str SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeConstantElem(name, 's', val);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // elem_val_pair ::= DELEM ENUM_KIND Str Str Str SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tnameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tnameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String tname = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int cnameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int cnameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String cname = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeEnumElem(name, 'e', tname, cname);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // elem_val_pair ::= DELEM CLS_KIND Str Str SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int descleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int descright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String desc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
        RESULT = classFile.makeClassElem(name, 'c', desc);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // elem_val_pair ::= DELEM ARR_KIND Str SEP elem_val_pair_list_opt DEND DARR_ELEM SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
        RESULT = classFile.makeArrayElem(name, '[', list);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // elem_val_pair ::= DELEM ANN_KIND Str SEP annotation DEND DANNOT_ELEM SEP 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
        RESULT = classFile.makeAnnotElem(name, '@', attr);
    ;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("elem_val_pair",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$parser$do_action_part00000001(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
