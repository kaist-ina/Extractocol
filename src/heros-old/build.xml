<?xml version="1.0" encoding="UTF-8"?>

<project name="heros" default="jar">
    <property file="ant.settings"/>
    <target name="settings">
        <fail
            message="Please copy ant.settings.template to ant.settings, and set the variables in it."
            unless="guava.jar"
        />
    </target>
	
	<target name="classesjar" depends="compile">
    	<jar destfile="./herosclasses-${heros.version}.jar" manifest="META-INF/MANIFEST.MF">
            <manifest>
               <attribute name="Implementation-Version" value="${heros.version}"/> 
            </manifest>
            <fileset dir="./build/classes"/>
        </jar>
    </target>
    	
	<target name="jar" depends="classesjar">
    	<jar destfile="./heros-${heros.version}.jar" manifest="META-INF/MANIFEST.MF">
            <manifest>
               <attribute name="Implementation-Version" value="${heros.version}"/> 
            </manifest>
            <zipfileset src="./herosclasses-${heros.version}.jar"/>
            <zipfileset src="${guava.jar}"/>
            <zipfileset src="${slf4j-api.jar}"/>
            <zipfileset src="${slf4j-simple.jar}"/>
        </jar>
    </target>

	<target name="compile">
    	<mkdir dir="build/classes"/>
        <javac
            destdir="build/classes"
            debug="true"
	    includeantruntime="true"
            deprecation="on"
        	source="1.6"
        	target="1.6"
        	fork="true"
        	memorymaximumsize="512m"
        >
        	<classpath>
        		<pathelement location="${guava.jar}"/>
        		<pathelement location="${slf4j-api.jar}"/>
        		<pathelement location="${slf4j-simple.jar}"/>
        	</classpath>
            <src path="src"/>
        </javac>
	</target>

	<target name="compiletests" depends="settings,compile">
		<mkdir dir="build/testclasses" />
		<javac srcdir="test" includeantruntime="true" source="1.7" target="1.7" destdir="build/testclasses" debug="true">
			<classpath>
				<pathelement location="build/classes" />
	       		<pathelement location="${guava.jar}"/>
        		<pathelement location="${junit.jar}"/>
	       		<pathelement location="${mockito.jar}"/>
	       		<pathelement location="${hamcrest.jar}"/>
	       		<pathelement location="${slf4j-api.jar}"/>
	       		<pathelement location="${slf4j-simple.jar}"/>
			</classpath>
		</javac>
	</target>

	<target name="testjar" depends="settings,compiletests">

	    	<jar destfile="./herostests-${heros.version}.jar" >
	            <fileset dir="build/testclasses"/>
	        </jar>

	</target>

	<target name="runtests" depends="compiletests">
		<mkdir dir="reports" />
		<junit printsummary="yes" fork="true" maxmemory="4G">
			<classpath>
        		<pathelement location="${guava.jar}"/>
        		<pathelement location="${junit.jar}"/>
	       		<pathelement location="${mockito.jar}"/>
	       		<pathelement location="${hamcrest.jar}"/>
	       		<pathelement location="${slf4j-api.jar}"/>
	       		<pathelement location="${slf4j-simple.jar}"/>
	       		
	       		<pathelement location="build/classes" />
				<pathelement location="build/testclasses" />
			</classpath>
			
			<jvmarg value="-ea" />
			
			<!-- Make stuff debuggable -->
			<!--
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5432" />
			-->

			<formatter type="xml" usefile="true" />
			<batchtest todir="reports">
				<!--
					We only run our own tests. SecuriBench Micro relies on too much stuff
					we exclude.
				-->
				<fileset dir="build/testclasses" includes="heros/**/*Test.class" />
			</batchtest>
		</junit>
	</target>

	<target name="reporttests" depends="runtests">
		<junitreport tofile="TESTS-TestSuites.xml" todir="reports">
			<fileset dir="reports">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="reports" />
		</junitreport>
	</target>
    
    <target name="javadoc">
        <javadoc
            classpath="build/classes"
            sourcepath="src"
			destdir="javadoc"
            maxmemory="400m"
            link="${javaapi.url}"
            windowtitle="Heros API"
            use="true"
            useexternalfile="true"
        >
            <fileset dir="src" includes="**/*.java"/>
        </javadoc>
		<jar basedir="javadoc" destfile="herosjavadoc-${heros.version}.jar" />
	</target>
	
	<target name="sourcejar">
        <jar destfile="herossources-${heros.version}.jar">
            <fileset dir="src"/>
        </jar>
	</target>

</project>
