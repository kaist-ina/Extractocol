
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Fri Oct 25 11:00:43 CEST 2013
//----------------------------------------------------

package jasmin;

import java_cup.runtime.*;
import java_cup.*;
import jas.*;
import java.io.*;
import java.util.Hashtable;

/** CUP v0.10k generated parser.
  * @version Fri Oct 25 11:00:43 CEST 2013
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] =
    unpackFromStrings(new String[] {
    "\000\307\000\002\030\017\000\002\002\004\000\002\046" +
    "\005\000\002\046\002\000\002\014\006\000\002\014\006" +
    "\000\002\003\003\000\002\003\003\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
    "\003\003\000\002\003\003\000\002\003\003\000\002\133" +
    "\002\000\002\132\004\000\002\012\003\000\002\012\002" +
    "\000\002\011\004\000\002\011\003\000\002\010\003\000" +
    "\002\010\003\000\002\010\003\000\002\010\003\000\002" +
    "\010\003\000\002\010\003\000\002\010\003\000\002\010" +
    "\003\000\002\010\003\000\002\010\003\000\002\010\003" +
    "\000\002\010\003\000\002\010\003\000\002\010\003\000" +
    "\002\052\005\000\002\052\004\000\002\025\003\000\002" +
    "\025\002\000\002\026\004\000\002\026\003\000\002\027" +
    "\005\000\002\111\003\000\002\112\003\000\002\121\003" +
    "\000\002\121\004\000\002\023\003\000\002\023\002\000" +
    "\002\021\004\000\002\021\003\000\002\074\004\000\002" +
    "\074\003\000\002\022\013\000\002\022\014\000\002\022" +
    "\014\000\002\022\015\000\002\004\004\000\002\004\002" +
    "\000\002\005\003\000\002\005\003\000\002\005\003\000" +
    "\002\043\003\000\002\043\002\000\002\041\004\000\002" +
    "\041\003\000\002\070\004\000\002\070\003\000\002\042" +
    "\005\000\002\042\004\000\002\016\006\000\002\020\005" +
    "\000\002\050\004\000\002\050\003\000\002\134\002\000" +
    "\002\047\005\000\002\051\003\000\002\051\003\000\002" +
    "\051\003\000\002\051\003\000\002\051\002\000\002\031" +
    "\004\000\002\017\004\000\002\017\004\000\002\017\004" +
    "\000\002\017\004\000\002\017\004\000\002\017\004\000" +
    "\002\017\004\000\002\017\003\000\002\017\003\000\002" +
    "\017\003\000\002\017\003\000\002\017\003\000\002\017" +
    "\003\000\002\106\003\000\002\107\003\000\002\110\004" +
    "\000\002\120\007\000\002\124\010\000\002\125\004\000" +
    "\002\125\003\000\002\123\006\000\002\064\004\000\002" +
    "\063\012\000\002\063\006\000\002\032\004\000\002\055" +
    "\003\000\002\062\003\000\002\013\011\000\002\044\004" +
    "\000\002\044\004\000\002\044\004\000\002\044\004\000" +
    "\002\024\003\000\002\024\003\000\002\045\003\000\002" +
    "\045\005\000\002\045\004\000\002\045\004\000\002\045" +
    "\004\000\002\045\005\000\002\045\005\000\002\045\006" +
    "\000\002\045\004\000\002\015\004\000\002\015\004\000" +
    "\002\033\005\000\002\034\003\000\002\037\002\000\002" +
    "\037\003\000\002\040\004\000\002\040\003\000\002\036" +
    "\006\000\002\035\005\000\002\053\005\000\002\054\004" +
    "\000\002\054\005\000\002\060\002\000\002\060\003\000" +
    "\002\061\004\000\002\061\003\000\002\057\004\000\002" +
    "\056\005\000\002\065\003\000\002\065\002\000\002\066" +
    "\004\000\002\066\003\000\002\067\006\000\002\071\003" +
    "\000\002\072\004\000\002\072\003\000\002\073\006\000" +
    "\002\075\003\000\002\076\004\000\002\076\003\000\002" +
    "\077\006\000\002\100\006\000\002\100\002\000\002\101" +
    "\004\000\002\101\003\000\002\102\012\000\002\103\005" +
    "\000\002\104\004\000\002\104\002\000\002\105\007\000" +
    "\002\105\002\000\002\006\004\000\002\006\002\000\002" +
    "\007\005\000\002\007\002\000\002\113\003\000\002\113" +
    "\003\000\002\126\003\000\002\126\003\000\002\127\003" +
    "\000\002\127\002\000\002\114\010\000\002\130\003\000" +
    "\002\130\002\000\002\115\004\000\002\115\003\000\002" +
    "\116\011\000\002\131\003\000\002\131\002\000\002\117" +
    "\004\000\002\117\003\000\002\122\007\000\002\122\007" +
    "\000\002\122\007\000\002\122\007\000\002\122\007\000" +
    "\002\122\007\000\002\122\007\000\002\122\007\000\002" +
    "\122\007\000\002\122\010\000\002\122\007\000\002\122" +
    "\012\000\002\122\012" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table =
    unpackFromStrings(new String[] {
    "\000\u0171\000\010\005\ufffe\016\004\022\ufffe\001\002\000" +
    "\004\117\u0172\001\002\000\006\005\011\022\010\001\002" +
    "\000\004\002\007\001\002\000\004\002\000\001\002\000" +
    "\060\065\ufff2\066\ufff2\067\ufff2\070\ufff2\071\ufff2\072\ufff2" +
    "\073\ufff2\074\ufff2\075\ufff2\076\ufff2\077\ufff2\100\ufff2\101" +
    "\ufff2\102\ufff2\103\ufff2\104\ufff2\105\ufff2\106\ufff2\107\ufff2" +
    "\110\ufff2\111\ufff2\112\ufff2\117\ufff2\001\002\000\060\065" +
    "\ufff2\066\ufff2\067\ufff2\070\ufff2\071\ufff2\072\ufff2\073\ufff2" +
    "\074\ufff2\075\ufff2\076\ufff2\077\ufff2\100\ufff2\101\ufff2\102" +
    "\ufff2\103\ufff2\104\ufff2\105\ufff2\106\ufff2\107\ufff2\110\ufff2" +
    "\111\ufff2\112\ufff2\117\ufff2\001\002\000\006\014\015\015" +
    "\014\001\002\000\032\002\uffdb\007\uffdb\012\uffdb\021\033" +
    "\024\uffdb\027\uffdb\031\uffdb\032\uffdb\033\uffdb\034\uffdb\035" +
    "\uffdb\036\uffdb\001\002\000\004\114\031\001\002\000\024" +
    "\065\017\066\022\067\027\070\024\071\026\110\016\111" +
    "\023\112\021\117\020\001\002\000\030\065\ufff5\066\ufff5" +
    "\067\ufff5\070\ufff5\071\ufff5\110\ufff5\111\ufff5\112\ufff5\114" +
    "\ufff5\117\ufff5\121\ufff5\001\002\000\030\065\ufff9\066\ufff9" +
    "\067\ufff9\070\ufff9\071\ufff9\110\ufff9\111\ufff9\112\ufff9\114" +
    "\ufff9\117\ufff9\121\ufff9\001\002\000\030\065\ufffb\066\ufffb" +
    "\067\ufffb\070\ufffb\071\ufffb\110\ufffb\111\ufffb\112\ufffb\114" +
    "\ufffb\117\ufffb\121\ufffb\001\002\000\030\065\ufff3\066\ufff3" +
    "\067\ufff3\070\ufff3\071\ufff3\110\ufff3\111\ufff3\112\ufff3\114" +
    "\ufff3\117\ufff3\121\ufff3\001\002\000\030\065\ufff8\066\ufff8" +
    "\067\ufff8\070\ufff8\071\ufff8\110\ufff8\111\ufff8\112\ufff8\114" +
    "\ufff8\117\ufff8\121\ufff8\001\002\000\030\065\ufff4\066\ufff4" +
    "\067\ufff4\070\ufff4\071\ufff4\110\ufff4\111\ufff4\112\ufff4\114" +
    "\ufff4\117\ufff4\121\ufff4\001\002\000\030\065\ufffa\066\ufffa" +
    "\067\ufffa\070\ufffa\071\ufffa\110\ufffa\111\ufffa\112\ufffa\114" +
    "\ufffa\117\ufffa\121\ufffa\001\002\000\004\114\030\001\002" +
    "\000\030\065\ufff6\066\ufff6\067\ufff6\070\ufff6\071\ufff6\110" +
    "\ufff6\111\ufff6\112\ufff6\114\ufff6\117\ufff6\121\ufff6\001\002" +
    "\000\030\065\ufff7\066\ufff7\067\ufff7\070\ufff7\071\ufff7\110" +
    "\ufff7\111\ufff7\112\ufff7\114\ufff7\117\ufff7\121\ufff7\001\002" +
    "\000\032\002\uffde\007\uffde\012\uffde\021\uffde\024\uffde\027" +
    "\uffde\031\uffde\032\uffde\033\uffde\034\uffde\035\uffde\036\uffde" +
    "\001\002\000\032\002\uffdd\007\uffdd\012\uffdd\021\uffdd\024" +
    "\uffdd\027\uffdd\031\uffdd\032\uffdd\033\uffdd\034\uffdd\035\uffdd" +
    "\036\uffdd\001\002\000\032\002\uffd9\007\uffd9\012\uffd9\021" +
    "\uffd9\024\uffd9\027\uffd9\031\uffd9\032\uffd9\033\uffd9\034\uffd9" +
    "\035\uffd9\036\uffd9\001\002\000\024\065\017\066\022\067" +
    "\027\070\024\071\026\110\016\111\023\112\021\117\020" +
    "\001\002\000\032\002\uffdc\007\uffdc\012\uffdc\021\033\024" +
    "\uffdc\027\uffdc\031\uffdc\032\uffdc\033\uffdc\034\uffdc\035\uffdc" +
    "\036\uffdc\001\002\000\030\002\uff71\007\uff71\012\uff71\024" +
    "\041\027\uff71\031\uff71\032\uff71\033\uff71\034\uff71\035\uff71" +
    "\036\uff71\001\002\000\026\002\uff5e\007\uff5e\012\uff5e\027" +
    "\uff5e\031\046\032\uff5e\033\uff5e\034\uff5e\035\uff5e\036\uff5e" +
    "\001\002\000\030\002\uff72\007\uff72\012\uff72\024\041\027" +
    "\uff72\031\uff72\032\uff72\033\uff72\034\uff72\035\uff72\036\uff72" +
    "\001\002\000\030\002\uff6f\007\uff6f\012\uff6f\024\uff6f\027" +
    "\uff6f\031\uff6f\032\uff6f\033\uff6f\034\uff6f\035\uff6f\036\uff6f" +
    "\001\002\000\004\117\042\001\002\000\004\116\043\001" +
    "\002\000\004\114\044\001\002\000\030\002\uff6e\007\uff6e" +
    "\012\uff6e\024\uff6e\027\uff6e\031\uff6e\032\uff6e\033\uff6e\034" +
    "\uff6e\035\uff6e\036\uff6e\001\002\000\030\002\uff70\007\uff70" +
    "\012\uff70\024\uff70\027\uff70\031\uff70\032\uff70\033\uff70\034" +
    "\uff70\035\uff70\036\uff70\001\002\000\004\114\u0168\001\002" +
    "\000\024\002\uff64\007\uff64\012\uff64\027\050\032\uff64\033" +
    "\uff64\034\uff64\035\uff64\036\uff64\001\002\000\004\114\u0158" +
    "\001\002\000\022\002\uff5c\007\uff5c\012\uff5c\032\053\033" +
    "\uff5c\034\uff5c\035\uff5c\036\uff5c\001\002\000\020\002\uff5a" +
    "\007\uff5a\012\uff5a\033\061\034\uff5a\035\uff5a\036\uff5a\001" +
    "\002\000\004\116\054\001\002\000\004\116\055\001\002" +
    "\000\004\116\056\001\002\000\004\114\057\001\002\000" +
    "\020\002\uff5d\007\uff5d\012\uff5d\033\uff5d\034\uff5d\035\uff5d" +
    "\036\uff5d\001\002\000\016\002\uffd7\007\uffd7\012\uffd7\034" +
    "\uffd7\035\uffd7\036\uffd7\001\002\000\004\114\u0157\001\002" +
    "\000\016\002\uff58\007\uff58\012\uff58\034\065\035\uff58\036" +
    "\uff58\001\002\000\014\002\uffd6\007\uffd6\012\uffd6\035\uffd6" +
    "\036\uffd6\001\002\000\014\002\uff52\007\uff52\012\uff52\035" +
    "\072\036\075\001\002\000\004\116\066\001\002\000\004" +
    "\114\067\001\002\000\016\002\uff59\007\uff59\012\uff59\025" +
    "\uff59\035\uff59\036\uff59\001\002\000\004\114\u0151\001\002" +
    "\000\010\002\uffd5\007\uffd5\012\uffd5\001\002\000\004\114" +
    "\uff57\001\002\000\014\002\uff53\007\uff53\012\uff53\035\072" +
    "\036\075\001\002\000\010\002\uffd2\007\100\012\uffd2\001" +
    "\002\000\004\114\uff56\001\002\000\006\002\uffc3\012\166" +
    "\001\002\000\012\002\uffce\007\uffce\012\uffce\025\157\001" +
    "\002\000\040\072\ufff2\073\ufff2\074\ufff2\075\ufff2\076\ufff2" +
    "\077\ufff2\100\ufff2\101\ufff2\102\ufff2\103\ufff2\104\ufff2\105" +
    "\ufff2\106\ufff2\107\ufff2\116\ufff2\001\002\000\010\002\uffd0" +
    "\007\uffd0\012\uffd0\001\002\000\010\002\uffd3\007\100\012" +
    "\uffd3\001\002\000\010\002\uffd1\007\uffd1\012\uffd1\001\002" +
    "\000\004\116\130\001\002\000\064\006\uffef\065\uffef\066" +
    "\uffef\067\uffef\070\uffef\071\uffef\072\107\073\124\074\121" +
    "\075\113\076\122\077\114\100\111\101\110\102\123\103" +
    "\120\104\117\105\115\106\116\107\106\110\uffef\111\uffef" +
    "\112\uffef\116\uffef\117\uffef\001\002\000\064\006\uffdf\065" +
    "\uffdf\066\uffdf\067\uffdf\070\uffdf\071\uffdf\072\uffdf\073\uffdf" +
    "\074\uffdf\075\uffdf\076\uffdf\077\uffdf\100\uffdf\101\uffdf\102" +
    "\uffdf\103\uffdf\104\uffdf\105\uffdf\106\uffdf\107\uffdf\110\uffdf" +
    "\111\uffdf\112\uffdf\116\uffdf\117\uffdf\001\002\000\064\006" +
    "\uffe2\065\uffe2\066\uffe2\067\uffe2\070\uffe2\071\uffe2\072\uffe2" +
    "\073\uffe2\074\uffe2\075\uffe2\076\uffe2\077\uffe2\100\uffe2\101" +
    "\uffe2\102\uffe2\103\uffe2\104\uffe2\105\uffe2\106\uffe2\107\uffe2" +
    "\110\uffe2\111\uffe2\112\uffe2\116\uffe2\117\uffe2\001\002\000" +
    "\064\006\uffe9\065\uffe9\066\uffe9\067\uffe9\070\uffe9\071\uffe9" +
    "\072\uffe9\073\uffe9\074\uffe9\075\uffe9\076\uffe9\077\uffe9\100" +
    "\uffe9\101\uffe9\102\uffe9\103\uffe9\104\uffe9\105\uffe9\106\uffe9" +
    "\107\uffe9\110\uffe9\111\uffe9\112\uffe9\116\uffe9\117\uffe9\001" +
    "\002\000\064\006\uffec\065\uffec\066\uffec\067\uffec\070\uffec" +
    "\071\uffec\072\uffec\073\uffec\074\uffec\075\uffec\076\uffec\077" +
    "\uffec\100\uffec\101\uffec\102\uffec\103\uffec\104\uffec\105\uffec" +
    "\106\uffec\107\uffec\110\uffec\111\uffec\112\uffec\116\uffec\117" +
    "\uffec\001\002\000\064\006\uffed\065\uffed\066\uffed\067\uffed" +
    "\070\uffed\071\uffed\072\uffed\073\uffed\074\uffed\075\uffed\076" +
    "\uffed\077\uffed\100\uffed\101\uffed\102\uffed\103\uffed\104\uffed" +
    "\105\uffed\106\uffed\107\uffed\110\uffed\111\uffed\112\uffed\116" +
    "\uffed\117\uffed\001\002\000\064\006\uffe4\065\uffe4\066\uffe4" +
    "\067\uffe4\070\uffe4\071\uffe4\072\uffe4\073\uffe4\074\uffe4\075" +
    "\uffe4\076\uffe4\077\uffe4\100\uffe4\101\uffe4\102\uffe4\103\uffe4" +
    "\104\uffe4\105\uffe4\106\uffe4\107\uffe4\110\uffe4\111\uffe4\112" +
    "\uffe4\116\uffe4\117\uffe4\001\002\000\064\006\uffea\065\uffea" +
    "\066\uffea\067\uffea\070\uffea\071\uffea\072\uffea\073\uffea\074" +
    "\uffea\075\uffea\076\uffea\077\uffea\100\uffea\101\uffea\102\uffea" +
    "\103\uffea\104\uffea\105\uffea\106\uffea\107\uffea\110\uffea\111" +
    "\uffea\112\uffea\116\uffea\117\uffea\001\002\000\064\006\uffe1" +
    "\065\uffe1\066\uffe1\067\uffe1\070\uffe1\071\uffe1\072\uffe1\073" +
    "\uffe1\074\uffe1\075\uffe1\076\uffe1\077\uffe1\100\uffe1\101\uffe1" +
    "\102\uffe1\103\uffe1\104\uffe1\105\uffe1\106\uffe1\107\uffe1\110" +
    "\uffe1\111\uffe1\112\uffe1\116\uffe1\117\uffe1\001\002\000\064" +
    "\006\uffe0\065\uffe0\066\uffe0\067\uffe0\070\uffe0\071\uffe0\072" +
    "\uffe0\073\uffe0\074\uffe0\075\uffe0\076\uffe0\077\uffe0\100\uffe0" +
    "\101\uffe0\102\uffe0\103\uffe0\104\uffe0\105\uffe0\106\uffe0\107" +
    "\uffe0\110\uffe0\111\uffe0\112\uffe0\116\uffe0\117\uffe0\001\002" +
    "\000\064\006\uffe6\065\uffe6\066\uffe6\067\uffe6\070\uffe6\071" +
    "\uffe6\072\uffe6\073\uffe6\074\uffe6\075\uffe6\076\uffe6\077\uffe6" +
    "\100\uffe6\101\uffe6\102\uffe6\103\uffe6\104\uffe6\105\uffe6\106" +
    "\uffe6\107\uffe6\110\uffe6\111\uffe6\112\uffe6\116\uffe6\117\uffe6" +
    "\001\002\000\064\006\uffe5\065\uffe5\066\uffe5\067\uffe5\070" +
    "\uffe5\071\uffe5\072\uffe5\073\uffe5\074\uffe5\075\uffe5\076\uffe5" +
    "\077\uffe5\100\uffe5\101\uffe5\102\uffe5\103\uffe5\104\uffe5\105" +
    "\uffe5\106\uffe5\107\uffe5\110\uffe5\111\uffe5\112\uffe5\116\uffe5" +
    "\117\uffe5\001\002\000\064\006\uffe3\065\uffe3\066\uffe3\067" +
    "\uffe3\070\uffe3\071\uffe3\072\uffe3\073\uffe3\074\uffe3\075\uffe3" +
    "\076\uffe3\077\uffe3\100\uffe3\101\uffe3\102\uffe3\103\uffe3\104" +
    "\uffe3\105\uffe3\106\uffe3\107\uffe3\110\uffe3\111\uffe3\112\uffe3" +
    "\116\uffe3\117\uffe3\001\002\000\064\006\uffeb\065\uffeb\066" +
    "\uffeb\067\uffeb\070\uffeb\071\uffeb\072\uffeb\073\uffeb\074\uffeb" +
    "\075\uffeb\076\uffeb\077\uffeb\100\uffeb\101\uffeb\102\uffeb\103" +
    "\uffeb\104\uffeb\105\uffeb\106\uffeb\107\uffeb\110\uffeb\111\uffeb" +
    "\112\uffeb\116\uffeb\117\uffeb\001\002\000\064\006\uffe7\065" +
    "\uffe7\066\uffe7\067\uffe7\070\uffe7\071\uffe7\072\uffe7\073\uffe7" +
    "\074\uffe7\075\uffe7\076\uffe7\077\uffe7\100\uffe7\101\uffe7\102" +
    "\uffe7\103\uffe7\104\uffe7\105\uffe7\106\uffe7\107\uffe7\110\uffe7" +
    "\111\uffe7\112\uffe7\116\uffe7\117\uffe7\001\002\000\064\006" +
    "\uffe8\065\uffe8\066\uffe8\067\uffe8\070\uffe8\071\uffe8\072\uffe8" +
    "\073\uffe8\074\uffe8\075\uffe8\076\uffe8\077\uffe8\100\uffe8\101" +
    "\uffe8\102\uffe8\103\uffe8\104\uffe8\105\uffe8\106\uffe8\107\uffe8" +
    "\110\uffe8\111\uffe8\112\uffe8\116\uffe8\117\uffe8\001\002\000" +
    "\064\006\ufff0\065\ufff0\066\ufff0\067\ufff0\070\ufff0\071\ufff0" +
    "\072\107\073\124\074\121\075\113\076\122\077\114\100" +
    "\111\101\110\102\123\103\120\104\117\105\115\106\116" +
    "\107\106\110\ufff0\111\ufff0\112\ufff0\116\ufff0\117\ufff0\001" +
    "\002\000\030\006\ufff1\065\ufff1\066\ufff1\067\ufff1\070\ufff1" +
    "\071\ufff1\110\ufff1\111\ufff1\112\ufff1\116\ufff1\117\ufff1\001" +
    "\002\000\064\006\uffee\065\uffee\066\uffee\067\uffee\070\uffee" +
    "\071\uffee\072\uffee\073\uffee\074\uffee\075\uffee\076\uffee\077" +
    "\uffee\100\uffee\101\uffee\102\uffee\103\uffee\104\uffee\105\uffee" +
    "\106\uffee\107\uffee\110\uffee\111\uffee\112\uffee\116\uffee\117" +
    "\uffee\001\002\000\004\117\131\001\002\000\010\031\uffc8" +
    "\113\132\114\uffc8\001\002\000\010\116\151\121\153\122" +
    "\154\001\002\000\006\031\135\114\134\001\002\000\022" +
    "\002\uff5a\007\uff5a\012\uff5a\025\uff5a\033\061\034\uff5a\035" +
    "\uff5a\036\uff5a\001\002\000\004\114\136\001\002\000\022" +
    "\002\uff5a\007\uff5a\012\uff5a\025\uff5a\033\061\034\uff5a\035" +
    "\uff5a\036\uff5a\001\002\000\020\002\uff58\007\uff58\012\uff58" +
    "\025\uff58\034\065\035\uff58\036\uff58\001\002\000\016\002" +
    "\uff52\007\uff52\012\uff52\025\uff52\035\072\036\075\001\002" +
    "\000\012\002\uffcc\007\uffcc\012\uffcc\025\uffcc\001\002\000" +
    "\016\002\uff53\007\uff53\012\uff53\025\uff53\035\072\036\075" +
    "\001\002\000\012\002\uffca\007\uffca\012\uffca\025\uffca\001" +
    "\002\000\020\002\uff58\007\uff58\012\uff58\025\uff58\034\065" +
    "\035\uff58\036\uff58\001\002\000\016\002\uff52\007\uff52\012" +
    "\uff52\025\uff52\035\072\036\075\001\002\000\012\002\uffcd" +
    "\007\uffcd\012\uffcd\025\uffcd\001\002\000\016\002\uff53\007" +
    "\uff53\012\uff53\025\uff53\035\072\036\075\001\002\000\012" +
    "\002\uffcb\007\uffcb\012\uffcb\025\uffcb\001\002\000\006\031" +
    "\uffc5\114\uffc5\001\002\000\006\031\uffc9\114\uffc9\001\002" +
    "\000\006\031\uffc7\114\uffc7\001\002\000\006\031\uffc6\114" +
    "\uffc6\001\002\000\010\002\uffcf\007\uffcf\012\uffcf\001\002" +
    "\000\012\002\uff67\007\uff67\012\uff67\025\uff67\001\002\000" +
    "\004\117\162\001\002\000\012\002\uff69\007\uff69\012\uff69" +
    "\025\157\001\002\000\012\002\uff68\007\uff68\012\uff68\025" +
    "\uff68\001\002\000\004\116\163\001\002\000\004\114\164" +
    "\001\002\000\012\002\uff66\007\uff66\012\uff66\025\uff66\001" +
    "\002\000\004\002\001\001\002\000\040\072\ufff2\073\ufff2" +
    "\074\ufff2\075\ufff2\076\ufff2\077\ufff2\100\ufff2\101\ufff2\102" +
    "\ufff2\103\ufff2\104\ufff2\105\ufff2\106\ufff2\107\ufff2\117\ufff2" +
    "\001\002\000\010\002\uffbf\012\uffbf\026\u0147\001\002\000" +
    "\054\003\uffb8\004\uffb8\006\176\010\uffb8\011\uffb8\013\uffb8" +
    "\017\uffb8\020\uffb8\023\uffb8\031\uffb8\033\uffb8\034\uffb8\035" +
    "\uffb8\036\uffb8\063\uffb8\064\uffb8\110\uffb8\111\uffb8\114\uffb8" +
    "\117\uffb8\120\uffb8\001\002\000\006\002\uffc1\012\uffc1\001" +
    "\002\000\006\002\uffc4\012\166\001\002\000\006\002\uffc2" +
    "\012\uffc2\001\002\000\054\003\uffb8\004\uffb8\006\176\010" +
    "\uffb8\011\uffb8\013\uffb8\017\uffb8\020\uffb8\023\uffb8\031\uffb8" +
    "\033\uffb8\034\uffb8\035\uffb8\036\uffb8\063\uffb8\064\uffb8\110" +
    "\uffb8\111\uffb8\114\uffb8\117\uffb8\120\uffb8\001\002\000\052" +
    "\003\225\004\211\010\207\011\226\013\227\017\237\020" +
    "\205\023\214\031\235\033\232\034\206\035\072\036\075" +
    "\063\240\064\233\110\223\111\220\114\uffb2\117\203\120" +
    "\217\001\002\000\004\071\201\001\002\000\054\003\uffb9" +
    "\004\uffb9\006\uffb9\010\uffb9\011\uffb9\013\uffb9\017\uffb9\020" +
    "\uffb9\023\uffb9\031\uffb9\033\uffb9\034\uffb9\035\uffb9\036\uffb9" +
    "\063\uffb9\064\uffb9\110\uffb9\111\uffb9\114\uffb9\117\uffb9\120" +
    "\uffb9\001\002\000\010\002\uffbd\012\uffbd\026\uffbd\001\002" +
    "\000\004\114\202\001\002\000\010\002\uffbb\012\uffbb\026" +
    "\uffbb\001\002\000\004\115\u0142\001\002\000\004\114\uffa4" +
    "\001\002\000\004\121\u013a\001\002\000\004\116\u0138\001" +
    "\002\000\004\117\u0136\001\002\000\004\114\uffb3\001\002" +
    "\000\024\065\017\066\022\067\027\070\024\071\026\110" +
    "\016\111\023\112\021\117\020\001\002\000\004\114\u0127" +
    "\001\002\000\004\114\uffb5\001\002\000\004\117\u0124\001" +
    "\002\000\004\114\u0123\001\002\000\004\114\uffa5\001\002" +
    "\000\034\065\017\066\022\067\027\070\024\071\026\110" +
    "\016\111\023\112\021\114\uff8e\116\u011c\117\020\121\u011b" +
    "\122\u011a\001\002\000\004\121\u010c\001\002\000\004\114" +
    "\uffa6\001\002\000\004\114\uffa9\001\002\000\004\114\373" +
    "\001\002\000\004\114\uffa7\001\002\000\004\114\uffb4\001" +
    "\002\000\004\121\372\001\002\000\004\117\364\001\002" +
    "\000\004\114\uff90\001\002\000\004\114\uffb6\001\002\000" +
    "\004\114\uffa2\001\002\000\006\035\072\036\075\001\002" +
    "\000\004\114\uff8f\001\002\000\004\114\uffa3\001\002\000" +
    "\004\114\uffa8\001\002\000\024\065\017\066\022\067\027" +
    "\070\024\071\026\110\016\111\023\112\021\117\020\001" +
    "\002\000\004\062\241\001\002\000\034\043\261\044\246" +
    "\045\254\046\245\047\252\050\256\051\250\052\247\053" +
    "\257\054\255\055\253\056\251\057\260\001\002\000\004" +
    "\006\243\001\002\000\004\063\244\001\002\000\004\114" +
    "\uff9c\001\002\000\004\116\347\001\002\000\004\116\344" +
    "\001\002\000\004\116\341\001\002\000\004\116\336\001" +
    "\002\000\004\116\333\001\002\000\004\116\330\001\002" +
    "\000\004\116\324\001\002\000\004\116\321\001\002\000" +
    "\004\116\304\001\002\000\004\116\301\001\002\000\004" +
    "\116\270\001\002\000\004\116\265\001\002\000\004\116" +
    "\262\001\002\000\004\121\263\001\002\000\004\114\264" +
    "\001\002\000\006\006\uff47\062\uff47\001\002\000\004\116" +
    "\266\001\002\000\004\114\267\001\002\000\006\006\uff3f" +
    "\062\uff3f\001\002\000\004\114\271\001\002\000\006\006" +
    "\uff4a\062\241\001\002\000\004\006\276\001\002\000\006" +
    "\006\uff4b\062\241\001\002\000\006\006\uff48\062\uff48\001" +
    "\002\000\006\006\uff49\062\uff49\001\002\000\004\060\277" +
    "\001\002\000\004\114\300\001\002\000\006\006\uff3c\062" +
    "\uff3c\001\002\000\010\116\151\121\153\122\154\001\002" +
    "\000\004\114\303\001\002\000\006\006\uff42\062\uff42\001" +
    "\002\000\004\114\305\001\002\000\004\042\307\001\002" +
    "\000\004\006\316\001\002\000\004\116\310\001\002\000" +
    "\004\114\311\001\002\000\006\006\uff4a\062\241\001\002" +
    "\000\004\006\313\001\002\000\004\042\314\001\002\000" +
    "\004\114\315\001\002\000\006\006\uff4c\042\uff4c\001\002" +
    "\000\004\061\317\001\002\000\004\114\320\001\002\000" +
    "\006\006\uff3b\062\uff3b\001\002\000\004\121\322\001\002" +
    "\000\004\114\323\001\002\000\006\006\uff44\062\uff44\001" +
    "\002\000\004\116\325\001\002\000\004\116\326\001\002" +
    "\000\004\114\327\001\002\000\006\006\uff3e\062\uff3e\001" +
    "\002\000\004\121\331\001\002\000\004\114\332\001\002" +
    "\000\006\006\uff43\062\uff43\001\002\000\004\116\334\001" +
    "\002\000\004\114\335\001\002\000\006\006\uff3d\062\uff3d" +
    "\001\002\000\010\116\151\121\153\122\154\001\002\000" +
    "\004\114\340\001\002\000\006\006\uff40\062\uff40\001\002" +
    "\000\010\116\151\121\153\122\154\001\002\000\004\114" +
    "\343\001\002\000\006\006\uff41\062\uff41\001\002\000\004" +
    "\121\345\001\002\000\004\114\346\001\002\000\006\006" +
    "\uff45\062\uff45\001\002\000\004\121\350\001\002\000\004" +
    "\114\351\001\002\000\006\006\uff46\062\uff46\001\002\000" +
    "\004\114\uffad\001\002\000\004\114\uff96\001\002\000\004" +
    "\114\355\001\002\000\006\035\072\036\075\001\002\000" +
    "\010\006\uff9d\035\uff9d\036\uff9d\001\002\000\010\006\360" +
    "\035\072\036\075\001\002\000\004\064\362\001\002\000" +
    "\010\006\uff9e\035\uff9e\036\uff9e\001\002\000\004\114\uff9f" +
    "\001\002\000\004\114\uffab\001\002\000\012\116\366\117" +
    "\365\121\367\122\370\001\002\000\004\114\uff93\001\002" +
    "\000\004\114\uff91\001\002\000\004\114\uff94\001\002\000" +
    "\004\114\uff92\001\002\000\004\114\uffae\001\002\000\004" +
    "\114\uff97\001\002\000\006\112\uff82\121\uff82\001\002\000" +
    "\006\112\uff81\121\u0100\001\002\000\004\114\uff85\001\002" +
    "\000\004\112\u0107\001\002\000\006\112\uff7e\121\uff7e\001" +
    "\002\000\004\115\u0103\001\002\000\006\112\uff80\121\u0100" +
    "\001\002\000\006\112\uff7f\121\uff7f\001\002\000\004\117" +
    "\u0104\001\002\000\004\114\u0105\001\002\000\006\112\uff7d" +
    "\121\uff7d\001\002\000\004\114\uff83\001\002\000\004\115" +
    "\u0108\001\002\000\004\117\u0109\001\002\000\004\114\uff7c" +
    "\001\002\000\006\112\uff78\117\u0111\001\002\000\004\114" +
    "\uff84\001\002\000\006\114\u010d\121\u010e\001\002\000\006" +
    "\112\uff7a\117\uff7a\001\002\000\004\114\u010f\001\002\000" +
    "\006\112\uff79\117\uff79\001\002\000\004\112\u0116\001\002" +
    "\000\004\114\u0115\001\002\000\006\112\uff77\117\u0111\001" +
    "\002\000\006\112\uff75\117\uff75\001\002\000\006\112\uff76" +
    "\117\uff76\001\002\000\006\112\uff74\117\uff74\001\002\000" +
    "\004\115\u0118\001\002\000\004\114\uff7b\001\002\000\004" +
    "\117\u0119\001\002\000\004\114\uff73\001\002\000\004\114" +
    "\uff8b\001\002\000\006\114\uff8c\121\u0122\001\002\000\026" +
    "\065\017\066\022\067\027\070\024\071\026\110\016\111" +
    "\023\112\021\114\uff86\117\020\001\002\000\030\065\017" +
    "\066\022\067\027\070\024\071\026\110\016\111\023\112" +
    "\021\114\uff8a\117\020\121\u011e\001\002\000\004\114\uff89" +
    "\001\002\000\004\114\uff88\001\002\000\024\065\017\066" +
    "\022\067\027\070\024\071\026\110\016\111\023\112\021" +
    "\117\020\001\002\000\004\114\uff87\001\002\000\004\114" +
    "\uff8d\001\002\000\054\003\uffb7\004\uffb7\006\uffb7\010\uffb7" +
    "\011\uffb7\013\uffb7\017\uffb7\020\uffb7\023\uffb7\031\uffb7\033" +
    "\uffb7\034\uffb7\035\uffb7\036\uffb7\063\uffb7\064\uffb7\110\uffb7" +
    "\111\uffb7\114\uffb7\117\uffb7\120\uffb7\001\002\000\004\116" +
    "\u0126\001\002\000\004\114\uffaa\001\002\000\004\114\uff9b" +
    "\001\002\000\004\042\307\001\002\000\006\006\u012b\042" +
    "\307\001\002\000\006\006\uff4d\042\uff4d\001\002\000\006" +
    "\006\uff4e\042\uff4e\001\002\000\004\041\u012c\001\002\000" +
    "\004\114\uffa0\001\002\000\004\070\u012f\001\002\000\004" +
    "\114\uffac\001\002\000\004\117\u0130\001\002\000\004\065" +
    "\u0131\001\002\000\004\117\u0132\001\002\000\004\066\u0133" +
    "\001\002\000\004\117\u0134\001\002\000\004\114\uff95\001" +
    "\002\000\004\114\uffaf\001\002\000\004\121\u0137\001\002" +
    "\000\004\114\uff98\001\002\000\004\114\uffa1\001\002\000" +
    "\004\114\uffb0\001\002\000\004\067\u013b\001\002\000\004" +
    "\117\u013c\001\002\000\004\117\u013d\001\002\000\006\070" +
    "\u013e\114\uff99\001\002\000\004\117\u013f\001\002\000\004" +
    "\065\u0140\001\002\000\004\117\u0141\001\002\000\004\114" +
    "\uff9a\001\002\000\004\114\uffb1\001\002\000\054\003\uffba" +
    "\004\uffba\006\uffba\010\uffba\011\uffba\013\uffba\017\uffba\020" +
    "\uffba\023\uffba\031\uffba\033\uffba\034\uffba\035\uffba\036\uffba" +
    "\063\uffba\064\uffba\110\uffba\111\uffba\114\uffba\117\uffba\120" +
    "\uffba\001\002\000\010\002\uffbe\012\uffbe\026\uffbe\001\002" +
    "\000\006\002\uffc0\012\uffc0\001\002\000\010\002\uff6b\012" +
    "\uff6b\026\uff6b\001\002\000\004\117\u014a\001\002\000\010" +
    "\002\uff6d\012\uff6d\026\u0147\001\002\000\010\002\uff6c\012" +
    "\uff6c\026\uff6c\001\002\000\004\116\u014b\001\002\000\004" +
    "\114\u014c\001\002\000\010\002\uff6a\012\uff6a\026\uff6a\001" +
    "\002\000\004\117\u014e\001\002\000\004\114\u014f\001\002" +
    "\000\054\003\uffbc\004\uffbc\006\uffbc\010\uffbc\011\uffbc\013" +
    "\uffbc\017\uffbc\020\uffbc\023\uffbc\031\uffbc\033\uffbc\034\uffbc" +
    "\035\uffbc\036\uffbc\063\uffbc\064\uffbc\110\uffbc\111\uffbc\114" +
    "\uffbc\117\uffbc\120\uffbc\001\002\000\010\002\uffd4\007\uffd4" +
    "\012\uffd4\001\002\000\006\006\uff4f\042\307\001\002\000" +
    "\006\006\uff50\042\307\001\002\000\004\006\u0154\001\002" +
    "\000\004\041\u0155\001\002\000\004\114\u0156\001\002\000" +
    "\020\002\uff51\006\uff51\007\uff51\012\uff51\025\uff51\035\uff51" +
    "\036\uff51\001\002\000\020\002\uff5b\007\uff5b\012\uff5b\025" +
    "\uff5b\034\uff5b\035\uff5b\036\uff5b\001\002\000\004\030\u015a" +
    "\001\002\000\006\006\uff62\030\uff62\001\002\000\004\116" +
    "\u0161\001\002\000\006\006\u015d\030\u015a\001\002\000\006" +
    "\006\uff63\030\uff63\001\002\000\004\027\u015f\001\002\000" +
    "\022\002\uff65\007\uff65\012\uff65\032\uff65\033\uff65\034\uff65" +
    "\035\uff65\036\uff65\001\002\000\004\114\u0160\001\002\000" +
    "\022\002\uff60\007\uff60\012\uff60\032\uff60\033\uff60\034\uff60" +
    "\035\uff60\036\uff60\001\002\000\004\116\u0162\001\002\000" +
    "\004\116\u0163\001\002\000\040\006\ufff2\072\ufff2\073\ufff2" +
    "\074\ufff2\075\ufff2\076\ufff2\077\ufff2\100\ufff2\101\ufff2\102" +
    "\ufff2\103\ufff2\104\ufff2\105\ufff2\106\ufff2\107\ufff2\001\002" +
    "\000\004\006\u0165\001\002\000\004\030\u0166\001\002\000" +
    "\004\114\u0167\001\002\000\006\006\uff61\030\uff61\001\002" +
    "\000\024\002\uff5f\007\uff5f\012\uff5f\027\uff5f\032\uff5f\033" +
    "\uff5f\034\uff5f\035\uff5f\036\uff5f\001\002\000\032\002\uffda" +
    "\007\uffda\012\uffda\021\uffda\024\uffda\027\uffda\031\uffda\032" +
    "\uffda\033\uffda\034\uffda\035\uffda\036\uffda\001\002\000\004" +
    "\114\u016b\001\002\000\032\002\uffd8\007\uffd8\012\uffd8\021" +
    "\uffd8\024\uffd8\027\uffd8\031\uffd8\032\uffd8\033\uffd8\034\uffd8" +
    "\035\uffd8\036\uffd8\001\002\000\024\065\017\066\022\067" +
    "\027\070\024\071\026\110\016\111\023\112\021\117\020" +
    "\001\002\000\004\114\u016e\001\002\000\006\014\ufffd\015" +
    "\ufffd\001\002\000\024\065\017\066\022\067\027\070\024" +
    "\071\026\110\016\111\023\112\021\117\020\001\002\000" +
    "\004\114\u0171\001\002\000\006\014\ufffc\015\ufffc\001\002" +
    "\000\004\114\u0173\001\002\000\006\005\uffff\022\uffff\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table =
    unpackFromStrings(new String[] {
    "\000\u0171\000\006\030\005\046\004\001\001\000\002\001" +
    "\001\000\004\014\011\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\132\u016e\133\104\001\001\000\006\132" +
    "\u016b\133\104\001\001\000\004\052\012\001\001\000\010" +
    "\025\034\026\033\027\031\001\001\000\002\001\001\000" +
    "\004\003\024\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u0169\001\001\000\004" +
    "\027\u0168\001\001\000\010\065\035\066\036\067\037\001" +
    "\001\000\004\104\046\001\001\000\004\067\044\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\100\050\001\001\000\002\001\001\000" +
    "\004\105\051\001\001\000\006\006\057\111\061\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\062\112\063\001\001\000\002\001" +
    "\001\000\012\113\067\114\072\121\073\127\070\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\113\067\114\u014f\001\001\000\012\021\101\022\076\023" +
    "\075\074\100\001\001\000\002\001\001\000\014\016\167" +
    "\041\171\042\166\043\164\070\170\001\001\000\010\075" +
    "\154\076\157\077\155\001\001\000\006\132\103\133\104" +
    "\001\001\000\002\001\001\000\006\022\076\074\102\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\010\111" +
    "\011\124\012\125\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\126\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\004\132\001\001\000" +
    "\004\005\151\001\001\000\002\001\001\000\004\006\143" +
    "\001\001\000\002\001\001\000\004\006\136\001\001\000" +
    "\004\007\137\001\001\000\010\113\067\114\141\127\140" +
    "\001\001\000\002\001\001\000\006\113\067\114\142\001" +
    "\001\000\002\001\001\000\004\007\144\001\001\000\010" +
    "\113\067\114\146\127\145\001\001\000\002\001\001\000" +
    "\006\113\067\114\147\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\077\160\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\132\u014c\133\104\001\001\000\010\071\u0144\072" +
    "\u0147\073\u0145\001\001\000\012\020\177\047\176\050\173" +
    "\134\174\001\001\000\002\001\001\000\010\016\167\042" +
    "\166\070\172\001\001\000\002\001\001\000\010\020\u0143" +
    "\047\u0142\134\174\001\001\000\034\015\233\017\212\024" +
    "\230\031\207\045\227\051\214\106\221\107\235\110\223" +
    "\113\211\120\220\123\215\124\203\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\063\u0138\001\001\000\002\001\001\000\004\032\u0134" +
    "\001\001\000\002\001\001\000\006\003\u012c\013\u012d\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\064\u0124" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\u011c\001\001\000\006\053\u010a\054\u0109\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\033\374\034\373\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\055\370" +
    "\001\001\000\004\044\362\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\113\353\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\003\352\062\351\001\001\000\004\122\241\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\117\272\122\273\131\271" +
    "\001\001\000\002\001\001\000\004\122\274\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\301\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\116\305\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\117\272\122\273\131\311\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\336\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\341\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\113\067\114\355\125\356\001\001\000\002" +
    "\001\001\000\006\113\067\114\360\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\036\376\037\375\040" +
    "\u0100\001\001\000\002\001\001\000\004\035\u0105\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\036\u0101\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\057\u0112\060\u010f" +
    "\061\u0111\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\056\u0116\001\001\000\002\001\001\000\004\057\u0113\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\u011f\001\001\000\004\003\u011e\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u0120\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\115\u0127" +
    "\116\u0128\001\001\000\004\116\u0129\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\073\u0148\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\115\u0151\116\u0128\130\u0152\001\001" +
    "\000\004\116\u0129\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\101\u015a\102\u0158\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\102\u015b\103\u015d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\132\u0163\133\104\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\u016c\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\u016f\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

	action_obj.scanner = scanner;
	action_obj.classFile = classFile;

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

    return scanner.next_token();

    }



	// parser code

	public Scanner scanner;
	public ClassFile classFile;

	public void report_error(String message, Object info)  {
    	classFile.report_error("Warning - " + message);
	}

	public void report_fatal_error(String message, Object info)  {
    	classFile.report_error("Error - " + message);
    	// System.exit(-1);
	}

	parser(ClassFile classFile, Scanner scanner) {
	    super();

	    this.scanner = scanner;
	    this.classFile = classFile;
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {


    short access_val;
    public Scanner scanner;
    public ClassFile classFile;

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // elem_val_pair ::= DELEM ANN_KIND Str SEP annotation DEND DANNOT_ELEM SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

        RESULT = classFile.makeAnnotElem(name, '@', attr);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // elem_val_pair ::= DELEM ARR_KIND Str SEP elem_val_pair_list_opt DEND DARR_ELEM SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

        RESULT = classFile.makeArrayElem(name, '[', list);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // elem_val_pair ::= DELEM CLS_KIND Str Str SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int descleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int descright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String desc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeClassElem(name, 'c', desc);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // elem_val_pair ::= DELEM ENUM_KIND Str Str Str SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tnameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tnameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String tname = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int cnameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int cnameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String cname = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeEnumElem(name, 'e', tname, cname);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // elem_val_pair ::= DELEM STR_KIND Str Str SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 's', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // elem_val_pair ::= DELEM DOUB_KIND Str item SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'D', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // elem_val_pair ::= DELEM FLOAT_KIND Str item SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'F', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // elem_val_pair ::= DELEM LONG_KIND Str item SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'J', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // elem_val_pair ::= DELEM BOOL_KIND Str Int SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'Z', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // elem_val_pair ::= DELEM CHAR_KIND Str Int SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'C', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // elem_val_pair ::= DELEM BYTE_KIND Str Int SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'B', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // elem_val_pair ::= DELEM SHORT_KIND Str Int SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'S', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // elem_val_pair ::= DELEM INT_KIND Str Int SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer val = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = classFile.makeConstantElem(name, 'I', val);

              CUP$parser$result = new java_cup.runtime.Symbol(80/*elem_val_pair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // elem_val_pair_list ::= elem_val_pair
            {
              Object RESULT = null;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = classFile.makeNewElemValPairList(elem);

              CUP$parser$result = new java_cup.runtime.Symbol(77/*elem_val_pair_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // elem_val_pair_list ::= elem_val_pair_list elem_val_pair
            {
              Object RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = classFile.mergeNewElemValPair(list, elem);

              CUP$parser$result = new java_cup.runtime.Symbol(77/*elem_val_pair_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // elem_val_pair_list_opt ::=
            {
              Object RESULT = null;

        RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(87/*elem_val_pair_list_opt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // elem_val_pair_list_opt ::= elem_val_pair_list
            {
              Object RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = list;

              CUP$parser$result = new java_cup.runtime.Symbol(87/*elem_val_pair_list_opt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // annotation ::= DANNOTATION Str SEP elem_val_pair_list_opt DEND DANNOTATION SEP
            {
              Object RESULT = null;
		int annotation_typeleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int annotation_typeright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String annotation_type = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int elemsleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int elemsright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object elems = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

        RESULT = classFile.makeAnnotation(annotation_type, elems);

              CUP$parser$result = new java_cup.runtime.Symbol(76/*annotation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // annotation_list ::= annotation
            {
              Object RESULT = null;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = classFile.makeNewAnnotationList(elem);

              CUP$parser$result = new java_cup.runtime.Symbol(75/*annotation_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // annotation_list ::= annotation_list annotation
            {
              Object RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = classFile.mergeNewAnnotation(list, elem);

              CUP$parser$result = new java_cup.runtime.Symbol(75/*annotation_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // annotation_list_opt ::=
            {
              Object RESULT = null;

        RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(86/*annotation_list_opt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // annotation_list_opt ::= annotation_list
            {
              Object RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = list;

              CUP$parser$result = new java_cup.runtime.Symbol(86/*annotation_list_opt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // annotation_attr ::= visibility_type SEP annotation_list_opt DEND DANNOTATION_ATTR SEP
            {
              Object RESULT = null;
		int tvalleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int tvalright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object tval = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

        RESULT = classFile.makeVisibilityAnnotation(tval, list);

              CUP$parser$result = new java_cup.runtime.Symbol(74/*annotation_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // annotation_attr_opt ::=
            {
              Object RESULT = null;

        RESULT = null; /* empty */

              CUP$parser$result = new java_cup.runtime.Symbol(85/*annotation_attr_opt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // annotation_attr_opt ::= annotation_attr
            {
              Object RESULT = null;
		int attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = attr;

              CUP$parser$result = new java_cup.runtime.Symbol(85/*annotation_attr_opt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // param_visibility_type ::= DRUNTIME_PARAM_INVISIBLE
            {
              Object RESULT = null;
		 RESULT = "RuntimeInvisibleParameter";
              CUP$parser$result = new java_cup.runtime.Symbol(84/*param_visibility_type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // param_visibility_type ::= DRUNTIME_PARAM_VISIBLE
            {
              Object RESULT = null;
		 RESULT = "RuntimeVisibleParameter";
              CUP$parser$result = new java_cup.runtime.Symbol(84/*param_visibility_type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // visibility_type ::= DRUNTIME_INVISIBLE
            {
              Object RESULT = null;
		 RESULT = "RuntimeInvisible";
              CUP$parser$result = new java_cup.runtime.Symbol(73/*visibility_type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // visibility_type ::= DRUNTIME_VISIBLE
            {
              Object RESULT = null;
		 RESULT = "RuntimeVisible";
              CUP$parser$result = new java_cup.runtime.Symbol(73/*visibility_type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // signature_attr ::=
            {
              Object RESULT = null;

        /* empty */ RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*signature_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // signature_attr ::= DSIG_ATTR Str SEP
            {
              Object RESULT = null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        RESULT = sig;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*signature_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // deprecated_attr ::=
            {
              Object RESULT = null;

        /* empty */ RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*deprecated_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // deprecated_attr ::= DDEPRECATED SEP
            {
              Object RESULT = null;

        RESULT = "deprecated";

              CUP$parser$result = new java_cup.runtime.Symbol(4/*deprecated_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // encl_meth_attr ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(67/*encl_meth_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // encl_meth_attr ::= DENCLOSING_METH Str Str Str SEP
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

        classFile.addEnclMethAttr(c, m, s);

              CUP$parser$result = new java_cup.runtime.Symbol(67/*encl_meth_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // synth_attr ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(66/*synth_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // synth_attr ::= DSYNTHETIC SEP
            {
              Object RESULT = null;

        classFile.addClassSynthAttr();

              CUP$parser$result = new java_cup.runtime.Symbol(66/*synth_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // end_inner_class_attr ::= DEND DINNER_CLASS_ATTR SEP
            {
              Object RESULT = null;

        classFile.endInnerClassAttr();

              CUP$parser$result = new java_cup.runtime.Symbol(65/*end_inner_class_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // inner_class_attr_spec ::= DINNER_CLASS_SPEC_ATTR Str Str Str access DEND DINNER_CLASS_SPEC_ATTR SEP
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Short d = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

        classFile.addInnerClassSpec(a, b, c, (short)d.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(64/*inner_class_attr_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // inner_class_attr_list ::= inner_class_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(63/*inner_class_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // inner_class_attr_list ::= inner_class_attr_list inner_class_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(63/*inner_class_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // inner_class_attr ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(62/*inner_class_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // inner_class_attr ::= DINNER_CLASS_ATTR SEP inner_class_attr_list end_inner_class_attr
            {
              Object RESULT = null;

        classFile.addInnerClassAttr();

              CUP$parser$result = new java_cup.runtime.Symbol(62/*inner_class_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // field_attr_spec ::= DFIELD_ATTR Word Str SEP
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

		 byte[] data = Base64.decode(v.toCharArray());
                classFile.addGenericAttrToField(w, data);

              CUP$parser$result = new java_cup.runtime.Symbol(61/*field_attr_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // field_attr_list ::= field_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(60/*field_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // field_attr_list ::= field_attr_list field_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(60/*field_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // field_attrs ::= field_attr_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(59/*field_attrs*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // method_attr_spec ::= DMETHOD_ATTR Word Str SEP
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

		 byte[] data = Base64.decode(v.toCharArray());
                classFile.addGenericAttrToMethod(w, data);

              CUP$parser$result = new java_cup.runtime.Symbol(57/*method_attr_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // method_attr_list ::= method_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(56/*method_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // method_attr_list ::= method_attr_list method_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(56/*method_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // method_attrs ::= method_attr_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(55/*method_attrs*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // class_attr_spec ::= DCLASS_ATTR Word Str SEP
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

		byte[] data = Base64.decode(v.toCharArray());
                classFile.addGenericAttrToClass(new GenericAttr(w, data));

              CUP$parser$result = new java_cup.runtime.Symbol(53/*class_attr_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // class_attr_list ::= class_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(52/*class_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // class_attr_list ::= class_attr_list class_attr_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(52/*class_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // class_attrs ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(51/*class_attrs*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // class_attrs ::= class_attr_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(51/*class_attrs*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // table_default ::= DEFAULT COLON Word
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.endTableswitch(w);

              CUP$parser$result = new java_cup.runtime.Symbol(44/*table_default*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // table_entry ::= Word SEP
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.addTableswitch(w);

              CUP$parser$result = new java_cup.runtime.Symbol(45/*table_entry*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // table_list ::= table_entry
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(47/*table_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // table_list ::= table_list table_entry
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(47/*table_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // table_list_t ::= table_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(46/*table_list_t*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // table_list_t ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(46/*table_list_t*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // table_args ::= Int Int SEP
            {
              Object RESULT = null;
		int lowleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int lowright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Integer low = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int highleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int highright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer high = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.newTableswitch(low.intValue(), high.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(42/*table_args*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // table_args ::= Int SEP
            {
              Object RESULT = null;
		int lowleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int lowright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer low = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.newTableswitch(low.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(42/*table_args*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // table ::= table_args table_list_t table_default
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(41/*table*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // lookup_default ::= DEFAULT COLON Word
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 classFile.endLookupswitch(w);
              CUP$parser$result = new java_cup.runtime.Symbol(27/*lookup_default*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // lookup_entry ::= Int COLON Word SEP
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Integer i = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.addLookupswitch(i.intValue(), w);

              CUP$parser$result = new java_cup.runtime.Symbol(28/*lookup_entry*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // lookup_list ::= lookup_entry
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*lookup_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // lookup_list ::= lookup_list lookup_entry
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*lookup_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // lookup_list_t ::= lookup_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*lookup_list_t*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // lookup_list_t ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*lookup_list_t*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // lookup_args ::= SEP
            {
              Object RESULT = null;
		 classFile.newLookupswitch();
              CUP$parser$result = new java_cup.runtime.Symbol(26/*lookup_args*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // lookup ::= lookup_args lookup_list_t lookup_default
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*lookup*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // complex_instruction ::= TABLESWITCH table
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*complex_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // complex_instruction ::= LOOKUPSWITCH lookup
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*complex_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // simple_instruction ::= Insn Str
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plantString(i, n);

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // simple_instruction ::= Insn Str Word_plus_keywords Word_plus_keywords
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String n3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i, n1, n2, n3);

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // simple_instruction ::= Insn Word_plus_keywords Word_plus_keywords
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String n2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i, n1, n2);

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // simple_instruction ::= Insn Word_plus_keywords Int
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i, n, n2.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // simple_instruction ::= Insn Word_plus_keywords
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i, n);

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // simple_instruction ::= Insn Num
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Number n = (Number)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i, n);

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // simple_instruction ::= Insn Int
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i, n.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // simple_instruction ::= Insn Int Int
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i, n1.intValue(), n2.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // simple_instruction ::= Insn
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.plant(i);

              CUP$parser$result = new java_cup.runtime.Symbol(35/*simple_instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // instruction ::= complex_instruction
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // instruction ::= simple_instruction
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*instruction*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // set_expr ::= Word Str
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 scanner.dict.put(name, v);
              CUP$parser$result = new java_cup.runtime.Symbol(34/*set_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // set_expr ::= Word Num
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Number v = (Number)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 scanner.dict.put(name, v);
              CUP$parser$result = new java_cup.runtime.Symbol(34/*set_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // set_expr ::= Word Word
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 scanner.dict.put(name, v);
              CUP$parser$result = new java_cup.runtime.Symbol(34/*set_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // set_expr ::= Word Int
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer v = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 scanner.dict.put(name, v);
              CUP$parser$result = new java_cup.runtime.Symbol(34/*set_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // catch_expr ::= Word_plus_keywords FROM Word TO Word USING Word
            {
              Object RESULT = null;
		int aclassleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int aclassright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String aclass = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int fromlableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int fromlabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String fromlab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int tolableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tolabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String tolab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int branchlableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int branchlabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String branchlab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.addCatch(aclass,
                            fromlab, tolab,
                            branchlab);

              CUP$parser$result = new java_cup.runtime.Symbol(9/*catch_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // throws_expr ::= Word_plus_keywords
            {
              Object RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.addThrow(s);

              CUP$parser$result = new java_cup.runtime.Symbol(48/*throws_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // line_expr ::= Int
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer v = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 classFile.addLine(v.intValue());
              CUP$parser$result = new java_cup.runtime.Symbol(43/*line_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // limit_expr ::= Word Int
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer v = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        // .limit locals
        if (w.equals("locals")
                 || w.equals("vars")) // "vars" for historic reasons
            classFile.setVarSize((short)v.intValue());
        // .limit stack
        else if (w.equals("stack"))
            classFile.setStackSize((short)v.intValue());
        else
            classFile.report_error(".limit expected \"stack\" or \"locals\", but got "
                          + w);

              CUP$parser$result = new java_cup.runtime.Symbol(24/*limit_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // var_expr ::= Int IS Word Word
            {
              Object RESULT = null;
		int regleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int regright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Integer reg = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

             classFile.addVar(null, null, name, sig, reg.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(49/*var_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // var_expr ::= Int IS Word Word FROM Word TO Word
            {
              Object RESULT = null;
		int regleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int regright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Integer reg = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int slableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int slabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String slab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int elableft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int elabright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String elab = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

             classFile.addVar(slab, elab, name,
                            sig, reg.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(49/*var_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // code_attr_expr ::= Word Str
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

               classFile.addSootCodeAttr(w, v);

              CUP$parser$result = new java_cup.runtime.Symbol(50/*code_attr_expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // meth_annotation_default_attr ::= DANNOT_DEFAULT elem_val_pair DEND DANNOT_DEFAULT
            {
              Object RESULT = null;
		int defleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int defright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object def = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

        classFile.addMethAnnotDefault(def);

              CUP$parser$result = new java_cup.runtime.Symbol(81/*meth_annotation_default_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // annotation_attr_list ::= annotation_attr
            {
              Object RESULT = null;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = classFile.makeNewAnnotAttrList(elem);

              CUP$parser$result = new java_cup.runtime.Symbol(83/*annotation_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // annotation_attr_list ::= annotation_attr_list annotation_attr
            {
              Object RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int elemleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int elemright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object elem = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        RESULT = classFile.mergeNewAnnotAttr(list, elem);

              CUP$parser$result = new java_cup.runtime.Symbol(83/*annotation_attr_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // meth_param_annotation_attr ::= DPARAM_ANNOT_ATTR visibility_type SEP annotation_attr_list DEND DPARAM_ANNOT_ATTR
            {
              Object RESULT = null;
		int kindleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int kindright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object kind = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

        RESULT = classFile.makeParameterVisibilityAnnotation(kind, list);
        if(kind.equals("RuntimeVisible"))
        	classFile.addMethParamAnnotAttrVisible(RESULT);
        else
            classFile.addMethParamAnnotAttrInvisible(RESULT);

              CUP$parser$result = new java_cup.runtime.Symbol(82/*meth_param_annotation_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // meth_annotation_attr ::= visibility_type SEP annotation_list DEND DANNOTATION_ATTR
            {
              Object RESULT = null;
		int tvalleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tvalright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object tval = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

        RESULT = classFile.makeVisibilityAnnotation(tval, list);
        if(tval.equals("RuntimeVisible"))
        	classFile.addMethAnnotAttrVisible(RESULT);
        else
            classFile.addMethAnnotAttrInvisible(RESULT);

              CUP$parser$result = new java_cup.runtime.Symbol(78/*meth_annotation_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // meth_sig_attr ::= DSIG_ATTR Str
            {
              Object RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        classFile.addMethSigAttr(s);

              CUP$parser$result = new java_cup.runtime.Symbol(70/*meth_sig_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // meth_depr_attr ::= DDEPRECATED
            {
              Object RESULT = null;

        classFile.addMethDeprAttr();

              CUP$parser$result = new java_cup.runtime.Symbol(69/*meth_depr_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // meth_synth_attr ::= DSYNTHETIC
            {
              Object RESULT = null;

        classFile.addMethSynthAttr();

              CUP$parser$result = new java_cup.runtime.Symbol(68/*meth_synth_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // directive ::= meth_param_annotation_attr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // directive ::= meth_annotation_default_attr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // directive ::= meth_annotation_attr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // directive ::= meth_sig_attr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // directive ::= meth_depr_attr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // directive ::= meth_synth_attr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // directive ::= DCODE_ATTR code_attr_expr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // directive ::= DSET set_expr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // directive ::= DCATCH catch_expr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // directive ::= DTHROWS throws_expr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // directive ::= DLINE line_expr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // directive ::= DLIMIT limit_expr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // directive ::= DVAR var_expr
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*directive*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // label ::= Word COLON
            {
              Object RESULT = null;
		int labelleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int labelright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String label = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.plantLabel(label);

              CUP$parser$result = new java_cup.runtime.Symbol(23/*label*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // stmnt ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*stmnt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // stmnt ::= label
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*stmnt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // stmnt ::= error
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*stmnt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // stmnt ::= directive
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*stmnt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // stmnt ::= instruction
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*stmnt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // statement ::= NT$1 stmnt SEP
            {
              Object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(37/*statement*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // NT$1 ::=
            {
              Object RESULT = null;
 classFile.setLine(scanner.token_line_num);
              CUP$parser$result = new java_cup.runtime.Symbol(90/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // statements ::= statement
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*statements*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // statements ::= statements statement
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*statements*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // endmethod ::= DEND METHOD SEP
            {
              Object RESULT = null;

            classFile.endMethod();

              CUP$parser$result = new java_cup.runtime.Symbol(14/*endmethod*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // defmethod ::= DMETHOD access Word SEP
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Short i = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            String split[] = ScannerUtils.splitMethodSignature(name);
            classFile.newMethod(split[0], split[1], i.intValue());

              CUP$parser$result = new java_cup.runtime.Symbol(12/*defmethod*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // method_spec ::= defmethod endmethod
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(32/*method_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // method_spec ::= defmethod statements endmethod
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(32/*method_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // method_item ::= method_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(54/*method_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // method_item ::= method_spec method_attrs
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(54/*method_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // method_list ::= method_item
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*method_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // method_list ::= method_list method_item
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*method_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // methods ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(33/*methods*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // methods ::= method_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(33/*methods*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // item ::= Str
            {
              Object RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT = s;
              CUP$parser$result = new java_cup.runtime.Symbol(3/*item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // item ::= Num
            {
              Object RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Number n = (Number)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT = n;
              CUP$parser$result = new java_cup.runtime.Symbol(3/*item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // item ::= Int
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer i = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT = i;
              CUP$parser$result = new java_cup.runtime.Symbol(3/*item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // optional_default ::=
            {
              Object RESULT = null;
		 RESULT = null;
              CUP$parser$result = new java_cup.runtime.Symbol(2/*optional_default*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // optional_default ::= EQ item
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT = v;
              CUP$parser$result = new java_cup.runtime.Symbol(2/*optional_default*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // field_spec ::= DFIELD access Str Word optional_default DSYNTHETIC SEP deprecated_attr signature_attr annotation_attr annotation_attr
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vis_annot_attr1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vis_annot_attr1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object vis_annot_attr1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attr2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vis_annot_attr2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object vis_annot_attr2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.addField((short)a.intValue(), name, sig, v, "synth", dep_attr, sig_attr, vis_annot_attr1, vis_annot_attr2);

              CUP$parser$result = new java_cup.runtime.Symbol(16/*field_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // field_spec ::= DFIELD access Str Word optional_default SEP deprecated_attr signature_attr annotation_attr annotation_attr
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int vis_annot_attr1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vis_annot_attr1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object vis_annot_attr1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attr2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vis_annot_attr2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object vis_annot_attr2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.addField((short)a.intValue(), name, sig, v, dep_attr, sig_attr, vis_annot_attr1, vis_annot_attr2);

              CUP$parser$result = new java_cup.runtime.Symbol(16/*field_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // field_spec ::= DFIELD access Str Word optional_default DSYNTHETIC SEP deprecated_attr signature_attr annotation_attr_opt
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vis_annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object vis_annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.addField((short)a.intValue(), name, sig, v, "synth", dep_attr, sig_attr, vis_annot_attr, null);

              CUP$parser$result = new java_cup.runtime.Symbol(16/*field_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // field_spec ::= DFIELD access Str Word optional_default SEP deprecated_attr signature_attr annotation_attr_opt
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vis_annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vis_annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object vis_annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

            classFile.addField((short)a.intValue(), name, sig, v, dep_attr, sig_attr, vis_annot_attr, null);

              CUP$parser$result = new java_cup.runtime.Symbol(16/*field_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // field_item ::= field_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(58/*field_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // field_item ::= field_spec field_attrs
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(58/*field_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // field_list ::= field_item
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(15/*field_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // field_list ::= field_list field_item
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(15/*field_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // fields ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*fields*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // fields ::= field_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*fields*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // class_annotation_attr ::= annotation_attr annotation_attr
            {
              Object RESULT = null;
		int annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int annot_attr2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int annot_attr2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object annot_attr2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        if(((VisibilityAnnotationAttr)annot_attr).getKind().equals("RuntimeVisible"))
        	classFile.addClassAnnotAttrVisible(annot_attr);
        else
            classFile.addClassAnnotAttrInvisible(annot_attr);
        if(((VisibilityAnnotationAttr)annot_attr2).getKind().equals("RuntimeVisible"))
        	classFile.addClassAnnotAttrVisible(annot_attr2);
        else
            classFile.addClassAnnotAttrInvisible(annot_attr2);

              CUP$parser$result = new java_cup.runtime.Symbol(79/*class_annotation_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // class_annotation_attr ::= annotation_attr_opt
            {
              Object RESULT = null;
		int annot_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int annot_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object annot_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

    	if(annot_attr!=null) {
	        if(((VisibilityAnnotationAttr)annot_attr).getKind().equals("RuntimeVisible"))
	        	classFile.addClassAnnotAttrVisible(annot_attr);
	        else
	            classFile.addClassAnnotAttrInvisible(annot_attr);
	    }

              CUP$parser$result = new java_cup.runtime.Symbol(79/*class_annotation_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // class_sig_attr ::= signature_attr
            {
              Object RESULT = null;
		int sig_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int sig_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object sig_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        classFile.addClassSigAttr(sig_attr);

              CUP$parser$result = new java_cup.runtime.Symbol(72/*class_sig_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // class_depr_attr ::= deprecated_attr
            {
              Object RESULT = null;
		int dep_attrleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int dep_attrright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object dep_attr = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

        classFile.addClassDeprAttr(dep_attr);

              CUP$parser$result = new java_cup.runtime.Symbol(71/*class_depr_attr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // implements_spec ::= DIMPLEMENTS Word_plus_keywords SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 classFile.addInterface(name);
              CUP$parser$result = new java_cup.runtime.Symbol(21/*implements_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // implements_list ::= implements_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*implements_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // implements_list ::= implements_list implements_spec
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*implements_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // impls ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*impls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // impls ::= implements_list
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*impls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // super_spec ::= DNOSUPER SEP
            {
              Object RESULT = null;

            classFile.setNoSuperClass();

              CUP$parser$result = new java_cup.runtime.Symbol(40/*super_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // super_spec ::= DSUPER Word_plus_keywords SEP
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.setSuperClass(name);

              CUP$parser$result = new java_cup.runtime.Symbol(40/*super_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // access_item ::= ENUM
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_ENUM;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // access_item ::= ANNOTATION
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_ANNOTATION;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // access_item ::= STRICTFP
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_STRICTFP;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // access_item ::= ABSTRACT
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_ABSTRACT;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // access_item ::= INTERFACE
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_INTERFACE;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // access_item ::= NATIVE
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_NATIVE;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // access_item ::= TRANSIENT
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_TRANSIENT;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // access_item ::= VOLATILE
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_VOLATILE;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // access_item ::= SYNCHRONIZED
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_SYNCHRONIZED;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // access_item ::= FINAL
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_FINAL;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // access_item ::= STATIC
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_STATIC;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // access_item ::= PROTECTED
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_PROTECTED;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // access_item ::= PRIVATE
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_PRIVATE;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // access_item ::= PUBLIC
            {
              Object RESULT = null;
		 access_val |= RuntimeConstants.ACC_PUBLIC;
              CUP$parser$result = new java_cup.runtime.Symbol(6/*access_item*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // access_items ::= access_item
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*access_items*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // access_items ::= access_items access_item
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*access_items*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // access_list ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*access_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // access_list ::= access_items
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*access_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // access ::= NT$0 access_list
            {
              Short RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Short) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 RESULT = new Short(access_val);
              CUP$parser$result = new java_cup.runtime.Symbol(88/*access*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // NT$0 ::=
            {
              Object RESULT = null;
 access_val = 0;
              CUP$parser$result = new java_cup.runtime.Symbol(89/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Word_plus_keywords ::= DEFAULT
            {
              String RESULT = null;
		 RESULT = "default";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Word_plus_keywords ::= TABLESWITCH
            {
              String RESULT = null;
		 RESULT = "tableswitch";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Word_plus_keywords ::= LOOKUPSWITCH
            {
              String RESULT = null;
		 RESULT = "lookupswitch";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Word_plus_keywords ::= METHOD
            {
              String RESULT = null;
		 RESULT = "method";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Word_plus_keywords ::= IS
            {
              String RESULT = null;
		 RESULT = "is";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Word_plus_keywords ::= USING
            {
              String RESULT = null;
		 RESULT = "using";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Word_plus_keywords ::= TO
            {
              String RESULT = null;
		 RESULT = "to";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Word_plus_keywords ::= FROM
            {
              String RESULT = null;
		 RESULT = "from";
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Word_plus_keywords ::= Word
            {
              String RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT = ScannerUtils.convertDots(w);
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Word_plus_keywords*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // class_spec ::= DINTERFACE access Word_plus_keywords SEP
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.setClass(name,
                (short)(a.intValue() |
                        RuntimeConstants.ACC_INTERFACE));

              CUP$parser$result = new java_cup.runtime.Symbol(10/*class_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // class_spec ::= DCLASS access Word_plus_keywords SEP
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Short a = (Short)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

            classFile.setClass(name,
                (short)(a.intValue() | RuntimeConstants.ACC_SUPER));

              CUP$parser$result = new java_cup.runtime.Symbol(10/*class_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // source_spec ::=
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(36/*source_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // source_spec ::= DSOURCE Word SEP
            {
              Object RESULT = null;
		int wleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		 classFile.setSource(w);
              CUP$parser$result = new java_cup.runtime.Symbol(36/*source_spec*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= jas_file EOF
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // jas_file ::= source_spec class_spec super_spec impls class_attrs synth_attr inner_class_attr encl_meth_attr class_depr_attr class_sig_attr class_annotation_attr fields methods
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(22/*jas_file*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

