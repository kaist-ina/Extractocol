<com.github.kevinsawicki.http.HttpRequest: com.github.kevinsawicki.http.HttpRequest get(java.lang.CharSequence)> -> _SOURCE_
<com.github.kevinsawicki.http.HttpRequest: com.github.kevinsawicki.http.HttpRequest post(java.lang.CharSequence)> -> _SOURCE_
<com.squareup.okhttp.Call: com.squareup.okhttp.Response execute()> -> _SOURCE_
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)> -> _SOURCE_
<java.net.URL: java.net.URLConnection openConnection()> -> _SOURCE_
<com.android.volley.RequestQueue: com.android.volley.Request add(com.android.volley.Request)> -> _SOURCE_
<com.squareup.okhttp.Call: void enqueue(com.squareup.okhttp.Callback)> -> _SOURCE_
<com.squareup.okhttp.OkHttpClient: java.net.HttpURLConnection open(java.net.URL)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SOURCE_
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SOURCE_
<com.airbnb.android.net.retrofit.RetrofitUtils: retrofit.ObservableRequest newRequest(retrofit.Retrofit,com.airbnb.android.requests.base.AirRequest)>
<retrofit.ObservableRequest$Builder: retrofit.ObservableRequest build()> -> _SOURCE_
<com.airbnb.android.net.retrofit.RetrofitUtils: retrofit.ObservableRequest newRequest(retrofit.Retrofit,com.airbnb.android.requests.base.AirRequest)> -> _SOURCE_
<com.android.volley.toolbox.RequestFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<retrofit.RestAdapter$Builder: retrofit.RestAdapter build()> -> _SOURCE_