public abstract class java.util.AbstractCollection extends java.lang.Object implements java.util.Collection
{

    protected void <init>()
    {
        java.util.AbstractCollection r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.AbstractCollection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean add(java.lang.Object)
    {
        java.util.AbstractCollection r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.AbstractCollection r0;
        java.util.Collection r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void clear()
    {
        java.util.AbstractCollection r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.AbstractCollection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.AbstractCollection r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.AbstractCollection r0;
        java.util.Collection r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean isEmpty()
    {
        java.util.AbstractCollection r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.AbstractCollection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.util.Iterator iterator();

    public boolean remove(java.lang.Object)
    {
        java.util.AbstractCollection r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.AbstractCollection r0;
        java.util.Collection r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.AbstractCollection r0;
        java.util.Collection r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract int size();

    public java.lang.Object[] toArray()
    {
        java.util.AbstractCollection r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.AbstractCollection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.AbstractCollection r0;
        java.lang.Object[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.AbstractCollection;

        r1 := @parameter0: java.lang.Object[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String toString()
    {
        java.util.AbstractCollection r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.AbstractCollection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
