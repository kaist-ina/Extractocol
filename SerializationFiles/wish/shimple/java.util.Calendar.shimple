public abstract class java.util.Calendar extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable, java.lang.Comparable
{
    public static final int ALL_STYLES;
    public static final int AM;
    public static final int AM_PM;
    public static final int APRIL;
    public static final int AUGUST;
    public static final int DATE;
    public static final int DAY_OF_MONTH;
    public static final int DAY_OF_WEEK;
    public static final int DAY_OF_WEEK_IN_MONTH;
    public static final int DAY_OF_YEAR;
    public static final int DECEMBER;
    public static final int DST_OFFSET;
    public static final int ERA;
    public static final int FEBRUARY;
    public static final int FIELD_COUNT;
    public static final int FRIDAY;
    public static final int HOUR;
    public static final int HOUR_OF_DAY;
    public static final int JANUARY;
    public static final int JULY;
    public static final int JUNE;
    public static final int LONG;
    public static final int MARCH;
    public static final int MAY;
    public static final int MILLISECOND;
    public static final int MINUTE;
    public static final int MONDAY;
    public static final int MONTH;
    public static final int NOVEMBER;
    public static final int OCTOBER;
    public static final int PM;
    public static final int SATURDAY;
    public static final int SECOND;
    public static final int SEPTEMBER;
    public static final int SHORT;
    public static final int SUNDAY;
    public static final int THURSDAY;
    public static final int TUESDAY;
    public static final int UNDECIMBER;
    public static final int WEDNESDAY;
    public static final int WEEK_OF_MONTH;
    public static final int WEEK_OF_YEAR;
    public static final int YEAR;
    public static final int ZONE_OFFSET;
    protected boolean areFieldsSet;
    protected int[] fields;
    protected boolean[] isSet;
    protected boolean isTimeSet;
    protected long time;

    protected void <init>()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Calendar: int[] fields> = null;

        r0.<java.util.Calendar: boolean[] isSet> = null;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void <init>(java.util.TimeZone, java.util.Locale)
    {
        java.util.Calendar r0;
        java.util.TimeZone r1;
        java.util.Locale r2;
        java.lang.RuntimeException $r3;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.util.TimeZone;

        r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Calendar: int[] fields> = null;

        r0.<java.util.Calendar: boolean[] isSet> = null;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public abstract void add(int, int);

    public boolean after(java.lang.Object)
    {
        java.util.Calendar r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean before(java.lang.Object)
    {
        java.util.Calendar r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void clear()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void clear(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object clone()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void complete()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected abstract void computeFields();

    protected abstract void computeTime();

    public boolean equals(java.lang.Object)
    {
        java.util.Calendar r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int get(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getActualMaximum(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getActualMinimum(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static synchronized java.util.Locale[] getAvailableLocales()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public int getFirstDayOfWeek()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract int getGreatestMinimum(int);

    public static synchronized java.util.Calendar getInstance()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static synchronized java.util.Calendar getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Locale;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static synchronized java.util.Calendar getInstance(java.util.TimeZone)
    {
        java.util.TimeZone r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.TimeZone;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static synchronized java.util.Calendar getInstance(java.util.TimeZone, java.util.Locale)
    {
        java.util.TimeZone r0;
        java.util.Locale r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.TimeZone;

        r1 := @parameter1: java.util.Locale;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract int getLeastMaximum(int);

    public abstract int getMaximum(int);

    public int getMinimalDaysInFirstWeek()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract int getMinimum(int);

    public final java.util.Date getTime()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long getTimeInMillis()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.TimeZone getTimeZone()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int hashCode()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected final int internalGet(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isLenient()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isSet(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void roll(int, int)
    {
        java.util.Calendar r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract void roll(int, boolean);

    public void set(int, int)
    {
        java.util.Calendar r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void set(int, int, int)
    {
        java.util.Calendar r0;
        int i0, i1, i2;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void set(int, int, int, int, int)
    {
        java.util.Calendar r0;
        int i0, i1, i2, i3, i4;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void set(int, int, int, int, int, int)
    {
        java.util.Calendar r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setFirstDayOfWeek(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setLenient(boolean)
    {
        java.util.Calendar r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setMinimalDaysInFirstWeek(int)
    {
        java.util.Calendar r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void setTime(java.util.Date)
    {
        java.util.Calendar r0;
        java.util.Date r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.util.Date;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setTimeInMillis(long)
    {
        java.util.Calendar r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        java.util.Calendar r0;
        java.util.TimeZone r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String toString()
    {
        java.util.Calendar r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Calendar;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int compareTo(java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.util.Calendar;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String getDisplayName(int, int, java.util.Locale)
    {
        java.util.Calendar r0;
        int i0, i1;
        java.util.Locale r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.Locale;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.util.Map getDisplayNames(int, int, java.util.Locale)
    {
        java.util.Calendar r0;
        int i0, i1;
        java.util.Locale r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.Calendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.Locale;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.util.Calendar r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.util.Calendar;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Calendar) r1;

        $i0 = virtualinvoke r0.<java.util.Calendar: int compareTo(java.util.Calendar)>($r2);

        return $i0;
    }
}
