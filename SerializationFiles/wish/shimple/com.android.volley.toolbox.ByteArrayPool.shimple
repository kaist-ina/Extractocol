public class com.android.volley.toolbox.ByteArrayPool extends java.lang.Object
{
    protected static final java.util.Comparator BUF_COMPARATOR;
    private java.util.List mBuffersByLastUse;
    private java.util.List mBuffersBySize;
    private int mCurrentSize;
    private final int mSizeLimit;

    static void <clinit>()
    {
        com.android.volley.toolbox.ByteArrayPool$1 $r0;

        $r0 = new com.android.volley.toolbox.ByteArrayPool$1;

        specialinvoke $r0.<com.android.volley.toolbox.ByteArrayPool$1: void <init>()>();

        <com.android.volley.toolbox.ByteArrayPool: java.util.Comparator BUF_COMPARATOR> = $r0;

        return;
    }

    public void <init>(int)
    {
        com.android.volley.toolbox.ByteArrayPool $r0;
        int $i0;
        java.util.LinkedList $r1;
        java.util.ArrayList $r2;

        $r0 := @this: com.android.volley.toolbox.ByteArrayPool;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersByLastUse> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(64);

        $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize> = $r2;

        $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize> = 0;

        $r0.<com.android.volley.toolbox.ByteArrayPool: int mSizeLimit> = $i0;

        return;
    }

    private void trim()
    {
        com.android.volley.toolbox.ByteArrayPool $r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2, $i0_3, $i1_3, $i0_4;
        java.util.List $r3, $r3_1, $r3_2, $r3_3;
        byte[] $r4;

        $r0 := @this: com.android.volley.toolbox.ByteArrayPool;

(0)     entermonitor $r0;

     label1:
        $r3 = Phi($r3 #0, $r3_2 #8);

        $i1 = Phi($i1 #0, $i1_2 #8);

        $i0 = Phi($i0 #0, $i0_3 #8);

(1)     $i0_1 = $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize>;

(2)     $i1_1 = $r0.<com.android.volley.toolbox.ByteArrayPool: int mSizeLimit>;

        if $i0_1 <= $i1_1 goto label4;

(3)     $r3_1 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersByLastUse>;

        $r2 = interfaceinvoke $r3_1.<java.util.List: java.lang.Object remove(int)>(0);

        $r4 = (byte[]) $r2;

(4)     $r3_2 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize>;

        interfaceinvoke $r3_2.<java.util.List: boolean remove(java.lang.Object)>($r4);

(5)     $i0_2 = $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize>;

(6)     $i1_2 = lengthof $r4;

(7)     $i0_3 = $i0_2 - $i1_2;

        $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize> = $i0_3;

     label2:
(8)     goto label1;

     label3:
        $r1 := @caughtexception;

        $r3_3 = Phi($r3 #0, $r3_1 #3, $r3_2 #4);

        $i1_3 = Phi($i1 #0, $i1_1 #2, $i1_2 #6);

        $i0_4 = Phi($i0 #0, $i0_1 #1, $i0_2 #5, $i0_3 #7);

        exitmonitor $r0;

        throw $r1;

     label4:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public byte[] getBuf(int)
    {
        com.android.volley.toolbox.ByteArrayPool $r0;
        java.lang.Throwable $r1;
        int $i0, $i1, $i2, $i1_1, $i2_1, $i2_2, $i0_1, $i2_3, $i0_2, $i1_2, $i2_4, $i0_3, $i2_5, $i1_3, $i0_4;
        java.util.List $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6;
        java.lang.Object $r3;
        byte[] $r4, $r5, $r5_1, $r5_2, $r5_3, $r5_4;

        $r0 := @this: com.android.volley.toolbox.ByteArrayPool;

        $i0 := @parameter0: int;

        entermonitor $r0;

(0)     $i1 = 0;

     label1:
        $i2 = Phi($i2 #0, $i2_2 #12);

        $i1_1 = Phi($i1 #0, $i1_2 #12);

        $r5 = Phi($r5 #0, $r5_1 #12);

        $r2 = Phi($r2 #0, $r2_2 #12);

(1)     $r2_1 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize>;

(2)     $i2_1 = interfaceinvoke $r2_1.<java.util.List: int size()>();

        if $i1_1 >= $i2_1 goto label4;

(3)     $r2_2 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize>;

        $r3 = interfaceinvoke $r2_2.<java.util.List: java.lang.Object get(int)>($i1_1);

        $r4 = (byte[]) $r3;

(4)     $r5_1 = $r4;

(5)     $i2_2 = lengthof $r4;

        if $i2_2 < $i0 goto label3;

(6)     $i0_1 = $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize>;

(7)     $i2_3 = lengthof $r4;

(8)     $i0_2 = $i0_1 - $i2_3;

        $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize> = $i0_2;

(9)     $r2_3 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize>;

        interfaceinvoke $r2_3.<java.util.List: java.lang.Object remove(int)>($i1_1);

(10)    $r2_4 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersByLastUse>;

(11)    interfaceinvoke $r2_4.<java.util.List: boolean remove(java.lang.Object)>($r4);

     label2:
        $i2_4 = Phi($i2_3 #11, $i2_1 #14);

        $r5_2 = Phi($r5_1 #11, $r5_3 #14);

        $r2_5 = Phi($r2_4 #11, $r2_1 #14);

        $i0_3 = Phi($i0_2 #11, $i0 #14);

        exitmonitor $r0;

        return $r5_2;

     label3:
        $i1_2 = $i1_1 + 1;

(12)    goto label1;

     label4:
(13)    $r5_3 = newarray (byte)[$i0];

     label5:
(14)    goto label2;

     label6:
        $r1 := @caughtexception;

        $i2_5 = Phi($i2 #0, $i2_1 #2, $i2_2 #5, $i2_3 #7);

        $i1_3 = Phi($i1 #0, $i1_2 #12, $i1_1 #1);

        $r5_4 = Phi($r5 #0, $r5_1 #4, $r5_3 #13);

        $r2_6 = Phi($r2 #0, $r2_1 #1, $r2_2 #3, $r2_3 #9, $r2_4 #10);

        $i0_4 = Phi($i0 #0, $i0_1 #6, $i0_2 #8);

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void returnBuf(byte[])
    {
        com.android.volley.toolbox.ByteArrayPool $r0;
        byte[] $r1;
        java.util.Comparator $r2;
        java.lang.Throwable $r3;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2, $i1_3, $i0_3, $i0_4, $i1_4, $i0_5, $i1_5, $i0_6, $i1_6, $i0_7;
        java.util.List $r4, $r4_1, $r4_2, $r4_3, $r4_4;

        $r0 := @this: com.android.volley.toolbox.ByteArrayPool;

        $r1 := @parameter0: byte[];

        entermonitor $r0;

(0)     if $r1 == null goto label3;

     label1:
        $i0 = lengthof $r1;

        $i1 = $r0.<com.android.volley.toolbox.ByteArrayPool: int mSizeLimit>;

     label2:
(1)     if $i0 <= $i1 goto label4;

     label3:
        $r4_3 = Phi($r4 #0, $r4 #1, $r4_2 #12);

        $i1_5 = Phi($i1 #0, $i1 #1, $i1_4 #12);

        $i0_6 = Phi($i0 #0, $i0 #1, $i0_5 #12);

        exitmonitor $r0;

        return;

     label4:
        $r4 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersByLastUse>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

(2)     $r4_1 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize>;

        $r2 = <com.android.volley.toolbox.ByteArrayPool: java.util.Comparator BUF_COMPARATOR>;

(3)     $i0_1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>($r4_1, $r1, $r2);

(4)     $i1_1 = $i0_1;

(5)     if $i0_1 >= 0 goto label5;

(6)     $i0_2 = neg $i0_1;

(7)     $i1_2 = $i0_2 + -1;

     label5:
        $i1_3 = Phi($i1_1 #5, $i1_2 #7);

        $i0_3 = Phi($i0_1 #5, $i0_2 #7);

(8)     $r4_2 = $r0.<com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize>;

        interfaceinvoke $r4_2.<java.util.List: void add(int,java.lang.Object)>($i1_3, $r1);

(9)     $i0_4 = $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize>;

(10)    $i1_4 = lengthof $r1;

(11)    $i0_5 = $i0_4 + $i1_4;

        $r0.<com.android.volley.toolbox.ByteArrayPool: int mCurrentSize> = $i0_5;

        specialinvoke $r0.<com.android.volley.toolbox.ByteArrayPool: void trim()>();

     label6:
(12)    goto label3;

     label7:
        $r3 := @caughtexception;

        $r4_4 = Phi($r4 #0, $r4_1 #2, $r4_2 #8);

        $i1_6 = Phi($i1 #0, $i1_1 #4, $i1_2 #7, $i1_3 #8, $i1_4 #10);

        $i0_7 = Phi($i0 #0, $i0_1 #3, $i0_2 #6, $i0_3 #8, $i0_4 #9, $i0_5 #11);

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }
}
