public class java.util.Collections extends java.lang.Object
{
    public static final java.util.List EMPTY_LIST;
    public static final java.util.Map EMPTY_MAP;
    public static final java.util.Set EMPTY_SET;

    void <init>()
    {
        java.util.Collections r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.Collections;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int binarySearch(java.util.List, java.lang.Object)
    {
        java.util.List r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int binarySearch(java.util.List, java.lang.Object, java.util.Comparator)
    {
        java.util.List r0;
        java.lang.Object r1;
        java.util.Comparator r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.Comparator;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static void copy(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.Enumeration enumeration(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void fill(java.util.List, java.lang.Object)
    {
        java.util.List r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.Object max(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.Object max(java.util.Collection, java.util.Comparator)
    {
        java.util.Collection r0;
        java.util.Comparator r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Comparator;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.Object min(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.Object min(java.util.Collection, java.util.Comparator)
    {
        java.util.Collection r0;
        java.util.Comparator r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Comparator;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.List nCopies(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r0;
        java.lang.RuntimeException $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void reverse(java.util.List)
    {
        java.util.List r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Comparator reverseOrder()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.util.Comparator reverseOrder(java.util.Comparator)
    {
        java.util.Comparator r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Comparator;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void shuffle(java.util.List)
    {
        java.util.List r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void shuffle(java.util.List, java.util.Random)
    {
        java.util.List r0;
        java.util.Random r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Random;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.Set singleton(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.List singletonList(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Map singletonMap(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static void sort(java.util.List)
    {
        java.util.List r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void sort(java.util.List, java.util.Comparator)
    {
        java.util.List r0;
        java.util.Comparator r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Comparator;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static void swap(java.util.List, int, int)
    {
        java.util.List r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static boolean replaceAll(java.util.List, java.lang.Object, java.lang.Object)
    {
        java.util.List r0;
        java.lang.Object r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static void rotate(java.util.List, int)
    {
        java.util.List r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int indexOfSubList(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int lastIndexOfSubList(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.ArrayList list(java.util.Enumeration)
    {
        java.util.Enumeration r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Enumeration;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Collection synchronizedCollection(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.List synchronizedList(java.util.List)
    {
        java.util.List r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Map synchronizedMap(java.util.Map)
    {
        java.util.Map r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Set synchronizedSet(java.util.Set)
    {
        java.util.Set r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.SortedMap synchronizedSortedMap(java.util.SortedMap)
    {
        java.util.SortedMap r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.SortedMap;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)
    {
        java.util.SortedSet r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.SortedSet;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Collection unmodifiableCollection(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.List unmodifiableList(java.util.List)
    {
        java.util.List r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Map unmodifiableMap(java.util.Map)
    {
        java.util.Map r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Set unmodifiableSet(java.util.Set)
    {
        java.util.Set r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)
    {
        java.util.SortedMap r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.SortedMap;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)
    {
        java.util.SortedSet r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.SortedSet;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int frequency(java.util.Collection, java.lang.Object)
    {
        java.util.Collection r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static final java.util.List emptyList()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static final java.util.Set emptySet()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static final java.util.Map emptyMap()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.util.Enumeration emptyEnumeration()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.util.Iterator emptyIterator()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.util.ListIterator emptyListIterator()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.util.Collection checkedCollection(java.util.Collection, java.lang.Class)
    {
        java.util.Collection r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.Map checkedMap(java.util.Map, java.lang.Class, java.lang.Class)
    {
        java.util.Map r0;
        java.lang.Class r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Class;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static java.util.List checkedList(java.util.List, java.lang.Class)
    {
        java.util.List r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.Set checkedSet(java.util.Set, java.lang.Class)
    {
        java.util.Set r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.SortedMap checkedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class)
    {
        java.util.SortedMap r0;
        java.lang.Class r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.util.SortedMap;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Class;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static java.util.SortedSet checkedSortedSet(java.util.SortedSet, java.lang.Class)
    {
        java.util.SortedSet r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static transient boolean addAll(java.util.Collection, java.lang.Object[])
    {
        java.util.Collection r0;
        java.lang.Object[] r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.lang.Object[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean disjoint(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.Set newSetFromMap(java.util.Map)
    {
        java.util.Map r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Map;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.Queue asLifoQueue(java.util.Deque)
    {
        java.util.Deque r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Deque;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    static void <clinit>()
    {
        <java.util.Collections: java.util.List EMPTY_LIST> = null;

        <java.util.Collections: java.util.Map EMPTY_MAP> = null;

        <java.util.Collections: java.util.Set EMPTY_SET> = null;

        return;
    }
}
