public class com.contextlogic.wish.ui.components.image.CachedImageView extends android.widget.FrameLayout implements com.contextlogic.wish.cache.CachedImageFetcherCallback
{
    private static final int MAX_ATTEMPTS;
    private int actualImageHeight;
    private int actualImageWidth;
    private boolean animationEnabled;
    private int attempts;
    private int backgroundColor;
    private boolean circularCrop;
    private android.view.animation.AlphaAnimation fadeAnimation;
    private boolean forceAnimation;
    private boolean forceNoImageResize;
    private boolean imageErrored;
    private com.contextlogic.wish.cache.CachedImageFetcher imageFetcher;
    private boolean imageLoaded;
    private boolean imageLoading;
    private boolean imageReleased;
    private android.widget.ImageView imageView;
    private com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener;
    private long requestTime;
    private int requestedImageHeight;
    private int requestedImageWidth;
    private com.contextlogic.wish.analytics.WishAnalyticsEvent touchImageViewZoomEvent;
    private boolean touchImageViewZoomTracked;
    private java.lang.String url;
    private boolean useDynamicScaling;

    public void <init>(android.content.Context)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.content.Context $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void init()>();

        return;
    }

    static void access$000(com.contextlogic.wish.ui.components.image.CachedImageView, boolean)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean $z0;

        $r0 := @parameter0: com.contextlogic.wish.ui.components.image.CachedImageView;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void trackTouchImageViewMove(boolean)>($z0);

        return;
    }

    static com.contextlogic.wish.ui.components.image.CachedImageView$Listener access$100(com.contextlogic.wish.ui.components.image.CachedImageView)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        com.contextlogic.wish.ui.components.image.CachedImageView$Listener r1;

        $r0 := @parameter0: com.contextlogic.wish.ui.components.image.CachedImageView;

        r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

        return r1;
    }

    private void cancelRequest()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        com.contextlogic.wish.cache.CachedImageFetcher $r1, $r1_1, $r1_2;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

        virtualinvoke $r1_1.<com.contextlogic.wish.cache.CachedImageFetcher: void cancel()>();

(1)     $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher> = null;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoading> = 0;

        return;
    }

    private void init()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        com.contextlogic.wish.ui.components.image.SafeTouchImageView $r1;
        com.contextlogic.wish.ui.components.image.CachedImageView$1 $r2;
        android.widget.FrameLayout$LayoutParams $r3;
        android.widget.ImageView$ScaleType $r4;
        com.contextlogic.wish.ui.components.image.CachedImageView$2 $r5;
        com.contextlogic.wish.ui.components.image.SafeImageView $r6;
        android.content.res.Resources $r7;
        int $i0;
        boolean $z0;
        android.content.Context $r8, $r8_1, $r8_2;
        android.widget.ImageView $r9, $r9_1, $r9_2, $r9_3;
        android.view.animation.AlphaAnimation $r10, $r10_1, $r10_2, $r10_3;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean useDynamicScaling> = 0;

        $r7 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r7.<android.content.res.Resources: int getColor(int)>(2131493117);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int backgroundColor> = $i0;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean shouldSupportTouch()>();

        if $z0 == 0 goto label2;

        $r1 = new com.contextlogic.wish.ui.components.image.SafeTouchImageView;

        $r8 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        specialinvoke $r1.<com.contextlogic.wish.ui.components.image.SafeTouchImageView: void <init>(android.content.Context)>($r8);

        $r2 = new com.contextlogic.wish.ui.components.image.CachedImageView$1;

        specialinvoke $r2.<com.contextlogic.wish.ui.components.image.CachedImageView$1: void <init>(com.contextlogic.wish.ui.components.image.CachedImageView,com.contextlogic.wish.ui.components.image.SafeTouchImageView)>($r0, $r1);

        virtualinvoke $r1.<com.contextlogic.wish.ui.components.image.SafeTouchImageView: void setOnTouchImageViewListener(com.ortiz.touch.TouchImageView$OnTouchImageViewListener)>($r2);

(0)     $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView> = $r1;

     label1:
        $r8_1 = Phi($r8 #0, $r8_2 #1);

        $r9 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r9.<android.widget.ImageView: void setDrawingCacheEnabled(boolean)>(0);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void setAnimationCacheEnabled(boolean)>(0);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void setDrawingCacheEnabled(boolean)>(0);

        $r9_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r9_1.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        $r9_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void addView(android.view.View)>($r9_2);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth> = -1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight> = -1;

        $r9_3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r4 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        virtualinvoke $r9_3.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r4);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean animationEnabled> = 1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: long requestTime> = -1L;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean forceAnimation> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean touchImageViewZoomTracked> = 0;

        $r10 = new android.view.animation.AlphaAnimation;

        specialinvoke $r10.<android.view.animation.AlphaAnimation: void <init>(float,float)>(0.0F, 1.0F);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.view.animation.AlphaAnimation fadeAnimation> = $r10;

        $r10_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.view.animation.AlphaAnimation fadeAnimation>;

        virtualinvoke $r10_1.<android.view.animation.AlphaAnimation: void setDuration(long)>(250L);

        $r10_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.view.animation.AlphaAnimation fadeAnimation>;

        virtualinvoke $r10_2.<android.view.animation.AlphaAnimation: void setFillBefore(boolean)>(1);

        $r10_3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.view.animation.AlphaAnimation fadeAnimation>;

        $r5 = new com.contextlogic.wish.ui.components.image.CachedImageView$2;

        specialinvoke $r5.<com.contextlogic.wish.ui.components.image.CachedImageView$2: void <init>(com.contextlogic.wish.ui.components.image.CachedImageView)>($r0);

        virtualinvoke $r10_3.<android.view.animation.AlphaAnimation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r5);

        return;

     label2:
        $r6 = new com.contextlogic.wish.ui.components.image.SafeImageView;

        $r8_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        specialinvoke $r6.<com.contextlogic.wish.ui.components.image.SafeImageView: void <init>(android.content.Context)>($r8_2);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView> = $r6;

(1)     goto label1;
    }

    private void requestImage()
    {
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10;
        boolean $z0;
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        java.lang.String $r1, $r1_1, $r1_2;
        com.contextlogic.wish.cache.TransientCache $r2;
        android.graphics.Bitmap $r3;
        long $l2;
        com.contextlogic.wish.ui.components.image.CachedImageView$Listener $r4, $r4_1, $r4_2;
        com.contextlogic.wish.cache.CachedImageFetcher $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;
        byte $b3, $b3_1, $b3_2, $b3_3;
        android.widget.ImageView $r6, $r6_1, $r6_2;
        android.widget.ImageView$ScaleType $r7, $r8, $r8_1, $r7_1, $r7_2, $r8_2;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void cancelRequest()>();

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageReleased> = 0;

        $r2 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        $i1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

        $i0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        $r3 = virtualinvoke $r2.<com.contextlogic.wish.cache.TransientCache: android.graphics.Bitmap getCachedImage(java.lang.String,int,int)>($r1_1, $i1, $i0);

        if $r3 == null goto label2;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void onImageLoaded(java.lang.Object,android.graphics.Bitmap)>(null, $r3);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void unlockImageFromCache()>();

        return;

     label2:
        $i0_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int attempts>;

        if $i0_1 != 0 goto label3;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: long requestTime> = $l2;

     label3:
        $r4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(0)     if $r4 == null goto label4;

        $i0_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int attempts>;

(1)     if $i0_2 != 0 goto label4;

        $r4_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(2)     interfaceinvoke $r4_1.<com.contextlogic.wish.ui.components.image.CachedImageView$Listener: void onImageRequested()>();

     label4:
        $i0_3 = Phi($i0_1 #0, $i0_2 #1, $i0_2 #2);

        $r4_2 = Phi($r4 #0, $r4 #1, $r4_1 #2);

        $i0_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int attempts>;

        $i0_5 = $i0_4 + 1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int attempts> = $i0_5;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoading> = 1;

        $r5 = new com.contextlogic.wish.cache.CachedImageFetcher;

        specialinvoke $r5.<com.contextlogic.wish.cache.CachedImageFetcher: void <init>(com.contextlogic.wish.cache.CachedImageFetcherCallback)>($r0);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher> = $r5;

        $r5_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

        $z0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean useDynamicScaling>;

        virtualinvoke $r5_1.<com.contextlogic.wish.cache.CachedImageFetcher: void setUseDynamicScaling(boolean)>($z0);

        $r5_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

        $i0_6 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

        virtualinvoke $r5_2.<com.contextlogic.wish.cache.CachedImageFetcher: void setRequestedImageWidth(int)>($i0_6);

        $r5_3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

        $i0_7 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        virtualinvoke $r5_3.<com.contextlogic.wish.cache.CachedImageFetcher: void setRequestedImageHeight(int)>($i0_7);

        $b3 = -1;

        $r6 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r7 = virtualinvoke $r6.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r8 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        if $r7 != $r8 goto label6;

(3)     $b3_1 = 0;

     label5:
        $b3_2 = Phi($b3_1 #3, $b3 #4, $b3 #5, $b3 #6, $b3_3 #7);

        $i0_8 = Phi($i0_7 #3, $i0_7 #4, $i0_9 #5, $i0_10 #6, $i0_10 #7);

        $r8_1 = Phi($r8 #3, $r8_2 #4, $r8_2 #5, $r8_2 #6, $r8_2 #7);

        $r7_1 = Phi($r7 #3, $r7_2 #4, $r7_2 #5, $r7_2 #6, $r7_2 #7);

        $r6_1 = Phi($r6 #3, $r6_2 #4, $r6_2 #5, $r6_2 #6, $r6_2 #7);

        $r5_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

        virtualinvoke $r5_4.<com.contextlogic.wish.cache.CachedImageFetcher: void setMode(int)>($b3_2);

        $r5_5 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

        $r1_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        virtualinvoke $r5_5.<com.contextlogic.wish.cache.CachedImageFetcher: void fetchImage(java.lang.String,java.lang.Object)>($r1_2, null);

        return;

     label6:
        $r6_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r7_2 = virtualinvoke $r6_2.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r8_2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

(4)     if $r7_2 != $r8_2 goto label5;

        $i0_9 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

(5)     if $i0_9 <= 0 goto label5;

        $i0_10 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

(6)     if $i0_10 <= 0 goto label5;

        $b3_3 = 1;

(7)     goto label5;
    }

    private void trackTouchImageViewMove(boolean)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean $z0, $z1;
        com.contextlogic.wish.api.service.LogService $r1;
        com.contextlogic.wish.analytics.WishAnalyticsEvent $r2, $r2_1, $r2_2;
        int $i0;
        java.lang.String $r3;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean touchImageViewZoomTracked>;

(0)     if $z1 != 0 goto label1;

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.analytics.WishAnalyticsEvent touchImageViewZoomEvent>;

(1)     if $r2 == null goto label1;

(2)     if $z0 == 0 goto label1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean touchImageViewZoomTracked> = 1;

        $r1 = new com.contextlogic.wish.api.service.LogService;

        specialinvoke $r1.<com.contextlogic.wish.api.service.LogService: void <init>()>();

        $r2_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.analytics.WishAnalyticsEvent touchImageViewZoomEvent>;

        $i0 = virtualinvoke $r2_1.<com.contextlogic.wish.analytics.WishAnalyticsEvent: int getValue()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

(3)     virtualinvoke $r1.<com.contextlogic.wish.api.service.LogService: void requestService(java.lang.String,java.lang.String,com.contextlogic.wish.api.service.LogService$SuccessCallback,com.contextlogic.wish.api.service.ApiService$FailureCallback)>($r3, null, null, null);

     label1:
        $r2_2 = Phi($r2 #0, $r2 #1, $r2 #2, $r2_1 #3);

        return;
    }

    public int getActualImageHeight()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int i0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        i0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int actualImageHeight>;

        return i0;
    }

    public int getActualImageWidth()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int i0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        i0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int actualImageWidth>;

        return i0;
    }

    public java.lang.String getImageUrl()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        java.lang.String r1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        return r1;
    }

    public boolean isImageErrored()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean z0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        z0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored>;

        return z0;
    }

    public boolean isImageLoaded()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean z0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        z0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded>;

        return z0;
    }

    public void lockImageInCache()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.widget.ImageView $r1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        android.graphics.drawable.Drawable $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        android.graphics.drawable.BitmapDrawable $r5;
        android.graphics.Bitmap $r6;
        com.contextlogic.wish.cache.TransientCache $r7, $r7_1, $r7_2, $r7_3;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2, $i0_3, $i1_3;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

(0)     if $r3 == null goto label10;

     label01:
        $r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r4 = virtualinvoke $r1.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

     label02:
(1)     if $r4 == null goto label10;

     label03:
        $z0 = $r4 instanceof android.graphics.drawable.BitmapDrawable;

     label04:
(2)     if $z0 == 0 goto label10;

     label05:
        $r5 = (android.graphics.drawable.BitmapDrawable) $r4;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

(3)     $z0_1 = virtualinvoke $r6.<android.graphics.Bitmap: boolean isRecycled()>();

     label06:
(4)     if $z0_1 != 0 goto label10;

     label07:
        $r7 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

(5)     $r3_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        $i0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

        $i1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        virtualinvoke $r7.<com.contextlogic.wish.cache.TransientCache: void cacheImage(java.lang.String,android.graphics.Bitmap,int,int)>($r3_1, $r6, $i0, $i1);

(6)     $r7_1 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

(7)     $r3_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

(8)     $i0_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

(9)     $i1_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        virtualinvoke $r7_1.<com.contextlogic.wish.cache.TransientCache: void lockCachedImage(java.lang.String,int,int)>($r3_2, $i0_1, $i1_1);

     label08:
        return;

     label09:
        $r2 := @caughtexception;

        $r3_3 = Phi($r3 #0, $r3_1 #5, $r3_2 #7);

        $r7_2 = Phi($r7 #0, $r7_1 #6);

        $z0_2 = Phi($z0 #0, $z0_1 #3);

        $i0_2 = Phi($i0 #0, $i0_1 #8);

(10)    $i1_2 = Phi($i1 #0, $i1_1 #9);

     label10:
        $r3_4 = Phi($r3 #0, $r3 #1, $r3 #2, $r3 #4, $r3_3 #10);

        $r7_3 = Phi($r7 #0, $r7 #1, $r7 #2, $r7 #4, $r7_2 #10);

        $z0_3 = Phi($z0 #0, $z0 #1, $z0 #2, $z0_1 #4, $z0_2 #10);

        $i0_3 = Phi($i0 #0, $i0 #1, $i0 #2, $i0 #4, $i0_2 #10);

        $i1_3 = Phi($i1 #0, $i1 #1, $i1 #2, $i1 #4, $i1_2 #10);

        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void onImageLoadFailed(java.lang.Object)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        java.lang.Object $r1;
        int $i0;
        com.contextlogic.wish.ui.components.image.CachedImageView$Listener $r2, $r2_1, $r2_2;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: java.lang.Object;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher> = null;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored> = 1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoading> = 0;

        $i0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int attempts>;

        if $i0 >= 2 goto label1;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void requestImage()>();

        return;

     label1:
        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: long requestTime> = -1L;

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(0)     if $r2 == null goto label2;

        $r2_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(1)     interfaceinvoke $r2_1.<com.contextlogic.wish.ui.components.image.CachedImageView$Listener: void onImageErrored()>();

     label2:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        return;
    }

    public void onImageLoaded(java.lang.Object, android.graphics.Bitmap)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        java.lang.Object $r1;
        android.graphics.Bitmap $r2, $r7;
        java.lang.Exception $r3;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i1_1, $i1_2, $i0_4, $i1_3, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10, $i1_4, $i1_5, $i0_11, $i1_6, $i0_12, $i0_13, $i1_7, $i0_14, $i1_8;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8;
        android.widget.ImageView $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6, $r4_7, $r4_8, $r4_9, $r4_10, $r4_11, $r4_12;
        android.widget.ImageView$ScaleType $r5, $r5_1, $r5_2;
        com.contextlogic.wish.ui.components.image.CachedImageView$Listener $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5;
        android.content.res.Resources $r8, $r8_1, $r8_2, $r8_3;
        com.contextlogic.wish.cache.TransientCache $r9, $r9_1, $r9_2, $r9_3, $r9_4;
        java.lang.String $r10, $r10_1, $r10_2, $r10_3, $r10_4;
        long $l2, $l4, $l2_1, $l2_2, $l2_3, $l2_4, $l2_5;
        byte $b3, $b3_1, $b3_2, $b3_3, $b3_4;
        android.view.animation.AlphaAnimation $r11;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher> = null;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded> = 1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoading> = 0;

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int actualImageHeight> = $i0;

        $i0_1 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int actualImageWidth> = $i0_1;

        $z0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean useDynamicScaling>;

(0)     if $z0 == 0 goto label01;

(1)     if $r2 == null goto label01;

        $i0_2 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getWidth()>();

(2)     if $i0_2 >= $i1 goto label09;

        $i0_3 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $i1_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getHeight()>();

(3)     if $i0_3 >= $i1_1 goto label09;

        $r4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

(4)     virtualinvoke $r4.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r5);

     label01:
        $r5_2 = Phi($r5 #0, $r5 #1, $r5 #4, $r5_1 #24);

        $i1_3 = Phi($i1 #0, $i1 #1, $i1_1 #4, $i1_2 #24);

        $r4_2 = Phi($r4 #0, $r4 #1, $r4 #4, $r4_1 #24);

        $i0_5 = Phi($i0_1 #0, $i0_1 #1, $i0_3 #4, $i0_4 #24);

        $r6 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(5)     if $r6 == null goto label02;

        $r6_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(6)     interfaceinvoke $r6_1.<com.contextlogic.wish.ui.components.image.CachedImageView$Listener: void onImageLoaded()>();

     label02:
        $r6_2 = Phi($r6 #5, $r6_1 #6);

        $r4_3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $i0_6 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int backgroundColor>;

        virtualinvoke $r4_3.<android.widget.ImageView: void setBackgroundColor(int)>($i0_6);

        $z0_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean circularCrop>;

(7)     if $z0_1 == 0 goto label11;

     label03:
(8)     $i0_7 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getWidth()>();

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getHeight()>();

        $r7 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap getCroppedBitmap(android.graphics.Bitmap,int)>($r2, $i0_7);

(9)     $r4_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r8 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.res.Resources getResources()>();

(10)    $i0_8 = virtualinvoke $r8.<android.content.res.Resources: int getColor(int)>(2131493110);

        virtualinvoke $r4_4.<android.widget.ImageView: void setBackgroundColor(int)>($i0_8);

(11)    $r8_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.res.Resources getResources()>();

(12)    $i0_9 = virtualinvoke $r8_1.<android.content.res.Resources: int getColor(int)>(2131493110);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void setBackgroundColor(int)>($i0_9);

(13)    $r4_5 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r4_5.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r7);

        $r9 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        $r10 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

(14)    $i0_10 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

(15)    $i1_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        virtualinvoke $r9.<com.contextlogic.wish.cache.TransientCache: void cacheImage(java.lang.String,android.graphics.Bitmap,int,int)>($r10, $r7, $i0_10, $i1_4);

(16)    $z0_2 = virtualinvoke $r2.<android.graphics.Bitmap: boolean isRecycled()>();

     label04:
(17)    if $z0_2 != 0 goto label06;

     label05:
(18)    virtualinvoke $r2.<android.graphics.Bitmap: void recycle()>();

     label06:
        $r8_2 = Phi($r8_1 #17, $r8_1 #18, $r8_3 #25, $r8 #26);

        $r9_1 = Phi($r9 #17, $r9 #18, $r9_3 #25, $r9_4 #26);

        $z0_3 = Phi($z0_2 #17, $z0_2 #18, $z0_8 #25, $z0_1 #26);

        $i1_5 = Phi($i1_4 #17, $i1_4 #18, $i1_7 #25, $i1_8 #26);

        $r10_1 = Phi($r10 #17, $r10 #18, $r10_3 #25, $r10_4 #26);

        $r4_6 = Phi($r4_5 #17, $r4_5 #18, $r4_11 #25, $r4_12 #26);

        $i0_11 = Phi($i0_10 #17, $i0_10 #18, $i0_13 #25, $i0_14 #26);

        $r4_7 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r4_7.<android.widget.ImageView: void clearAnimation()>();

        $z0_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean animationEnabled>;

(19)    if $z0_4 == 0 goto label12;

        $z0_5 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean forceAnimation>;

(20)    if $z0_5 != 0 goto label07;

        $l2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: long requestTime>;

        $b3 = $l2 cmp -1L;

(21)    if $b3 == 0 goto label12;

        $l2_1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: long requestTime>;

        $l2_2 = $l2_1 - $l4;

        $b3_1 = $l2_2 cmp 400L;

(22)    if $b3_1 <= 0 goto label12;

     label07:
        $l2_3 = Phi($l2 #20, $l2_2 #22);

        $b3_2 = Phi($b3 #20, $b3_1 #22);

        $r4_8 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r11 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.view.animation.AlphaAnimation fadeAnimation>;

        virtualinvoke $r4_8.<android.widget.ImageView: void startAnimation(android.view.animation.Animation)>($r11);

(23)    virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void invalidate()>();

     label08:
        $r6_3 = Phi($r6_2 #23, $r6_4 #27, $r6_5 #28);

        $z0_6 = Phi($z0_5 #23, $z0_7 #27, $z0_7 #28);

        $l2_4 = Phi($l2_3 #23, $l2_5 #27, $l2_5 #28);

        $b3_3 = Phi($b3_2 #23, $b3_4 #27, $b3_4 #28);

        $r4_9 = Phi($r4_8 #23, $r4_7 #27, $r4_7 #28);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: long requestTime> = -1L;

        return;

     label09:
        $i1_2 = Phi($i1 #2, $i1_1 #3);

        $i0_4 = Phi($i0_2 #2, $i0_3 #3);

        $r4_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r5_1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        virtualinvoke $r4_1.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r5_1);

(24)    goto label01;

     label10:
        $r3 := @caughtexception;

        $r8_3 = Phi($r8 #7, $r8_1 #11);

        $r9_2 = Phi($r9 #7);

        $z0_8 = Phi($z0_1 #7, $z0_2 #16);

        $i1_6 = Phi($i1_3 #7, $i1_4 #15);

        $r10_2 = Phi($r10 #7);

        $r4_10 = Phi($r4_3 #7, $r4_4 #9, $r4_5 #13);

        $i0_12 = Phi($i0_6 #7, $i0_7 #8, $i0_8 #10, $i0_9 #12, $i0_10 #14);

        $r4_11 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r4_11.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r2);

        $r9_3 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        $r10_3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        $i0_13 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

        $i1_7 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        virtualinvoke $r9_3.<com.contextlogic.wish.cache.TransientCache: void cacheImage(java.lang.String,android.graphics.Bitmap,int,int)>($r10_3, $r2, $i0_13, $i1_7);

(25)    goto label06;

     label11:
        $r4_12 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r4_12.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r2);

        $r9_4 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        $r10_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        $i0_14 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

        $i1_8 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        virtualinvoke $r9_4.<com.contextlogic.wish.cache.TransientCache: void cacheImage(java.lang.String,android.graphics.Bitmap,int,int)>($r10_4, $r2, $i0_14, $i1_8);

(26)    goto label06;

     label12:
        $z0_7 = Phi($z0_4 #19, $z0_5 #21, $z0_5 #22);

        $l2_5 = Phi($l2 #19, $l2 #21, $l2_2 #22);

        $b3_4 = Phi($b3 #19, $b3 #21, $b3_1 #22);

        $r6_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(27)    if $r6_4 == null goto label08;

        $r6_5 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

        interfaceinvoke $r6_5.<com.contextlogic.wish.ui.components.image.CachedImageView$Listener: void onImageAnimationComplete()>();

(28)    goto label08;

        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
    }

    protected void onWindowVisibilityChanged(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0;
        java.lang.String $r1;
        com.contextlogic.wish.cache.CachedImageFetcher $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        if $i0 != 8 goto label1;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void cancelRequest()>();

        return;

     label1:
(0)     if $i0 != 0 goto label2;

        $r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

(1)     if $r1 == null goto label2;

        $z0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored>;

(2)     if $z0 != 0 goto label2;

        $z0_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoading>;

(3)     if $z0_1 != 0 goto label2;

        $z0_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded>;

(4)     if $z0_2 != 0 goto label2;

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.cache.CachedImageFetcher imageFetcher>;

(5)     if $r2 != null goto label2;

        $z0_3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageReleased>;

(6)     if $z0_3 != 0 goto label2;

(7)     specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void requestImage()>();

     label2:
        $z0_4 = Phi($z0 #0, $z0 #1, $z0 #2, $z0_1 #3, $z0_2 #4, $z0_2 #5, $z0_3 #6, $z0_3 #7);

        return;
    }

    public void releaseImage()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void releaseImage(boolean)>(1);

        return;
    }

    public void releaseImage(boolean)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean $z0, $z1, $z1_1, $z1_2;
        int $i0, $i1, $i0_1, $i0_2;
        java.lang.String $r1, $r1_1, $r1_2;
        com.contextlogic.wish.ui.components.image.CachedImageView$Listener $r2, $r2_1, $r2_2;
        android.widget.ImageView $r3, $r3_1, $r3_2, $r3_3;
        android.graphics.drawable.Drawable $r4;
        android.graphics.drawable.BitmapDrawable $r5;
        android.graphics.Bitmap $r6;
        android.content.res.Resources $r7;
        com.contextlogic.wish.cache.TransientCache $r8;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $z1 := @parameter0: boolean;

        $r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        if $r1 != null goto label1;

        return;

     label1:
        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void cancelRequest()>();

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(0)     if $r2 == null goto label2;

        $r2_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener>;

(1)     interfaceinvoke $r2_1.<com.contextlogic.wish.ui.components.image.CachedImageView$Listener: void onImageUnloaded()>();

     label2:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageReleased> = 1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded> = 0;

        $r3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r4 = virtualinvoke $r3.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

(2)     if $r4 == null goto label4;

        $z0 = $r4 instanceof android.graphics.drawable.BitmapDrawable;

(3)     if $z0 == 0 goto label4;

        $r5 = (android.graphics.drawable.BitmapDrawable) $r4;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $r3_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r3_1.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(null);

        $r3_2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r7 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r7.<android.content.res.Resources: int getColor(int)>(2131493110);

        virtualinvoke $r3_2.<android.widget.ImageView: void setBackgroundColor(int)>($i0);

        if $z1 == 0 goto label3;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void unlockImageFromCache()>();

     label3:
        $r8 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        $i0_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

        $i1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

        $z1_1 = virtualinvoke $r8.<com.contextlogic.wish.cache.TransientCache: boolean removedCachedImage(java.lang.String,int,int)>($r1_1, $i0_1, $i1);

(4)     if $z1_1 == 0 goto label4;

(5)     if $r6 == null goto label4;

(6)     virtualinvoke $r6.<android.graphics.Bitmap: void recycle()>();

     label4:
        $r3_3 = Phi($r3 #2, $r3 #3, $r3_2 #4, $r3_2 #5, $r3_2 #6);

        $i0_2 = Phi($i0 #2, $i0 #3, $i0_1 #4, $i0_1 #5, $i0_1 #6);

        $z1_2 = Phi($z1 #2, $z1 #3, $z1_1 #4, $z1_1 #5, $z1_1 #6);

        $r1_2 = Phi($r1 #2, $r1 #3, $r1_1 #4, $r1_1 #5, $r1_1 #6);

        return;
    }

    public void restoreImage()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void restoreImage(android.graphics.drawable.Drawable)>(null);

        return;
    }

    public void restoreImage(android.graphics.drawable.Drawable)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.String $r2;
        android.widget.ImageView $r3;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r3.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int attempts> = 0;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void requestImage()>();

        return;
    }

    public void setAnimationEnabled(boolean)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $z0 := @parameter0: boolean;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean animationEnabled> = $z0;

        return;
    }

    public void setCircularCrop(boolean)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean $z0;
        android.content.res.Resources $r1;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $z0 := @parameter0: boolean;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean circularCrop> = $z0;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>(2131493110);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int backgroundColor> = $i0;

     label1:
        return;
    }

    public void setForceAnimation(boolean)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $z0 := @parameter0: boolean;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean forceAnimation> = $z0;

        return;
    }

    public void setImageBitmap(android.graphics.Bitmap)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.graphics.Bitmap $r1, $r5;
        java.lang.Exception $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2, $i0_3, $i1_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8;
        android.widget.ImageView $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7, $r3_8, $r3_9;
        android.widget.ImageView$ScaleType $r4, $r4_1, $r4_2;
        android.content.res.Resources $r6, $r6_1, $r6_2, $r6_3;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: android.graphics.Bitmap;

        $z0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean useDynamicScaling>;

(0)     if $z0 == 0 goto label1;

(1)     if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getWidth()>();

(2)     if $i0 >= $i1 goto label6;

        $i0_1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i1_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getHeight()>();

(3)     if $i0_1 >= $i1_1 goto label6;

        $r3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r4 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

(4)     virtualinvoke $r3.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r4);

     label1:
        $r4_2 = Phi($r4 #0, $r4 #1, $r4 #4, $r4_1 #14);

        $i0_3 = Phi($i0 #0, $i0 #1, $i0_1 #4, $i0_2 #14);

        $i1_3 = Phi($i1 #0, $i1 #1, $i1_1 #4, $i1_2 #14);

        $r3_2 = Phi($r3 #0, $r3 #1, $r3 #4, $r3_1 #14);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url> = null;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored> = 0;

        $r3_3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r3_3.<android.widget.ImageView: void clearAnimation()>();

        $z0_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean circularCrop>;

(5)     if $z0_1 == 0 goto label8;

     label2:
(6)     $i0_4 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getWidth()>();

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int getHeight()>();

        $r5 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap getCroppedBitmap(android.graphics.Bitmap,int)>($r1, $i0_4);

(7)     $r3_4 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r6 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.res.Resources getResources()>();

(8)     $i0_5 = virtualinvoke $r6.<android.content.res.Resources: int getColor(int)>(2131493110);

        virtualinvoke $r3_4.<android.widget.ImageView: void setBackgroundColor(int)>($i0_5);

(9)     $r6_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.res.Resources getResources()>();

(10)    $i0_6 = virtualinvoke $r6_1.<android.content.res.Resources: int getColor(int)>(2131493110);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void setBackgroundColor(int)>($i0_6);

(11)    $r3_5 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r3_5.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r5);

(12)    $z0_2 = virtualinvoke $r1.<android.graphics.Bitmap: boolean isRecycled()>();

     label3:
(13)    if $z0_2 != 0 goto label9;

     label4:
        virtualinvoke $r1.<android.graphics.Bitmap: void recycle()>();

     label5:
        return;

     label6:
        $i0_2 = Phi($i0 #2, $i0_1 #3);

        $i1_2 = Phi($i1 #2, $i1_1 #3);

        $r3_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        $r4_1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        virtualinvoke $r3_1.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r4_1);

(14)    goto label1;

     label7:
        $r2 := @caughtexception;

        $i0_7 = Phi($i0_3 #5, $i0_4 #6, $i0_5 #8, $i0_6 #10);

        $z0_3 = Phi($z0_1 #5, $z0_2 #12);

        $r3_6 = Phi($r3_3 #5, $r3_4 #7, $r3_5 #11);

        $r6_2 = Phi($r6 #5, $r6_1 #9);

        $r3_7 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r3_7.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r1);

        return;

     label8:
        $r3_8 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

(15)    virtualinvoke $r3_8.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r1);

     label9:
        $i0_8 = Phi($i0_6 #13, $i0_3 #15);

        $z0_4 = Phi($z0_2 #13, $z0_1 #15);

        $r3_9 = Phi($r3_5 #13, $r3_8 #15);

        $r6_3 = Phi($r6_1 #13, $r6 #15);

        return;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label4 to label5 with label7;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.graphics.drawable.Drawable $r1;
        android.widget.ImageView $r2, $r2_1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url> = null;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored> = 0;

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r2.<android.widget.ImageView: void clearAnimation()>();

        $r2_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r2_1.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setImageResource(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0;
        android.widget.ImageView $r1, $r1_1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url> = null;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored> = 0;

        $r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r1.<android.widget.ImageView: void clearAnimation()>();

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        staticinvoke <com.contextlogic.wish.util.BitmapUtil: boolean safeSetImageResource(android.widget.ImageView,int)>($r1_1, $i0);

        return;
    }

    public void setImageUrl(java.lang.String)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.widget.ImageView $r1;
        boolean $z0, $z0_1, $z0_2;
        java.lang.String $r2, $r3, $r3_1, $r3_2, $r2_1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r2 := @parameter0: java.lang.String;

(0)     if $r2 == null goto label1;

        $r3 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

(1)     if $r3 == null goto label1;

        $r3_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3_1);

(2)     if $z0 == 0 goto label1;

        $z0_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded>;

(3)     if $z0_1 == 0 goto label1;

        return;

     label1:
        $r3_2 = Phi($r3 #0, $r3 #1, $r3_1 #2, $r3_1 #3);

        $z0_2 = Phi($z0 #0, $z0 #1, $z0 #2, $z0_1 #3);

        $r1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r1.<android.widget.ImageView: void clearAnimation()>();

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void releaseImage(boolean)>(0);

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url> = $r2;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int attempts> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageLoaded> = 0;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean imageErrored> = 0;

        $r2_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        if $r2_1 == null goto label2;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void requestImage()>();

     label2:
        return;
    }

    public void setListener(com.contextlogic.wish.ui.components.image.CachedImageView$Listener)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        com.contextlogic.wish.ui.components.image.CachedImageView$Listener $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: com.contextlogic.wish.ui.components.image.CachedImageView$Listener;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.ui.components.image.CachedImageView$Listener listener> = $r1;

        return;
    }

    public void setLoadedBackgroundColor(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int backgroundColor> = $i0;

        return;
    }

    public void setRequestedImageHeight(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0, $i0_1;
        float $f0, $f0_1;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $f0 = (float) $i0;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0_1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r3);

        $i0_1 = (int) $f0_1;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void setRequestedImageHeightPx(int)>($i0_1);

        return;
    }

    public void setRequestedImageHeightOffset(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0, $i1, $i0_1, $i0_2;
        android.content.Context $r1, $r1_1;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        float $f0, $f0_1;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i1 = virtualinvoke $r4.<android.view.Display: int getHeight()>();

        $f0 = (float) $i0;

        $r1_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r1_1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0_1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r6);

        $i0_1 = (int) $f0_1;

        $i0_2 = $i1 - $i0_1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight> = $i0_2;

        return;
    }

    public void setRequestedImageHeightPercent(float)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        float $f0, $f1, $f1_1, $f1_2;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        int $i0, $i0_1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $f1 := @parameter0: float;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r4.<android.view.Display: int getHeight()>();

        $f0 = (float) $i0;

        $f1_1 = $f1 / 100.0F;

        $f1_2 = $f0 * $f1_1;

        $i0_1 = (int) $f1_2;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight> = $i0_1;

        return;
    }

    public void setRequestedImageHeightPx(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight> = $i0;

        return;
    }

    public void setRequestedImageWidth(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0, $i0_1;
        float $f0, $f0_1;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $f0 = (float) $i0;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0_1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r3);

        $i0_1 = (int) $f0_1;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: void setRequestedImageWidthPx(int)>($i0_1);

        return;
    }

    public void setRequestedImageWidthOffset(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0, $i1, $i0_1, $i0_2;
        android.content.Context $r1, $r1_1;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        float $f0, $f0_1;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i1 = virtualinvoke $r4.<android.view.Display: int getWidth()>();

        $f0 = (float) $i0;

        $r1_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r1_1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0_1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r6);

        $i0_1 = (int) $f0_1;

        $i0_2 = $i1 - $i0_1;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth> = $i0_2;

        return;
    }

    public void setRequestedImageWidthPercent(float)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        float $f0, $f1, $f1_1, $f1_2;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        int $i0, $i0_1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $f1 := @parameter0: float;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r4.<android.view.Display: int getWidth()>();

        $f0 = (float) $i0;

        $f1_1 = $f1 / 100.0F;

        $f1_2 = $f0 * $f1_1;

        $i0_1 = (int) $f1_2;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth> = $i0_1;

        return;
    }

    public void setRequestedImageWidthPx(int)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth> = $i0;

        return;
    }

    public void setScaleType(android.widget.ImageView$ScaleType)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        android.widget.ImageView$ScaleType $r1;
        android.widget.ImageView $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: android.widget.ImageView$ScaleType;

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: android.widget.ImageView imageView>;

        virtualinvoke $r2.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r1);

        return;
    }

    public void setTouchImageViewZoomEvent(com.contextlogic.wish.analytics.WishAnalyticsEvent)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        com.contextlogic.wish.analytics.WishAnalyticsEvent $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r1 := @parameter0: com.contextlogic.wish.analytics.WishAnalyticsEvent;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: com.contextlogic.wish.analytics.WishAnalyticsEvent touchImageViewZoomEvent> = $r1;

        return;
    }

    public void setUseDynamicScaling(boolean)
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $z0 := @parameter0: boolean;

        $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: boolean useDynamicScaling> = $z0;

        return;
    }

    protected boolean shouldSupportTouch()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        return 0;
    }

    public void unlockImageFromCache()
    {
        com.contextlogic.wish.ui.components.image.CachedImageView $r0;
        int $i0, $i1;
        com.contextlogic.wish.cache.TransientCache $r1;
        java.lang.String $r2, $r2_1, $r2_2;

        $r0 := @this: com.contextlogic.wish.ui.components.image.CachedImageView;

        $r2 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

(0)     if $r2 == null goto label1;

        $r1 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        $r2_1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: java.lang.String url>;

        $i0 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageWidth>;

        $i1 = $r0.<com.contextlogic.wish.ui.components.image.CachedImageView: int requestedImageHeight>;

(1)     virtualinvoke $r1.<com.contextlogic.wish.cache.TransientCache: void unlockCachedImage(java.lang.String,int,int)>($r2_1, $i0, $i1);

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        return;
    }
}
