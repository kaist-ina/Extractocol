public class com.contextlogic.wish.util.StateSerializer extends java.lang.Object
{
    public static final java.lang.String FOLLOWER_SERIALIZATION_FILENAME;
    public static final java.lang.String PROFILE_SERIALIZATION_FILENAME;
    public static final java.lang.String SESSION_SERIALIZATION_FILENAME;
    public static final java.lang.String STATUS_SERIALIZATION_FILENAME;
    private static com.contextlogic.wish.util.StateSerializer _instance;
    private java.util.concurrent.ExecutorService cleanupThreadPool;
    private java.util.concurrent.ExecutorService followerSerializerThreadPool;
    private java.util.concurrent.ExecutorService profileSerializerThreadPool;
    private java.util.concurrent.ExecutorService sessionSerializerThreadPool;
    private java.util.concurrent.ExecutorService statusSerializerThreadPool;

    static void <clinit>()
    {
        com.contextlogic.wish.util.StateSerializer $r0;

        $r0 = new com.contextlogic.wish.util.StateSerializer;

        specialinvoke $r0.<com.contextlogic.wish.util.StateSerializer: void <init>()>();

        <com.contextlogic.wish.util.StateSerializer: com.contextlogic.wish.util.StateSerializer _instance> = $r0;

        return;
    }

    private void <init>()
    {
        com.contextlogic.wish.util.StateSerializer $r0;
        com.contextlogic.wish.util.StateSerializer$1 $r1;
        com.contextlogic.wish.util.StateSerializer$2 $r2;
        com.contextlogic.wish.util.StateSerializer$3 $r3;
        com.contextlogic.wish.util.StateSerializer$4 $r4;
        com.contextlogic.wish.util.StateSerializer$5 $r5;
        java.util.concurrent.ExecutorService $r6, $r6_1, $r6_2, $r6_3, $r6_4;

        $r0 := @this: com.contextlogic.wish.util.StateSerializer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new com.contextlogic.wish.util.StateSerializer$1;

        specialinvoke $r1.<com.contextlogic.wish.util.StateSerializer$1: void <init>(com.contextlogic.wish.util.StateSerializer)>($r0);

        $r6 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(1, $r1);

        $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService profileSerializerThreadPool> = $r6;

        $r2 = new com.contextlogic.wish.util.StateSerializer$2;

        specialinvoke $r2.<com.contextlogic.wish.util.StateSerializer$2: void <init>(com.contextlogic.wish.util.StateSerializer)>($r0);

        $r6_1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(1, $r2);

        $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService followerSerializerThreadPool> = $r6_1;

        $r3 = new com.contextlogic.wish.util.StateSerializer$3;

        specialinvoke $r3.<com.contextlogic.wish.util.StateSerializer$3: void <init>(com.contextlogic.wish.util.StateSerializer)>($r0);

        $r6_2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(1, $r3);

        $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService sessionSerializerThreadPool> = $r6_2;

        $r4 = new com.contextlogic.wish.util.StateSerializer$4;

        specialinvoke $r4.<com.contextlogic.wish.util.StateSerializer$4: void <init>(com.contextlogic.wish.util.StateSerializer)>($r0);

        $r6_3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(1, $r4);

        $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService statusSerializerThreadPool> = $r6_3;

        $r5 = new com.contextlogic.wish.util.StateSerializer$5;

        specialinvoke $r5.<com.contextlogic.wish.util.StateSerializer$5: void <init>(com.contextlogic.wish.util.StateSerializer)>($r0);

        $r6_4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(1, $r5);

        $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService cleanupThreadPool> = $r6_4;

        return;
    }

    public static com.contextlogic.wish.util.StateSerializer getInstance()
    {
        com.contextlogic.wish.util.StateSerializer r0;

        r0 = <com.contextlogic.wish.util.StateSerializer: com.contextlogic.wish.util.StateSerializer _instance>;

        return r0;
    }

    public void deleteAllSerializedState()
    {
        com.contextlogic.wish.util.StateSerializer $r0;
        java.util.concurrent.ExecutorService $r1;
        com.contextlogic.wish.util.StateSerializer$6 $r2;

        $r0 := @this: com.contextlogic.wish.util.StateSerializer;

        $r1 = $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService cleanupThreadPool>;

        $r2 = new com.contextlogic.wish.util.StateSerializer$6;

        specialinvoke $r2.<com.contextlogic.wish.util.StateSerializer$6: void <init>(com.contextlogic.wish.util.StateSerializer)>($r0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void deleteAllSerializedStateSync()
    {
        com.contextlogic.wish.util.StateSerializer $r0;
        java.lang.Throwable $r1, $r2, $r3, $r4;
        com.contextlogic.wish.WishApplication $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8, $r5_9, $r5_10;

(0)     $r0 := @this: com.contextlogic.wish.util.StateSerializer;

     label1:
        $r5 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

(1)     virtualinvoke $r5.<com.contextlogic.wish.WishApplication: boolean deleteFile(java.lang.String)>("serialized_session");

     label2:
        $r5_1 = Phi($r5 #1, $r5_10 #9);

(2)     $r5_2 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

(3)     virtualinvoke $r5_2.<com.contextlogic.wish.WishApplication: boolean deleteFile(java.lang.String)>("serialized_profile");

     label3:
        $r5_3 = Phi($r5_2 #3, $r5_9 #8);

(4)     $r5_4 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

(5)     virtualinvoke $r5_4.<com.contextlogic.wish.WishApplication: boolean deleteFile(java.lang.String)>("serialized_following");

     label4:
        $r5_5 = Phi($r5_4 #5, $r5_8 #7);

(6)     $r5_6 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

        virtualinvoke $r5_6.<com.contextlogic.wish.WishApplication: boolean deleteFile(java.lang.String)>("serialized_status");

     label5:
        return;

     label6:
        $r1 := @caughtexception;

        $r5_7 = Phi($r5_4 #5, $r5_8 #7, $r5_6 #6);

        return;

     label7:
        $r2 := @caughtexception;

        $r5_8 = Phi($r5_2 #3, $r5_9 #8, $r5_4 #4);

(7)     goto label4;

     label8:
        $r3 := @caughtexception;

        $r5_9 = Phi($r5 #1, $r5_10 #9, $r5_2 #2);

(8)     goto label3;

     label9:
        $r4 := @caughtexception;

        $r5_10 = Phi($r5 #0);

(9)     goto label2;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void deleteSerializedSessionState()
    {
        com.contextlogic.wish.util.StateSerializer $r0;
        java.util.concurrent.ExecutorService $r1;
        com.contextlogic.wish.util.StateSerializer$7 $r2;

        $r0 := @this: com.contextlogic.wish.util.StateSerializer;

        $r1 = $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService cleanupThreadPool>;

        $r2 = new com.contextlogic.wish.util.StateSerializer$7;

        specialinvoke $r2.<com.contextlogic.wish.util.StateSerializer$7: void <init>(com.contextlogic.wish.util.StateSerializer)>($r0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public java.util.concurrent.ExecutorService getThreadPool(com.contextlogic.wish.util.StateSerializer$SerializationType)
    {
        com.contextlogic.wish.util.StateSerializer $r0;
        com.contextlogic.wish.util.StateSerializer$SerializationType $r1;
        int[] $r2;
        int $i0, $i0_1;
        java.util.concurrent.ExecutorService r3, r3_1, r3_2, r3_3;

        $r0 := @this: com.contextlogic.wish.util.StateSerializer;

        $r1 := @parameter0: com.contextlogic.wish.util.StateSerializer$SerializationType;

        $r2 = <com.contextlogic.wish.util.StateSerializer$8: int[] $SwitchMap$com$contextlogic$wish$util$StateSerializer$SerializationType>;

        $i0 = virtualinvoke $r1.<com.contextlogic.wish.util.StateSerializer$SerializationType: int ordinal()>();

        $i0_1 = $r2[$i0];

        lookupswitch($i0_1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        goto label2;

     label2:
        return null;

     label3:
        r3 = $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService profileSerializerThreadPool>;

        return r3;

     label4:
        r3_1 = $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService followerSerializerThreadPool>;

        return r3_1;

     label5:
        r3_2 = $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService sessionSerializerThreadPool>;

        return r3_2;

     label6:
        r3_3 = $r0.<com.contextlogic.wish.util.StateSerializer: java.util.concurrent.ExecutorService statusSerializerThreadPool>;

        return r3_3;
    }
}
