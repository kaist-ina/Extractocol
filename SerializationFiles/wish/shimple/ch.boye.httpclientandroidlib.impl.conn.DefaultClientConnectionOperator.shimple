public class ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator extends java.lang.Object implements ch.boye.httpclientandroidlib.conn.ClientConnectionOperator
{
    protected final ch.boye.httpclientandroidlib.conn.DnsResolver dnsResolver;
    public ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log;
    protected final ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry;

    public void <init>(ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry)
    {
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator $r0;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r1;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r2;
        java.lang.IllegalArgumentException $r3;
        ch.boye.httpclientandroidlib.impl.conn.SystemDefaultDnsResolver $r4;
        java.lang.Class $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog;

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r2.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void <init>(java.lang.Object)>($r5);

        $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log> = $r2;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme registry amy not be null");

        throw $r3;

     label1:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry> = $r1;

        $r4 = new ch.boye.httpclientandroidlib.impl.conn.SystemDefaultDnsResolver;

        specialinvoke $r4.<ch.boye.httpclientandroidlib.impl.conn.SystemDefaultDnsResolver: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.conn.DnsResolver dnsResolver> = $r4;

        return;
    }

    public void <init>(ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry, ch.boye.httpclientandroidlib.conn.DnsResolver)
    {
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator $r0;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r1;
        ch.boye.httpclientandroidlib.conn.DnsResolver $r2;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r3;
        java.lang.Class $r4;
        java.lang.IllegalArgumentException $r5, $r5_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.conn.DnsResolver;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog;

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r3.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void <init>(java.lang.Object)>($r4);

        $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log> = $r3;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme registry may not be null");

        throw $r5;

     label1:
        if $r2 != null goto label2;

        $r5_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r5_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DNS resolver may not be null");

        throw $r5_1;

     label2:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry> = $r1;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.conn.DnsResolver dnsResolver> = $r2;

        return;
    }

    public ch.boye.httpclientandroidlib.conn.OperatedClientConnection createConnection()
    {
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator $r0;
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnection $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator;

        $r1 = new ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnection;

        specialinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnection: void <init>()>();

        return $r1;
    }

    public void openConnection(ch.boye.httpclientandroidlib.conn.OperatedClientConnection, ch.boye.httpclientandroidlib.HttpHost, java.net.InetAddress, ch.boye.httpclientandroidlib.protocol.HttpContext, ch.boye.httpclientandroidlib.params.HttpParams) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator $r0;
        ch.boye.httpclientandroidlib.conn.OperatedClientConnection $r1;
        ch.boye.httpclientandroidlib.HttpHost $r2;
        java.net.InetAddress $r3, $r8;
        ch.boye.httpclientandroidlib.protocol.HttpContext $r4;
        ch.boye.httpclientandroidlib.params.HttpParams $r5;
        java.lang.IllegalStateException $r6;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r7;
        ch.boye.httpclientandroidlib.conn.HttpInetSocketAddress $r9;
        java.net.ConnectException $r10;
        ch.boye.httpclientandroidlib.conn.HttpHostConnectException $r11;
        ch.boye.httpclientandroidlib.conn.ConnectTimeoutException $r12;
        java.lang.IllegalArgumentException $r13, $r13_1, $r13_2;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3, $z1_1, $z1_2, $z1_3, $z1_4, $z1_5, $z0_4, $z0_5;
        java.lang.String $r14, $r14_1, $r14_2, $r14_3, $r14_4, $r14_5, $r14_6, $r14_7, $r14_8, $r14_9;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r15;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory $r16;
        java.net.InetAddress[] $r17;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i2_1, $i2_2, $i2_3, $i1_2;
        java.net.Socket $r18, $r19, $r23, $r19_1, $r19_2, $r19_3, $r19_4, $r19_5, $r19_6;
        java.net.InetSocketAddress $r20, $r20_1, $r20_2, $r20_3;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r21, $r21_1, $r21_2, $r21_3, $r21_4, $r21_5, $r21_6, $r21_7, $r21_8, $r21_9;
        java.lang.StringBuilder $r22, $r22_1, $r22_2, $r22_3, $r22_4, $r22_5, $r22_6, $r22_7, $r22_8, $r22_9, $r22_10, $r22_11, $r22_12, $r22_13;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.OperatedClientConnection;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpHost;

        $r3 := @parameter2: java.net.InetAddress;

        $r4 := @parameter3: ch.boye.httpclientandroidlib.protocol.HttpContext;

        $r5 := @parameter4: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r1 != null goto label01;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null");

        throw $r13;

     label01:
        if $r2 != null goto label02;

        $r13_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r13_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host may not be null");

        throw $r13_1;

     label02:
        if $r5 != null goto label03;

        $r13_2 = new java.lang.IllegalArgumentException;

        specialinvoke $r13_2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r13_2;

     label03:
        $z0 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 == 0 goto label04;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection must not be open");

        throw $r6;

     label04:
        $r7 = $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry>;

        $r14 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.HttpHost: java.lang.String getSchemeName()>();

        $r15 = virtualinvoke $r7.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme getScheme(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory getSchemeSocketFactory()>();

        $r14_1 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.HttpHost: java.lang.String getHostName()>();

        $r17 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: java.net.InetAddress[] resolveHostname(java.lang.String)>($r14_1);

        $i0 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.HttpHost: int getPort()>();

        $i0_1 = virtualinvoke $r15.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: int resolvePort(int)>($i0);

(0)     $i1 = 0;

     label05:
        $r19 = Phi($r19 #0, $r19_6 #17);

        $r22 = Phi($r22 #0, $r22_13 #17);

        $i2 = Phi($i2 #0, $i2_3 #17);

        $i1_1 = Phi($i1 #0, $i1_2 #17);

        $r14_2 = Phi($r14_1 #0, $r14_9 #17);

        $r20 = Phi($r20 #0, $r20_3 #17);

        $z0_1 = Phi($z0 #0, $z0_4 #17);

        $z1 = Phi($z1 #0, $z1_5 #17);

        $r21 = Phi($r21 #0, $r21_9 #17);

        $i2_1 = lengthof $r17;

        if $i1_1 >= $i2_1 goto label18;

        $r8 = $r17[$i1_1];

        $i2_2 = lengthof $r17;

        $i2_3 = $i2_2 + -1;

        if $i1_1 != $i2_3 goto label13;

(1)     $z0_2 = 1;

     label06:
        $z0_3 = Phi($z0_2 #1, $z0_5 #12);

        $r18 = interfaceinvoke $r16.<ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory: java.net.Socket createSocket(ch.boye.httpclientandroidlib.params.HttpParams)>($r5);

        $r19_1 = $r18;

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: void opening(java.net.Socket,ch.boye.httpclientandroidlib.HttpHost)>($r18, $r2);

        $r9 = new ch.boye.httpclientandroidlib.conn.HttpInetSocketAddress;

        specialinvoke $r9.<ch.boye.httpclientandroidlib.conn.HttpInetSocketAddress: void <init>(ch.boye.httpclientandroidlib.HttpHost,java.net.InetAddress,int)>($r2, $r8, $i0_1);

        $r20_1 = null;

(2)     if $r3 == null goto label07;

        $r20_2 = new java.net.InetSocketAddress;

(3)     specialinvoke $r20_2.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r3, 0);

     label07:
        $r20_3 = Phi($r20_1 #2, $r20_2 #3);

        $r21_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z1_1 = virtualinvoke $r21_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

(4)     if $z1_1 == 0 goto label08;

        $r21_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r22_1 = new java.lang.StringBuilder;

        specialinvoke $r22_1.<java.lang.StringBuilder: void <init>()>();

        $r22_2 = virtualinvoke $r22_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to ");

        $r22_3 = virtualinvoke $r22_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r14_3 = virtualinvoke $r22_3.<java.lang.StringBuilder: java.lang.String toString()>();

(5)     virtualinvoke $r21_2.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r14_3);

     label08:
        $r22_4 = Phi($r22 #4, $r22_3 #5);

        $r14_4 = Phi($r14_2 #4, $r14_3 #5);

        $r21_3 = Phi($r21_1 #4, $r21_2 #5);

(6)     $r23 = interfaceinvoke $r16.<ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,ch.boye.httpclientandroidlib.params.HttpParams)>($r18, $r9, $r20_3, $r5);

     label09:
(7)     if $r18 == $r23 goto label11;

(8)     $r19_2 = $r23;

     label10:
(9)     interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: void opening(java.net.Socket,ch.boye.httpclientandroidlib.HttpHost)>($r23, $r2);

     label11:
        $r19_3 = Phi($r19_1 #7, $r19_2 #9);

(10)    virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams)>($r19_3, $r4, $r5);

(11)    $z1_2 = interfaceinvoke $r16.<ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory: boolean isSecure(java.net.Socket)>($r19_3);

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: void openCompleted(boolean,ch.boye.httpclientandroidlib.params.HttpParams)>($z1_2, $r5);

     label12:
        return;

     label13:
        $z0_5 = 0;

(12)    goto label06;

     label14:
        $r10 := @caughtexception;

        $r19_4 = Phi($r19_1 #4, $r19_2 #8, $r19_3 #10);

        $r22_5 = Phi($r22 #4, $r22_3 #5, $r22_4 #6);

        $r14_5 = Phi($r14_2 #4, $r14_3 #5, $r14_4 #6);

        $z1_3 = Phi($z1_1 #4, $z1_2 #11);

        $r21_4 = Phi($r21_1 #4, $r21_2 #5, $r21_3 #6);

(13)    if $z0_3 == 0 goto label16;

        $r11 = new ch.boye.httpclientandroidlib.conn.HttpHostConnectException;

        specialinvoke $r11.<ch.boye.httpclientandroidlib.conn.HttpHostConnectException: void <init>(ch.boye.httpclientandroidlib.HttpHost,java.net.ConnectException)>($r2, $r10);

        throw $r11;

     label15:
        $r12 := @caughtexception;

        $r19_5 = Phi($r19_1 #4, $r19_2 #8, $r19_3 #10);

        $r22_6 = Phi($r22 #4, $r22_3 #5, $r22_4 #6);

        $r14_6 = Phi($r14_2 #4, $r14_3 #5, $r14_4 #6);

        $z1_4 = Phi($z1_1 #4, $z1_2 #11);

        $r21_5 = Phi($r21_1 #4, $r21_2 #5, $r21_3 #6);

(14)    if $z0_3 == 0 goto label16;

        throw $r12;

     label16:
        $r19_6 = Phi($r19_4 #13, $r19_5 #14);

        $r22_7 = Phi($r22_5 #13, $r22_6 #14);

        $r14_7 = Phi($r14_5 #13, $r14_6 #14);

        $z1_5 = Phi($z1_3 #13, $z1_4 #14);

        $r21_6 = Phi($r21_4 #13, $r21_5 #14);

        $r21_7 = $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z0_4 = virtualinvoke $r21_7.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

(15)    if $z0_4 == 0 goto label17;

        $r21_8 = $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r22_8 = new java.lang.StringBuilder;

        specialinvoke $r22_8.<java.lang.StringBuilder: void <init>()>();

        $r22_9 = virtualinvoke $r22_8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connect to ");

        $r22_10 = virtualinvoke $r22_9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r22_11 = virtualinvoke $r22_10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timed out. ");

        $r22_12 = virtualinvoke $r22_11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection will be retried using another IP address");

        $r14_8 = virtualinvoke $r22_12.<java.lang.StringBuilder: java.lang.String toString()>();

(16)    virtualinvoke $r21_8.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r14_8);

     label17:
        $r22_13 = Phi($r22_7 #15, $r22_12 #16);

        $r14_9 = Phi($r14_7 #15, $r14_8 #16);

        $r21_9 = Phi($r21_7 #15, $r21_8 #16);

        $i1_2 = $i1_1 + 1;

(17)    goto label05;

     label18:
        return;

        catch java.net.ConnectException from label08 to label09 with label14;
        catch ch.boye.httpclientandroidlib.conn.ConnectTimeoutException from label08 to label09 with label15;
        catch java.net.ConnectException from label10 to label12 with label14;
        catch ch.boye.httpclientandroidlib.conn.ConnectTimeoutException from label10 to label12 with label15;
    }

    protected void prepareSocket(java.net.Socket, ch.boye.httpclientandroidlib.protocol.HttpContext, ch.boye.httpclientandroidlib.params.HttpParams) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator $r0;
        java.net.Socket $r1;
        ch.boye.httpclientandroidlib.protocol.HttpContext $r2;
        ch.boye.httpclientandroidlib.params.HttpParams $r3;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        int $i0, $i0_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.protocol.HttpContext;

        $r3 := @parameter2: ch.boye.httpclientandroidlib.params.HttpParams;

        $z0 = staticinvoke <ch.boye.httpclientandroidlib.params.HttpConnectionParams: boolean getTcpNoDelay(ch.boye.httpclientandroidlib.params.HttpParams)>($r3);

        virtualinvoke $r1.<java.net.Socket: void setTcpNoDelay(boolean)>($z0);

        $i0 = staticinvoke <ch.boye.httpclientandroidlib.params.HttpConnectionParams: int getSoTimeout(ch.boye.httpclientandroidlib.params.HttpParams)>($r3);

        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>($i0);

        $i0_1 = staticinvoke <ch.boye.httpclientandroidlib.params.HttpConnectionParams: int getLinger(ch.boye.httpclientandroidlib.params.HttpParams)>($r3);

        if $i0_1 < 0 goto label3;

        if $i0_1 <= 0 goto label2;

(0)     $z0_1 = 1;

     label1:
        $z0_2 = Phi($z0_1 #0, $z0_3 #1);

        virtualinvoke $r1.<java.net.Socket: void setSoLinger(boolean,int)>($z0_2, $i0_1);

        return;

     label2:
        $z0_3 = 0;

(1)     goto label1;

     label3:
        return;
    }

    protected java.net.InetAddress[] resolveHostname(java.lang.String) throws java.net.UnknownHostException
    {
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator $r0;
        java.lang.String $r1;
        ch.boye.httpclientandroidlib.conn.DnsResolver $r2;
        java.net.InetAddress[] $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.conn.DnsResolver dnsResolver>;

        $r3 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.DnsResolver: java.net.InetAddress[] resolve(java.lang.String)>($r1);

        return $r3;
    }

    public void updateSecureConnection(ch.boye.httpclientandroidlib.conn.OperatedClientConnection, ch.boye.httpclientandroidlib.HttpHost, ch.boye.httpclientandroidlib.protocol.HttpContext, ch.boye.httpclientandroidlib.params.HttpParams) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator $r0;
        ch.boye.httpclientandroidlib.conn.OperatedClientConnection $r1;
        ch.boye.httpclientandroidlib.HttpHost $r2;
        ch.boye.httpclientandroidlib.protocol.HttpContext $r3;
        ch.boye.httpclientandroidlib.params.HttpParams $r4;
        java.lang.IllegalStateException $r5;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r6;
        java.net.ConnectException $r7;
        ch.boye.httpclientandroidlib.conn.HttpHostConnectException $r8;
        java.lang.IllegalArgumentException $r9, $r9_1, $r9_2, $r9_3;
        boolean $z0, $z0_1, $z0_2;
        java.lang.String $r10, $r10_1, $r10_2, $r10_3, $r10_4;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r11;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory $r12, $r12_1;
        java.lang.StringBuilder $r13, $r13_1, $r13_2, $r13_3;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeLayeredSocketFactory $r14;
        java.net.Socket $r15, $r15_1, $r15_2;
        int $i0, $i0_1, $i0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.OperatedClientConnection;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpHost;

        $r3 := @parameter2: ch.boye.httpclientandroidlib.protocol.HttpContext;

        $r4 := @parameter3: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null");

        throw $r9;

     label1:
        if $r2 != null goto label2;

        $r9_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r9_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host may not be null");

        throw $r9_1;

     label2:
        if $r4 != null goto label3;

        $r9_2 = new java.lang.IllegalArgumentException;

        specialinvoke $r9_2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r9_2;

     label3:
        $z0 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label4;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection must be open");

        throw $r5;

     label4:
        $r6 = $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry schemeRegistry>;

        $r10 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.HttpHost: java.lang.String getSchemeName()>();

        $r11 = virtualinvoke $r6.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme getScheme(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory getSchemeSocketFactory()>();

        $z0_1 = $r12 instanceof ch.boye.httpclientandroidlib.conn.scheme.SchemeLayeredSocketFactory;

        if $z0_1 != 0 goto label5;

        $r9_3 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13_1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target scheme (");

        $r10_1 = virtualinvoke $r11.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: java.lang.String getName()>();

        $r13_2 = virtualinvoke $r13_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10_1);

        $r13_3 = virtualinvoke $r13_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must have layered socket factory.");

        $r10_2 = virtualinvoke $r13_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9_3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10_2);

        throw $r9_3;

     label5:
        $r12_1 = virtualinvoke $r11.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory getSchemeSocketFactory()>();

(0)     $r14 = (ch.boye.httpclientandroidlib.conn.scheme.SchemeLayeredSocketFactory) $r12_1;

     label6:
        $r15 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: java.net.Socket getSocket()>();

(1)     $r10_3 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.HttpHost: java.lang.String getHostName()>();

        $i0 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.HttpHost: int getPort()>();

(2)     $i0_1 = virtualinvoke $r11.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: int resolvePort(int)>($i0);

(3)     $r15_1 = interfaceinvoke $r14.<ch.boye.httpclientandroidlib.conn.scheme.SchemeLayeredSocketFactory: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,ch.boye.httpclientandroidlib.params.HttpParams)>($r15, $r10_3, $i0_1, $r4);

     label7:
        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,ch.boye.httpclientandroidlib.protocol.HttpContext,ch.boye.httpclientandroidlib.params.HttpParams)>($r15_1, $r3, $r4);

        $z0_2 = interfaceinvoke $r14.<ch.boye.httpclientandroidlib.conn.scheme.SchemeLayeredSocketFactory: boolean isSecure(java.net.Socket)>($r15_1);

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: void update(java.net.Socket,ch.boye.httpclientandroidlib.HttpHost,boolean,ch.boye.httpclientandroidlib.params.HttpParams)>($r15_1, $r2, $z0_2, $r4);

        return;

     label8:
        $r7 := @caughtexception;

        $r15_2 = Phi($r15 #0, $r15_1 #3);

        $i0_2 = Phi($i0 #0, $i0_1 #2);

        $r10_4 = Phi($r10 #0, $r10_3 #1);

        $r8 = new ch.boye.httpclientandroidlib.conn.HttpHostConnectException;

        specialinvoke $r8.<ch.boye.httpclientandroidlib.conn.HttpHostConnectException: void <init>(ch.boye.httpclientandroidlib.HttpHost,java.net.ConnectException)>($r2, $r7);

        throw $r8;

        catch java.net.ConnectException from label6 to label7 with label8;
    }
}
