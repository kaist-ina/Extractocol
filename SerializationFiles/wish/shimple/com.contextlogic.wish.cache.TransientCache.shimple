public class com.contextlogic.wish.cache.TransientCache extends java.lang.Object
{
    private static final int IMAGE_CACHE_SIZE;
    private static com.contextlogic.wish.cache.TransientCache _instance;
    private java.util.concurrent.ConcurrentHashMap cacheContents;
    private java.util.concurrent.ConcurrentHashMap cachedFonts;
    private android.support.v4.util.LruCache imageCache;

    static void <clinit>()
    {
        com.contextlogic.wish.cache.TransientCache $r0;

        $r0 = new com.contextlogic.wish.cache.TransientCache;

        specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: void <init>()>();

        <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache _instance> = $r0;

        return;
    }

    private void <init>()
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        com.contextlogic.wish.cache.TransientCache$1 $r1;
        java.util.concurrent.ConcurrentHashMap $r2, $r2_1;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents> = $r2;

        $r2_1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2_1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cachedFonts> = $r2_1;

        $r1 = new com.contextlogic.wish.cache.TransientCache$1;

        specialinvoke $r1.<com.contextlogic.wish.cache.TransientCache$1: void <init>(com.contextlogic.wish.cache.TransientCache,int)>($r0, 2097152);

        $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache> = $r1;

        return;
    }

    private android.graphics.Typeface createFont(android.content.Context, java.lang.String)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        java.lang.Exception $r3;
        android.content.res.AssetManager $r4;
        android.graphics.Typeface $r5;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r4, $r2);

     label2:
        return $r5;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.String getImageCacheKey(java.lang.String, int, int)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        int $i0, $i1, $i2, $i2_1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r2_1;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new java.lang.StringBuilder;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2_1 = $i2 + 15;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i2_1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2_1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2_1;
    }

    public static com.contextlogic.wish.cache.TransientCache getInstance()
    {
        com.contextlogic.wish.cache.TransientCache r0;

        r0 = <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache _instance>;

        return r0;
    }

    public void cacheFolloweeMapping(java.util.HashMap)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.HashMap $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("followee_mapping", $r1);

        return;
    }

    public void cacheFriendInfoMapping(java.util.HashMap)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.HashMap $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("friend_info_mapping", $r1);

        return;
    }

    public void cacheFriendMapping(java.util.HashMap)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.HashMap $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("friend_mapping", $r1);

        return;
    }

    public void cacheGoogleFriendMapping(java.util.HashMap)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.HashMap $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("google_friend_mapping", $r1);

        return;
    }

    public void cacheImage(java.lang.String, android.graphics.Bitmap, int, int)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        android.graphics.Bitmap $r1;
        int $i0, $i1;
        com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer $r2;
        android.support.v4.util.LruCache $r3;
        java.lang.String $r4, $r4_1;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r4 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.graphics.Bitmap;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = new com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer;

        specialinvoke $r2.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: void <init>(com.contextlogic.wish.cache.TransientCache,com.contextlogic.wish.cache.TransientCache$1)>($r0, null);

        $r2.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: android.graphics.Bitmap bitmap> = $r1;

        $r2.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: boolean locked> = 0;

        $r3 = $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache>;

        $r4_1 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: java.lang.String getImageCacheKey(java.lang.String,int,int)>($r4, $i0, $i1);

        virtualinvoke $r3.<android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4_1, $r2);

        return;
    }

    public void cachePersonalizedTags(java.util.ArrayList, java.lang.String)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.ArrayList $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.String $r3, $r3_1;
        java.lang.StringBuilder $r4, $r4_1, $r4_2;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: java.util.ArrayList;

        $r3 := @parameter1: java.lang.String;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("personalizedtags_");

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3_1 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3_1, $r1);

        return;
    }

    public void cachePopularCategories(java.util.ArrayList)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.ArrayList $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("popular_categories", $r1);

        return;
    }

    public void cacheUser(com.contextlogic.wish.api.data.WishUser)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        com.contextlogic.wish.api.data.WishUser $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2;
        java.lang.String $r4, $r4_1;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: com.contextlogic.wish.api.data.WishUser;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u");

        $r4 = virtualinvoke $r1.<com.contextlogic.wish.api.data.WishUser: java.lang.String getUserId()>();

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4_1 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4_1, $r1);

        return;
    }

    public void clearCache()
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        android.support.v4.util.LruCache $r2;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache>;

        virtualinvoke $r2.<android.support.v4.util.LruCache: void evictAll()>();

        return;
    }

    public java.util.HashMap getCachedFolloweeMapping()
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("followee_mapping");

        $r3 = (java.util.HashMap) $r2;

        return $r3;
    }

    public java.util.HashMap getCachedFriendInfoMapping()
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("friend_info_mapping");

        $r3 = (java.util.HashMap) $r2;

        return $r3;
    }

    public java.util.HashMap getCachedFriendMapping()
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("friend_mapping");

        $r3 = (java.util.HashMap) $r2;

        return $r3;
    }

    public java.util.HashMap getCachedGoogleFriendMapping()
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("google_friend_mapping");

        $r3 = (java.util.HashMap) $r2;

        return $r3;
    }

    public android.graphics.Bitmap getCachedImage(java.lang.String, int, int)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        int $i0, $i1;
        android.support.v4.util.LruCache $r1;
        android.graphics.Bitmap $r2, $r7, $r2_1, $r2_2, $r2_3;
        java.lang.Throwable $r3;
        java.lang.String $r4, $r4_1;
        java.lang.Object $r5;
        com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer $r6;
        android.graphics.Bitmap$Config $r8;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r4 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache>;

        $r4_1 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: java.lang.String getImageCacheKey(java.lang.String,int,int)>($r4, $i0, $i1);

        $r5 = virtualinvoke $r1.<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>($r4_1);

        $r6 = (com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer) $r5;

(0)     if $r6 == null goto label4;

     label1:
        $r7 = $r6.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: android.graphics.Bitmap bitmap>;

        $r2 = $r6.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: android.graphics.Bitmap bitmap>;

        $r8 = virtualinvoke $r2.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

(1)     $r2_1 = virtualinvoke $r7.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r8, 0);

     label2:
        return $r2_1;

     label3:
        $r3 := @caughtexception;

(2)     $r2_2 = Phi($r2 #0, $r2_1 #1);

     label4:
        $r2_3 = Phi($r2 #0, $r2_2 #2);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.ArrayList getCachedPersonalizedTags(java.lang.String)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.String $r2, $r2_1;
        java.lang.StringBuilder $r3, $r3_1, $r3_2;
        java.lang.Object $r4;
        java.util.ArrayList $r5;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r2 := @parameter0: java.lang.String;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("personalizedtags_");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2_1 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r2_1);

        $r5 = (java.util.ArrayList) $r4;

        return $r5;
    }

    public java.util.ArrayList getCachedPopularCategories()
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("popular_categories");

        $r3 = (java.util.ArrayList) $r2;

        return $r3;
    }

    public com.contextlogic.wish.api.data.WishUser getCachedUser(java.lang.String)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.String $r2, $r2_1;
        java.lang.StringBuilder $r3, $r3_1, $r3_2;
        java.lang.Object $r4;
        com.contextlogic.wish.api.data.WishUser $r5;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r2 := @parameter0: java.lang.String;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cacheContents>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2_1 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r2_1);

        $r5 = (com.contextlogic.wish.api.data.WishUser) $r4;

        return $r5;
    }

    public android.graphics.Typeface getTypefaceForStyle(android.content.Context, int)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        android.content.Context $r1;
        int $i0;
        java.util.concurrent.ConcurrentHashMap $r2, $r2_1;
        java.lang.Integer $r3, $r3_1;
        java.lang.Object $r4;
        android.graphics.Typeface $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cachedFonts>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (android.graphics.Typeface) $r4;

(0)     if $r5 != null goto label5;

        if $i0 != 1 goto label2;

(1)     $r5_1 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: android.graphics.Typeface createFont(android.content.Context,java.lang.String)>($r1, "Roboto-Bold.ttf");

     label1:
        $r5_2 = Phi($r5_1 #1, $r5_3 #3, $r5_4 #4, $r5_5 #5);

(2)     if $r5_2 == null goto label5;

        $r2_1 = $r0.<com.contextlogic.wish.cache.TransientCache: java.util.concurrent.ConcurrentHashMap cachedFonts>;

        $r3_1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r2_1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3_1, $r5_2);

        return $r5_2;

     label2:
        if $i0 != 2 goto label3;

        $r5_3 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: android.graphics.Typeface createFont(android.content.Context,java.lang.String)>($r1, "Roboto-Italic.ttf");

(3)     goto label1;

     label3:
        if $i0 != 3 goto label4;

        $r5_4 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: android.graphics.Typeface createFont(android.content.Context,java.lang.String)>($r1, "Roboto-BoldItalic.ttf");

(4)     goto label1;

     label4:
        $r5_5 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: android.graphics.Typeface createFont(android.content.Context,java.lang.String)>($r1, "Roboto-Regular.ttf");

(5)     goto label1;

     label5:
        $r5_6 = Phi($r5 #0, $r5_2 #2);

        return $r5_6;
    }

    public void lockCachedImage(java.lang.String, int, int)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        int $i0, $i1;
        android.support.v4.util.LruCache $r1;
        java.lang.String $r2, $r2_1;
        java.lang.Object $r3;
        com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer $r4;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache>;

        $r2_1 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: java.lang.String getImageCacheKey(java.lang.String,int,int)>($r2, $i0, $i1);

        $r3 = virtualinvoke $r1.<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>($r2_1);

        $r4 = (com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer) $r3;

        if $r4 == null goto label1;

        $r4.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: boolean locked> = 1;

     label1:
        return;
    }

    public boolean removedCachedImage(java.lang.String, int, int)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.String $r1, $r1_1;
        android.support.v4.util.LruCache $r2, $r2_1, $r2_2;
        java.lang.Object $r3;
        com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer $r4;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1_1 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: java.lang.String getImageCacheKey(java.lang.String,int,int)>($r1, $i0, $i1);

        $r2 = $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache>;

        $r3 = virtualinvoke $r2.<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>($r1_1);

        $r4 = (com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer) $r3;

(0)     if $r4 == null goto label2;

        $z0 = $r4.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: boolean locked>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2_1 = $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache>;

(1)     virtualinvoke $r2_1.<android.support.v4.util.LruCache: java.lang.Object remove(java.lang.Object)>($r1_1);

     label2:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        return 1;
    }

    public void unlockCachedImage(java.lang.String, int, int)
    {
        com.contextlogic.wish.cache.TransientCache $r0;
        int $i0, $i1;
        android.support.v4.util.LruCache $r1;
        java.lang.String $r2, $r2_1;
        java.lang.Object $r3;
        com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer $r4;

        $r0 := @this: com.contextlogic.wish.cache.TransientCache;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = $r0.<com.contextlogic.wish.cache.TransientCache: android.support.v4.util.LruCache imageCache>;

        $r2_1 = specialinvoke $r0.<com.contextlogic.wish.cache.TransientCache: java.lang.String getImageCacheKey(java.lang.String,int,int)>($r2, $i0, $i1);

        $r3 = virtualinvoke $r1.<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>($r2_1);

        $r4 = (com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer) $r3;

        if $r4 == null goto label1;

        $r4.<com.contextlogic.wish.cache.TransientCache$LockedBitmapContainer: boolean locked> = 0;

     label1:
        return;
    }
}
