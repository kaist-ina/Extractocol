class ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance extends java.lang.Object
{
    private static final java.lang.String UNEXPECTED_100_CONTINUE;
    private static final java.lang.String UNEXPECTED_PARTIAL_CONTENT;

    void <init>()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private boolean backendResponseMustNotHaveBody(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        java.lang.String $r3, $r5;
        ch.boye.httpclientandroidlib.RequestLine $r4;
        boolean $z0;
        ch.boye.httpclientandroidlib.StatusLine $r6, $r6_1, $r6_2, $r6_3;
        int $i0, $i0_1, $i0_2, $i0_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $r3 = "HEAD";

        $r4 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.RequestLine getRequestLine()>();

        $r5 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.RequestLine: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

(0)     if $z0 != 0 goto label1;

        $r6 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r6.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

(1)     if $i0 == 204 goto label1;

        $r6_1 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0_1 = interfaceinvoke $r6_1.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

(2)     if $i0_1 == 205 goto label1;

        $r6_2 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0_2 = interfaceinvoke $r6_2.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

(3)     if $i0_2 != 304 goto label2;

     label1:
        $r6_3 = Phi($r6 #0, $r6 #1, $r6_1 #2, $r6_2 #3);

        $i0_3 = Phi($i0 #0, $i0 #1, $i0_1 #2, $i0_2 #3);

        return 1;

     label2:
        return 0;
    }

    private void consumeBody(ch.boye.httpclientandroidlib.HttpResponse) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        ch.boye.httpclientandroidlib.HttpEntity $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        $r2 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.HttpEntity getEntity()>();

        if $r2 == null goto label1;

        staticinvoke <ch.boye.httpclientandroidlib.util.EntityUtils: void consume(ch.boye.httpclientandroidlib.HttpEntity)>($r2);

     label1:
        return;
    }

    private void ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        ch.boye.httpclientandroidlib.RequestLine $r3;
        java.lang.String $r4;
        boolean $z0;
        ch.boye.httpclientandroidlib.StatusLine $r5;
        int $i0;
        ch.boye.httpclientandroidlib.Header $r6;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $r3 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.RequestLine getRequestLine()>();

        $r4 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.RequestLine: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("OPTIONS");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

        if $i0 != 200 goto label2;

        $r6 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Content-Length");

        if $r6 != null goto label2;

        interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Content-Length", "0");

     label2:
        return;
    }

    private void ensure206ContainsDateHeader(ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        java.util.Date $r2;
        ch.boye.httpclientandroidlib.Header $r3;
        java.lang.String $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        $r3 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Date");

        if $r3 != null goto label1;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r4 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.DateUtils: java.lang.String formatDate(java.util.Date)>($r2);

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Date", $r4);

     label1:
        return;
    }

    private void ensure304DoesNotContainExtraEntityHeaders(ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;
        ch.boye.httpclientandroidlib.StatusLine $r4;
        int $i0, $i1, $i0_1, $i1_1, $i1_2, $i0_2, $i1_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        $r2 = newarray (java.lang.String)[8];

        $r2[0] = "Allow";

        $r2[1] = "Content-Encoding";

        $r2[2] = "Content-Language";

        $r2[3] = "Content-Length";

        $r2[4] = "Content-MD5";

        $r2[5] = "Content-Range";

        $r2[6] = "Content-Type";

        $r2[7] = "Last-Modified";

        $r4 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

(0)     if $i0 != 304 goto label2;

        $i0_1 = lengthof $r2;

(1)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #1, $i1_2 #3);

(2)     if $i1_1 >= $i0_1 goto label2;

        $r3 = $r2[$i1_1];

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void removeHeaders(java.lang.String)>($r3);

        $i1_2 = $i1_1 + 1;

(3)     goto label1;

     label2:
        $i0_2 = Phi($i0 #0, $i0_1 #2);

        $i1_3 = Phi($i1 #0, $i1_1 #2);

        return;
    }

    private void ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.HttpResponse) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        ch.boye.httpclientandroidlib.client.ClientProtocolException $r3;
        ch.boye.httpclientandroidlib.Header $r4;
        ch.boye.httpclientandroidlib.StatusLine $r5;
        int $i0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $r4 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Range");

        if $r4 != null goto label2;

        $r5 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

        if $i0 == 206 goto label1;

        return;

     label1:
        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void consumeBody(ch.boye.httpclientandroidlib.HttpResponse)>($r2);

        $r3 = new ch.boye.httpclientandroidlib.client.ClientProtocolException;

        specialinvoke $r3.<ch.boye.httpclientandroidlib.client.ClientProtocolException: void <init>(java.lang.String)>("partial content was returned for a request that did not ask for it");

        throw $r3;

     label2:
        return;
    }

    private ch.boye.httpclientandroidlib.ProtocolVersion getOriginalRequestProtocol(ch.boye.httpclientandroidlib.impl.client.RequestWrapper)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.impl.client.RequestWrapper $r1;
        ch.boye.httpclientandroidlib.HttpRequest $r2;
        ch.boye.httpclientandroidlib.ProtocolVersion $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.client.RequestWrapper;

        $r2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.client.RequestWrapper: ch.boye.httpclientandroidlib.HttpRequest getOriginal()>();

        $r3 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion()>();

        return $r3;
    }

    private void identityIsNotUsedInContentEncoding(ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        java.util.ArrayList $r2;
        java.lang.StringBuilder $r3;
        int $i0, $i1, $i2, $i3, $i2_1, $i0_1, $i0_2, $i3_1, $i3_2, $i3_3, $i2_2, $i2_3, $i3_4, $i0_3;
        ch.boye.httpclientandroidlib.HeaderElement $r4;
        ch.boye.httpclientandroidlib.message.BasicHeader $r5;
        ch.boye.httpclientandroidlib.Header[] $r6;
        boolean $z0, $z1, $z2, $z0_1, $z1_1, $z0_2, $z1_2, $z0_3, $z0_4, $z1_3, $z1_4, $z1_5, $z0_5, $z0_6, $z0_7, $z1_6;
        ch.boye.httpclientandroidlib.Header $r7, $r7_1, $r7_2, $r7_3, $r7_4;
        ch.boye.httpclientandroidlib.HeaderElement[] $r8;
        java.lang.String $r9, $r10, $r9_1, $r10_1, $r9_2, $r10_2, $r9_3, $r9_4, $r9_5, $r10_3, $r9_6, $r10_4;
        java.util.Iterator $r11;
        java.lang.Object $r12;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        $r6 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Content-Encoding");

(0)     if $r6 == null goto label11;

        $i0 = lengthof $r6;

        if $i0 != 0 goto label01;

        return;

     label01:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $z0 = 0;

        $i1 = lengthof $r6;

(1)     $i2 = 0;

     label02:
        $z0_1 = Phi($z0 #1, $z0_2 #6);

        $r9 = Phi($r9 #1, $r9_5 #6);

        $i2_1 = Phi($i2 #1, $i2_2 #6);

        $r10 = Phi($r10 #1, $r10_3 #6);

        $r7 = Phi($r7 #1, $r7_1 #6);

        $z1 = Phi($z1 #1, $z1_5 #6);

        $i3 = Phi($i3 #1, $i3_2 #6);

        $i0_1 = Phi($i0 #1, $i0_2 #6);

        if $i2_1 >= $i1 goto label09;

        $r7_1 = $r6[$i2_1];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $z1_1 = 1;

        $r8 = interfaceinvoke $r7_1.<ch.boye.httpclientandroidlib.Header: ch.boye.httpclientandroidlib.HeaderElement[] getElements()>();

        $i0_2 = lengthof $r8;

(2)     $i3_1 = 0;

     label03:
        $z0_2 = Phi($z0_1 #2, $z0_4 #4);

        $r9_1 = Phi($r9 #2, $r9_3 #4);

        $r10_1 = Phi($r10 #2, $r10_2 #4);

        $z1_2 = Phi($z1_1 #2, $z1_3 #4);

        $i3_2 = Phi($i3_1 #2, $i3_3 #4);

        if $i3_2 >= $i0_2 goto label07;

        $r4 = $r8[$i3_2];

        $r9_2 = "identity";

        $r10_2 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $z2 = virtualinvoke $r9_2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10_2);

        if $z2 == 0 goto label05;

(3)     $z0_3 = 1;

     label04:
        $z0_4 = Phi($z0_3 #3, $z0_2 #5);

        $r9_3 = Phi($r9_2 #3, $r9_4 #5);

        $z1_3 = Phi($z1_2 #3, $z1_4 #5);

        $i3_3 = $i3_2 + 1;

(4)     goto label03;

     label05:
        if $z1_2 != 0 goto label06;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label06:
        $r9_4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9_4);

        $z1_4 = 0;

(5)     goto label04;

     label07:
        $r9_5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10_3 = "";

        $z1_5 = virtualinvoke $r10_3.<java.lang.String: boolean equals(java.lang.Object)>($r9_5);

        if $z1_5 != 0 goto label08;

        $r5 = new ch.boye.httpclientandroidlib.message.BasicHeader;

        specialinvoke $r5.<ch.boye.httpclientandroidlib.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>("Content-Encoding", $r9_5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label08:
        $i2_2 = $i2_1 + 1;

(6)     goto label02;

     label09:
(7)     if $z0_1 == 0 goto label11;

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void removeHeaders(java.lang.String)>("Content-Encoding");

(8)     $r11 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0_5 = Phi($z0_1 #8, $z0_6 #10);

        $r7_2 = Phi($r7 #8, $r7_3 #10);

        $z0_6 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

(9)     if $z0_6 == 0 goto label11;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r7_3 = (ch.boye.httpclientandroidlib.Header) $r12;

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(ch.boye.httpclientandroidlib.Header)>($r7_3);

(10)    goto label10;

     label11:
        $z0_7 = Phi($z0 #0, $z0_1 #7, $z0_6 #9);

        $r9_6 = Phi($r9 #0, $r9 #7, $r9 #9);

        $i2_3 = Phi($i2 #0, $i2_1 #7, $i2_1 #9);

        $r10_4 = Phi($r10 #0, $r10 #7, $r10 #9);

        $r7_4 = Phi($r7 #0, $r7 #7, $r7_2 #9);

        $z1_6 = Phi($z1 #0, $z1 #7, $z1 #9);

        $i3_4 = Phi($i3 #0, $i3 #7, $i3 #9);

        $i0_3 = Phi($i0 #0, $i0_1 #7, $i0_1 #9);

        return;
    }

    private void removeResponseTransferEncoding(ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void removeHeaders(java.lang.String)>("TE");

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void removeHeaders(java.lang.String)>("Transfer-Encoding");

        return;
    }

    private void requestDidNotExpect100ContinueButResponseIsOne(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.HttpResponse) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        ch.boye.httpclientandroidlib.client.ClientProtocolException $r2;
        ch.boye.httpclientandroidlib.HttpRequest $r3, $r3_1, $r3_2;
        ch.boye.httpclientandroidlib.StatusLine $r4;
        int $i0;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        ch.boye.httpclientandroidlib.impl.client.RequestWrapper $r5;
        ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest $r6;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r3 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r1 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $r4 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

        if $i0 == 100 goto label1;

        return;

     label1:
        $z0 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: boolean requestWasWrapped(ch.boye.httpclientandroidlib.HttpRequest)>($r3);

(0)     if $z0 == 0 goto label2;

        $r5 = (ch.boye.httpclientandroidlib.impl.client.RequestWrapper) $r3;

(1)     $r3_1 = virtualinvoke $r5.<ch.boye.httpclientandroidlib.impl.client.RequestWrapper: ch.boye.httpclientandroidlib.HttpRequest getOriginal()>();

     label2:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $z0_1 = $r3_2 instanceof ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest;

(2)     if $z0_1 == 0 goto label3;

        $r6 = (ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest) $r3_2;

        $z0_2 = interfaceinvoke $r6.<ch.boye.httpclientandroidlib.HttpEntityEnclosingRequest: boolean expectContinue()>();

(3)     if $z0_2 != 0 goto label4;

     label3:
        $z0_3 = Phi($z0_1 #2, $z0_2 #3);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void consumeBody(ch.boye.httpclientandroidlib.HttpResponse)>($r1);

        $r2 = new ch.boye.httpclientandroidlib.client.ClientProtocolException;

        specialinvoke $r2.<ch.boye.httpclientandroidlib.client.ClientProtocolException: void <init>(java.lang.String)>("The incoming request did not contain a 100-continue header, but the response was a Status 100, continue.");

        throw $r2;

     label4:
        return;
    }

    private boolean requestWasWrapped(ch.boye.httpclientandroidlib.HttpRequest)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $z0 = $r1 instanceof ch.boye.httpclientandroidlib.impl.client.RequestWrapper;

        return $z0;
    }

    private void transferEncodingIsNotReturnedTo1_0Client(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        ch.boye.httpclientandroidlib.HttpVersion $r3;
        boolean $z0;
        ch.boye.httpclientandroidlib.impl.client.RequestWrapper $r4;
        ch.boye.httpclientandroidlib.ProtocolVersion $r5;
        int $i0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $z0 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: boolean requestWasWrapped(ch.boye.httpclientandroidlib.HttpRequest)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = (ch.boye.httpclientandroidlib.impl.client.RequestWrapper) $r1;

        $r5 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: ch.boye.httpclientandroidlib.ProtocolVersion getOriginalRequestProtocol(ch.boye.httpclientandroidlib.impl.client.RequestWrapper)>($r4);

        $r3 = <ch.boye.httpclientandroidlib.HttpVersion: ch.boye.httpclientandroidlib.HttpVersion HTTP_1_1>;

        $i0 = virtualinvoke $r5.<ch.boye.httpclientandroidlib.ProtocolVersion: int compareToVersion(ch.boye.httpclientandroidlib.ProtocolVersion)>($r3);

        if $i0 >= 0 goto label2;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void removeResponseTransferEncoding(ch.boye.httpclientandroidlib.HttpResponse)>($r2);

     label2:
        return;
    }

    private void warningsWithNonMatchingWarnDatesAreRemoved(ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3, $i0_1, $i2_1, $i0_2, $i3_1, $i3_2, $i3_3, $i2_2, $i0_3, $i3_4, $i2_3;
        ch.boye.httpclientandroidlib.impl.client.cache.WarningValue $r3;
        ch.boye.httpclientandroidlib.message.BasicHeader $r4;
        ch.boye.httpclientandroidlib.impl.cookie.DateParseException $r5;
        java.util.Date $r6, $r11, $r6_1, $r6_2, $r6_3;
        ch.boye.httpclientandroidlib.Header $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7;
        java.lang.String $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6, $r8_7;
        ch.boye.httpclientandroidlib.Header[] $r9;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        ch.boye.httpclientandroidlib.impl.client.cache.WarningValue[] $r10;
        java.util.Iterator $r12;
        java.lang.Object $r13;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

(0)     $r6 = null;

     label01:
        $r7 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Date");

        $r8 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

(1)     $r6_1 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>($r8);

     label02:
        $r8_1 = Phi($r8 #1, $r8_7 #14);

        $r6_2 = Phi($r6_1 #1, $r6_3 #14);

        $r7_1 = Phi($r7 #1, $r7_7 #14);

        if $r6_2 != null goto label03;

        return;

     label03:
        $r9 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Warning");

(2)     if $r9 == null goto label13;

        $i0 = lengthof $r9;

(3)     if $i0 == 0 goto label13;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $z0 = 0;

        $i1 = lengthof $r9;

(4)     $i2 = 0;

     label04:
        $z0_1 = Phi($z0 #4, $z0_2 #9);

        $r8_2 = Phi($r8_1 #4, $r8_3 #9);

        $i0_1 = Phi($i0 #4, $i0_2 #9);

        $i3 = Phi($i3 #4, $i3_2 #9);

        $i2_1 = Phi($i2 #4, $i2_2 #9);

        $r7_2 = Phi($r7_1 #4, $r7_3 #9);

        if $i2_1 >= $i1 goto label10;

        $r7_3 = $r9[$i2_1];

        $r10 = staticinvoke <ch.boye.httpclientandroidlib.impl.client.cache.WarningValue: ch.boye.httpclientandroidlib.impl.client.cache.WarningValue[] getWarningValues(ch.boye.httpclientandroidlib.Header)>($r7_3);

        $i0_2 = lengthof $r10;

(5)     $i3_1 = 0;

     label05:
        $z0_2 = Phi($z0_1 #5, $z0_4 #7);

        $r8_3 = Phi($r8_2 #5, $r8_5 #7);

        $i3_2 = Phi($i3_1 #5, $i3_3 #7);

        if $i3_2 >= $i0_2 goto label09;

        $r3 = $r10[$i3_2];

        $r11 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.impl.client.cache.WarningValue: java.util.Date getWarnDate()>();

        if $r11 == null goto label06;

        $z1 = virtualinvoke $r11.<java.util.Date: boolean equals(java.lang.Object)>($r6_2);

        if $z1 == 0 goto label08;

     label06:
        $r4 = new ch.boye.httpclientandroidlib.message.BasicHeader;

        $r8_4 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.impl.client.cache.WarningValue: java.lang.String toString()>();

        specialinvoke $r4.<ch.boye.httpclientandroidlib.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>("Warning", $r8_4);

(6)     interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label07:
        $z0_4 = Phi($z0_2 #6, $z0_3 #8);

        $r8_5 = Phi($r8_4 #6, $r8_3 #8);

        $i3_3 = $i3_2 + 1;

(7)     goto label05;

     label08:
        $z0_3 = 1;

(8)     goto label07;

     label09:
        $i2_2 = $i2_1 + 1;

(9)     goto label04;

     label10:
(10)    if $z0_1 == 0 goto label13;

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void removeHeaders(java.lang.String)>("Warning");

(11)    $r12 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z0_5 = Phi($z0_1 #11, $z0_6 #13);

        $r7_4 = Phi($r7_2 #11, $r7_5 #13);

        $z0_6 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

(12)    if $z0_6 == 0 goto label13;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r7_5 = (ch.boye.httpclientandroidlib.Header) $r13;

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(ch.boye.httpclientandroidlib.Header)>($r7_5);

(13)    goto label11;

     label12:
        $r5 := @caughtexception;

        $r8_7 = Phi($r8 #0);

        $r6_3 = Phi($r6 #0, $r6_1 #1);

        $r7_7 = Phi($r7 #0);

(14)    goto label02;

     label13:
        $z0_7 = Phi($z0 #2, $z0 #3, $z0_1 #10, $z0_6 #12);

        $r8_6 = Phi($r8_1 #2, $r8_1 #3, $r8_2 #10, $r8_2 #12);

        $i0_3 = Phi($i0 #2, $i0 #3, $i0_1 #10, $i0_1 #12);

        $i3_4 = Phi($i3 #2, $i3 #3, $i3 #10, $i3 #12);

        $i2_3 = Phi($i2 #2, $i2 #3, $i2_1 #10, $i2_1 #12);

        $r7_6 = Phi($r7_1 #2, $r7_1 #3, $r7_2 #10, $r7_4 #12);

        return;

        catch ch.boye.httpclientandroidlib.impl.cookie.DateParseException from label01 to label02 with label12;
    }

    public void ensureProtocolCompliance(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.HttpResponse) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $z0 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: boolean backendResponseMustNotHaveBody(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse)>($r1, $r2);

        if $z0 == 0 goto label1;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void consumeBody(ch.boye.httpclientandroidlib.HttpResponse)>($r2);

        interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: void setEntity(ch.boye.httpclientandroidlib.HttpEntity)>(null);

     label1:
        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void requestDidNotExpect100ContinueButResponseIsOne(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse)>($r1, $r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void transferEncodingIsNotReturnedTo1_0Client(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse)>($r1, $r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse)>($r1, $r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.HttpResponse)>($r1, $r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void ensure206ContainsDateHeader(ch.boye.httpclientandroidlib.HttpResponse)>($r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void ensure304DoesNotContainExtraEntityHeaders(ch.boye.httpclientandroidlib.HttpResponse)>($r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void identityIsNotUsedInContentEncoding(ch.boye.httpclientandroidlib.HttpResponse)>($r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.ResponseProtocolCompliance: void warningsWithNonMatchingWarnDatesAreRemoved(ch.boye.httpclientandroidlib.HttpResponse)>($r2);

        return;
    }
}
