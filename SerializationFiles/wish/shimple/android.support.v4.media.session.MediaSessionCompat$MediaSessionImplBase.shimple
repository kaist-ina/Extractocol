class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase extends java.lang.Object implements android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
{
    private final android.media.AudioManager mAudioManager;
    private android.support.v4.media.session.MediaSessionCompat$Callback mCallback;
    private final android.content.ComponentName mComponentName;
    private final android.content.Context mContext;
    private final android.os.RemoteCallbackList mControllerCallbacks;
    private boolean mDestroyed;
    private android.os.Bundle mExtras;
    private int mFlags;
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler;
    private boolean mIsActive;
    private boolean mIsMbrRegistered;
    private boolean mIsRccRegistered;
    private int mLocalStream;
    private final java.lang.Object mLock;
    private final android.app.PendingIntent mMediaButtonEventReceiver;
    private android.support.v4.media.MediaMetadataCompat mMetadata;
    private final java.lang.String mPackageName;
    private java.util.List mQueue;
    private java.lang.CharSequence mQueueTitle;
    private int mRatingType;
    private final java.lang.Object mRccObj;
    private android.app.PendingIntent mSessionActivity;
    private android.support.v4.media.session.PlaybackStateCompat mState;
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub;
    private final java.lang.String mTag;
    private final android.support.v4.media.session.MediaSessionCompat$Token mToken;
    private android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback;
    private android.support.v4.media.VolumeProviderCompat mVolumeProvider;
    private int mVolumeType;

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r11;
        android.content.ComponentName $r3;
        android.app.PendingIntent $r4;
        android.os.RemoteCallbackList $r5;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 $r6;
        java.lang.IllegalArgumentException $r7;
        android.support.v4.media.session.MediaSessionCompat$Token $r8;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r9;
        int $i0;
        java.lang.Object $r10, $r10_1, $r10_2;
        android.media.AudioManager $r12;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub $r13, $r13_1;
        android.os.Looper $r14;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.ComponentName;

        $r4 := @parameter3: android.app.PendingIntent;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock> = $r10;

        $r5 = new android.os.RemoteCallbackList;

        specialinvoke $r5.<android.os.RemoteCallbackList: void <init>()>();

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks> = $r5;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 0;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

        $r6 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;

        specialinvoke $r6.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>($r0);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback> = $r6;

        if $r3 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MediaButtonReceiver component may not be null.");

        throw $r7;

     label1:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext> = $r1;

        $r11 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName> = $r11;

        $r10_1 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r12 = (android.media.AudioManager) $r10_1;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager> = $r12;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag> = $r2;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName> = $r3;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver> = $r4;

        $r13 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub;

        specialinvoke $r13.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>($r0);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub> = $r13;

        $r8 = new android.support.v4.media.session.MediaSessionCompat$Token;

        $r13_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub>;

        specialinvoke $r8.<android.support.v4.media.session.MediaSessionCompat$Token: void <init>(java.lang.Object)>($r13_1);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r8;

        $r9 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler;

        $r14 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r9.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper)>($r0, $r14);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler> = $r9;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = 0;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream> = 3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label2;

        $r10_2 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: java.lang.Object createRemoteControlClient(android.app.PendingIntent)>($r4);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj> = $r10_2;

        return;

     label2:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj> = null;

        return;
    }

    static android.os.RemoteCallbackList access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.RemoteCallbackList r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        return r1;
    }

    static java.lang.String access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName>;

        return r1;
    }

    static java.lang.String access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag>;

        return r1;
    }

    static java.lang.Object access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.Object r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        return r1;
    }

    static android.app.PendingIntent access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.app.PendingIntent r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity>;

        return r1;
    }

    static android.media.AudioManager access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.media.AudioManager r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        return r1;
    }

    static void access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void adjustVolume(int,int)>($i0, $i1);

        return;
    }

    static void access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setVolumeTo(int,int)>($i0, $i1);

        return;
    }

    static android.support.v4.media.MediaMetadataCompat access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.MediaMetadataCompat r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        return r1;
    }

    static android.support.v4.media.session.PlaybackStateCompat access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 = specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition()>();

        return $r1;
    }

    static android.support.v4.media.VolumeProviderCompat access$200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.VolumeProviderCompat r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        return r1;
    }

    static java.util.List access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.util.List r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue>;

        return r1;
    }

    static java.lang.CharSequence access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle>;

        return r1;
    }

    static android.os.Bundle access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.Bundle r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras>;

        return r1;
    }

    static int access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType>;

        return i0;
    }

    static android.support.v4.media.session.MediaSessionCompat$Callback access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$Callback r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;

        return r1;
    }

    static int access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        return i0;
    }

    static int access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        return i0;
    }

    static void access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter1: android.support.v4.media.session.ParcelableVolumeInfo;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);

        return;
    }

    static android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler access$700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;

        return r1;
    }

    static int access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        return i0;
    }

    static boolean access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean z0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed>;

        return z0;
    }

    private void adjustVolume(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        android.media.AudioManager $r1;
        android.support.v4.media.VolumeProviderCompat $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

(0)     if $r2 == null goto label2;

        $r2_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r2_1.<android.support.v4.media.VolumeProviderCompat: void onAdjustVolume(int)>($i0);

        return;

     label1:
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

(1)     virtualinvoke $r1.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i0, $i2_1, $i1);

     label2:
        $r2_2 = Phi($r2 #0, $r2 #1);

        $i2_2 = Phi($i2 #0, $i2_1 #1);

        return;
    }

    private android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.Object $r1;
        android.support.v4.media.session.PlaybackStateCompat $r2, $r6, $r6_1, $r6_2;
        android.support.v4.media.session.PlaybackStateCompat$Builder $r3;
        java.lang.Throwable $r4;
        long $l0, $l2, $l3, $l5, $l0_1, $l0_2, $l2_1, $l2_2, $l2_3, $l5_1, $l5_2, $l5_3, $l5_4, $l5_5, $l2_4, $l0_3;
        android.support.v4.media.MediaMetadataCompat $r5, $r5_1, $r5_2, $r5_3, $r5_4;
        boolean $z0;
        int $i1, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5;
        byte $b4, $b4_1, $b4_2, $b4_3, $b4_4, $b4_5, $b4_6;
        float $f0, $f1, $f0_1, $f0_2, $f0_3;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $l0 = -1L;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

(0)     entermonitor $r1;

     label01:
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

(1)     if $r5 == null goto label02;

(2)     $r5_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        $z0 = virtualinvoke $r5_1.<android.support.v4.media.MediaMetadataCompat: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");

(3)     if $z0 == 0 goto label02;

(4)     $r5_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

(5)     $l0_1 = virtualinvoke $r5_2.<android.support.v4.media.MediaMetadataCompat: long getLong(java.lang.String)>("android.media.metadata.DURATION");

     label02:
        $l0_2 = Phi($l0 #1, $l0 #3, $l0_1 #5);

        $r5_3 = Phi($r5 #1, $r5_1 #3, $r5_2 #5);

(6)     exitmonitor $r1;

     label03:
        $r6 = null;

(7)     if $r2 == null goto label06;

        $i1 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

(8)     if $i1 == 3 goto label04;

        $i1_1 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

(9)     if $i1_1 == 4 goto label04;

        $i1_2 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

(10)    if $i1_2 != 5 goto label06;

     label04:
        $i1_3 = Phi($i1 #8, $i1_1 #9, $i1_2 #10);

        $l2 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b4 = $l2 cmp 0L;

(11)    if $b4 <= 0 goto label06;

        $f0 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        $l2_1 = $l3 - $l2;

        $f1 = (float) $l2_1;

        $f0_1 = $f0 * $f1;

        $l2_2 = (long) $f0_1;

        $l5 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();

        $l2_3 = $l2_2 + $l5;

        $l5_1 = $l2_3;

        $b4_1 = $l0_2 cmp 0L;

(12)    if $b4_1 < 0 goto label10;

        $b4_2 = $l2_3 cmp $l0_2;

(13)    if $b4_2 <= 0 goto label10;

(14)    $l5_2 = $l0_2;

     label05:
        $l5_3 = Phi($l5_2 #14, $l5_1 #17, $l5_4 #18);

        $b4_3 = Phi($b4_2 #14, $b4_5 #17, $b4_5 #18);

        $r3 = new android.support.v4.media.session.PlaybackStateCompat$Builder;

        specialinvoke $r3.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>(android.support.v4.media.session.PlaybackStateCompat)>($r2);

        $i1_4 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $f0_2 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        virtualinvoke $r3.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>($i1_4, $l5_3, $f0_2, $l3);

(15)    $r6_1 = virtualinvoke $r3.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

     label06:
        $r6_2 = Phi($r6 #7, $r6 #10, $r6 #11, $r6_1 #15);

        $i1_5 = Phi($i1 #7, $i1_2 #10, $i1_3 #11, $i1_4 #15);

        $l5_5 = Phi($l5 #7, $l5 #10, $l5 #11, $l5_3 #15);

        $b4_6 = Phi($b4 #7, $b4 #10, $b4 #11, $b4_3 #15);

        $l2_4 = Phi($l2 #7, $l2 #10, $l2 #11, $l2_3 #15);

        $f0_3 = Phi($f0 #7, $f0 #10, $f0 #11, $f0_2 #15);

        if $r6_2 != null goto label11;

        return $r2;

     label07:
        $r4 := @caughtexception;

        $l0_3 = Phi($l0 #0, $l0_1 #5, $l0_2 #6, $l0_3 #16);

(16)    $r5_4 = Phi($r5 #0, $r5_1 #2, $r5_2 #4, $r5_3 #6, $r5_4 #16);

     label08:
        exitmonitor $r1;

     label09:
        throw $r4;

     label10:
        $b4_4 = Phi($b4_1 #12, $b4_2 #13);

        $b4_5 = $l2_3 cmp 0L;

(17)    if $b4_5 >= 0 goto label05;

        $l5_4 = 0L;

(18)    goto label05;

     label11:
        return $r6_2;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    private void sendEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.RemoteException $r3;
        android.os.RemoteCallbackList $r4, $r4_1, $r4_2, $r4_3;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.os.IInterface $r5;
        android.support.v4.media.session.IMediaControllerCallback $r6;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

(0)     $i0_1 = $i0 + -1;

     label1:
        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        $r4_1 = Phi($r4 #0, $r4_2 #1);

        if $i0_2 < 0 goto label4;

        $r4_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r5 = virtualinvoke $r4_2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0_2);

        $r6 = (android.support.v4.media.session.IMediaControllerCallback) $r5;

     label2:
        interfaceinvoke $r6.<android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

     label3:
        $i0_3 = $i0_2 + -1;

(1)     goto label1;

     label4:
        $r4_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r4_3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r3 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.os.RemoteException $r2;
        android.os.RemoteCallbackList $r3, $r3_1, $r3_2, $r3_3;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.os.IInterface $r4;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

(0)     $i0_1 = $i0 + -1;

     label1:
        $r3_1 = Phi($r3 #0, $r3_2 #1);

        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        if $i0_2 < 0 goto label4;

        $r3_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3_2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0_2);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)>($r1);

     label3:
        $i0_3 = $i0_2 + -1;

(1)     goto label1;

     label4:
        $r3_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3_3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.util.List $r1;
        android.os.RemoteException $r2;
        android.os.RemoteCallbackList $r3, $r3_1, $r3_2, $r3_3;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.os.IInterface $r4;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.util.List;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

(0)     $i0_1 = $i0 + -1;

     label1:
        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        $r3_1 = Phi($r3 #0, $r3_2 #1);

        if $i0_2 < 0 goto label4;

        $r3_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3_2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0_2);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)>($r1);

     label3:
        $i0_3 = $i0_2 + -1;

(1)     goto label1;

     label4:
        $r3_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3_3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.CharSequence $r1;
        android.os.RemoteException $r2;
        android.os.RemoteCallbackList $r3, $r3_1, $r3_2, $r3_3;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.os.IInterface $r4;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.CharSequence;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

(0)     $i0_1 = $i0 + -1;

     label1:
        $r3_1 = Phi($r3 #0, $r3_2 #1);

        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        if $i0_2 < 0 goto label4;

        $r3_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3_2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0_2);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>($r1);

     label3:
        $i0_3 = $i0_2 + -1;

(1)     goto label1;

     label4:
        $r3_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3_3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendSessionDestroyed()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.RemoteException $r1;
        android.os.RemoteCallbackList $r2, $r2_1, $r2_2, $r2_3, $r2_4;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.os.IInterface $r3;
        android.support.v4.media.session.IMediaControllerCallback $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

(0)     $i0_1 = $i0 + -1;

     label1:
        $r2_1 = Phi($r2 #0, $r2_2 #1);

        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        if $i0_2 < 0 goto label4;

        $r2_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r3 = virtualinvoke $r2_2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0_2);

        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label2:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()>();

     label3:
        $i0_3 = $i0_2 + -1;

(1)     goto label1;

     label4:
        $r2_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2_3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r2_4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r2_4.<android.os.RemoteCallbackList: void kill()>();

        return;

     label5:
        $r1 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.os.RemoteException $r2;
        android.os.RemoteCallbackList $r3, $r3_1, $r3_2, $r3_3;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.os.IInterface $r4;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

(0)     $i0_1 = $i0 + -1;

     label1:
        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        $r3_1 = Phi($r3 #0, $r3_2 #1);

        if $i0_2 < 0 goto label4;

        $r3_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3_2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0_2);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)>($r1);

     label3:
        $i0_3 = $i0_2 + -1;

(1)     goto label1;

     label4:
        $r3_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3_3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;
        android.os.RemoteException $r2;
        android.os.RemoteCallbackList $r3, $r3_1, $r3_2, $r3_3;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.os.IInterface $r4;
        android.support.v4.media.session.IMediaControllerCallback $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

(0)     $i0_1 = $i0 + -1;

     label1:
        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        $r3_1 = Phi($r3 #0, $r3_2 #1);

        if $i0_2 < 0 goto label4;

        $r3_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        $r4 = virtualinvoke $r3_2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0_2);

        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r4;

     label2:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);

     label3:
        $i0_3 = $i0_2 + -1;

(1)     goto label1;

     label4:
        $r3_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;

        virtualinvoke $r3_3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label5:
        $r2 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void setVolumeTo(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        android.media.AudioManager $r1;
        android.support.v4.media.VolumeProviderCompat $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        if $i2 != 2 goto label1;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

(0)     if $r2 == null goto label2;

        $r2_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        virtualinvoke $r2_1.<android.support.v4.media.VolumeProviderCompat: void onSetVolumeTo(int)>($i0);

        return;

     label1:
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

(1)     virtualinvoke $r1.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i2_1, $i0, $i1);

     label2:
        $i2_2 = Phi($i2 #0, $i2_1 #1);

        $r2_2 = Phi($r2 #0, $r2 #1);

        return;
    }

    private boolean update()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10, $i0_11, $i0_12, $i0_13, $i0_14, $i0_15, $i0_16, $i0_17;
        android.content.Context $r1, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5, $r1_6, $r1_7, $r1_8, $r1_9, $r1_10, $r1_11, $r1_12, $r1_13, $r1_14;
        android.app.PendingIntent $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7, $r2_8;
        java.lang.Object $r3, $r3_1, $r3_2;
        android.content.ComponentName $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6, $r4_7, $r4_8;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 == 0 goto label08;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

(0)     if $i0 < 8 goto label02;

        $z0_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

(1)     if $z0_1 != 0 goto label04;

        $i0_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0_2 = $i0_1 & 1;

(2)     if $i0_2 == 0 goto label04;

        $i0_3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0_3 < 18 goto label03;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;

(3)     staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)>($r1, $r2);

     label01:
        $r1_1 = Phi($r1 #3, $r1_2 #8);

        $r2_1 = Phi($r2 #3, $r2 #8);

        $r4 = Phi($r4 #3, $r4_1 #8);

(4)     $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 1;

     label02:
        $z0_3 = Phi($z0 #0, $z0_1 #4, $z0_2 #9, $z0_2 #10, $z0_2 #12);

        $r1_6 = Phi($r1 #0, $r1_1 #4, $r1 #9, $r1 #10, $r1_4 #12);

        $r2_4 = Phi($r2 #0, $r2_1 #4, $r2 #9, $r2 #10, $r2_3 #12);

        $i0_8 = Phi($i0 #0, $i0_3 #4, $i0_4 #9, $i0_6 #10, $i0_7 #12);

        $r4_4 = Phi($r4 #0, $r4 #4, $r4 #9, $r4 #10, $r4_2 #12);

        $i0_9 = <android.os.Build$VERSION: int SDK_INT>;

(5)     if $i0_9 < 14 goto label12;

        $z0_4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

(6)     if $z0_4 != 0 goto label07;

        $i0_10 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0_11 = $i0_10 & 2;

(7)     if $i0_11 == 0 goto label07;

        $r1_7 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void registerRemoteControlClient(android.content.Context,java.lang.Object)>($r1_7, $r3);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 1;

        return 1;

     label03:
        $r1_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r4_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1_2, $r4_1);

(8)     goto label01;

     label04:
        $i0_4 = Phi($i0 #1, $i0_2 #2);

        $z0_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

(9)     if $z0_2 == 0 goto label02;

        $i0_5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0_6 = $i0_5 & 1;

(10)    if $i0_6 != 0 goto label02;

        $i0_7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0_7 < 18 goto label06;

        $r1_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r2_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;

(11)    staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)>($r1_3, $r2_2);

     label05:
        $r1_4 = Phi($r1_3 #11, $r1_5 #13);

        $r2_3 = Phi($r2_2 #11, $r2 #13);

        $r4_2 = Phi($r4 #11, $r4_3 #13);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

(12)    goto label02;

     label06:
        $r1_5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r4_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1_5, $r4_3);

(13)    goto label05;

     label07:
        $i0_12 = Phi($i0_9 #6, $i0_11 #7);

        $z0_5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

(14)    if $z0_5 == 0 goto label12;

        $i0_13 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;

        $i0_14 = $i0_13 & 2;

(15)    if $i0_14 != 0 goto label12;

        $r1_8 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r3_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void unregisterRemoteControlClient(android.content.Context,java.lang.Object)>($r1_8, $r3_1);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        return 0;

     label08:
        $z0_6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;

(16)    if $z0_6 == 0 goto label10;

        $i0_15 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0_15 < 18 goto label11;

        $r1_9 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r2_5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;

(17)    staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)>($r1_9, $r2_5);

     label09:
        $r1_10 = Phi($r1_9 #17, $r1_11 #20);

        $r2_6 = Phi($r2_5 #17, $r2 #20);

        $r4_5 = Phi($r4 #17, $r4_6 #20);

(18)    $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

     label10:
        $r1_12 = Phi($r1 #16, $r1_10 #18);

        $r2_7 = Phi($r2 #16, $r2_6 #18);

        $i0_16 = Phi($i0 #16, $i0_15 #18);

        $r4_7 = Phi($r4 #16, $r4_5 #18);

        $z0_7 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;

(19)    if $z0_7 == 0 goto label12;

        $r1_13 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r3_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void unregisterRemoteControlClient(android.content.Context,java.lang.Object)>($r1_13, $r3_2);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;

        return 0;

     label11:
        $r1_11 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;

        $r4_6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1_11, $r4_6);

(20)    goto label09;

     label12:
        $z0_8 = Phi($z0_3 #5, $z0_5 #14, $z0_5 #15, $z0_7 #19);

        $r1_14 = Phi($r1_6 #5, $r1_6 #14, $r1_6 #15, $r1_12 #19);

        $r2_8 = Phi($r2_4 #5, $r2_4 #14, $r2_4 #15, $r2_7 #19);

        $i0_17 = Phi($i0_9 #5, $i0_12 #14, $i0_14 #15, $i0_16 #19);

        $r4_8 = Phi($r4_4 #5, $r4_4 #14, $r4_4 #15, $r4_7 #19);

        return 0;
    }

    public java.lang.Object getMediaSession()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        return null;
    }

    public java.lang.Object getRemoteControlClient()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.Object r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        return r1;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        return r1;
    }

    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean z0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        return z0;
    }

    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 1;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendSessionDestroyed()>();

        return;
    }

    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

        return;
    }

    public void setActive(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean $z0, $z1, $z1_1;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $z1 := @parameter0: boolean;

        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = $z1;

        $z1_1 = specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        if $z1_1 == 0 goto label2;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;

        virtualinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        virtualinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r2);

     label2:
        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1, $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2 $r3;
        android.os.Handler $r4, $r4_1, $r4_2, $r4_3;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6;
        java.lang.Object $r5, $r6, $r6_1, $r5_1, $r5_2, $r6_2, $r5_3, $r5_4, $r5_5, $r6_3, $r5_6;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        $r4 := @parameter1: android.os.Handler;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;

        if $r1 != $r2 goto label1;

        return;

     label1:
(0)     if $r1 == null goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

(1)     if $i0 >= 18 goto label5;

     label2:
        $i0_3 = Phi($i0 #0, $i0 #1);

        $i0_4 = <android.os.Build$VERSION: int SDK_INT>;

(2)     if $i0_4 < 18 goto label3;

        $r5_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

(3)     staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)>($r5_3, null);

     label3:
        $r5_4 = Phi($r5 #2, $r5_3 #3);

        $i0_5 = <android.os.Build$VERSION: int SDK_INT>;

(4)     if $i0_5 < 19 goto label4;

        $r5_5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

(5)     staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)>($r5_5, null);

     label4:
        $r6_3 = Phi($r6 #4, $r6 #5, $r6_1 #10, $r6_2 #11);

        $r5_6 = Phi($r5_4 #4, $r5_5 #5, $r5_1 #10, $r5_2 #11);

        $i0_6 = Phi($i0_5 #4, $i0_5 #5, $i0_2 #10, $i0_2 #11);

        $r4_3 = Phi($r4 #4, $r4 #5, $r4_2 #10, $r4_2 #11);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback> = $r1;

        return;

     label5:
(6)     if $r4 != null goto label6;

        $r4_1 = new android.os.Handler;

(7)     specialinvoke $r4_1.<android.os.Handler: void <init>()>();

     label6:
        $r4_2 = Phi($r4 #6, $r4_1 #7);

        $r3 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2;

        specialinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.MediaSessionCompat$Callback)>($r0, $r1);

        $i0_1 = <android.os.Build$VERSION: int SDK_INT>;

(8)     if $i0_1 < 18 goto label7;

        $r5 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>($r3);

        $r6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

(9)     staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)>($r6, $r5);

     label7:
        $r6_1 = Phi($r6 #8, $r6 #9);

        $r5_1 = Phi($r5 #8, $r5 #9);

        $i0_2 = <android.os.Build$VERSION: int SDK_INT>;

(10)    if $i0_2 < 19 goto label4;

        $r5_2 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: java.lang.Object createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>($r3);

        $r6_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)>($r6_2, $r5_2);

(11)    goto label4;
    }

    public void setExtras(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.Bundle $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.os.Bundle;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras> = $r1;

        return;
    }

    public void setFlags(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r1;

     label1:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags> = $i0;

        exitmonitor $r1;

     label2:
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor $r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setMediaButtonReceiver(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.app.PendingIntent $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        return;
    }

    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        android.os.Bundle $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.Object $r4, $r4_1, $r4_2;
        int $i0, $i0_1;
        android.support.v4.media.session.PlaybackStateCompat $r5, $r5_1, $r5_2;
        long $l1, $l1_1, $l1_2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r3 = null;

        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r4;

     label01:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata> = $r1;

        exitmonitor $r4;

     label02:
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);

        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label06;

        return;

     label03:
        $r2 := @caughtexception;

     label04:
        exitmonitor $r4;

     label05:
        throw $r2;

     label06:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label11;

        $r4_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

(0)     if $r1 != null goto label09;

     label07:
        $r3_1 = Phi($r3 #0, $r3_2 #2);

        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        if $r5 != null goto label10;

(1)     $l1 = 0L;

     label08:
        $l1_1 = Phi($l1 #1, $l1_2 #3);

        $r5_1 = Phi($r5 #1, $r5_2 #3);

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setMetadata(java.lang.Object,android.os.Bundle,long)>($r4_1, $r3_1, $l1_1);

        return;

     label09:
        $r3_2 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();

(2)     goto label07;

     label10:
        $r5_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;

        $l1_2 = virtualinvoke $r5_2.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

(3)     goto label08;

     label11:
        $i0_1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0_1 < 14 goto label14;

        $r4_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

(4)     if $r1 != null goto label13;

     label12:
        $r3_3 = Phi($r3 #4, $r3_4 #5);

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setMetadata(java.lang.Object,android.os.Bundle)>($r4_2, $r3_3);

        return;

     label13:
        $r3_4 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();

(5)     goto label12;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
    }

    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.Object $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7, $r3_8, $r3_9;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9;
        long $l1, $l2, $l1_1, $l1_2, $l1_3, $l1_4, $l1_5;
        float $f0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r3;

     label01:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState> = $r1;

        exitmonitor $r3;

     label02:
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendState(android.support.v4.media.session.PlaybackStateCompat)>($r1);

        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;

        if $z0 != 0 goto label06;

        return;

     label03:
        $r2 := @caughtexception;

     label04:
        exitmonitor $r3;

     label05:
        throw $r2;

     label06:
        if $r1 != null goto label07;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

(0)     if $i0 < 14 goto label12;

        $r3_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r3_1, 0);

        $r3_2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setTransportControlFlags(java.lang.Object,long)>($r3_2, 0L);

        return;

     label07:
        $i0_1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0_1 < 18 goto label09;

        $r3_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $i0_2 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $l1 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();

        $f0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        $l2 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();

(1)     staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setState(java.lang.Object,int,long,float,long)>($r3_3, $i0_2, $l1, $f0, $l2);

     label08:
        $l1_1 = Phi($l1 #1, $l1 #2, $l1 #3);

        $r3_4 = Phi($r3_3 #1, $r3 #2, $r3_8 #3);

        $i0_3 = Phi($i0_2 #1, $i0_7 #2, $i0_8 #3);

        $i0_4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0_4 < 19 goto label10;

        $r3_5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $l1_2 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setTransportControlFlags(java.lang.Object,long)>($r3_5, $l1_2);

        return;

     label09:
        $i0_7 = <android.os.Build$VERSION: int SDK_INT>;

(2)     if $i0_7 < 14 goto label08;

        $r3_8 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $i0_8 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r3_8, $i0_8);

(3)     goto label08;

     label10:
        $i0_5 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0_5 < 18 goto label11;

        $r3_6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $l1_3 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setTransportControlFlags(java.lang.Object,long)>($r3_6, $l1_3);

        return;

     label11:
        $i0_6 = <android.os.Build$VERSION: int SDK_INT>;

(4)     if $i0_6 < 14 goto label12;

        $r3_7 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;

        $l1_4 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();

(5)     staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setTransportControlFlags(java.lang.Object,long)>($r3_7, $l1_4);

     label12:
        $l1_5 = Phi($l1 #0, $l1_1 #4, $l1_4 #5);

        $r3_9 = Phi($r3 #0, $r3_4 #4, $r3_7 #5);

        $i0_9 = Phi($i0 #0, $i0_6 #4, $i0_6 #5);

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
    }

    public void setPlaybackToLocal(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;
        int $i0, $i1, $i2, $i3, $i0_1, $i2_1, $i3_1;
        android.support.v4.media.VolumeProviderCompat $r2, $r2_1, $r2_2;
        android.media.AudioManager $r3, $r3_1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

(0)     if $r2 == null goto label1;

        $r2_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

(1)     virtualinvoke $r2_1.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;

        $r1 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i0_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i2_1 = virtualinvoke $r3.<android.media.AudioManager: int getStreamMaxVolume(int)>($i2);

        $r3_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;

        $i3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $i3_1 = virtualinvoke $r3_1.<android.media.AudioManager: int getStreamVolume(int)>($i3);

        specialinvoke $r1.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i1, $i0_1, 2, $i2_1, $i3_1);

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);

        return;
    }

    public void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.VolumeProviderCompat $r1, $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;
        java.lang.IllegalArgumentException $r2;
        android.support.v4.media.session.ParcelableVolumeInfo $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.media.VolumeProviderCompat$Callback $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null");

        throw $r2;

     label1:
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

(0)     if $r5 == null goto label2;

        $r5_1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

(1)     virtualinvoke $r5_1.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label2:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 2;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider> = $r1;

        $r3 = new android.support.v4.media.session.ParcelableVolumeInfo;

        $i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;

        $i1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;

        $r5_3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i2 = virtualinvoke $r5_3.<android.support.v4.media.VolumeProviderCompat: int getVolumeControl()>();

        $r5_4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i3 = virtualinvoke $r5_4.<android.support.v4.media.VolumeProviderCompat: int getMaxVolume()>();

        $r5_5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;

        $i4 = virtualinvoke $r5_5.<android.support.v4.media.VolumeProviderCompat: int getCurrentVolume()>();

        specialinvoke $r3.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4);

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r3);

        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback>;

        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>($r4);

        return;
    }

    public void setQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.util.List $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.util.List;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue> = $r1;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueue(java.util.List)>($r1);

        return;
    }

    public void setQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle> = $r1;

        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueueTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setRatingType(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $i0 := @parameter0: int;

        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = $i0;

        return;
    }

    public void setSessionActivity(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.app.PendingIntent $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        $r1 := @parameter0: android.app.PendingIntent;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;

        entermonitor $r2;

     label1:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity> = $r1;

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
