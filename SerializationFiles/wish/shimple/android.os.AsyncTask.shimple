public abstract class android.os.AsyncTask extends java.lang.Object
{
    public static final java.util.concurrent.Executor SERIAL_EXECUTOR;
    public static final java.util.concurrent.Executor THREAD_POOL_EXECUTOR;

    public void <init>()
    {
        android.os.AsyncTask r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.AsyncTask;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final android.os.AsyncTask$Status getStatus()
    {
        android.os.AsyncTask r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.AsyncTask;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected abstract transient java.lang.Object doInBackground(java.lang.Object[]);

    protected void onPreExecute()
    {
        android.os.AsyncTask r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.AsyncTask;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void onPostExecute(java.lang.Object)
    {
        android.os.AsyncTask r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.AsyncTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected transient void onProgressUpdate(java.lang.Object[])
    {
        android.os.AsyncTask r0;
        java.lang.Object[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.AsyncTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected void onCancelled(java.lang.Object)
    {
        android.os.AsyncTask r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.AsyncTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected void onCancelled()
    {
        android.os.AsyncTask r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.AsyncTask;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isCancelled()
    {
        android.os.AsyncTask r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.AsyncTask;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean cancel(boolean)
    {
        android.os.AsyncTask r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.AsyncTask;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        android.os.AsyncTask r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.os.AsyncTask;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        android.os.AsyncTask r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.AsyncTask;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final transient android.os.AsyncTask execute(java.lang.Object[])
    {
        android.os.AsyncTask r0;
        java.lang.Object[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.AsyncTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final transient android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor, java.lang.Object[])
    {
        android.os.AsyncTask r0;
        java.util.concurrent.Executor r1;
        java.lang.Object[] r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.os.AsyncTask;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static void execute(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Runnable;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected final transient void publishProgress(java.lang.Object[])
    {
        android.os.AsyncTask r0;
        java.lang.Object[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.AsyncTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    static void <clinit>()
    {
        <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR> = null;

        <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR> = null;

        return;
    }
}
