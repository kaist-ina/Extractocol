public final class ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry extends java.lang.Object
{
    private final java.util.concurrent.ConcurrentHashMap registeredSchemes;

    public void <init>()
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: java.util.concurrent.ConcurrentHashMap registeredSchemes> = $r1;

        return;
    }

    public final ch.boye.httpclientandroidlib.conn.scheme.Scheme get(java.lang.String)
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name must not be null.");

        throw $r2;

     label1:
        $r3 = $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: java.util.concurrent.ConcurrentHashMap registeredSchemes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (ch.boye.httpclientandroidlib.conn.scheme.Scheme) $r4;

        return $r5;
    }

    public final ch.boye.httpclientandroidlib.conn.scheme.Scheme getScheme(ch.boye.httpclientandroidlib.HttpHost)
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        ch.boye.httpclientandroidlib.HttpHost $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpHost;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host must not be null.");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.HttpHost: java.lang.String getSchemeName()>();

        $r4 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme getScheme(java.lang.String)>($r3);

        return $r4;
    }

    public final ch.boye.httpclientandroidlib.conn.scheme.Scheme getScheme(java.lang.String)
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, $r2_1;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r3;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r2 := @parameter0: java.lang.String;

        $r3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme get(java.lang.String)>($r2);

        if $r3 != null goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheme \'");

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not registered.");

        $r2_1 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2_1);

        throw $r1;

     label1:
        return $r3;
    }

    public final java.util.List getSchemeNames()
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        java.util.ArrayList $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Set $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r1 = new java.util.ArrayList;

        $r2 = $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: java.util.concurrent.ConcurrentHashMap registeredSchemes>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    public final ch.boye.httpclientandroidlib.conn.scheme.Scheme register(ch.boye.httpclientandroidlib.conn.scheme.Scheme)
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        java.lang.IllegalArgumentException $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r3, $r3_1;
        java.lang.String $r4;
        java.lang.Object $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r3 := @parameter0: ch.boye.httpclientandroidlib.conn.scheme.Scheme;

        if $r3 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme must not be null.");

        throw $r1;

     label1:
        $r2 = $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: java.util.concurrent.ConcurrentHashMap registeredSchemes>;

        $r4 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r3_1 = (ch.boye.httpclientandroidlib.conn.scheme.Scheme) $r5;

        return $r3_1;
    }

    public void setItems(java.util.Map)
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        java.util.Map $r1;
        java.util.concurrent.ConcurrentHashMap $r2, $r2_1;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r1 := @parameter0: java.util.Map;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: java.util.concurrent.ConcurrentHashMap registeredSchemes>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        $r2_1 = $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: java.util.concurrent.ConcurrentHashMap registeredSchemes>;

        virtualinvoke $r2_1.<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>($r1);

        return;
    }

    public final ch.boye.httpclientandroidlib.conn.scheme.Scheme unregister(java.lang.String)
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name must not be null.");

        throw $r2;

     label1:
        $r3 = $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: java.util.concurrent.ConcurrentHashMap registeredSchemes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r5 = (ch.boye.httpclientandroidlib.conn.scheme.Scheme) $r4;

        return $r5;
    }
}
