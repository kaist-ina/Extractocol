public abstract class java.nio.Buffer extends java.lang.Object
{

    void <init>()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.lang.Object array();

    public abstract int arrayOffset();

    public final int capacity()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.Buffer clear()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.Buffer flip()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract boolean hasArray();

    public final boolean hasRemaining()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract boolean isDirect();

    public abstract boolean isReadOnly();

    public final int limit()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.Buffer limit(int)
    {
        java.nio.Buffer r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.Buffer mark()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int position()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.Buffer position(int)
    {
        java.nio.Buffer r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int remaining()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.Buffer reset()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.Buffer rewind()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.nio.Buffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.Buffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
