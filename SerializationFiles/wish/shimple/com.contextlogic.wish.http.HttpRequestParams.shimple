public class com.contextlogic.wish.http.HttpRequestParams extends java.lang.Object
{
    private java.util.concurrent.ConcurrentHashMap arrayRequestParams;
    private java.util.concurrent.ConcurrentHashMap requestParams;

    public void <init>()
    {
        com.contextlogic.wish.http.HttpRequestParams $r0;
        java.util.concurrent.ConcurrentHashMap $r1, $r1_1;

        $r0 := @this: com.contextlogic.wish.http.HttpRequestParams;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap requestParams> = $r1;

        $r1_1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1_1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap arrayRequestParams> = $r1_1;

        return;
    }

    public boolean hasValue(java.lang.String)
    {
        com.contextlogic.wish.http.HttpRequestParams $r0;
        java.lang.String $r1;
        java.util.concurrent.ConcurrentHashMap $r2, $r2_1, $r2_2, $r2_3;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @this: com.contextlogic.wish.http.HttpRequestParams;

        $r1 := @parameter0: java.lang.String;

(0)     if $r1 == null goto label2;

        $r2 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap requestParams>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: boolean contains(java.lang.Object)>($r1);

(1)     if $z0 != 0 goto label1;

        $r2_1 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap arrayRequestParams>;

        $z0_1 = virtualinvoke $r2_1.<java.util.concurrent.ConcurrentHashMap: boolean contains(java.lang.Object)>($r1);

(2)     if $z0_1 == 0 goto label2;

     label1:
        $r2_2 = Phi($r2 #1, $r2_1 #2);

        $z0_2 = Phi($z0 #1, $z0_1 #2);

        return 1;

     label2:
        $r2_3 = Phi($r2 #0, $r2_1 #2);

        $z0_3 = Phi($z0 #0, $z0_1 #2);

        return 0;
    }

    public void put(java.lang.String, java.lang.String)
    {
        com.contextlogic.wish.http.HttpRequestParams $r0;
        java.lang.String $r1, $r2;
        java.util.concurrent.ConcurrentHashMap $r3;

        $r0 := @this: com.contextlogic.wish.http.HttpRequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $r3 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap requestParams>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }

    public void putArray(java.lang.String, java.util.List)
    {
        com.contextlogic.wish.http.HttpRequestParams $r0;
        java.lang.String $r1;
        java.util.List $r2;
        java.util.concurrent.ConcurrentHashMap $r3;

        $r0 := @this: com.contextlogic.wish.http.HttpRequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.List;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $r3 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap arrayRequestParams>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }

    public void removeArray(java.lang.String)
    {
        com.contextlogic.wish.http.HttpRequestParams $r0;
        java.lang.String $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        $r0 := @this: com.contextlogic.wish.http.HttpRequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap arrayRequestParams>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public ch.boye.httpclientandroidlib.HttpEntity toEntity()
    {
        com.contextlogic.wish.http.HttpRequestParams $r0;
        java.util.LinkedList $r1;
        ch.boye.httpclientandroidlib.client.entity.UrlEncodedFormEntity $r2;
        java.io.UnsupportedEncodingException $r3;
        java.util.concurrent.ConcurrentHashMap $r4, $r4_1;
        java.util.Set $r5, $r5_1;
        java.util.Iterator $r6, $r13, $r6_1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.Object $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7, $r7_8, $r7_9;
        java.util.Map$Entry $r8, $r8_1, $r8_2, $r8_3;
        ch.boye.httpclientandroidlib.message.BasicNameValuePair $r9, $r9_1, $r9_2, $r9_3, $r9_4;
        java.lang.String $r10, $r11, $r10_1, $r11_1, $r11_2, $r10_2, $r11_3, $r10_3, $r10_4, $r11_4;
        java.util.List $r12;

        $r0 := @this: com.contextlogic.wish.http.HttpRequestParams;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r4 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap requestParams>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

(0)     $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r8 = Phi($r8 #0, $r8_1 #1);

        $z0 = Phi($z0 #0, $z0_1 #1);

        $r7 = Phi($r7 #0, $r7_3 #1);

        $r11 = Phi($r11 #0, $r11_1 #1);

        $r9 = Phi($r9 #0, $r9_1 #1);

        $r10 = Phi($r10 #0, $r10_1 #1);

        $z0_1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label2;

        $r7_1 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8_1 = (java.util.Map$Entry) $r7_1;

        $r9_1 = new ch.boye.httpclientandroidlib.message.BasicNameValuePair;

        $r7_2 = interfaceinvoke $r8_1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10_1 = (java.lang.String) $r7_2;

        $r7_3 = interfaceinvoke $r8_1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11_1 = (java.lang.String) $r7_3;

        specialinvoke $r9_1.<ch.boye.httpclientandroidlib.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r10_1, $r11_1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r9_1);

(1)     goto label1;

     label2:
        $r4_1 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap arrayRequestParams>;

        $r5_1 = virtualinvoke $r4_1.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

(2)     $r6_1 = interfaceinvoke $r5_1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $r8_2 = Phi($r8 #2, $r8_3 #4);

        $z0_2 = Phi($z0_1 #2, $z0_5 #4);

        $r7_4 = Phi($r7 #2, $r7_7 #4);

        $r11_2 = Phi($r11 #2, $r11_3 #4);

        $r9_2 = Phi($r9 #2, $r9_3 #4);

        $r10_2 = Phi($r10 #2, $r10_3 #4);

        $z0_3 = interfaceinvoke $r6_1.<java.util.Iterator: boolean hasNext()>();

        if $z0_3 == 0 goto label5;

        $r7_5 = interfaceinvoke $r6_1.<java.util.Iterator: java.lang.Object next()>();

        $r8_3 = (java.util.Map$Entry) $r7_5;

        $r7_6 = interfaceinvoke $r8_3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.List) $r7_6;

(3)     $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0_4 = Phi($z0_3 #3, $z0_5 #5);

        $r7_7 = Phi($r7_6 #3, $r7_9 #5);

        $r11_3 = Phi($r11_2 #3, $r11_4 #5);

        $r9_3 = Phi($r9_2 #3, $r9_4 #5);

        $r10_3 = Phi($r10_2 #3, $r10_4 #5);

        $z0_5 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

(4)     if $z0_5 == 0 goto label3;

        $r7_8 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r10_4 = (java.lang.String) $r7_8;

        $r9_4 = new ch.boye.httpclientandroidlib.message.BasicNameValuePair;

        $r7_9 = interfaceinvoke $r8_3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11_4 = (java.lang.String) $r7_9;

        specialinvoke $r9_4.<ch.boye.httpclientandroidlib.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r11_4, $r10_4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r9_4);

(5)     goto label4;

     label5:
        $r2 = new ch.boye.httpclientandroidlib.client.entity.UrlEncodedFormEntity;

     label6:
        specialinvoke $r2.<ch.boye.httpclientandroidlib.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r1, "UTF-8");

     label7:
        return $r2;

     label8:
        $r3 := @caughtexception;

        return null;

        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
    }

    public java.lang.String toString()
    {
        com.contextlogic.wish.http.HttpRequestParams $r0;
        java.util.LinkedList $r1;
        java.util.concurrent.ConcurrentHashMap $r2, $r2_1;
        java.util.Set $r3, $r3_1;
        java.util.Iterator $r4, $r11, $r4_1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8, $r5_9;
        java.util.Map$Entry $r6, $r6_1, $r6_2, $r6_3;
        ch.boye.httpclientandroidlib.message.BasicNameValuePair $r7, $r7_1, $r7_2, $r7_3, $r7_4;
        java.lang.String $r8, $r9, $r8_1, $r9_1, $r9_2, $r8_2, $r9_3, $r8_3, $r8_4, $r9_4, $r8_5;
        java.util.List $r10;

        $r0 := @this: com.contextlogic.wish.http.HttpRequestParams;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r2 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap requestParams>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

(0)     $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r9 = Phi($r9 #0, $r9_1 #1);

        $r7 = Phi($r7 #0, $r7_1 #1);

        $z0 = Phi($z0 #0, $z0_1 #1);

        $r6 = Phi($r6 #0, $r6_1 #1);

        $r5 = Phi($r5 #0, $r5_3 #1);

        $r8 = Phi($r8 #0, $r8_1 #1);

        $z0_1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label2;

        $r5_1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6_1 = (java.util.Map$Entry) $r5_1;

        $r7_1 = new ch.boye.httpclientandroidlib.message.BasicNameValuePair;

        $r5_2 = interfaceinvoke $r6_1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8_1 = (java.lang.String) $r5_2;

        $r5_3 = interfaceinvoke $r6_1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9_1 = (java.lang.String) $r5_3;

        specialinvoke $r7_1.<ch.boye.httpclientandroidlib.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r8_1, $r9_1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7_1);

(1)     goto label1;

     label2:
        $r2_1 = $r0.<com.contextlogic.wish.http.HttpRequestParams: java.util.concurrent.ConcurrentHashMap arrayRequestParams>;

        $r3_1 = virtualinvoke $r2_1.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

(2)     $r4_1 = interfaceinvoke $r3_1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $r9_2 = Phi($r9 #2, $r9_3 #4);

        $r7_2 = Phi($r7 #2, $r7_3 #4);

        $z0_2 = Phi($z0_1 #2, $z0_5 #4);

        $r6_2 = Phi($r6 #2, $r6_3 #4);

        $r5_4 = Phi($r5 #2, $r5_7 #4);

        $r8_2 = Phi($r8 #2, $r8_3 #4);

        $z0_3 = interfaceinvoke $r4_1.<java.util.Iterator: boolean hasNext()>();

        if $z0_3 == 0 goto label5;

        $r5_5 = interfaceinvoke $r4_1.<java.util.Iterator: java.lang.Object next()>();

        $r6_3 = (java.util.Map$Entry) $r5_5;

        $r5_6 = interfaceinvoke $r6_3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.List) $r5_6;

(3)     $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $r9_3 = Phi($r9_2 #3, $r9_4 #5);

        $r7_3 = Phi($r7_2 #3, $r7_4 #5);

        $z0_4 = Phi($z0_3 #3, $z0_5 #5);

        $r5_7 = Phi($r5_6 #3, $r5_9 #5);

        $r8_3 = Phi($r8_2 #3, $r8_4 #5);

        $z0_5 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

(4)     if $z0_5 == 0 goto label3;

        $r5_8 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r8_4 = (java.lang.String) $r5_8;

        $r7_4 = new ch.boye.httpclientandroidlib.message.BasicNameValuePair;

        $r5_9 = interfaceinvoke $r6_3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9_4 = (java.lang.String) $r5_9;

        specialinvoke $r7_4.<ch.boye.httpclientandroidlib.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r9_4, $r8_4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7_4);

(5)     goto label4;

     label5:
        $r8_5 = staticinvoke <ch.boye.httpclientandroidlib.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)>($r1, "UTF-8");

        return $r8_5;
    }
}
