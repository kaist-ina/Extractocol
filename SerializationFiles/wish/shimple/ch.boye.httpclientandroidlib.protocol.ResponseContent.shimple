public class ch.boye.httpclientandroidlib.protocol.ResponseContent extends java.lang.Object implements ch.boye.httpclientandroidlib.HttpResponseInterceptor
{
    private final boolean overwrite;

    public void <init>()
    {
        ch.boye.httpclientandroidlib.protocol.ResponseContent $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.ResponseContent;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.protocol.ResponseContent: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        ch.boye.httpclientandroidlib.protocol.ResponseContent $r0;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.ResponseContent;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.protocol.ResponseContent: boolean overwrite> = $z0;

        return;
    }

    public void process(ch.boye.httpclientandroidlib.HttpResponse, ch.boye.httpclientandroidlib.protocol.HttpContext) throws ch.boye.httpclientandroidlib.HttpException, java.io.IOException
    {
        ch.boye.httpclientandroidlib.protocol.ResponseContent $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        ch.boye.httpclientandroidlib.protocol.HttpContext $r2;
        java.lang.IllegalArgumentException $r3;
        ch.boye.httpclientandroidlib.HttpVersion $r4;
        byte $b0;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11;
        ch.boye.httpclientandroidlib.StatusLine $r5, $r5_1, $r5_2;
        ch.boye.httpclientandroidlib.ProtocolVersion $r6;
        ch.boye.httpclientandroidlib.HttpEntity $r7;
        long $l1, $l1_1, $l1_2, $l1_3;
        ch.boye.httpclientandroidlib.Header $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5;
        ch.boye.httpclientandroidlib.ProtocolException $r9, $r9_1;
        java.lang.String $r10;
        int $i2;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.ResponseContent;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.protocol.HttpContext;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r3;

     label1:
        $z0 = $r0.<ch.boye.httpclientandroidlib.protocol.ResponseContent: boolean overwrite>;

        if $z0 == 0 goto label5;

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void removeHeaders(java.lang.String)>("Transfer-Encoding");

(0)     interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void removeHeaders(java.lang.String)>("Content-Length");

     label2:
        $z0_1 = Phi($z0 #0, $z0_11 #9);

        $r5 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $r6 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.StatusLine: ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion()>();

        $r7 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.HttpEntity getEntity()>();

        if $r7 == null goto label8;

        $l1 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HttpEntity: long getContentLength()>();

        $z0_2 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HttpEntity: boolean isChunked()>();

(1)     if $z0_2 == 0 goto label7;

        $r4 = <ch.boye.httpclientandroidlib.HttpVersion: ch.boye.httpclientandroidlib.HttpVersion HTTP_1_0>;

        $z0_3 = virtualinvoke $r6.<ch.boye.httpclientandroidlib.ProtocolVersion: boolean lessEquals(ch.boye.httpclientandroidlib.ProtocolVersion)>($r4);

(2)     if $z0_3 != 0 goto label7;

(3)     interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

     label3:
        $l1_1 = Phi($l1 #3, $l1 #10, $l1_2 #11);

        $z0_4 = Phi($z0_3 #3, $z0_8 #10, $z0_8 #11);

        $r8 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HttpEntity: ch.boye.httpclientandroidlib.Header getContentType()>();

(4)     if $r8 == null goto label4;

        $z0_5 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Type");

(5)     if $z0_5 != 0 goto label4;

        $r8_1 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HttpEntity: ch.boye.httpclientandroidlib.Header getContentType()>();

(6)     interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(ch.boye.httpclientandroidlib.Header)>($r8_1);

     label4:
        $z0_6 = Phi($z0_4 #4, $z0_5 #5, $z0_5 #6);

        $r8_2 = Phi($r8 #4, $r8 #5, $r8_1 #6);

        $r8_3 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HttpEntity: ch.boye.httpclientandroidlib.Header getContentEncoding()>();

(7)     if $r8_3 == null goto label9;

        $z0_7 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Encoding");

(8)     if $z0_7 != 0 goto label9;

        $r8_4 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HttpEntity: ch.boye.httpclientandroidlib.Header getContentEncoding()>();

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(ch.boye.httpclientandroidlib.Header)>($r8_4);

        return;

     label5:
        $z0_10 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: boolean containsHeader(java.lang.String)>("Transfer-Encoding");

        if $z0_10 == 0 goto label6;

        $r9 = new ch.boye.httpclientandroidlib.ProtocolException;

        specialinvoke $r9.<ch.boye.httpclientandroidlib.ProtocolException: void <init>(java.lang.String)>("Transfer-encoding header already present");

        throw $r9;

     label6:
        $z0_11 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Length");

(9)     if $z0_11 == 0 goto label2;

        $r9_1 = new ch.boye.httpclientandroidlib.ProtocolException;

        specialinvoke $r9_1.<ch.boye.httpclientandroidlib.ProtocolException: void <init>(java.lang.String)>("Content-Length header already present");

        throw $r9_1;

     label7:
        $z0_8 = Phi($z0_2 #1, $z0_3 #2);

        $b0 = $l1 cmp 0L;

(10)    if $b0 < 0 goto label3;

        $l1_2 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HttpEntity: long getContentLength()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1_2);

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Content-Length", $r10);

(11)    goto label3;

     label8:
        $r5_1 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i2 = interfaceinvoke $r5_1.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

(12)    if $i2 == 204 goto label9;

(13)    if $i2 == 304 goto label9;

(14)    if $i2 == 205 goto label9;

(15)    interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Content-Length", "0");

     label9:
        $l1_3 = Phi($l1_1 #7, $l1_1 #8, $l1 #12, $l1 #13, $l1 #14, $l1 #15);

        $z0_9 = Phi($z0_6 #7, $z0_7 #8, $z0_1 #12, $z0_1 #13, $z0_1 #14, $z0_1 #15);

        $r8_5 = Phi($r8_3 #7, $r8_3 #8, $r8 #12, $r8 #13, $r8 #14, $r8 #15);

        $r5_2 = Phi($r5 #7, $r5 #8, $r5_1 #12, $r5_1 #13, $r5_1 #14, $r5_1 #15);

        return;
    }
}
