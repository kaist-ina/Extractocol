public class ch.boye.httpclientandroidlib.message.BasicTokenIterator extends java.lang.Object implements ch.boye.httpclientandroidlib.TokenIterator
{
    public static final java.lang.String HTTP_SEPARATORS;
    protected java.lang.String currentHeader;
    protected java.lang.String currentToken;
    protected final ch.boye.httpclientandroidlib.HeaderIterator headerIt;
    protected int searchPos;

    public void <init>(ch.boye.httpclientandroidlib.HeaderIterator)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        ch.boye.httpclientandroidlib.HeaderIterator $r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HeaderIterator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header iterator must not be null.");

        throw $r2;

     label1:
        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: ch.boye.httpclientandroidlib.HeaderIterator headerIt> = $r1;

        $i0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int findNext(int)>(-1);

        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int searchPos> = $i0;

        return;
    }

    protected java.lang.String createToken(java.lang.String, int, int)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        int $i0, $i1;
        java.lang.String $r1, $r1_1;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1_1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r1_1;
    }

    protected int findNext(int) throws ch.boye.httpclientandroidlib.ParseException
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4;
        ch.boye.httpclientandroidlib.HeaderIterator $r1, $r1_1, $r1_2;
        boolean $z0;
        ch.boye.httpclientandroidlib.Header $r2;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label3;

        $r1 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: ch.boye.httpclientandroidlib.HeaderIterator headerIt>;

        $z0 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HeaderIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r1_1 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: ch.boye.httpclientandroidlib.HeaderIterator headerIt>;

        $r2 = interfaceinvoke $r1_1.<ch.boye.httpclientandroidlib.HeaderIterator: ch.boye.httpclientandroidlib.Header nextHeader()>();

        $r3 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader> = $r3;

(0)     $i0_1 = 0;

     label2:
        $r3_1 = Phi($r3 #0, $r3 #1);

        $i0_2 = Phi($i0_1 #0, $i0_4 #1);

        $r1_2 = Phi($r1_1 #0, $r1 #1);

        $i0_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int findTokenStart(int)>($i0_2);

        if $i0_3 >= 0 goto label4;

        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentToken> = null;

        return -1;

     label3:
        $i0_4 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int findTokenSeparator(int)>($i0);

(1)     goto label2;

     label4:
        $i1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int findTokenEnd(int)>($i0_3);

        $r3_2 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $r3_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String createToken(java.lang.String,int,int)>($r3_2, $i0_3, $i1);

        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentToken> = $r3_3;

        return $i1;
    }

    protected int findTokenEnd(int)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        java.lang.IllegalArgumentException $r1;
        int $i0, $i1, $i0_1, $i0_2, $i0_3;
        java.lang.StringBuilder $r2, $r2_1, $r2_2;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        char $c2;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2_1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token start position must not be negative: ");

        $r2_2 = virtualinvoke $r2_1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $r3_1 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $i1 = virtualinvoke $r3_1.<java.lang.String: int length()>();

(0)     $i0_1 = $i0 + 1;

     label2:
        $r3_2 = Phi($r3_1 #0, $r3_3 #3);

        $i0_2 = Phi($i0_1 #0, $i0_3 #3);

(1)     if $i0_2 >= $i1 goto label3;

        $r3_3 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $c2 = virtualinvoke $r3_3.<java.lang.String: char charAt(int)>($i0_2);

        $z0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isTokenChar(char)>($c2);

(2)     if $z0 == 0 goto label3;

        $i0_3 = $i0_2 + 1;

(3)     goto label2;

     label3:
        $r3_4 = Phi($r3_2 #1, $r3_3 #2);

        return $i0_2;
    }

    protected int findTokenSeparator(int)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        java.lang.IllegalArgumentException $r1;
        int $i0, $i1, $i0_1, $i0_2;
        java.lang.StringBuilder $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7, $r2_8, $r2_9, $r2_10, $r2_11, $r2_12;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7;
        boolean $z0, $z1, $z0_1, $z1_1, $z0_2, $z1_2, $z0_3;
        char $c2;
        ch.boye.httpclientandroidlib.ParseException $r4, $r4_1;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2_1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Search position must not be negative: ");

        $r2_2 = virtualinvoke $r2_1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $z0 = 0;

        $r3_1 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

(0)     $i1 = virtualinvoke $r3_1.<java.lang.String: int length()>();

     label2:
        $i0_1 = Phi($i0 #0, $i0_1 #1, $i0_2 #2);

        $z1 = Phi($z1 #0, $z1_1 #1, $z1_2 #2);

        $r3_2 = Phi($r3_1 #0, $r3_3 #1, $r3_3 #2);

        $z0_1 = Phi($z0 #0, $z0_2 #1, $z0_1 #2);

        if $z0_1 != 0 goto label6;

        if $i0_1 >= $i1 goto label6;

        $r3_3 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $c2 = virtualinvoke $r3_3.<java.lang.String: char charAt(int)>($i0_1);

        $z1_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isTokenSeparator(char)>($c2);

        if $z1_1 == 0 goto label3;

        $z0_2 = 1;

(1)     goto label2;

     label3:
        $z1_2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isWhitespace(char)>($c2);

        if $z1_2 == 0 goto label4;

        $i0_2 = $i0_1 + 1;

(2)     goto label2;

     label4:
        $z0_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isTokenChar(char)>($c2);

        if $z0_3 == 0 goto label5;

        $r4 = new ch.boye.httpclientandroidlib.ParseException;

        $r2_3 = new java.lang.StringBuilder;

        specialinvoke $r2_3.<java.lang.StringBuilder: void <init>()>();

        $r2_4 = virtualinvoke $r2_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tokens without separator (pos ");

        $r2_5 = virtualinvoke $r2_4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0_1);

        $r2_6 = virtualinvoke $r2_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r3_4 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $r2_7 = virtualinvoke $r2_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3_4);

        $r3_5 = virtualinvoke $r2_7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<ch.boye.httpclientandroidlib.ParseException: void <init>(java.lang.String)>($r3_5);

        throw $r4;

     label5:
        $r4_1 = new ch.boye.httpclientandroidlib.ParseException;

        $r2_8 = new java.lang.StringBuilder;

        specialinvoke $r2_8.<java.lang.StringBuilder: void <init>()>();

        $r2_9 = virtualinvoke $r2_8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid character after token (pos ");

        $r2_10 = virtualinvoke $r2_9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0_1);

        $r2_11 = virtualinvoke $r2_10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r3_6 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $r2_12 = virtualinvoke $r2_11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3_6);

        $r3_7 = virtualinvoke $r2_12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4_1.<ch.boye.httpclientandroidlib.ParseException: void <init>(java.lang.String)>($r3_7);

        throw $r4_1;

     label6:
        return $i0_1;
    }

    protected int findTokenStart(int)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        java.lang.IllegalArgumentException $r1;
        ch.boye.httpclientandroidlib.ParseException $r2;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7;
        java.lang.String $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6, $r4_7, $r4_8, $r4_9, $r4_10;
        boolean $z0, $z1, $z0_1, $z1_1, $z0_2, $z1_2, $z1_3, $z0_3, $z0_4, $z1_4, $z1_5;
        char $c2, $c2_1, $c2_2, $c2_3;
        ch.boye.httpclientandroidlib.HeaderIterator $r5, $r5_1, $r5_2;
        ch.boye.httpclientandroidlib.Header $r6;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label01;

        $r1 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Search position must not be negative: ");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label01:
(0)     $z0 = 0;

     label02:
        $r5 = Phi($r5 #0, $r5 #8, $r5_2 #9, $r5_1 #10);

        $i0_1 = Phi($i0 #0, $i0_2 #8, $i0_4 #9, $i0_2 #10);

        $c2 = Phi($c2 #0, $c2_1 #8, $c2_1 #9, $c2_1 #10);

        $z1 = Phi($z1 #0, $z1_1 #8, $z1_5 #9, $z1_5 #10);

        $r4_1 = Phi($r4 #0, $r4_4 #8, $r4_9 #9, $r4_4 #10);

        $z0_1 = Phi($z0 #0, $z0_2 #8, $z0_2 #9, $z0_2 #10);

(1)     if $z0_1 != 0 goto label09;

        $r4_2 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

(2)     if $r4_2 == null goto label09;

        $r4_3 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

(3)     $i1 = virtualinvoke $r4_3.<java.lang.String: int length()>();

     label03:
        $i0_2 = Phi($i0_1 #3, $i0_3 #6, $i0_2 #7);

        $c2_1 = Phi($c2 #3, $c2_2 #6, $c2_3 #7);

        $z1_1 = Phi($z1 #3, $z1_4 #6, $z1_3 #7);

        $r4_4 = Phi($r4_3 #3, $r4_5 #6, $r4_6 #7);

        $z0_2 = Phi($z0_1 #3, $z0_2 #6, $z0_4 #7);

        if $z0_2 != 0 goto label07;

        if $i0_2 >= $i1 goto label07;

        $r4_5 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $c2_2 = virtualinvoke $r4_5.<java.lang.String: char charAt(int)>($i0_2);

        $z1_2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isTokenSeparator(char)>($c2_2);

(4)     if $z1_2 != 0 goto label04;

        $z1_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isWhitespace(char)>($c2_2);

(5)     if $z1_3 == 0 goto label05;

     label04:
        $z1_4 = Phi($z1_2 #4, $z1_3 #5);

        $i0_3 = $i0_2 + 1;

(6)     goto label03;

     label05:
        $r4_6 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $c2_3 = virtualinvoke $r4_6.<java.lang.String: char charAt(int)>($i0_2);

        $z0_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isTokenChar(char)>($c2_3);

        if $z0_3 == 0 goto label06;

        $z0_4 = 1;

(7)     goto label03;

     label06:
        $r2 = new ch.boye.httpclientandroidlib.ParseException;

        $r3_3 = new java.lang.StringBuilder;

        specialinvoke $r3_3.<java.lang.StringBuilder: void <init>()>();

        $r3_4 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid character before token (pos ");

        $r3_5 = virtualinvoke $r3_4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0_2);

        $r3_6 = virtualinvoke $r3_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r4_7 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader>;

        $r3_7 = virtualinvoke $r3_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_7);

        $r4_8 = virtualinvoke $r3_7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<ch.boye.httpclientandroidlib.ParseException: void <init>(java.lang.String)>($r4_8);

        throw $r2;

     label07:
(8)     if $z0_2 != 0 goto label02;

        $r5_1 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: ch.boye.httpclientandroidlib.HeaderIterator headerIt>;

        $z1_5 = interfaceinvoke $r5_1.<ch.boye.httpclientandroidlib.HeaderIterator: boolean hasNext()>();

        if $z1_5 == 0 goto label08;

        $r5_2 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: ch.boye.httpclientandroidlib.HeaderIterator headerIt>;

        $r6 = interfaceinvoke $r5_2.<ch.boye.httpclientandroidlib.HeaderIterator: ch.boye.httpclientandroidlib.Header nextHeader()>();

        $r4_9 = interfaceinvoke $r6.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader> = $r4_9;

        $i0_4 = 0;

(9)     goto label02;

     label08:
        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentHeader> = null;

(10)    goto label02;

     label09:
        $r4_10 = Phi($r4_1 #1, $r4_2 #2);

        if $z0_1 == 0 goto label10;

        return $i0_1;

     label10:
        return -1;
    }

    public boolean hasNext()
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        java.lang.String $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $r1 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentToken>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isHttpSeparator(char)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        char $c0;
        java.lang.String $r1;
        int $i1;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $c0 := @parameter0: char;

        $r1 = " ,;=()<>@:\\\"/[]?{}\t";

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0);

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isTokenChar(char)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        char $c0;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0_1 = staticinvoke <java.lang.Character: boolean isISOControl(char)>($c0);

        if $z0_1 == 0 goto label2;

        return 0;

     label2:
        $z0_2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: boolean isHttpSeparator(char)>($c0);

        if $z0_2 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    protected boolean isTokenSeparator(char)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        char $c0;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $c0 := @parameter0: char;

        if $c0 != 44 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isWhitespace(char)
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        char $c0;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $c0 := @parameter0: char;

        if $c0 == 9 goto label1;

        $z0 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public final java.lang.Object next() throws java.util.NoSuchElementException, ch.boye.httpclientandroidlib.ParseException
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        java.lang.String $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $r1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String nextToken()>();

        return $r1;
    }

    public java.lang.String nextToken() throws java.util.NoSuchElementException, ch.boye.httpclientandroidlib.ParseException
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        java.util.NoSuchElementException $r1;
        int $i0, $i0_1;
        java.lang.String $r2, $r2_1;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $r2 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentToken>;

        if $r2 != null goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Iteration already finished.");

        throw $r1;

     label1:
        $r2_1 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: java.lang.String currentToken>;

        $i0 = $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int searchPos>;

        $i0_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int findNext(int)>($i0);

        $r0.<ch.boye.httpclientandroidlib.message.BasicTokenIterator: int searchPos> = $i0_1;

        return $r2_1;
    }

    public final void remove() throws java.lang.UnsupportedOperationException
    {
        ch.boye.httpclientandroidlib.message.BasicTokenIterator $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.message.BasicTokenIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing tokens is not supported.");

        throw $r1;
    }
}
