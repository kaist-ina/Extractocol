public class com.contextlogic.wish.util.BitmapUtil extends java.lang.Object
{

    public void <init>()
    {
        com.contextlogic.wish.util.BitmapUtil $r0;

        $r0 := @this: com.contextlogic.wish.util.BitmapUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap cropBitmap(android.graphics.Bitmap, int, int)
    {
        int $i0, $i1;
        android.graphics.Bitmap $r0, $r0_1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0_1 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap cropBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i0, $i1, 0);

        return $r0_1;
    }

    public static android.graphics.Bitmap cropBitmap(android.graphics.Bitmap, int, int, boolean)
    {
        android.graphics.Bitmap $r0, $r3, $r4, $r3_1, $r4_1, $r3_2, $r4_2, $r3_3, $r4_3, $r3_4, $r4_4, $r3_5;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6, $i2_7, $i3_1, $i3_2, $i3_3, $i3_4, $i3_5, $i3_6, $i2_8;
        boolean $z0;
        java.lang.Throwable $r1, $r2;
        java.lang.Runtime $r5;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $r0 != null goto label01;

        return null;

     label01:
(0)     if $i0 == -1 goto label14;

(1)     if $i1 == -1 goto label14;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

(2)     if $i0 < $i2 goto label02;

        $i2_1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

(3)     if $i1 >= $i2_1 goto label14;

     label02:
        $i2_2 = Phi($i2 #2, $i2_1 #3);

        $i2_3 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

(4)     if $i0 > $i2_3 goto label14;

        $i2_4 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

(5)     if $i1 > $i2_4 goto label14;

        $r3 = null;

        $i2_5 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2_6 = $i2_5 - $i0;

        $i2_7 = $i2_6 / 2;

        if $z0 == 0 goto label07;

(6)     $i3 = 0;

     label03:
        $i3_1 = Phi($i3 #6, $i3_4 #9);

(7)     $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r0, $i2_7, $i3_1, $i0, $i1);

     label04:
        $r3_1 = $r4;

(8)     if $r4 == $r0 goto label15;

     label05:
        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

     label06:
        return $r4;

     label07:
        $i3_2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i3_3 = $i3_2 - $i1;

        $i3_4 = $i3_3 / 2;

(9)     goto label03;

     label08:
        $r1 := @caughtexception;

        $r4_1 = Phi($r4 #6, $r4 #9, $r4 #7);

        $r3_2 = Phi($r3 #6, $r3 #9, $r3 #7, $r3_1 #8);

        $i3_5 = Phi($i3 #6, $i3_4 #9, $i3_1 #7);

        staticinvoke <java.lang.System: void gc()>();

        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

(10)    virtualinvoke $r5.<java.lang.Runtime: void gc()>();

     label09:
(11)    $r4_2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r0, $i2_7, $i3_5, $i0, $i1);

     label10:
        $r3_3 = $r4_2;

(12)    if $r4_2 == $r0 goto label15;

     label11:
        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

     label12:
        return $r4_2;

     label13:
        $r2 := @caughtexception;

        $r4_3 = Phi($r4_1 #10, $r4_2 #11);

        $r3_4 = Phi($r3_2 #10, $r3_3 #12);

        return $r3_4;

     label14:
        $i2_8 = Phi($i2 #0, $i2 #1, $i2_1 #3, $i2_3 #4, $i2_4 #5);

        return $r0;

     label15:
        $r4_4 = Phi($r4 #8, $r4_2 #12);

        $r3_5 = Phi($r3_1 #8, $r3_3 #12);

        $i3_6 = Phi($i3_1 #8, $i3_5 #12);

        return $r4_4;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public static android.graphics.Bitmap decodeBitmap(byte[], int, int, boolean)
    {
        byte[] $r0;
        boolean $z0, $z1, $z1_1, $z1_2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i0_1, $i3_1, $i5_1, $i6_1, $i6_2, $i5_2, $i6_3, $i5_3, $i6_4, $i5_4, $i6_5, $i5_5, $i6_6, $i3_2, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6;
        android.graphics.Bitmap$Config $r1;
        byte $b4;
        java.lang.Throwable $r2, $r3;
        android.graphics.BitmapFactory$Options $r4, $r4_1;
        float $f0, $f1, $f2, $f3, $f0_1, $f1_1, $f1_2, $f1_3, $f0_2, $f0_3, $f1_4, $f0_4, $f1_5, $f1_6, $f2_1, $f2_2, $f0_5, $f0_6, $f0_7, $f0_8, $f0_9, $f0_10, $f1_7, $f2_3, $f0_11, $f1_8, $f0_12, $f1_9, $f0_13, $f1_10, $f0_14, $f1_11, $f0_15, $f1_12;
        com.contextlogic.wish.WishApplication $r5;
        android.graphics.Bitmap $r6, $r7, $r6_1, $r7_1, $r6_2, $r6_3, $r6_4, $r7_2, $r7_3, $r6_5, $r7_4, $r6_6, $r6_7, $r6_8, $r7_5, $r6_9, $r7_6;
        java.lang.Runtime $r8;

        $r0 := @parameter0: byte[];

        $i5 := @parameter1: int;

        $i6 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r4 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r4.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r4.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i0 = lengthof $r0;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, 0, $i0, $r4);

        $i7 = $r4.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i0_1 = $r4.<android.graphics.BitmapFactory$Options: int outWidth>;

        $r4_1 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r4_1.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r4_1.<android.graphics.BitmapFactory$Options: boolean inPurgeable> = 1;

        $r4_1.<android.graphics.BitmapFactory$Options: boolean inInputShareable> = 1;

        $r4_1.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $r4_1.<android.graphics.BitmapFactory$Options: boolean inScaled> = 0;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4_1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r1;

        $f0 = (float) $i5;

        $f1 = (float) $i6;

        $i3 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: int getInSampleValue(int,int,float,float)>($i0_1, $i7, $f0, $f1);

        $r4_1.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i3;

        $z1 = 0;

        $i1 = $i5;

        $i8 = $i6;

(0)     if $z0 == 0 goto label03;

(1)     if $i0_1 >= $i5 goto label03;

(2)     if $i5 == -1 goto label03;

(3)     if $i7 >= $i6 goto label03;

(4)     if $i6 == -1 goto label03;

        $r5 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

        $f0_1 = virtualinvoke $r5.<com.contextlogic.wish.WishApplication: float getDisplayDensity()>();

        $f1_1 = (float) $i0_1;

        $f1_2 = $f1_1 * $f0_1;

        $i2 = (int) $f1_2;

        $f1_3 = (float) $i7;

        $f0_2 = $f1_3 * $f0_1;

        $i3_1 = (int) $f0_2;

        $f0_3 = (float) $i5;

        $f1_4 = (float) $i2;

        $f0_4 = $f0_3 / $f1_4;

        $f1_5 = (float) $i6;

        $f2 = (float) $i3_1;

        $f1_6 = $f1_5 / $f2;

        $f2_1 = (float) $i7;

        $f3 = (float) $i0_1;

        $f2_2 = $f2_1 / $f3;

        if $i2 > $i5 goto label01;

        if $i3_1 <= $i6 goto label17;

     label01:
        $b4 = $f0_4 cmpg $f1_6;

        if $b4 >= 0 goto label16;

        $i6_2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i5_2 = $i6_2;

        $f0_5 = (float) $i6_2;

        $f0_6 = $f0_5 * $f2_2;

(5)     $i6_3 = (int) $f0_6;

     label02:
        $i5_4 = Phi($i5_2 #5, $i5_3 #24, $i5_1 #25);

        $i6_5 = Phi($i6_3 #5, $i6_4 #24, $i6_1 #25);

        $f0_9 = Phi($f0_6 #5, $f0_8 #24, $f0_4 #25);

(6)     $z1_1 = 1;

     label03:
        $z1_2 = Phi($z1 #0, $z1 #1, $z1 #2, $z1 #3, $z1 #4, $z1_1 #6);

        $i5_5 = Phi($i5 #0, $i5 #1, $i5 #2, $i5 #3, $i5 #4, $i5_4 #6);

        $i6_6 = Phi($i6 #0, $i6 #1, $i6 #2, $i6 #3, $i6 #4, $i6_5 #6);

        $f0_10 = Phi($f0 #0, $f0 #1, $f0 #2, $f0 #3, $f0 #4, $f0_9 #6);

        $f1_7 = Phi($f1 #0, $f1 #1, $f1 #2, $f1 #3, $f1 #4, $f1_6 #6);

        $i3_2 = Phi($i3 #0, $i3 #1, $i3 #2, $i3 #3, $i3 #4, $i3_1 #6);

        $f2_3 = Phi($f2 #0, $f2 #1, $f2 #2, $f2 #3, $f2 #4, $f2_2 #6);

(7)     $r6 = null;

     label04:
(8)     $i0_2 = lengthof $r0;

        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, 0, $i0_2, $r4_1);

     label05:
        $r6_1 = $r7;

(9)     if $r7 == null goto label09;

     label06:
(10)    $f0_11 = (float) $i5_5;

(11)    $f1_8 = (float) $i6_6;

(12)    $r7_1 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,float,float,boolean)>($r7, $f0_11, $f1_8, $z1_2);

     label07:
(13)    $r6_2 = $r7_1;

     label08:
(14)    $r6_3 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap cropBitmap(android.graphics.Bitmap,int,int)>($r7_1, $i5_5, $i6_6);

     label09:
        $r6_4 = Phi($r6_1 #9, $r6_3 #14, $r6_9 #26);

        $i0_3 = Phi($i0_2 #9, $i0_2 #14, $i0_6 #26);

        $r7_2 = Phi($r7 #9, $r7_1 #14, $r7_6 #26);

        $f0_12 = Phi($f0_10 #9, $f0_11 #14, $f0_15 #26);

        $f1_9 = Phi($f1_7 #9, $f1_8 #14, $f1_12 #26);

        if $r6_4 != null goto label20;

        staticinvoke <java.lang.System: void gc()>();

        $r8 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

(15)    virtualinvoke $r8.<java.lang.Runtime: void gc()>();

     label10:
(16)    $i0_4 = lengthof $r0;

(17)    $r7_3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, 0, $i0_4, $r4_1);

     label11:
        $r6_5 = $r7_3;

(18)    if $r7_3 == null goto label21;

     label12:
(19)    $f0_13 = (float) $i5_5;

(20)    $f1_10 = (float) $i6_6;

(21)    $r7_4 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,float,float,boolean)>($r7_3, $f0_13, $f1_10, $z1_2);

     label13:
(22)    $r6_6 = $r7_4;

     label14:
(23)    $r6_7 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap cropBitmap(android.graphics.Bitmap,int,int)>($r7_4, $i5_5, $i6_6);

     label15:
        return $r6_7;

     label16:
        $f0_7 = (float) $i6;

        $f0_8 = $f0_7 / $f2_2;

        $i5_3 = (int) $f0_8;

        $i6_4 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i3_1);

(24)    goto label02;

     label17:
        $i5_1 = $i2;

        $i6_1 = $i3_1;

(25)    goto label02;

     label18:
        $r2 := @caughtexception;

        $r6_8 = Phi($r6_4 #15, $r6_5 #18, $r6_6 #22, $r6_7 #23);

        $i0_5 = Phi($i0_3 #15, $i0_4 #16);

        $r7_5 = Phi($r7_2 #15, $r7_3 #17, $r7_4 #21);

        $f0_14 = Phi($f0_12 #15, $f0_13 #19);

        $f1_11 = Phi($f1_9 #15, $f1_10 #20);

        return $r6_8;

     label19:
        $r3 := @caughtexception;

        $r6_9 = Phi($r6 #7, $r6_1 #9, $r6_2 #13, $r6_3 #14);

        $i0_6 = Phi($i0_1 #7, $i0_2 #8);

        $r7_6 = Phi($r7 #7, $r7_1 #12);

        $f0_15 = Phi($f0_10 #7, $f0_11 #10);

        $f1_12 = Phi($f1_7 #7, $f1_8 #11);

(26)    goto label09;

     label20:
        return $r6_4;

     label21:
        return $r7_3;

        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
    }

    public static android.graphics.Bitmap decodeBitmapFile(java.lang.String, int, int)
    {
        java.lang.String $r0;
        android.media.ExifInterface $r1;
        java.io.FileInputStream $r2, $r19, $r19_1, $r19_2, $r19_3;
        java.io.BufferedInputStream $r3, $r20, $r20_1, $r20_2;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Matrix $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.Exception $r17;
        int $i0, $i1, $i3, $i4, $i3_1, $i3_2, $i0_1, $i1_1, $i0_2, $i3_3, $i1_2, $i3_4, $i3_5, $i0_3, $i1_3, $i0_4, $i1_4, $i0_5, $i1_5, $i0_6, $i1_6, $i0_7, $i1_7, $i0_8, $i3_6, $i1_8, $i0_9, $i3_7, $i1_9, $i0_10, $i3_8, $i1_10, $i3_9;
        android.graphics.Bitmap $r18, $r22, $r18_1, $r18_2, $r22_1, $r18_3, $r22_2, $r18_4, $r18_5, $r22_3, $r18_6, $r22_4, $r18_7, $r22_5, $r18_8, $r22_6, $r22_7, $r18_9, $r22_8, $r22_9, $r18_10, $r22_10, $r18_11, $r22_11, $r18_12, $r22_12, $r18_13;
        short $s2, $s2_1, $s2_2, $s2_3, $s2_4, $s2_5, $s2_6;
        android.graphics.BitmapFactory$Options $r21, $r21_1, $r21_2, $r21_3;
        float $f0, $f1, $f0_1, $f1_1, $f1_2, $f0_2, $f0_3, $f1_3, $f1_4, $f0_4, $f1_5, $f0_5, $f0_6, $f0_7, $f1_6, $f0_8, $f1_7, $f0_9, $f1_8, $f0_10;
        java.lang.Runtime $r23, $r23_1, $r23_2, $r23_3, $r23_4, $r23_5;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r18 = null;

        $r19 = null;

        $r20 = null;

        $s2 = 0;

(0)     $r1 = new android.media.ExifInterface;

     label01:
        specialinvoke $r1.<android.media.ExifInterface: void <init>(java.lang.String)>($r0);

        $i3 = virtualinvoke $r1.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

     label02:
(1)     lookupswitch($i3)
        {
            case 3: goto label29;
            case 4: goto label04;
            case 5: goto label04;
            case 6: goto label30;
            case 7: goto label04;
            case 8: goto label28;
            default: goto label03;
        };

     label03:
(2)     goto label04;

     label04:
        $s2_4 = Phi($s2 #1, $s2 #2, $s2_1 #30, $s2_2 #31, $s2_3 #32, $s2 #46);

        $i3_1 = Phi($i3 #1, $i3 #2, $i3 #30, $i3 #31, $i3 #32, $i3_9 #46);

        if $s2_4 == 90 goto label05;

(3)     if $s2_4 != 270 goto label06;

     label05:
        $i3_2 = $i0;

        $i0_1 = $i1;

(4)     $i1_1 = $i3_2;

     label06:
        $i0_2 = Phi($i0 #3, $i0_1 #4);

        $i3_3 = Phi($i3_1 #3, $i3_2 #4);

        $i1_2 = Phi($i1 #3, $i1_1 #4);

(5)     $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

     label07:
        $r3 = new java.io.BufferedInputStream;

(6)     specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

     label08:
        $r21 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r21.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r21.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r3, null, $r21);

(7)     $i3_4 = $r21.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i4 = $r21.<android.graphics.BitmapFactory$Options: int outWidth>;

(8)     $r21_1 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r21_1.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r21_1.<android.graphics.BitmapFactory$Options: boolean inPurgeable> = 1;

        $r21_1.<android.graphics.BitmapFactory$Options: boolean inInputShareable> = 1;

        $r21_1.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $r21_1.<android.graphics.BitmapFactory$Options: boolean inScaled> = 0;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r21_1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r4;

        $f0 = (float) $i0_2;

        $f1 = (float) $i1_2;

(9)     $i3_5 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: int getInSampleValue(int,int,float,float)>($i4, $i3_4, $f0, $f1);

(10)    $r21_1.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i3_5;

     label09:
        $r22 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r21_1);

     label10:
        $r18_1 = $r22;

(11)    if $r22 == null goto label12;

     label11:
(12)    $f0_1 = (float) $i0_2;

(13)    $f1_1 = (float) $i1_2;

(14)    $r18_2 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,float,float,boolean)>($r22, $f0_1, $f1_1, 0);

     label12:
        $r22_1 = Phi($r22 #11, $r22 #14, $r22_10 #45);

        $f1_2 = Phi($f1 #11, $f1_1 #14, $f1_6 #45);

        $f0_2 = Phi($f0 #11, $f0_1 #14, $f0_8 #45);

        $r18_3 = Phi($r18_1 #11, $r18_2 #14, $r18_11 #45);

(15)    if $r18_3 != null goto label17;

     label13:
        staticinvoke <java.lang.System: void gc()>();

        $r23 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

(16)    virtualinvoke $r23.<java.lang.Runtime: void gc()>();

     label14:
(17)    $r22_2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r21_1);

     label15:
        $r18_4 = $r22_2;

(18)    if $r22_2 == null goto label17;

     label16:
(19)    $f0_3 = (float) $i0_2;

(20)    $f1_3 = (float) $i1_2;

(21)    $r18_5 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,float,float,boolean)>($r22_2, $f0_3, $f1_3, 0);

     label17:
        $r22_4 = Phi($r22_1 #15, $r22_2 #18, $r22_2 #21, $r22_3 #44);

        $f1_5 = Phi($f1_2 #15, $f1_2 #18, $f1_3 #21, $f1_4 #44);

        $f0_5 = Phi($f0_2 #15, $f0_2 #18, $f0_3 #21, $f0_4 #44);

        $r23_1 = Phi($r23 #15, $r23 #18, $r23 #21, $r23 #44);

        $r18_7 = Phi($r18_3 #15, $r18_4 #18, $r18_5 #21, $r18_6 #44);

(22)    if $r18_7 == null goto label23;

(23)    if $s2_4 <= 0 goto label23;

     label18:
        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

(24)    $f0_6 = (float) $s2_4;

(25)    virtualinvoke $r5.<android.graphics.Matrix: boolean postRotate(float)>($f0_6);

     label19:
(26)    $i0_3 = virtualinvoke $r18_7.<android.graphics.Bitmap: int getWidth()>();

(27)    $i1_3 = virtualinvoke $r18_7.<android.graphics.Bitmap: int getHeight()>();

(28)    $r22_5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r18_7, 0, 0, $i0_3, $i1_3, $r5, 1);

     label20:
        if $r22_5 == $r18_7 goto label22;

     label21:
        virtualinvoke $r18_7.<android.graphics.Bitmap: void recycle()>();

     label22:
(29)    $r18_8 = $r22_5;

     label23:
        $r22_9 = Phi($r22_4 #22, $r22_4 #23, $r22_5 #29, $r22_7 #39, $r22_8 #43);

        $i0_7 = Phi($i0_2 #22, $i0_2 #23, $i0_3 #29, $i0_5 #39, $i0_6 #43);

        $f0_7 = Phi($f0_5 #22, $f0_5 #23, $f0_6 #29, $f0_6 #39, $f0_6 #43);

        $r23_3 = Phi($r23_1 #22, $r23_1 #23, $r23_1 #29, $r23_2 #39, $r23_2 #43);

        $r18_10 = Phi($r18_7 #22, $r18_7 #23, $r18_8 #29, $r18_9 #39, $r18_7 #43);

        $i1_7 = Phi($i1_2 #22, $i1_2 #23, $i1_3 #29, $i1_5 #39, $i1_6 #43);

        if $r3 == null goto label25;

     label24:
        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

     label25:
        if $r2 == null goto label53;

     label26:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label27:
        return $r18_10;

     label28:
        $s2_1 = 270;

(30)    goto label04;

     label29:
        $s2_2 = 180;

(31)    goto label04;

     label30:
        $s2_3 = 90;

(32)    goto label04;

     label31:
        $r6 := @caughtexception;

        $r22_6 = Phi($r22_4 #25, $r22_5 #28);

        $i0_4 = Phi($i0_2 #25, $i0_3 #26);

(33)    $i1_4 = Phi($i1_2 #25, $i1_3 #27);

     label32:
        staticinvoke <java.lang.System: void gc()>();

(34)    $r23_2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

(35)    virtualinvoke $r23_2.<java.lang.Runtime: void gc()>();

     label33:
(36)    $i0_5 = virtualinvoke $r18_7.<android.graphics.Bitmap: int getWidth()>();

(37)    $i1_5 = virtualinvoke $r18_7.<android.graphics.Bitmap: int getHeight()>();

(38)    $r22_7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r18_7, 0, 0, $i0_5, $i1_5, $r5, 1);

     label34:
        if $r22_7 == $r18_7 goto label36;

     label35:
        virtualinvoke $r18_7.<android.graphics.Bitmap: void recycle()>();

     label36:
        $r18_9 = $r22_7;

(39)    goto label23;

     label37:
        $r7 := @caughtexception;

        return $r18_10;

     label38:
        $r8 := @caughtexception;

        $i0_9 = Phi($i0 #0, $i0_1 #4, $i0_2 #5);

        $s2_5 = Phi($s2 #0, $s2_4 #3, $s2_4 #4, $s2_4 #5);

        $i3_7 = Phi($i3 #0, $i3_1 #3, $i3_2 #4, $i3_3 #5);

(40)    $i1_9 = Phi($i1 #0, $i1_1 #4, $i1_2 #5);

     label39:
        $r22_12 = Phi($r22 #40, $r22 #41, $r22_11 #42);

        $i0_10 = Phi($i0_9 #40, $i0_2 #41, $i0_8 #42);

        $r21_3 = Phi($r21 #40, $r21 #41, $r21_2 #42);

        $f1_8 = Phi($f1 #40, $f1 #41, $f1_7 #42);

        $s2_6 = Phi($s2_5 #40, $s2_4 #41, $s2_4 #42);

        $f0_10 = Phi($f0 #40, $f0 #41, $f0_9 #42);

        $i3_8 = Phi($i3_7 #40, $i3_3 #41, $i3_6 #42);

        $r20_2 = Phi($r20 #40, $r20 #41, $r20_1 #42);

        $r23_5 = Phi($r23 #40, $r23 #41, $r23_4 #42);

        $r18_13 = Phi($r18 #40, $r18 #41, $r18_12 #42);

        $r19_3 = Phi($r19 #40, $r19_2 #41, $r19_1 #42);

        $i1_10 = Phi($i1_9 #40, $i1_2 #41, $i1_8 #42);

        if $r20_2 == null goto label41;

     label40:
        virtualinvoke $r20_2.<java.io.BufferedInputStream: void close()>();

     label41:
        if $r19_3 == null goto label54;

     label42:
        virtualinvoke $r19_3.<java.io.FileInputStream: void close()>();

     label43:
        return null;

     label44:
        $r9 := @caughtexception;

        return null;

     label45:
        $r10 := @caughtexception;

        goto label25;

     label46:
        $r11 := @caughtexception;

        goto label41;

     label47:
        $r12 := @caughtexception;

        $r19_2 = $r2;

(41)    goto label39;

     label48:
        $r13 := @caughtexception;

        $r22_11 = Phi($r22 #6, $r22_1 #15, $r22_4 #23, $r22_6 #33);

        $i0_8 = Phi($i0_2 #6, $i0_4 #33);

        $r21_2 = Phi($r21 #6, $r21_1 #8);

        $f1_7 = Phi($f1 #6, $f1_2 #15, $f1_5 #23);

        $f0_9 = Phi($f0 #6, $f0_2 #15, $f0_5 #23, $f0_6 #24);

        $i3_6 = Phi($i3_3 #6, $i3_4 #7, $i3_5 #9);

        $r23_4 = Phi($r23 #6, $r23_1 #23, $r23_2 #34);

        $r18_12 = Phi($r18 #6, $r18_3 #15, $r18_7 #23);

        $i1_8 = Phi($i1_2 #6, $i1_4 #33);

        $r20_1 = $r3;

        $r19_1 = $r2;

(42)    goto label39;

     label49:
        $r14 := @caughtexception;

        $r22_8 = Phi($r22_6 #35, $r22_7 #38);

        $i0_6 = Phi($i0_4 #35, $i0_5 #36);

        $i1_6 = Phi($i1_4 #35, $i1_5 #37);

(43)    goto label23;

     label50:
        $r15 := @caughtexception;

        $r22_3 = Phi($r22_1 #16, $r22_2 #17);

        $f1_4 = Phi($f1_2 #16, $f1_3 #20);

        $f0_4 = Phi($f0_2 #16, $f0_3 #19);

        $r18_6 = Phi($r18_3 #16, $r18_4 #18, $r18_5 #21);

(44)    goto label17;

     label51:
        $r16 := @caughtexception;

        $r22_10 = Phi($r22 #10);

        $f1_6 = Phi($f1 #10, $f1_1 #13);

        $f0_8 = Phi($f0 #10, $f0_1 #12);

        $r18_11 = Phi($r18 #10, $r18_1 #11, $r18_2 #14);

(45)    goto label12;

     label52:
        $r17 := @caughtexception;

        $i3_9 = Phi($i3 #0);

(46)    goto label04;

     label53:
        return $r18_10;

     label54:
        return null;

        catch java.lang.Exception from label01 to label02 with label52;
        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label06 to label07 with label38;
        catch java.lang.Throwable from label07 to label08 with label47;
        catch java.lang.Throwable from label08 to label09 with label48;
        catch java.lang.Throwable from label09 to label10 with label51;
        catch java.lang.Throwable from label11 to label12 with label51;
        catch java.lang.Throwable from label13 to label14 with label48;
        catch java.lang.Throwable from label14 to label15 with label50;
        catch java.lang.Throwable from label16 to label17 with label50;
        catch java.lang.Throwable from label18 to label19 with label48;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.lang.Throwable from label24 to label25 with label45;
        catch java.lang.Throwable from label26 to label27 with label37;
        catch java.lang.Throwable from label32 to label33 with label48;
        catch java.lang.Throwable from label33 to label34 with label49;
        catch java.lang.Throwable from label35 to label36 with label49;
        catch java.lang.Throwable from label40 to label41 with label46;
        catch java.lang.Throwable from label42 to label43 with label44;
    }

    public static android.graphics.Bitmap getCroppedBitmap(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap$Config $r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        android.graphics.Rect $r3;
        android.graphics.PorterDuffXfermode $r4;
        android.graphics.PorterDuff$Mode $r5;
        android.graphics.Bitmap $r6, $r7, $r6_1, $r6_2;
        int $i0, $i1, $i2, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5, $i1_6, $i2_1, $i2_2, $i2_3, $i1_7, $i1_8, $i1_9, $i1_10, $i0_1;
        float $f0, $f1, $f2, $f0_1, $f1_1, $f1_2, $f1_3, $f0_2, $f0_3, $f1_4, $f0_4, $f0_5, $f1_5, $f1_6, $f2_1;

        $r6 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

(0)     if $i1 != $i0 goto label1;

        $i1_1 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

(1)     if $i1_1 == $i0 goto label2;

     label1:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        $i1_3 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        $i1_4 = staticinvoke <java.lang.Math: int min(int,int)>($i1_3, $i2);

        $f0 = (float) $i1_4;

        $f1 = (float) $i0;

        $f0_1 = $f0 / $f1;

        $i1_5 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        $f1_1 = (float) $i1_5;

        $f1_2 = $f1_1 / $f0_1;

        $i1_6 = (int) $f1_2;

        $i2_1 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        $f1_3 = (float) $i2_1;

        $f0_2 = $f1_3 / $f0_1;

        $i2_2 = (int) $f0_2;

(2)     $r6_1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r6, $i1_6, $i2_2, 0);

     label2:
        $i2_3 = Phi($i2 #1, $i2_2 #2);

        $i1_7 = Phi($i1_1 #1, $i1_6 #2);

        $f0_3 = Phi($f0 #1, $f0_2 #2);

        $r6_2 = Phi($r6 #1, $r6_1 #2);

        $f1_4 = Phi($f1 #1, $f1_3 #2);

        $r0 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r0);

        $r1 = new android.graphics.Canvas;

        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r7);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i0);

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke $r2.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>(1);

        virtualinvoke $r1.<android.graphics.Canvas: void drawARGB(int,int,int,int)>(0, 0, 0, 0);

        $i1_8 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#ffBAB399");

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i1_8);

        $i1_9 = $i0 / 2;

        $f0_4 = (float) $i1_9;

        $f0_5 = $f0_4 + 0.7F;

        $i1_10 = $i0 / 2;

        $f1_5 = (float) $i1_10;

        $f1_6 = $f1_5 + 0.7F;

        $i0_1 = $i0 / 2;

        $f2 = (float) $i0_1;

        $f2_1 = $f2 + 0.1F;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0_5, $f1_6, $f2_1, $r2);

        $r4 = new android.graphics.PorterDuffXfermode;

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        specialinvoke $r4.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r5);

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r4);

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r6_2, $r3, $r3, $r2);

        return $r7;
    }

    public static int getInSampleValue(int, int, float, float)
    {
        int $i0, $i1, $i2, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6, $i2_7, $i2_8, $i2_9;
        float $f0, $f1, $f2, $f3, $f0_1, $f0_2, $f1_1, $f0_3, $f2_1, $f2_2, $f2_3, $f2_4, $f2_5, $f2_6, $f1_2, $f0_4, $f2_7, $f2_8, $f3_1, $f2_9, $f2_10, $f0_5, $f0_6;
        byte $b3, $b3_1, $b3_2, $b3_3, $b3_4, $b3_5, $b3_6, $b3_7, $b3_8, $b3_9;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $b3 = $f0 cmpl -1.0F;

(0)     if $b3 != 0 goto label1;

        $b3_1 = $f1 cmpl -1.0F;

(1)     if $b3_1 != 0 goto label1;

        return 1;

     label1:
        $b3_2 = Phi($b3 #0, $b3_1 #1);

        $b3_3 = $f0 cmpl -1.0F;

        if $b3_3 != 0 goto label2;

        $f0_1 = (float) $i0;

        $f0_2 = $f0_1 / $f1;

        $i2_1 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: int roundToPowerOfTwo(float)>($f0_2);

        $i2_2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i2_1);

        return $i2_2;

     label2:
        $b3_4 = $f1 cmpl -1.0F;

        if $b3_4 != 0 goto label3;

        $f1_1 = (float) $i2;

        $f0_3 = $f1_1 / $f0;

        $i2_3 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: int roundToPowerOfTwo(float)>($f0_3);

        $i2_4 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i2_3);

        return $i2_4;

     label3:
        $f2 = (float) $i2;

        $b3_5 = $f2 cmpg $f0;

(2)     if $b3_5 >= 0 goto label4;

        $f2_1 = (float) $i0;

        $b3_6 = $f2_1 cmpg $f1;

(3)     if $b3_6 >= 0 goto label4;

        return 1;

     label4:
        $f2_2 = Phi($f2 #2, $f2_1 #3);

        $b3_7 = Phi($b3_5 #2, $b3_6 #3);

        $f2_3 = (float) $i2;

        $f2_4 = $f0 / $f2_3;

        $f3 = (float) $i0;

        $f2_5 = $f3 * $f2_4;

        $i1 = (int) $f2_5;

        $f2_6 = (float) $i1;

        $b3_8 = $f2_6 cmpl $f1;

        if $b3_8 < 0 goto label5;

        $f1_2 = (float) $i2;

        $f0_4 = $f1_2 / $f0;

        $i2_5 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: int roundToPowerOfTwo(float)>($f0_4);

        $i2_6 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i2_5);

        return $i2_6;

     label5:
        $f2_7 = (float) $i0;

        $f2_8 = $f1 / $f2_7;

        $f3_1 = (float) $i2;

        $f2_9 = $f3_1 * $f2_8;

        $i2_7 = (int) $f2_9;

        $f2_10 = (float) $i2_7;

        $b3_9 = $f2_10 cmpl $f0;

        if $b3_9 < 0 goto label6;

        $f0_5 = (float) $i0;

        $f0_6 = $f0_5 / $f1;

        $i2_8 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: int roundToPowerOfTwo(float)>($f0_6);

        $i2_9 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i2_8);

        return $i2_9;

     label6:
        return 1;
    }

    public static android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap, float, float, boolean)
    {
        android.graphics.Bitmap $r0, $r1, $r1_1, $r1_2, $r1_3;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f2_1, $f2_2, $f2_3, $f0_1, $f0_2, $f0_3, $f2_4, $f0_4, $f2_5, $f1_1, $f1_2, $f1_3, $f2_6, $f1_4, $f2_7, $f2_8, $f2_9, $f2_10, $f2_11, $f2_12, $f2_13, $f2_14, $f2_15, $f2_16, $f2_17, $f3_1, $f2_18, $f2_19, $f2_20, $f0_5;
        int $i0, $i1, $i3, $i0_1, $i3_1, $i0_2, $i3_2, $i0_3, $i3_3, $i0_4;
        byte $b2, $b2_1, $b2_2, $b2_3, $b2_4, $b2_5, $b2_6, $b2_7, $b2_8, $b2_9, $b2_10, $b2_11, $b2_12, $b2_13, $b2_14, $b2_15, $b2_16, $b2_17, $b2_18, $b2_19, $b2_20, $b2_21;

        $r0 := @parameter0: android.graphics.Bitmap;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $b2 = $f0 cmpl -1.0F;

(0)     if $b2 != 0 goto label01;

        $b2_1 = $f1 cmpl -1.0F;

(1)     if $b2_1 != 0 goto label01;

        return $r0;

     label01:
        $b2_2 = Phi($b2 #0, $b2_1 #1);

        $b2_3 = $f0 cmpl -1.0F;

(2)     if $b2_3 == 0 goto label02;

        $f2 = (float) $i0;

        $b2_4 = $f0 cmpl $f2;

(3)     if $b2_4 != 0 goto label03;

     label02:
        $f2_1 = Phi($f2 #2, $f2 #3);

        $b2_5 = Phi($b2_3 #2, $b2_4 #3);

        $b2_6 = $f1 cmpl -1.0F;

(4)     if $b2_6 == 0 goto label08;

        $f2_2 = (float) $i1;

        $b2_7 = $f1 cmpl $f2_2;

(5)     if $b2_7 == 0 goto label08;

     label03:
        $f2_3 = Phi($f2 #3, $f2_2 #5);

        $b2_8 = Phi($b2_4 #3, $b2_7 #5);

        $b2_9 = $f0 cmpl -1.0F;

        if $b2_9 != 0 goto label04;

        $f0_1 = (float) $i1;

        $b2_10 = $f1 cmpg $f0_1;

(6)     if $b2_10 >= 0 goto label08;

        $f0_2 = (float) $i1;

        $f0_3 = $f1 / $f0_2;

        $f2_4 = (float) $i0;

        $f0_4 = $f0_3 * $f2_4;

        $i3 = (int) $f0_4;

        $i0_1 = (int) $f1;

        $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i3, $i0_1, 1);

        if $r1 == $r0 goto label09;

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

        return $r1;

     label04:
        $b2_11 = $f1 cmpl -1.0F;

(7)     if $b2_11 != 0 goto label05;

        $f2_5 = (float) $i0;

        $b2_12 = $f0 cmpg $f2_5;

(8)     if $b2_12 >= 0 goto label05;

        $f1_1 = (float) $i0;

        $b2_13 = $f0 cmpg $f1_1;

        if $b2_13 >= 0 goto label10;

        $f1_2 = (float) $i0;

        $f1_3 = $f0 / $f1_2;

        $f2_6 = (float) $i1;

        $f1_4 = $f1_3 * $f2_6;

        $i3_1 = (int) $f1_4;

        $i0_2 = (int) $f0;

        $r1_1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i0_2, $i3_1, 1);

        if $r1_1 == $r0 goto label11;

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

        return $r1_1;

     label05:
        $f2_7 = Phi($f2_3 #7, $f2_5 #8);

        $b2_14 = Phi($b2_11 #7, $b2_12 #8);

(9)     if $z0 != 0 goto label06;

        $f2_8 = (float) $i0;

        $b2_15 = $f2_8 cmpg $f0;

(10)    if $b2_15 < 0 goto label12;

        $f2_9 = (float) $i1;

        $b2_16 = $f2_9 cmpg $f1;

(11)    if $b2_16 < 0 goto label12;

     label06:
        $f2_11 = Phi($f2_7 #9, $f2_9 #11);

        $b2_18 = Phi($b2_14 #9, $b2_16 #11);

        $f2_12 = (float) $i0;

        $f2_13 = $f0 / $f2_12;

        $f3 = (float) $i1;

        $f2_14 = $f3 * $f2_13;

        $i3_2 = (int) $f2_14;

        $f2_15 = (float) $i3_2;

        $b2_19 = $f2_15 cmpl $f1;

        if $b2_19 < 0 goto label07;

        $i0_3 = (int) $f0;

        $r1_2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i0_3, $i3_2, 1);

        if $r1_2 == $r0 goto label13;

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

        return $r1_2;

     label07:
        $f2_16 = (float) $i1;

        $f2_17 = $f1 / $f2_16;

        $f3_1 = (float) $i0;

        $f2_18 = $f3_1 * $f2_17;

        $i3_3 = (int) $f2_18;

        $f2_19 = (float) $i3_3;

        $b2_20 = $f2_19 cmpl $f0;

        if $b2_20 < 0 goto label14;

        $i0_4 = (int) $f1;

        $r1_3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i3_3, $i0_4, 1);

        if $r1_3 == $r0 goto label15;

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

        return $r1_3;

     label08:
        $f2_20 = Phi($f2_1 #4, $f2_2 #5, $f2_3 #6);

        $f0_5 = Phi($f0 #4, $f0 #5, $f0_1 #6);

        $b2_21 = Phi($b2_6 #4, $b2_7 #5, $b2_10 #6);

        return $r0;

     label09:
        return $r1;

     label10:
        return $r0;

     label11:
        return $r1_1;

     label12:
        $f2_10 = Phi($f2_8 #10, $f2_9 #11);

        $b2_17 = Phi($b2_15 #10, $b2_16 #11);

        return $r0;

     label13:
        return $r1_2;

     label14:
        return $r0;

     label15:
        return $r1_3;
    }

    private static int roundToPowerOfTwo(float)
    {
        float $f0;
        double $d0, $d1, $d0_1, $d0_2, $d0_3, $d0_4, $d0_5;
        int $i0, $i0_1;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        $d0_1 = $d0 / $d1;

        $d0_2 = staticinvoke <java.lang.Math: double log(double)>($d0_1);

        $d0_3 = staticinvoke <java.lang.Math: double floor(double)>($d0_2);

        $i0 = (int) $d0_3;

        $d0_4 = (double) $i0;

        $d0_5 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0_4);

        $i0_1 = (int) $d0_5;

        return $i0_1;
    }

    public static android.graphics.Bitmap safeDecodeImageResource(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.Throwable $r1, $r2;
        android.content.res.Resources $r3, $r3_1, $r3_2, $r3_3;
        android.graphics.Bitmap $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Runtime $r5;

        $r0 := @parameter0: android.content.Context;

(0)     $i0 := @parameter1: int;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r3, $i0);

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

        $r4_1 = Phi($r4 #0);

        $r3_1 = Phi($r3 #0);

        staticinvoke <java.lang.System: void gc()>();

        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

(1)     virtualinvoke $r5.<java.lang.Runtime: void gc()>();

     label4:
(2)     $r3_2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

(3)     $r4_2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r3_2, $i0);

     label5:
        return $r4_2;

     label6:
        $r2 := @caughtexception;

        $r4_3 = Phi($r4_1 #1, $r4_2 #3);

        $r3_3 = Phi($r3_1 #1, $r3_2 #2);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static android.graphics.Bitmap safeDecodeImageResource(android.content.Context, int, int, int)
    {
        android.content.Context $r0;
        int $i0, $i1, $i2;
        java.lang.Throwable $r1, $r2;
        android.graphics.Bitmap $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;
        float $f0, $f1, $f0_1, $f1_1, $f1_2, $f0_2;
        java.lang.Runtime $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r3 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap safeDecodeImageResource(android.content.Context,int)>($r0, $i0);

(0)     if $r3 == null goto label7;

        $f0 = (float) $i1;

(1)     $f1 = (float) $i2;

     label1:
(2)     $r3_1 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,float,float,boolean)>($r3, $f0, $f1, 1);

     label2:
        return $r3_1;

     label3:
        $r1 := @caughtexception;

        $r3_2 = Phi($r3 #1, $r3_1 #2);

        staticinvoke <java.lang.System: void gc()>();

        $r4 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r4.<java.lang.Runtime: void gc()>();

        $f0_1 = (float) $i1;

(3)     $f1_1 = (float) $i2;

     label4:
(4)     $r3_3 = staticinvoke <com.contextlogic.wish.util.BitmapUtil: android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,float,float,boolean)>($r3_2, $f0_1, $f1_1, 1);

     label5:
        return $r3_3;

     label6:
        $r2 := @caughtexception;

(5)     $r3_4 = Phi($r3_2 #3, $r3_3 #4);

     label7:
        $f1_2 = Phi($f1 #0, $f1_1 #5);

        $f0_2 = Phi($f0 #0, $f0_1 #5);

        $r3_5 = Phi($r3 #0, $r3_4 #5);

        return $r3_5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static boolean safeSetBackgroundResource(android.view.View, int)
    {
        android.view.View $r0;
        int $i0;
        java.lang.Throwable $r1, $r2;
        java.lang.Runtime $r3;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

     label1:
        virtualinvoke $r0.<android.view.View: void setBackgroundResource(int)>($i0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

     label4:
        virtualinvoke $r0.<android.view.View: void setBackgroundResource(int)>($i0);

     label5:
        return 1;

     label6:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static boolean safeSetImageResource(android.widget.ImageView, int)
    {
        android.widget.ImageView $r0;
        int $i0;
        java.lang.Throwable $r1, $r2;
        java.lang.Runtime $r3;

        $r0 := @parameter0: android.widget.ImageView;

        $i0 := @parameter1: int;

     label1:
        virtualinvoke $r0.<android.widget.ImageView: void setImageResource(int)>($i0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        staticinvoke <java.lang.System: void gc()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

     label4:
        virtualinvoke $r0.<android.widget.ImageView: void setImageResource(int)>($i0);

     label5:
        return 1;

     label6:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
