public class io.fabric.sdk.android.services.concurrency.internal.RetryState extends java.lang.Object
{
    private final io.fabric.sdk.android.services.concurrency.internal.Backoff backoff;
    private final int retryCount;
    private final io.fabric.sdk.android.services.concurrency.internal.RetryPolicy retryPolicy;

    public void <init>(int, io.fabric.sdk.android.services.concurrency.internal.Backoff, io.fabric.sdk.android.services.concurrency.internal.RetryPolicy)
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0;
        int $i0;
        io.fabric.sdk.android.services.concurrency.internal.Backoff $r1;
        io.fabric.sdk.android.services.concurrency.internal.RetryPolicy $r2;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        $i0 := @parameter0: int;

        $r1 := @parameter1: io.fabric.sdk.android.services.concurrency.internal.Backoff;

        $r2 := @parameter2: io.fabric.sdk.android.services.concurrency.internal.RetryPolicy;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: int retryCount> = $i0;

        $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.Backoff backoff> = $r1;

        $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.RetryPolicy retryPolicy> = $r2;

        return;
    }

    public void <init>(io.fabric.sdk.android.services.concurrency.internal.Backoff, io.fabric.sdk.android.services.concurrency.internal.RetryPolicy)
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0;
        io.fabric.sdk.android.services.concurrency.internal.Backoff $r1;
        io.fabric.sdk.android.services.concurrency.internal.RetryPolicy $r2;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        $r1 := @parameter0: io.fabric.sdk.android.services.concurrency.internal.Backoff;

        $r2 := @parameter1: io.fabric.sdk.android.services.concurrency.internal.RetryPolicy;

        specialinvoke $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: void <init>(int,io.fabric.sdk.android.services.concurrency.internal.Backoff,io.fabric.sdk.android.services.concurrency.internal.RetryPolicy)>(0, $r1, $r2);

        return;
    }

    public io.fabric.sdk.android.services.concurrency.internal.Backoff getBackoff()
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0;
        io.fabric.sdk.android.services.concurrency.internal.Backoff r1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.Backoff backoff>;

        return r1;
    }

    public int getRetryCount()
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0;
        int i0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        i0 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: int retryCount>;

        return i0;
    }

    public long getRetryDelay()
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0;
        io.fabric.sdk.android.services.concurrency.internal.Backoff $r1;
        int $i0;
        long $l1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        $r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.Backoff backoff>;

        $i0 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: int retryCount>;

        $l1 = interfaceinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.Backoff: long getDelayMillis(int)>($i0);

        return $l1;
    }

    public io.fabric.sdk.android.services.concurrency.internal.RetryPolicy getRetryPolicy()
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0;
        io.fabric.sdk.android.services.concurrency.internal.RetryPolicy r1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.RetryPolicy retryPolicy>;

        return r1;
    }

    public io.fabric.sdk.android.services.concurrency.internal.RetryState initialRetryState()
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0, $r1;
        io.fabric.sdk.android.services.concurrency.internal.Backoff $r2;
        io.fabric.sdk.android.services.concurrency.internal.RetryPolicy $r3;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        $r1 = new io.fabric.sdk.android.services.concurrency.internal.RetryState;

        $r2 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.Backoff backoff>;

        $r3 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.RetryPolicy retryPolicy>;

        specialinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.RetryState: void <init>(io.fabric.sdk.android.services.concurrency.internal.Backoff,io.fabric.sdk.android.services.concurrency.internal.RetryPolicy)>($r2, $r3);

        return $r1;
    }

    public io.fabric.sdk.android.services.concurrency.internal.RetryState nextRetryState()
    {
        io.fabric.sdk.android.services.concurrency.internal.RetryState $r0, $r1;
        io.fabric.sdk.android.services.concurrency.internal.Backoff $r2;
        io.fabric.sdk.android.services.concurrency.internal.RetryPolicy $r3;
        int $i0, $i0_1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.RetryState;

        $r1 = new io.fabric.sdk.android.services.concurrency.internal.RetryState;

        $i0 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: int retryCount>;

        $i0_1 = $i0 + 1;

        $r2 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.Backoff backoff>;

        $r3 = $r0.<io.fabric.sdk.android.services.concurrency.internal.RetryState: io.fabric.sdk.android.services.concurrency.internal.RetryPolicy retryPolicy>;

        specialinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.RetryState: void <init>(int,io.fabric.sdk.android.services.concurrency.internal.Backoff,io.fabric.sdk.android.services.concurrency.internal.RetryPolicy)>($i0_1, $r2, $r3);

        return $r1;
    }
}
