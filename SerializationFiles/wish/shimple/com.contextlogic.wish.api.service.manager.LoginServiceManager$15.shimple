class com.contextlogic.wish.api.service.manager.LoginServiceManager$15 extends java.lang.Object implements com.contextlogic.wish.api.service.GetProfileService$SuccessCallback
{
    final com.contextlogic.wish.api.service.manager.LoginServiceManager this$0;
    final boolean val$isNewUser;
    final com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow val$signupFlow;

    void <init>(com.contextlogic.wish.api.service.manager.LoginServiceManager, boolean, com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow)
    {
        com.contextlogic.wish.api.service.manager.LoginServiceManager$15 $r0;
        com.contextlogic.wish.api.service.manager.LoginServiceManager $r1;
        boolean $z0;
        com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow $r2;

        $r0 := @this: com.contextlogic.wish.api.service.manager.LoginServiceManager$15;

        $r1 := @parameter0: com.contextlogic.wish.api.service.manager.LoginServiceManager;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow;

        $r0.<com.contextlogic.wish.api.service.manager.LoginServiceManager$15: com.contextlogic.wish.api.service.manager.LoginServiceManager this$0> = $r1;

        $r0.<com.contextlogic.wish.api.service.manager.LoginServiceManager$15: boolean val$isNewUser> = $z0;

        $r0.<com.contextlogic.wish.api.service.manager.LoginServiceManager$15: com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow val$signupFlow> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceSucceeded(com.contextlogic.wish.api.data.WishUser)
    {
        com.contextlogic.wish.api.service.manager.LoginServiceManager$15 $r0;
        com.contextlogic.wish.api.data.WishUser $r1;
        boolean $z0;
        com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow $r2;
        com.contextlogic.wish.cache.TransientCache $r3;
        com.contextlogic.wish.user.LoggedInUser $r4;
        com.contextlogic.wish.api.service.manager.LoginServiceManager $r5, $r5_1;

        $r0 := @this: com.contextlogic.wish.api.service.manager.LoginServiceManager$15;

        $r1 := @parameter0: com.contextlogic.wish.api.data.WishUser;

        $r3 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        virtualinvoke $r3.<com.contextlogic.wish.cache.TransientCache: void cacheUser(com.contextlogic.wish.api.data.WishUser)>($r1);

        $r4 = staticinvoke <com.contextlogic.wish.user.LoggedInUser: com.contextlogic.wish.user.LoggedInUser getInstance()>();

        virtualinvoke $r4.<com.contextlogic.wish.user.LoggedInUser: void setCurrentUser(com.contextlogic.wish.api.data.WishUser)>($r1);

        $r5 = $r0.<com.contextlogic.wish.api.service.manager.LoginServiceManager$15: com.contextlogic.wish.api.service.manager.LoginServiceManager this$0>;

        staticinvoke <com.contextlogic.wish.api.service.manager.LoginServiceManager: boolean access$402(com.contextlogic.wish.api.service.manager.LoginServiceManager,boolean)>($r5, 1);

        $r5_1 = $r0.<com.contextlogic.wish.api.service.manager.LoginServiceManager$15: com.contextlogic.wish.api.service.manager.LoginServiceManager this$0>;

        $z0 = $r0.<com.contextlogic.wish.api.service.manager.LoginServiceManager$15: boolean val$isNewUser>;

        $r2 = $r0.<com.contextlogic.wish.api.service.manager.LoginServiceManager$15: com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow val$signupFlow>;

        staticinvoke <com.contextlogic.wish.api.service.manager.LoginServiceManager: void access$500(com.contextlogic.wish.api.service.manager.LoginServiceManager,boolean,com.contextlogic.wish.ui.activity.login.LoginActivity$WishSignupFlow)>($r5_1, $z0, $r2);

        return;
    }
}
