public final class java.lang.Class extends java.lang.Object implements java.io.Serializable, java.lang.reflect.AnnotatedElement, java.lang.reflect.GenericDeclaration, java.lang.reflect.Type
{

    void <init>()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.Class forName(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.Class forName(java.lang.String, boolean, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        java.lang.String r0;
        boolean z0;
        java.lang.ClassLoader r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.ClassLoader;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.Class[] getClasses()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.Class r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.annotation.Annotation[] getAnnotations()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String getCanonicalName()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Class getComponentType()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public transient java.lang.reflect.Constructor getConstructor(java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.lang.Class r0;
        java.lang.Class[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Class[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public transient java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.lang.Class r0;
        java.lang.Class[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Class[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.reflect.Constructor[] getConstructors()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Constructor[] getDeclaredConstructors()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public transient java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.Class[] r2;
        java.lang.RuntimeException $r3;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public transient java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.Class[] r2;
        java.lang.RuntimeException $r3;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public java.lang.reflect.Method[] getDeclaredMethods()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Method[] getMethods()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.annotation.Annotation[] getDeclaredAnnotations()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Class[] getDeclaredClasses()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Field getDeclaredField(java.lang.String) throws java.lang.NoSuchFieldException
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.reflect.Field[] getDeclaredFields()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Class getDeclaringClass()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Class getEnclosingClass()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Constructor getEnclosingConstructor()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Method getEnclosingMethod()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object[] getEnumConstants()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Field getField(java.lang.String) throws java.lang.NoSuchFieldException
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.reflect.Field[] getFields()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Type[] getGenericInterfaces()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.reflect.Type getGenericSuperclass()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Class[] getInterfaces()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getModifiers()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String getName()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String getSimpleName()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.security.ProtectionDomain getProtectionDomain()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.net.URL getResource(java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.io.InputStream getResourceAsStream(java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.Object[] getSigners()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Class getSuperclass()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public synchronized java.lang.reflect.TypeVariable[] getTypeParameters()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isAnnotation()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isAnnotationPresent(java.lang.Class)
    {
        java.lang.Class r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean isAnonymousClass()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isArray()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        java.lang.Class r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean isEnum()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isInstance(java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean isInterface()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isLocalClass()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isMemberClass()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isPrimitive()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isSynthetic()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object newInstance() throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Package getPackage()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean desiredAssertionStatus()
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Class asSubclass(java.lang.Class)
    {
        java.lang.Class r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.Object cast(java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Class;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }
}
