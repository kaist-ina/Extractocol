class com.contextlogic.wish.util.StateSerializer$4 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    final com.contextlogic.wish.util.StateSerializer this$0;

    void <init>(com.contextlogic.wish.util.StateSerializer)
    {
        com.contextlogic.wish.util.StateSerializer$4 $r0;
        com.contextlogic.wish.util.StateSerializer $r1;

        $r0 := @this: com.contextlogic.wish.util.StateSerializer$4;

        $r1 := @parameter0: com.contextlogic.wish.util.StateSerializer;

        $r0.<com.contextlogic.wish.util.StateSerializer$4: com.contextlogic.wish.util.StateSerializer this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        com.contextlogic.wish.util.StateSerializer$4 $r0;
        java.lang.Runnable $r1;
        java.lang.Thread $r2;

        $r0 := @this: com.contextlogic.wish.util.StateSerializer$4;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        virtualinvoke $r2.<java.lang.Thread: void setPriority(int)>(1);

        return $r2;
    }
}
