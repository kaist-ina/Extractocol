public abstract class android.database.AbstractCursor extends java.lang.Object implements android.database.CrossProcessCursor
{
    protected boolean mClosed;
    protected android.content.ContentResolver mContentResolver;
    protected java.lang.Long mCurrentRowID;
    protected int mPos;
    protected int mRowIdColumnIndex;
    protected java.util.HashMap mUpdatedRows;

    public void <init>()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract int getCount();

    public abstract java.lang.String[] getColumnNames();

    public abstract java.lang.String getString(int);

    public abstract short getShort(int);

    public abstract int getInt(int);

    public abstract long getLong(int);

    public abstract float getFloat(int);

    public abstract double getDouble(int);

    public abstract boolean isNull(int);

    public int getType(int)
    {
        android.database.AbstractCursor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public byte[] getBlob(int)
    {
        android.database.AbstractCursor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.database.CursorWindow getWindow()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getColumnCount()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void deactivate()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean requery()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isClosed()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void close()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean onMove(int, int)
    {
        android.database.AbstractCursor r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void copyStringToBuffer(int, android.database.CharArrayBuffer)
    {
        android.database.AbstractCursor r0;
        int i0;
        android.database.CharArrayBuffer r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.CharArrayBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final int getPosition()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean moveToPosition(int)
    {
        android.database.AbstractCursor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void fillWindow(int, android.database.CursorWindow)
    {
        android.database.AbstractCursor r0;
        int i0;
        android.database.CursorWindow r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.CursorWindow;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final boolean move(int)
    {
        android.database.AbstractCursor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean moveToFirst()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean moveToLast()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean moveToNext()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean moveToPrevious()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isFirst()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isLast()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isBeforeFirst()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isAfterLast()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getColumnIndex(java.lang.String)
    {
        android.database.AbstractCursor r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int getColumnIndexOrThrow(java.lang.String)
    {
        android.database.AbstractCursor r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String getColumnName(int)
    {
        android.database.AbstractCursor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void registerContentObserver(android.database.ContentObserver)
    {
        android.database.AbstractCursor r0;
        android.database.ContentObserver r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: android.database.ContentObserver;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void unregisterContentObserver(android.database.ContentObserver)
    {
        android.database.AbstractCursor r0;
        android.database.ContentObserver r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: android.database.ContentObserver;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void registerDataSetObserver(android.database.DataSetObserver)
    {
        android.database.AbstractCursor r0;
        android.database.DataSetObserver r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: android.database.DataSetObserver;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void unregisterDataSetObserver(android.database.DataSetObserver)
    {
        android.database.AbstractCursor r0;
        android.database.DataSetObserver r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: android.database.DataSetObserver;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected void onChange(boolean)
    {
        android.database.AbstractCursor r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setNotificationUri(android.content.ContentResolver, android.net.Uri)
    {
        android.database.AbstractCursor r0;
        android.content.ContentResolver r1;
        android.net.Uri r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.net.Uri;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public android.net.Uri getNotificationUri()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean getWantsAllOnMoveCalls()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.os.Bundle respond(android.os.Bundle)
    {
        android.database.AbstractCursor r0;
        android.os.Bundle r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.AbstractCursor;

        r1 := @parameter0: android.os.Bundle;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected boolean isFieldUpdated(int)
    {
        android.database.AbstractCursor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected java.lang.Object getUpdatedField(int)
    {
        android.database.AbstractCursor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void checkPosition()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void finalize()
    {
        android.database.AbstractCursor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.AbstractCursor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
