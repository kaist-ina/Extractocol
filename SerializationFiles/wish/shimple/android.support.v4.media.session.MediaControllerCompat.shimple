public final class android.support.v4.media.session.MediaControllerCompat extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl;
    private final android.support.v4.media.session.MediaSessionCompat$Token mToken;

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token) throws android.os.RemoteException
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.content.Context $r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 $r3;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase $r4;
        android.support.v4.media.session.MediaSessionCompat$Token $r5, $r5_1;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.content.Context;

        $r5 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r5 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sessionToken must not be null");

        throw $r2;

     label1:
        $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r5;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $r3 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        specialinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r1, $r5);

        $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r3;

        return;

     label2:
        $r4 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase;

        $r5_1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase: void <init>(android.support.v4.media.session.MediaSessionCompat$Token)>($r5_1);

        $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r4;

        return;
    }

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.content.Context $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 $r4;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase $r5;
        android.support.v4.media.session.MediaSessionCompat$Token $r6, $r6_1;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("session must not be null");

        throw $r3;

     label1:
        $r6 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r6;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $r4 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21;

        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat)>($r1, $r2);

        $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r4;

        return;

     label2:
        $r5 = new android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase;

        $r6_1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        specialinvoke $r5.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase: void <init>(android.support.v4.media.session.MediaSessionCompat$Token)>($r6_1);

        $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl> = $r5;

        return;
    }

    public void adjustVolume(int, int)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        int $i0, $i1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void adjustVolume(int,int)>($i0, $i1);

        return;
    }

    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.view.KeyEvent $r1;
        java.lang.IllegalArgumentException $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.view.KeyEvent;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("KeyEvent may not be null");

        throw $r2;

     label1:
        $r3 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $z0 = interfaceinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>($r1);

        return $z0;
    }

    public android.os.Bundle getExtras()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.os.Bundle getExtras()>();

        return $r2;
    }

    public long getFlags()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        long $l0;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $l0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: long getFlags()>();

        return $l0;
    }

    public java.lang.Object getMediaController()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.lang.Object $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.Object getMediaController()>();

        return $r2;
    }

    public android.support.v4.media.MediaMetadataCompat getMetadata()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.MediaMetadataCompat $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.MediaMetadataCompat getMetadata()>();

        return $r2;
    }

    public java.lang.String getPackageName()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.lang.String $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.String getPackageName()>();

        return $r2;
    }

    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()>();

        return $r2;
    }

    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()>();

        return $r2;
    }

    public java.util.List getQueue()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.util.List $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.util.List getQueue()>();

        return $r2;
    }

    public java.lang.CharSequence getQueueTitle()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: java.lang.CharSequence getQueueTitle()>();

        return $r2;
    }

    public int getRatingType()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        int $i0;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $i0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: int getRatingType()>();

        return $i0;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.app.PendingIntent $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.app.PendingIntent getSessionActivity()>();

        return $r2;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token mToken>;

        return r1;
    }

    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        return $r2;
    }

    public void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$Callback $r1;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        virtualinvoke $r0.<android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>($r1, null);

        return;
    }

    public void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$Callback $r1;
        java.lang.IllegalArgumentException $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r3;
        android.os.Handler $r4, $r4_1, $r4_2;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        $r4 := @parameter1: android.os.Handler;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback cannot be null");

        throw $r2;

     label1:
(0)     if $r4 != null goto label2;

        $r4_1 = new android.os.Handler;

(1)     specialinvoke $r4_1.<android.os.Handler: void <init>()>();

     label2:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r3 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>($r1, $r4_2);

        return;
    }

    public void sendCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.ResultReceiver $r3;
        java.lang.IllegalArgumentException $r4;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r5;
        boolean $z0;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r3 := @parameter2: android.os.ResultReceiver;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command cannot be null or empty");

        throw $r4;

     label1:
        $r5 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r5.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>($r1, $r2, $r3);

        return;
    }

    public void setVolumeTo(int, int)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        int $i0, $i1;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r1;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void setVolumeTo(int,int)>($i0, $i1);

        return;
    }

    public void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    {
        android.support.v4.media.session.MediaControllerCompat $r0;
        android.support.v4.media.session.MediaControllerCompat$Callback $r1;
        java.lang.IllegalArgumentException $r2;
        android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl $r3;

        $r0 := @this: android.support.v4.media.session.MediaControllerCompat;

        $r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$Callback;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback cannot be null");

        throw $r2;

     label1:
        $r3 = $r0.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>($r1);

        return;
    }
}
