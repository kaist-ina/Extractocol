public class java.util.logging.ErrorManager extends java.lang.Object
{
    public static final int CLOSE_FAILURE;
    public static final int FLUSH_FAILURE;
    public static final int FORMAT_FAILURE;
    public static final int GENERIC_FAILURE;
    public static final int OPEN_FAILURE;
    public static final int WRITE_FAILURE;

    public void <init>()
    {
        java.util.logging.ErrorManager r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.logging.ErrorManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void error(java.lang.String, java.lang.Exception, int)
    {
        java.util.logging.ErrorManager r0;
        java.lang.String r1;
        java.lang.Exception r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @this: java.util.logging.ErrorManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        i0 := @parameter2: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }
}
