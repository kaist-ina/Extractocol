public class android.support.v4.widget.ViewDragHelper extends java.lang.Object
{
    private static final int BASE_SETTLE_DURATION;
    public static final int DIRECTION_ALL;
    public static final int DIRECTION_HORIZONTAL;
    public static final int DIRECTION_VERTICAL;
    public static final int EDGE_ALL;
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    private static final int EDGE_SIZE;
    public static final int EDGE_TOP;
    public static final int INVALID_POINTER;
    private static final int MAX_SETTLE_DURATION;
    public static final int STATE_DRAGGING;
    public static final int STATE_IDLE;
    public static final int STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final android.view.animation.Interpolator sInterpolator;
    private int mActivePointerId;
    private final android.support.v4.widget.ViewDragHelper$Callback mCallback;
    private android.view.View mCapturedView;
    private int mDragState;
    private int[] mEdgeDragsInProgress;
    private int[] mEdgeDragsLocked;
    private int mEdgeSize;
    private int[] mInitialEdgesTouched;
    private float[] mInitialMotionX;
    private float[] mInitialMotionY;
    private float[] mLastMotionX;
    private float[] mLastMotionY;
    private float mMaxVelocity;
    private float mMinVelocity;
    private final android.view.ViewGroup mParentView;
    private int mPointersDown;
    private boolean mReleaseInProgress;
    private android.support.v4.widget.ScrollerCompat mScroller;
    private final java.lang.Runnable mSetIdleRunnable;
    private int mTouchSlop;
    private int mTrackingEdges;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        android.support.v4.widget.ViewDragHelper$1 $r0;

        $r0 = new android.support.v4.widget.ViewDragHelper$1;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper$1: void <init>()>();

        <android.support.v4.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator> = $r0;

        return;
    }

    private void <init>(android.content.Context, android.view.ViewGroup, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.content.Context $r1;
        android.view.ViewGroup $r2;
        android.support.v4.widget.ViewDragHelper$Callback $r3;
        android.support.v4.widget.ViewDragHelper$2 $r4;
        android.view.animation.Interpolator $r5;
        java.lang.IllegalArgumentException $r6, $r6_1;
        android.view.ViewConfiguration $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        float $f0, $f0_1, $f0_2, $f0_3, $f0_4;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.support.v4.widget.ScrollerCompat $r10;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: android.support.v4.widget.ViewDragHelper$Callback;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;

        $r4 = new android.support.v4.widget.ViewDragHelper$2;

        specialinvoke $r4.<android.support.v4.widget.ViewDragHelper$2: void <init>(android.support.v4.widget.ViewDragHelper)>($r0);

        $r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable> = $r4;

        if $r2 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parent view may not be null");

        throw $r6;

     label1:
        if $r3 != null goto label2;

        $r6_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r6_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Callback may not be null");

        throw $r6_1;

     label2:
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView> = $r2;

        $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback> = $r3;

        $r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r9.<android.util.DisplayMetrics: float density>;

        $f0_1 = 20.0F * $f0;

        $f0_2 = $f0_1 + 0.5F;

        $i0 = (int) $f0_2;

        $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize> = $i0;

        $i0_1 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop> = $i0_1;

        $i0_2 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $f0_3 = (float) $i0_2;

        $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity> = $f0_3;

        $i0_3 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $f0_4 = (float) $i0_3;

        $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity> = $f0_4;

        $r5 = <android.support.v4.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator>;

        $r10 = staticinvoke <android.support.v4.widget.ScrollerCompat: android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)>($r1, $r5);

        $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller> = $r10;

        return;
    }

    private boolean checkNewEdgeDrag(float, float, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        float $f0, $f1, $f2, $f0_1, $f1_1, $f2_1, $f2_2, $f1_2, $f1_3, $f2_3, $f1_4;
        int $i0, $i1, $i2, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6, $i2_7, $i2_8, $i2_9, $i2_10, $i2_11, $i1_1, $i0_1, $i0_2, $i0_3, $i2_12, $i0_4;
        int[] $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5;
        byte $b3, $b3_1, $b3_2, $b3_3, $b3_4, $b3_5;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $f0_1 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f1_1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i2 = $r2[$i0];

        $i2_1 = $i2 & $i1;

(0)     if $i2_1 != $i1 goto label3;

        $i2_2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i2_3 = $i2_2 & $i1;

(1)     if $i2_3 == 0 goto label3;

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i2_4 = $r2_1[$i0];

        $i2_5 = $i2_4 & $i1;

(2)     if $i2_5 == $i1 goto label3;

        $r2_2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i2_6 = $r2_2[$i0];

        $i2_7 = $i2_6 & $i1;

(3)     if $i2_7 == $i1 goto label3;

        $i2_8 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f2 = (float) $i2_8;

        $b3 = $f0_1 cmpg $f2;

(4)     if $b3 > 0 goto label1;

        $i2_9 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f2_1 = (float) $i2_9;

        $b3_1 = $f1_1 cmpg $f2_1;

(5)     if $b3_1 > 0 goto label1;

        return 0;

     label1:
        $b3_2 = Phi($b3 #4, $b3_1 #5);

        $i2_10 = Phi($i2_8 #4, $i2_9 #5);

        $f2_2 = Phi($f2 #4, $f2_1 #5);

        $f1_2 = 0.5F * $f1_1;

        $b3_3 = $f0_1 cmpg $f1_2;

        if $b3_3 >= 0 goto label2;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $z0 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)>($i1);

        if $z0 == 0 goto label2;

        $r2_3 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i2_11 = $r2_3[$i0];

        $i1_1 = $i2_11 | $i1;

        $r2_3[$i0] = $i1_1;

        return 0;

     label2:
        $r2_4 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i0_1 = $r2_4[$i0];

        $i0_2 = $i0_1 & $i1;

(6)     if $i0_2 != 0 goto label3;

        $i0_3 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f1_3 = (float) $i0_3;

        $b3_4 = $f0_1 cmpl $f1_3;

(7)     if $b3_4 <= 0 goto label3;

        return 1;

     label3:
        $b3_5 = Phi($b3 #0, $b3 #1, $b3 #2, $b3 #3, $b3_3 #6, $b3_4 #7);

        $i2_12 = Phi($i2_1 #0, $i2_3 #1, $i2_5 #2, $i2_7 #3, $i2_10 #6, $i2_10 #7);

        $f2_3 = Phi($f2 #0, $f2 #1, $f2 #2, $f2 #3, $f2_2 #6, $f2_2 #7);

        $r2_5 = Phi($r2 #0, $r2 #1, $r2_1 #2, $r2_2 #3, $r2_4 #6, $r2_4 #7);

        $f1_4 = Phi($f1_1 #0, $f1_1 #1, $f1_1 #2, $f1_1 #3, $f1_2 #6, $f1_3 #7);

        $i0_4 = Phi($i0 #0, $i0 #1, $i0 #2, $i0 #3, $i0_2 #6, $i0_3 #7);

        return 0;
    }

    private boolean checkTouchSlop(android.view.View, float, float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7;
        float $f0, $f1, $f0_1, $f1_1, $f0_2, $f1_2, $f0_3, $f1_3, $f0_4, $f1_4, $f1_5, $f0_5, $f1_6, $f0_6;
        android.support.v4.widget.ViewDragHelper$Callback $r2, $r2_1;
        boolean $z0, $z1, $z0_1, $z1_1, $z1_2, $z0_2;
        byte $b2, $b2_1, $b2_2, $b2_3, $b2_4;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i0 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r1);

        if $i0 <= 0 goto label4;

(0)     $z0 = 1;

     label2:
        $z0_1 = Phi($z0 #0, $z0_2 #3);

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i0_1 = virtualinvoke $r2_1.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r1);

        if $i0_1 <= 0 goto label5;

(1)     $z1 = 1;

     label3:
        $z1_1 = Phi($z1 #1, $z1_2 #4);

        if $z0_1 == 0 goto label6;

        if $z1_1 == 0 goto label6;

        $f0_1 = $f0 * $f0;

        $f1_1 = $f1 * $f1;

        $f0_2 = $f0_1 + $f1_1;

        $i0_2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i0_3 = $i0_2 * $i1;

        $f1_2 = (float) $i0_3;

        $b2 = $f0_2 cmpl $f1_2;

(2)     if $b2 > 0 goto label9;

        return 0;

     label4:
        $z0_2 = 0;

(3)     goto label2;

     label5:
        $z1_2 = 0;

(4)     goto label3;

     label6:
        if $z0_1 == 0 goto label7;

        $f0_3 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0_4 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f1_3 = (float) $i0_4;

        $b2_1 = $f0_3 cmpl $f1_3;

(5)     if $b2_1 > 0 goto label9;

        return 0;

     label7:
(6)     if $z1_1 == 0 goto label8;

        $f0_4 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $i0_5 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f1_4 = (float) $i0_5;

        $b2_2 = $f0_4 cmpl $f1_4;

(7)     if $b2_2 > 0 goto label9;

     label8:
        $f1_5 = Phi($f1 #6, $f1_4 #7);

        $f0_5 = Phi($f0 #6, $f0_4 #7);

        $i0_6 = Phi($i0_1 #6, $i0_5 #7);

        $b2_3 = Phi($b2 #6, $b2_2 #7);

        return 0;

     label9:
        $f1_6 = Phi($f1_2 #2, $f1_3 #5, $f1_4 #7);

        $f0_6 = Phi($f0_2 #2, $f0_3 #5, $f0_4 #7);

        $i0_7 = Phi($i0_3 #2, $i0_4 #5, $i0_5 #7);

        $b2_4 = Phi($b2 #2, $b2_1 #5, $b2_2 #7);

        return 1;
    }

    private float clampMag(float, float, float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2, $f3, $f3_1;
        byte $b0, $b0_1, $b0_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f3 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $b0 = $f2 cmpg $f0;

        if $b0 >= 0 goto label1;

        return 0.0F;

     label1:
        $b0_1 = $f2 cmpl $f1;

        if $b0_1 <= 0 goto label3;

        $b0_2 = $f3 cmpl 0.0F;

        if $b0_2 > 0 goto label2;

        $f3_1 = neg $f1;

        return $f3_1;

     label2:
        return $f1;

     label3:
        return $f3;
    }

    private int clampMag(int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i3_1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        if $i2 >= $i0 goto label1;

        return 0;

     label1:
        if $i2 <= $i1 goto label3;

        if $i3 > 0 goto label2;

        $i3_1 = neg $i1;

        return $i3_1;

     label2:
        return $i1;

     label3:
        return $i3;
    }

    private void clearMotionHistory()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float[] $r1, $r1_1, $r1_2, $r1_3, $r1_4;
        int[] $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1_1, 0.0F);

        $r1_2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1_2, 0.0F);

        $r1_3 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1_3, 0.0F);

        $r1_4 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1_4, 0.0F);

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2_1, 0);

        $r2_2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2_2, 0);

        $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = 0;

        return;
    }

    private void clearMotionHistory(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        float[] $r1, $r1_1, $r1_2, $r1_3, $r1_4;
        int[] $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i1 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r1_1[$i1] = 0.0F;

        $r1_2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r1_2[$i1] = 0.0F;

        $r1_3 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r1_3[$i1] = 0.0F;

        $r1_4 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r1_4[$i1] = 0.0F;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $r2[$i1] = 0;

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $r2_1[$i1] = 0;

        $r2_2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $r2_2[$i1] = 0;

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;

        $i1_1 = 1 << $i1;

        $i1_2 = $i1_1 ^ -1;

        $i1_3 = $i0 & $i1_2;

        $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = $i1_3;

        return;
    }

    private int computeAxisDuration(int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i3_1, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6;
        android.view.ViewGroup $r1;
        float $f0, $f1, $f2, $f0_1, $f0_2, $f1_1, $f2_1, $f1_2, $f0_3, $f1_3, $f0_4, $f0_5, $f0_6, $f1_4, $f0_7, $f0_8, $f1_5, $f0_9, $f0_10, $f0_11;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        if $i2 != 0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i4 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        $i1 = $i4 / 2;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $f0 = (float) $i5;

        $f1 = (float) $i4;

        $f0_1 = $f0 / $f1;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0_1);

        $f0_2 = (float) $i1;

        $f1_1 = (float) $i1;

        $f2_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)>($f2);

        $f1_2 = $f1_1 * $f2_1;

        $f0_3 = $f0_2 + $f1_2;

        $i3_1 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        if $i3_1 <= 0 goto label3;

        $f1_3 = (float) $i3_1;

        $f0_4 = $f0_3 / $f1_3;

        $f0_5 = staticinvoke <java.lang.Math: float abs(float)>($f0_4);

        $f0_6 = 1000.0F * $f0_5;

        $i2_1 = staticinvoke <java.lang.Math: int round(float)>($f0_6);

(0)     $i2_2 = $i2_1 * 4;

     label2:
        $f1_4 = Phi($f1_3 #0, $f1_5 #1);

        $i2_3 = Phi($i2_2 #0, $i2_6 #1);

        $f0_7 = Phi($f0_6 #0, $f0_11 #1);

        $i2_4 = staticinvoke <java.lang.Math: int min(int,int)>($i2_3, 600);

        return $i2_4;

     label3:
        $i2_5 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $f0_8 = (float) $i2_5;

        $f1_5 = (float) $i0;

        $f0_9 = $f0_8 / $f1_5;

        $f0_10 = $f0_9 + 1.0F;

        $f0_11 = $f0_10 * 256.0F;

        $i2_6 = (int) $f0_11;

(1)     goto label2;
    }

    private int computeSettleDuration(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i2_1, $i4_1, $i5_1, $i3_1, $i4_2, $i5_2, $i4_3, $i0_1, $i2_2, $i1_1, $i0_2;
        float $f0, $f1, $f2, $f0_1, $f0_2, $f0_3, $f0_4, $f0_5, $f0_6, $f1_1, $f1_2, $f1_3, $f2_1, $f1_4, $f2_2, $f0_7, $f2_3, $f1_5, $f0_8, $f1_6, $f2_4, $f1_7, $f0_9, $f1_8, $f0_10;
        android.support.v4.widget.ViewDragHelper$Callback $r2, $r2_1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $f0 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $i4 = (int) $f0;

        $f0_1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        $i5 = (int) $f0_1;

        $i2_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int clampMag(int,int,int)>($i2, $i4, $i5);

        $f0_2 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $i4_1 = (int) $f0_2;

        $f0_3 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        $i5_1 = (int) $f0_3;

        $i3_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int clampMag(int,int,int)>($i3, $i4_1, $i5_1);

        $i4_2 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i5_2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i2_1);

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i3_1);

        $i8 = $i6 + $i7;

        $i9 = $i4_2 + $i5_2;

        if $i2_1 == 0 goto label3;

        $f0_4 = (float) $i6;

        $f1 = (float) $i8;

(0)     $f0_5 = $f0_4 / $f1;

     label1:
        $f0_6 = Phi($f0_5 #0, $f0_10 #2);

        $f1_1 = Phi($f1 #0, $f1_8 #2);

        if $i3_1 == 0 goto label4;

        $f1_2 = (float) $i7;

        $f2 = (float) $i8;

(1)     $f1_3 = $f1_2 / $f2;

     label2:
        $f2_1 = Phi($f2 #1, $f2_4 #3);

        $f1_4 = Phi($f1_3 #1, $f1_7 #3);

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i4_3 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r1);

        $i0_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>($i0, $i2_1, $i4_3);

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i2_2 = virtualinvoke $r2_1.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r1);

        $i1_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>($i1, $i3_1, $i2_2);

        $f2_2 = (float) $i0_1;

        $f0_7 = $f2_2 * $f0_6;

        $f2_3 = (float) $i1_1;

        $f1_5 = $f2_3 * $f1_4;

        $f0_8 = $f0_7 + $f1_5;

        $i0_2 = (int) $f0_8;

        return $i0_2;

     label3:
        $f0_9 = (float) $i4_2;

        $f1_8 = (float) $i9;

        $f0_10 = $f0_9 / $f1_8;

(2)     goto label1;

     label4:
        $f1_6 = (float) $i5_2;

        $f2_4 = (float) $i9;

        $f1_7 = $f1_6 / $f2_4;

(3)     goto label2;
    }

    public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup, float, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup $r0;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        float $f0, $f1, $f1_1, $f1_2;
        android.support.v4.widget.ViewDragHelper $r2;
        int $i0, $i0_1;

        $r0 := @parameter0: android.view.ViewGroup;

        $f1 := @parameter1: float;

        $r1 := @parameter2: android.support.v4.widget.ViewDragHelper$Callback;

        $r2 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>($r0, $r1);

        $i0 = $r2.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f0 = (float) $i0;

        $f1_1 = 1.0F / $f1;

        $f1_2 = $f0 * $f1_1;

        $i0_1 = (int) $f1_2;

        $r2.<android.support.v4.widget.ViewDragHelper: int mTouchSlop> = $i0_1;

        return $r2;
    }

    public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup $r0;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        android.support.v4.widget.ViewDragHelper $r2;
        android.content.Context $r3;

        $r0 := @parameter0: android.view.ViewGroup;

        $r1 := @parameter1: android.support.v4.widget.ViewDragHelper$Callback;

        $r2 = new android.support.v4.widget.ViewDragHelper;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v4.widget.ViewDragHelper: void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>($r3, $r0, $r1);

        return $r2;
    }

    private void dispatchViewReleased(float, float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        android.view.View $r2;
        int $i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress> = 1;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)>($r2, $f0, $f1);

        $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress> = 0;

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i0 != 1 goto label1;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

     label1:
        return;
    }

    private float distanceInfluenceForSnapDuration(float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        double $d0, $d0_1, $d0_2, $d0_3;
        float $f0, $f0_1, $f0_2, $f0_3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f0_1 = $f0 - 0.5F;

        $d0 = (double) $f0_1;

        $d0_1 = $d0 * 0.4712389167638204;

        $f0_2 = (float) $d0_1;

        $d0_2 = (double) $f0_2;

        $d0_3 = staticinvoke <java.lang.Math: double sin(double)>($d0_2);

        $f0_3 = (float) $d0_3;

        return $f0_3;
    }

    private void dragTo(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i2_1, $i4_1, $i2_2, $i2_3, $i4_2, $i2_4, $i5_1, $i2_5, $i2_6, $i5_2, $i2_7, $i3_1, $i2_8, $i3_2;
        android.view.View $r1, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5, $r1_6, $r1_7, $r1_8, $r1_9;
        android.support.v4.widget.ViewDragHelper$Callback $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i4 = $i2;

        $i5 = $i3;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i6 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i7 = virtualinvoke $r1_1.<android.view.View: int getTop()>();

(0)     if $i0 == 0 goto label1;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r1_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2_1 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>($r1_2, $i2, $i0);

        $i4_1 = $i2_1;

        $r1_3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2_2 = $i2_1 - $i6;

(1)     virtualinvoke $r1_3.<android.view.View: void offsetLeftAndRight(int)>($i2_2);

     label1:
        $r2_1 = Phi($r2 #0, $r2 #1);

        $i2_3 = Phi($i2 #0, $i2_2 #1);

        $r1_4 = Phi($r1_1 #0, $r1_3 #1);

        $i4_2 = Phi($i4 #0, $i4_1 #1);

(2)     if $i1 == 0 goto label2;

        $r2_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r1_5 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2_4 = virtualinvoke $r2_2.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>($r1_5, $i3, $i1);

        $i5_1 = $i2_4;

        $r1_6 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2_5 = $i2_4 - $i7;

(3)     virtualinvoke $r1_6.<android.view.View: void offsetTopAndBottom(int)>($i2_5);

     label2:
        $r2_3 = Phi($r2_1 #2, $r2_2 #3);

        $i2_6 = Phi($i2_3 #2, $i2_5 #3);

        $i5_2 = Phi($i5 #2, $i5_1 #3);

        $r1_7 = Phi($r1_4 #2, $r1_6 #3);

        if $i0 != 0 goto label3;

(4)     if $i1 == 0 goto label4;

     label3:
        $i2_7 = $i4_2 - $i6;

        $i3_1 = $i5_2 - $i7;

        $r2_4 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r1_8 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(5)     virtualinvoke $r2_4.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r1_8, $i4_2, $i5_2, $i2_7, $i3_1);

     label4:
        $r2_5 = Phi($r2_3 #4, $r2_4 #5);

        $i2_8 = Phi($i2_6 #4, $i2_7 #5);

        $r1_9 = Phi($r1_7 #4, $r1_8 #5);

        $i3_2 = Phi($i3 #4, $i3_1 #5);

        return;
    }

    private void ensureMotionHistorySizeForId(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float[] $r1, $r2, $r3, $r7, $r8, $r9, $r1_1, $r1_2, $r1_3, $r8_1, $r8_2, $r9_1, $r8_3, $r9_2, $r8_4, $r9_3, $r8_5, $r9_4, $r8_6, $r1_4, $r9_5;
        int[] $r4, $r5, $r6, $r10, $r11, $r10_1, $r11_1, $r10_2, $r11_2, $r11_3, $r10_3, $r11_4, $r10_4;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5, $i1_6, $i1_7, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10, $i1_8;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $i1 = lengthof $r1_1;

(1)     if $i1 > $i0 goto label3;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $i1_1 = Phi($i1 #0, $i1 #1);

        $i1_2 = $i0 + 1;

        $r7 = newarray (float)[$i1_2];

        $i1_3 = $i0 + 1;

        $r1_3 = newarray (float)[$i1_3];

        $i1_4 = $i0 + 1;

        $r2 = newarray (float)[$i1_4];

        $i1_5 = $i0 + 1;

        $r3 = newarray (float)[$i1_5];

        $i1_6 = $i0 + 1;

        $r4 = newarray (int)[$i1_6];

        $i1_7 = $i0 + 1;

        $r5 = newarray (int)[$i1_7];

        $i0_1 = $i0 + 1;

        $r6 = newarray (int)[$i0_1];

        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

(2)     if $r8 == null goto label2;

        $r8_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $i0_2 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8_1, 0, $r7, 0, $i0_2);

        $r8_2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r9_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $i0_3 = lengthof $r9_1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8_2, 0, $r1_3, 0, $i0_3);

        $r8_3 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r9_2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $i0_4 = lengthof $r9_2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8_3, 0, $r2, 0, $i0_4);

        $r8_4 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r9_3 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $i0_5 = lengthof $r9_3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8_4, 0, $r3, 0, $i0_5);

        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $r11 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i0_6 = lengthof $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r4, 0, $i0_6);

        $r10_1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $r11_1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i0_7 = lengthof $r11_1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10_1, 0, $r5, 0, $i0_7);

        $r10_2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $r11_2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i0_8 = lengthof $r11_2;

(3)     staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10_2, 0, $r6, 0, $i0_8);

     label2:
        $i0_9 = Phi($i0_1 #2, $i0_8 #3);

        $r8_5 = Phi($r8 #2, $r8_4 #3);

        $r9_4 = Phi($r9 #2, $r9_3 #3);

        $r11_3 = Phi($r11 #2, $r11_2 #3);

        $r10_3 = Phi($r10 #2, $r10_2 #3);

        $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX> = $r7;

        $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY> = $r1_3;

        $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX> = $r2;

        $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY> = $r3;

        $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched> = $r4;

        $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress> = $r5;

(4)     $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked> = $r6;

     label3:
        $i0_10 = Phi($i0 #1, $i0_9 #4);

        $r8_6 = Phi($r8 #1, $r8_5 #4);

        $r1_4 = Phi($r1_1 #1, $r1_3 #4);

        $r9_5 = Phi($r9 #1, $r9_4 #4);

        $r11_4 = Phi($r11 #1, $r11_3 #4);

        $i1_8 = Phi($i1 #1, $i1_7 #4);

        $r10_4 = Phi($r10 #1, $r10_3 #4);

        return;
    }

    private boolean forceSettleCapturedViewAt(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i1_1, $i2_1, $i3_1;
        android.view.View $r1, $r1_1, $r1_2;
        android.support.v4.widget.ScrollerCompat $r2, $r2_1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i0 := @parameter3: int;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i4 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i5 = virtualinvoke $r1_1.<android.view.View: int getTop()>();

        $i1_1 = $i1 - $i4;

        $i2_1 = $i2 - $i5;

        if $i1_1 != 0 goto label1;

        if $i2_1 != 0 goto label1;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

        return 0;

     label1:
        $r1_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i3_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)>($r1_2, $i1_1, $i2_1, $i3, $i0);

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r2_1.<android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int,int)>($i4, $i5, $i1_1, $i2_1, $i3_1);

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(2);

        return 1;
    }

    private int getEdgesTouched(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i2, $i3, $i4, $i3_1, $i3_2, $i4_1, $i3_3, $i3_4, $i4_2, $i3_5, $i2_1, $i3_6, $i2_2;
        byte $b1, $b1_1, $b1_2, $b1_3, $b1_4, $b1_5, $b1_6, $b1_7, $b1_8;
        android.view.ViewGroup $r1, $r1_1, $r1_2, $r1_3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $b1 = 0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i3 = virtualinvoke $r1.<android.view.ViewGroup: int getLeft()>();

        $i4 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i3_1 = $i3 + $i4;

(0)     if $i2 >= $i3_1 goto label1;

(1)     $b1_1 = 1;

     label1:
        $b1_2 = Phi($b1 #0, $b1_1 #1);

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i3_2 = virtualinvoke $r1_1.<android.view.ViewGroup: int getTop()>();

        $i4_1 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i3_3 = $i3_2 + $i4_1;

(2)     if $i0 >= $i3_3 goto label2;

(3)     $b1_3 = $b1_2 | 4;

     label2:
        $b1_4 = Phi($b1_2 #2, $b1_3 #3);

        $r1_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i3_4 = virtualinvoke $r1_2.<android.view.ViewGroup: int getRight()>();

        $i4_2 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i3_5 = $i3_4 - $i4_2;

(4)     if $i2 <= $i3_5 goto label3;

(5)     $b1_5 = $b1_4 | 2;

     label3:
        $b1_6 = Phi($b1_4 #4, $b1_5 #5);

        $r1_3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i2_1 = virtualinvoke $r1_3.<android.view.ViewGroup: int getBottom()>();

        $i3_6 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i2_2 = $i2_1 - $i3_6;

(6)     if $i0 <= $i2_2 goto label4;

(7)     $b1_7 = $b1_6 | 8;

     label4:
        $b1_8 = Phi($b1_6 #6, $b1_7 #7);

        return $b1_8;
    }

    private void releaseViewForPointerUp()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2, $f3, $f1_1, $f1_2, $f2_1, $f0_1, $f0_2;
        android.view.VelocityTracker $r1, $r1_1, $r1_2;
        int $i0, $i0_1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $f1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        virtualinvoke $r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f1);

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f1_1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r1_1, $i0);

        $f0 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $f2 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        $f1_2 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: float clampMag(float,float,float)>($f1_1, $f0, $f2);

        $r1_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i0_1 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f2_1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r1_2, $i0_1);

        $f3 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $f0_1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        $f0_2 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: float clampMag(float,float,float)>($f2_1, $f3, $f0_1);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void dispatchViewReleased(float,float)>($f1_2, $f0_2);

        return;
    }

    private void reportNewEdgeDrags(float, float, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1;
        int $i0, $i2, $i2_1, $i2_2;
        byte $b1, $b1_1, $b1_2, $b1_3, $b1_4, $b1_5, $b1_6, $b1_7, $b1_8;
        int[] $r1;
        android.support.v4.widget.ViewDragHelper$Callback $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 := @parameter2: int;

        $b1 = 0;

        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f0, $f1, $i0, 1);

(0)     if $z0 == 0 goto label1;

(1)     $b1_1 = 1;

     label1:
        $b1_2 = Phi($b1 #0, $b1_1 #1);

        $z0_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f1, $f0, $i0, 4);

(2)     if $z0_1 == 0 goto label2;

(3)     $b1_3 = $b1_2 | 4;

     label2:
        $b1_4 = Phi($b1_2 #2, $b1_3 #3);

        $z0_2 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f0, $f1, $i0, 2);

(4)     if $z0_2 == 0 goto label3;

(5)     $b1_5 = $b1_4 | 2;

     label3:
        $b1_6 = Phi($b1_4 #4, $b1_5 #5);

        $z0_3 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f1, $f0, $i0, 8);

(6)     if $z0_3 == 0 goto label4;

(7)     $b1_7 = $b1_6 | 8;

     label4:
        $b1_8 = Phi($b1_6 #6, $b1_7 #7);

(8)     if $b1_8 == 0 goto label5;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i2 = $r1[$i0];

        $i2_1 = $i2 | $b1_8;

        $r1[$i0] = $i2_1;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

(9)     virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)>($b1_8, $i0);

     label5:
        $i2_2 = Phi($i2 #8, $i2_1 #9);

        return;
    }

    private void saveInitialMotion(float, float, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1;
        int[] $r1;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i1_1, $i1_2;
        float[] $r2, $r3, $r2_1, $r3_1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i1 := @parameter2: int;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)>($i1);

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r3[$i1] = $f0;

        $r2[$i1] = $f0;

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r3_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r3_1[$i1] = $f1;

        $r2_1[$i1] = $f1;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i0 = (int) $f0;

        $i2 = (int) $f1;

        $i0_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int getEdgesTouched(int,int)>($i0, $i2);

        $r1[$i1] = $i0_1;

        $i0_2 = $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;

        $i1_1 = 1 << $i1;

        $i1_2 = $i0_2 | $i1_1;

        $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = $i1_2;

        return;
    }

    private void saveLastMotion(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i1_1, $i1_2;
        float $f0, $f1;
        float[] $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);

(0)     $i1 = 0;

     label1:
        $r2 = Phi($r2 #0, $r2_2 #1);

        $i1_1 = Phi($i1 #0, $i1_2 #1);

        if $i1_1 >= $i0 goto label2;

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1_1);

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1_1);

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1_1);

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r2_1[$i2] = $f0;

        $r2_2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r2_2[$i2] = $f1;

        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label2:
        return;
    }

    public void abort()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        android.view.View $r2;
        int $i0, $i1, $i2, $i3, $i0_1, $i1_1, $i2_1, $i2_2, $i1_2, $i0_2;
        android.support.v4.widget.ScrollerCompat $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(0)     if $i0 != 2 goto label1;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i1 = virtualinvoke $r3.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();

        $r3_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i2 = virtualinvoke $r3_1.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();

        $r3_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r3_2.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

        $r3_3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i0_1 = virtualinvoke $r3_3.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();

        $r3_4 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i3 = virtualinvoke $r3_4.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i1_1 = $i0_1 - $i1;

        $i2_1 = $i3 - $i2;

(1)     virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r2, $i0_1, $i3, $i1_1, $i2_1);

     label1:
        $i2_2 = Phi($i2 #0, $i2_1 #1);

        $i1_2 = Phi($i1 #0, $i1_1 #1);

        $r3_5 = Phi($r3 #0, $r3_4 #1);

        $i0_2 = Phi($i0 #0, $i0_1 #1);

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

        return;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i6_1, $i6_2, $i7_1, $i8_1, $i7_2, $i8_2, $i7_3, $i8_3, $i7_4, $i8_4, $i7_5, $i8_5, $i7_6, $i8_6, $i8_7, $i7_7, $i8_8, $i6_3, $i7_8, $i6_4, $i8_9, $i3_1, $i3_2, $i3_3, $i3_4;
        boolean $z0, $z1, $z1_1, $z1_2, $z1_3, $z1_4, $z0_1, $z0_2, $z0_3, $z0_4;
        android.view.ViewGroup $r2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $i3 := @parameter2: int;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $z1 = $r1 instanceof android.view.ViewGroup;

(0)     if $z1 == 0 goto label3;

        $r2 = (android.view.ViewGroup) $r1;

        $i4 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i5 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i6 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

(1)     $i6_1 = $i6 + -1;

     label1:
        $i7 = Phi($i7 #1, $i7_7 #8);

        $i6_2 = Phi($i6_1 #1, $i6_3 #8);

        $i8 = Phi($i8 #1, $i8_8 #8);

        $z1_1 = Phi($z1 #1, $z1_3 #8);

(2)     if $i6_2 < 0 goto label3;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i6_2);

        $i7_1 = $i1 + $i4;

        $i8_1 = virtualinvoke $r3.<android.view.View: int getLeft()>();

(3)     if $i7_1 < $i8_1 goto label2;

        $i7_2 = $i1 + $i4;

        $i8_2 = virtualinvoke $r3.<android.view.View: int getRight()>();

(4)     if $i7_2 >= $i8_2 goto label2;

        $i7_3 = $i2 + $i5;

        $i8_3 = virtualinvoke $r3.<android.view.View: int getTop()>();

(5)     if $i7_3 < $i8_3 goto label2;

        $i7_4 = $i2 + $i5;

        $i8_4 = virtualinvoke $r3.<android.view.View: int getBottom()>();

(6)     if $i7_4 >= $i8_4 goto label2;

        $i7_5 = $i1 + $i4;

        $i8_5 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $i7_6 = $i7_5 - $i8_5;

        $i8_6 = $i2 + $i5;

        $i9 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i8_7 = $i8_6 - $i9;

        $z1_2 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)>($r3, 1, $i3, $i0, $i7_6, $i8_7);

(7)     if $z1_2 == 0 goto label2;

        return 1;

     label2:
        $i7_7 = Phi($i7_1 #3, $i7_2 #4, $i7_3 #5, $i7_4 #6, $i7_6 #7);

        $i8_8 = Phi($i8_1 #3, $i8_2 #4, $i8_3 #5, $i8_4 #6, $i8_7 #7);

        $z1_3 = Phi($z1_1 #3, $z1_1 #4, $z1_1 #5, $z1_1 #6, $z1_2 #7);

        $i6_3 = $i6_2 + -1;

(8)     goto label1;

     label3:
        $i7_8 = Phi($i7 #0, $i7 #2);

        $i6_4 = Phi($i6 #0, $i6_2 #2);

        $i8_9 = Phi($i8 #0, $i8 #2);

        $z1_4 = Phi($z1 #0, $z1_1 #2);

(9)     if $z0 == 0 goto label5;

        $i3_1 = neg $i3;

        $z0_1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r1, $i3_1);

(10)    if $z0_1 != 0 goto label4;

        $i3_2 = neg $i0;

        $z0_2 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r1, $i3_2);

(11)    if $z0_2 == 0 goto label5;

     label4:
        $z0_3 = Phi($z0_1 #10, $z0_2 #11);

        $i3_3 = Phi($i3_1 #10, $i3_2 #11);

        return 1;

     label5:
        $z0_4 = Phi($z0 #9, $z0_2 #11);

        $i3_4 = Phi($i3 #9, $i3_2 #11);

        return 0;
    }

    public void cancel()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.VelocityTracker $r1, $r1_1, $r1_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory()>();

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1_1.<android.view.VelocityTracker: void recycle()>();

(1)     $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        return;
    }

    public void captureChildView(android.view.View, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        android.support.v4.widget.ViewDragHelper$Callback $r3;
        android.view.ViewParent $r4;
        android.view.ViewGroup $r5, $r5_1;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3;
        java.lang.String $r7;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r4 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $r5 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        if $r4 == $r5 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("captureChildView: parameter must be a descendant of the ViewDragHelper\'s tracked parent view (");

        $r5_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5_1);

        $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = $r1;

        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = $i0;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)>($r1, $i0);

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(1);

        return;
    }

    public boolean checkTouchSlop(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        float[] $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $i1 = lengthof $r1;

(0)     $i2 = 0;

     label1:
        $i2_1 = Phi($i2 #0, $i2_2 #1);

        if $i2_1 >= $i1 goto label3;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(int,int)>($i0, $i2_1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i2_2 = $i2_1 + 1;

(1)     goto label1;

     label3:
        return 0;
    }

    public boolean checkTouchSlop(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i1_1, $i1_2, $i2_1, $i1_3, $i1_4, $i1_5, $i1_6, $i2_2, $i1_7;
        float $f0, $f1, $f2, $f1_1, $f0_1, $f0_2, $f1_2, $f0_3, $f1_3, $f0_4, $f1_4, $f0_5, $f1_5, $f0_6, $f0_7, $f1_6, $f0_8, $f1_7;
        boolean $z0, $z1, $z0_1, $z0_2, $z1_1, $z1_2, $z0_3;
        float[] $r1, $r1_1, $r1_2, $r1_3;
        byte $b3, $b3_1, $b3_2, $b3_3, $b3_4;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isPointerDown(int)>($i2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = $i1 & 1;

        if $i0 != 1 goto label4;

(0)     $z0_1 = 1;

     label2:
        $z0_2 = Phi($z0_1 #0, $z0_3 #3);

        $i1_1 = $i1 & 2;

        if $i1_1 != 2 goto label5;

(1)     $z1 = 1;

     label3:
        $z1_1 = Phi($z1 #1, $z1_2 #4);

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $f1 = $r1[$i2];

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f0 = $r1_1[$i2];

        $f1_1 = $f1 - $f0;

        $r1_2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $f2 = $r1_2[$i2];

        $r1_3 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f0_1 = $r1_3[$i2];

        $f0_2 = $f2 - $f0_1;

        if $z0_2 == 0 goto label6;

        if $z1_1 == 0 goto label6;

        $f1_2 = $f1_1 * $f1_1;

        $f0_3 = $f0_2 * $f0_2;

        $f1_3 = $f1_2 + $f0_3;

        $i1_2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i2_1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i1_3 = $i1_2 * $i2_1;

        $f0_4 = (float) $i1_3;

        $b3 = $f1_3 cmpl $f0_4;

(2)     if $b3 > 0 goto label9;

        return 0;

     label4:
        $z0_3 = 0;

(3)     goto label2;

     label5:
        $z1_2 = 0;

(4)     goto label3;

     label6:
        if $z0_2 == 0 goto label7;

        $f1_4 = staticinvoke <java.lang.Math: float abs(float)>($f1_1);

        $i1_4 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f0_5 = (float) $i1_4;

        $b3_1 = $f1_4 cmpl $f0_5;

(5)     if $b3_1 > 0 goto label9;

        return 0;

     label7:
(6)     if $z1_1 == 0 goto label8;

        $f1_5 = staticinvoke <java.lang.Math: float abs(float)>($f0_2);

        $i1_5 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f0_6 = (float) $i1_5;

        $b3_2 = $f1_5 cmpl $f0_6;

(7)     if $b3_2 > 0 goto label9;

     label8:
        $b3_3 = Phi($b3 #6, $b3_2 #7);

        $f0_7 = Phi($f0_2 #6, $f0_6 #7);

        $i1_6 = Phi($i1_1 #6, $i1_5 #7);

        $f1_6 = Phi($f1_1 #6, $f1_5 #7);

        return 0;

     label9:
        $i2_2 = Phi($i2_1 #2, $i2 #5, $i2 #7);

        $b3_4 = Phi($b3 #2, $b3_1 #5, $b3_2 #7);

        $f0_8 = Phi($f0_4 #2, $f0_5 #5, $f0_6 #7);

        $i1_7 = Phi($i1_3 #2, $i1_4 #5, $i1_5 #7);

        $f1_7 = Phi($f1_3 #2, $f1_4 #5, $f1_5 #7);

        return 1;
    }

    public boolean continueSettling(boolean)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        boolean $z0, $z1, $z2, $z2_1, $z2_2, $z2_3;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        int $i0, $i1, $i2, $i3, $i0_1, $i2_1, $i3_1, $i2_2, $i1_1, $i2_3, $i1_2, $i2_4, $i1_3, $i3_2, $i0_2, $i0_3;
        android.support.v4.widget.ScrollerCompat $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7;
        android.view.View $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7, $r3_8;
        android.view.ViewGroup $r4;
        java.lang.Runnable $r5;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(0)     if $i0 != 2 goto label6;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $z1 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: boolean computeScrollOffset()>();

        $z2 = $z1;

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i1 = virtualinvoke $r2_1.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();

        $r2_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i0_1 = virtualinvoke $r2_2.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $i2_1 = $i1 - $i2;

        $r3_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i3 = virtualinvoke $r3_1.<android.view.View: int getTop()>();

        $i3_1 = $i0_1 - $i3;

(1)     if $i2_1 == 0 goto label1;

        $r3_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(2)     virtualinvoke $r3_2.<android.view.View: void offsetLeftAndRight(int)>($i2_1);

     label1:
        $r3_3 = Phi($r3_1 #1, $r3_2 #2);

(3)     if $i3_1 == 0 goto label2;

        $r3_4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(4)     virtualinvoke $r3_4.<android.view.View: void offsetTopAndBottom(int)>($i3_1);

     label2:
        $r3_5 = Phi($r3_3 #3, $r3_4 #4);

        if $i2_1 != 0 goto label3;

(5)     if $i3_1 == 0 goto label4;

     label3:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r3_6 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(6)     virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r3_6, $i1, $i0_1, $i2_1, $i3_1);

     label4:
        $r3_7 = Phi($r3_5 #5, $r3_6 #6);

(7)     if $z1 == 0 goto label5;

        $r2_3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i2_2 = virtualinvoke $r2_3.<android.support.v4.widget.ScrollerCompat: int getFinalX()>();

(8)     if $i1 != $i2_2 goto label5;

        $r2_4 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i1_1 = virtualinvoke $r2_4.<android.support.v4.widget.ScrollerCompat: int getFinalY()>();

(9)     if $i0_1 != $i1_1 goto label5;

        $r2_5 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r2_5.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

(10)    $z2_1 = 0;

     label5:
        $i2_3 = Phi($i2_1 #7, $i2_2 #8, $i2_2 #9, $i2_2 #10);

        $i1_2 = Phi($i1 #7, $i1 #8, $i1_1 #9, $i1_1 #10);

        $r2_6 = Phi($r2_2 #7, $r2_3 #8, $r2_4 #9, $r2_5 #10);

        $z2_2 = Phi($z2 #7, $z2 #8, $z2 #9, $z2_1 #10);

(11)    if $z2_2 != 0 goto label6;

        if $z0 == 0 goto label7;

        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r5 = $r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable>;

(12)    virtualinvoke $r4.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r5);

     label6:
        $r3_8 = Phi($r3 #0, $r3_7 #11, $r3_7 #12, $r3_7 #13);

        $i2_4 = Phi($i2 #0, $i2_3 #11, $i2_3 #12, $i2_3 #13);

        $i1_3 = Phi($i1 #0, $i1_2 #11, $i1_2 #12, $i1_2 #13);

        $r2_7 = Phi($r2 #0, $r2_6 #11, $r2_6 #12, $r2_6 #13);

        $i3_2 = Phi($i3 #0, $i3_1 #11, $i3_1 #12, $i3_1 #13);

        $z2_3 = Phi($z2 #0, $z2_2 #11, $z2_2 #12, $z2_2 #13);

        $i0_2 = Phi($i0 #0, $i0_1 #11, $i0_1 #12, $i0_1 #13);

        $i0_3 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i0_3 != 2 goto label8;

        return 1;

     label7:
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

(13)    goto label6;

     label8:
        return 0;
    }

    public android.view.View findTopChildUnder(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i3_1, $i3_2, $i3_3, $i3_4, $i3_5, $i3_6, $i2_3;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        android.view.ViewGroup $r2, $r2_1, $r2_2;
        android.view.View $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i2 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

(0)     $i2_1 = $i2 + -1;

     label1:
        $r2_1 = Phi($r2 #0, $r2_2 #5);

        $i2_2 = Phi($i2_1 #0, $i2_3 #5);

        $i3 = Phi($i3 #0, $i3_6 #5);

        if $i2_2 < 0 goto label3;

        $r2_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i3_1 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)>($i2_2);

        $r3 = virtualinvoke $r2_2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3_1);

        $i3_2 = virtualinvoke $r3.<android.view.View: int getLeft()>();

(1)     if $i0 < $i3_2 goto label2;

        $i3_3 = virtualinvoke $r3.<android.view.View: int getRight()>();

(2)     if $i0 >= $i3_3 goto label2;

        $i3_4 = virtualinvoke $r3.<android.view.View: int getTop()>();

(3)     if $i1 < $i3_4 goto label2;

        $i3_5 = virtualinvoke $r3.<android.view.View: int getBottom()>();

(4)     if $i1 >= $i3_5 goto label2;

        return $r3;

     label2:
        $i3_6 = Phi($i3_2 #1, $i3_3 #2, $i3_4 #3, $i3_5 #4);

        $i2_3 = $i2_2 + -1;

(5)     goto label1;

     label3:
        return null;
    }

    public void flingCapturedView(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i6_1, $i7_1;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.support.v4.widget.ScrollerCompat $r2;
        android.view.View $r3, $r3_1;
        android.view.VelocityTracker $r4, $r4_1;
        float $f0, $f0_1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot flingCapturedView outside of a call to Callback#onViewReleased");

        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i4 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $r3_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i5 = virtualinvoke $r3_1.<android.view.View: int getTop()>();

        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i6 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r4, $i6);

        $i6_1 = (int) $f0;

        $r4_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i7 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f0_1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r4_1, $i7);

        $i7_1 = (int) $f0_1;

        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)>($i4, $i5, $i6_1, $i7_1, $i0, $i2, $i1, $i3);

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(2);

        return;
    }

    public int getActivePointerId()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        return i0;
    }

    public android.view.View getCapturedView()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View r1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        return r1;
    }

    public int getEdgeSize()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        return i0;
    }

    public float getMinVelocity()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float f0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        return f0;
    }

    public int getTouchSlop()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        return i0;
    }

    public int getViewDragState()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        return i0;
    }

    public boolean isCapturedViewUnder(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r1, $i0, $i1);

        return $z0;
    }

    public boolean isEdgeTouched(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        int[] $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1 = lengthof $r1;

(0)     $i2 = 0;

     label1:
        $i2_1 = Phi($i2 #0, $i2_2 #1);

        if $i2_1 >= $i1 goto label3;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isEdgeTouched(int,int)>($i0, $i2_1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i2_2 = $i2_1 + 1;

(1)     goto label1;

     label3:
        return 0;
    }

    public boolean isEdgeTouched(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int[] $r1;
        boolean $z0;
        int $i0, $i1, $i1_1, $i0_1, $i0_2, $i1_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isPointerDown(int)>($i1);

(0)     if $z0 == 0 goto label1;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1_1 = $r1[$i1];

        $i0_1 = $i1_1 & $i0;

(1)     if $i0_1 == 0 goto label1;

        return 1;

     label1:
        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $i1_2 = Phi($i1 #0, $i1_1 #1);

        return 0;
    }

    public boolean isPointerDown(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i1_1, $i1_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i1 := @parameter0: int;

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;

        $i1_1 = 1 << $i1;

        $i1_2 = $i0 & $i1_1;

        if $i1_2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isViewUnder(android.view.View, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i2_1, $i1_1, $i1_2, $i2_2, $i1_3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke $r1.<android.view.View: int getLeft()>();

(0)     if $i1 < $i2 goto label2;

        $i2_1 = virtualinvoke $r1.<android.view.View: int getRight()>();

(1)     if $i1 >= $i2_1 goto label2;

        $i1_1 = virtualinvoke $r1.<android.view.View: int getTop()>();

(2)     if $i0 < $i1_1 goto label2;

        $i1_2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

(3)     if $i0 >= $i1_2 goto label2;

        return 1;

     label2:
        $i2_2 = Phi($i2 #0, $i2_1 #1, $i2_1 #2, $i2_1 #3);

        $i1_3 = Phi($i1 #0, $i1 #1, $i1_1 #2, $i1_2 #3);

        return 0;
    }

    public void processTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i0_1, $i1_1, $i1_2, $i2_1, $i2_2, $i2_3, $i1_3, $i0_2, $i1_4, $i1_5, $i2_4, $i1_6, $i2_5, $i2_6, $i2_7, $i1_7, $i1_8, $i2_8, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i1_9, $i1_10, $i2_9, $i2_10, $i3_1, $i0_8, $i1_11, $i2_11, $i3_2, $i1_12, $i2_12, $i3_3, $i3_4, $i4_1, $i1_13, $i2_13, $i4_2, $i3_5, $i0_9, $i1_14, $i1_15, $i1_16, $i2_14, $i3_6, $i4_3, $i3_7, $i4_4, $i5_1, $i5_2, $i3_8, $i5_3, $i1_17, $i4_5, $i5_4, $i1_18, $i2_15, $i4_6, $i5_5, $i3_9, $i1_19, $i0_10, $i0_11, $i2_16, $i1_20, $i0_12;
        android.view.VelocityTracker $r2, $r2_1, $r2_2, $r2_3;
        float $f0, $f1, $f2, $f3, $f0_1, $f1_1, $f1_2, $f0_2, $f1_3, $f1_4, $f0_3, $f2_1, $f0_4, $f1_5, $f0_5, $f1_6, $f2_2, $f2_3, $f3_1, $f3_2, $f3_3, $f2_4, $f0_6, $f1_7, $f0_7, $f1_8, $f0_8, $f1_9, $f0_9, $f1_10, $f0_10, $f1_11, $f0_11, $f1_12, $f0_12, $f1_13;
        android.view.View $r3, $r7, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7, $r3_8, $r3_9, $r3_10, $r3_11, $r3_12, $r3_13, $r3_14;
        int[] $r4, $r4_1, $r4_2;
        android.support.v4.widget.ViewDragHelper$Callback $r5, $r5_1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11;
        float[] $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        if $i0 != 0 goto label01;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label01:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

(0)     if $r2 != null goto label02;

        $r2_1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

(1)     $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r2_1;

     label02:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r2_3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2_3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label19;
            case 2: goto label07;
            case 3: goto label21;
            case 4: goto label03;
            case 5: goto label05;
            case 6: goto label13;
            default: goto label03;
        };

     label03:
        return;

     label04:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0_1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $i1_1 = (int) $f0;

        $i2 = (int) $f1;

        $r3 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1_1, $i2);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0, $f1, $i0_1);

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i0_1);

        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1_2 = $r4[$i0_1];

        $i2_1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i2_2 = $i2_1 & $i1_2;

(2)     if $i2_2 == 0 goto label23;

        $r5 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i2_3 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i1_3 = $i2_3 & $i1_2;

        virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1_3, $i0_1);

        return;

     label05:
        $i0_2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);

        $f0_1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);

        $f1_1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0_1, $f1_1, $i0_2);

        $i1_4 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i1_4 != 0 goto label06;

        $i1_5 = (int) $f0_1;

        $i2_4 = (int) $f1_1;

        $r3_1 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1_5, $i2_4);

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3_1, $i0_2);

        $r4_1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1_6 = $r4_1[$i0_2];

        $i2_5 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i2_6 = $i2_5 & $i1_6;

(3)     if $i2_6 == 0 goto label23;

        $r5_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i2_7 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i1_7 = $i2_7 & $i1_6;

        virtualinvoke $r5_1.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1_7, $i0_2);

        return;

     label06:
        $i1_8 = (int) $f0_1;

        $i2_8 = (int) $f1_1;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)>($i1_8, $i2_8);

(4)     if $z0 == 0 goto label23;

        $r3_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3_2, $i0_2);

        return;

     label07:
        $i0_3 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i0_3 != 1 goto label08;

        $i0_4 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $i0_5 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0_4);

        $f1_2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i0_5);

        $f0_2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i0_5);

        $r6 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $i0_6 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f2 = $r6[$i0_6];

        $f1_3 = $f1_2 - $f2;

        $i0_7 = (int) $f1_3;

        $r6_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $i1_9 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f1_4 = $r6_1[$i1_9];

        $f0_3 = $f0_2 - $f1_4;

        $i1_10 = (int) $f0_3;

        $r3_3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2_9 = virtualinvoke $r3_3.<android.view.View: int getLeft()>();

        $i2_10 = $i2_9 + $i0_7;

        $r3_4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i3 = virtualinvoke $r3_4.<android.view.View: int getTop()>();

        $i3_1 = $i3 + $i1_10;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void dragTo(int,int,int,int)>($i2_10, $i3_1, $i0_7, $i1_10);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);

        return;

     label08:
        $i0_8 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);

(5)     $i1_11 = 0;

     label09:
        $f3 = Phi($f3 #5, $f3_2 #10);

        $i2_11 = Phi($i2 #5, $i2_12 #10);

        $z0_1 = Phi($z0 #5, $z0_4 #10);

        $f2_1 = Phi($f2 #5, $f2_3 #10);

        $i4 = Phi($i4 #5, $i4_1 #10);

        $r3_5 = Phi($r3 #5, $r3_6 #10);

        $f0_4 = Phi($f0 #5, $f0_5 #10);

        $f1_5 = Phi($f1 #5, $f1_6 #10);

        $i3_2 = Phi($i3 #5, $i3_4 #10);

        $r6_2 = Phi($r6 #5, $r6_4 #10);

        $i1_12 = Phi($i1_11 #5, $i1_13 #10);

(6)     if $i1_12 >= $i0_8 goto label10;

        $i2_12 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1_12);

        $f0_5 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1_12);

        $f1_6 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1_12);

        $r6_3 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f2_2 = $r6_3[$i2_12];

        $f2_3 = $f0_5 - $f2_2;

        $r6_4 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f3_1 = $r6_4[$i2_12];

        $f3_2 = $f1_6 - $f3_1;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>($f2_3, $f3_2, $i2_12);

        $i3_3 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(7)     if $i3_3 != 1 goto label11;

     label10:
        $f3_3 = Phi($f3 #6, $f3_2 #7, $f3_2 #9);

        $i2_13 = Phi($i2_11 #6, $i2_12 #7, $i2_12 #9);

        $z0_5 = Phi($z0_1 #6, $z0_1 #7, $z0_3 #9);

        $f2_4 = Phi($f2_1 #6, $f2_3 #7, $f2_3 #9);

        $i4_2 = Phi($i4 #6, $i4 #7, $i4_1 #9);

        $r3_7 = Phi($r3_5 #6, $r3_5 #7, $r3_6 #9);

        $f0_6 = Phi($f0_4 #6, $f0_5 #7, $f0_5 #9);

        $f1_7 = Phi($f1_5 #6, $f1_6 #7, $f1_6 #9);

        $i3_5 = Phi($i3_2 #6, $i3_3 #7, $i3_4 #9);

        $r6_5 = Phi($r6_2 #6, $r6_4 #7, $r6_4 #9);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);

        return;

     label11:
        $i3_4 = (int) $f0_5;

        $i4_1 = (int) $f1_6;

        $r3_6 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i3_4, $i4_1);

        $z0_2 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>($r3_6, $f2_3, $f3_2);

(8)     if $z0_2 == 0 goto label12;

        $z0_3 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3_6, $i2_12);

(9)     if $z0_3 != 0 goto label10;

     label12:
        $z0_4 = Phi($z0_2 #8, $z0_3 #9);

        $i1_13 = $i1_12 + 1;

(10)    goto label09;

     label13:
        $i0_9 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);

        $i1_14 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(11)    if $i1_14 != 1 goto label18;

        $i1_15 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

(12)    if $i0_9 != $i1_15 goto label18;

        $i1_16 = -1;

        $i2_14 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);

(13)    $i3_6 = 0;

     label14:
        $z0_6 = Phi($z0 #13, $z0_7 #16);

        $i4_3 = Phi($i4 #13, $i4_4 #16);

        $r3_8 = Phi($r3 #13, $r3_9 #16);

        $i5 = Phi($i5 #13, $i5_2 #16);

        $f0_7 = Phi($f0 #13, $f0_8 #16);

        $f1_8 = Phi($f1 #13, $f1_9 #16);

        $i3_7 = Phi($i3_6 #13, $i3_8 #16);

(14)    if $i3_7 >= $i2_14 goto label17;

        $i4_4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i3_7);

        $i5_1 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

(15)    if $i4_4 != $i5_1 goto label16;

     label15:
        $z0_7 = Phi($z0_6 #15, $z0_6 #17, $z0_8 #18);

        $r3_9 = Phi($r3_8 #15, $r3_10 #17, $r3_11 #18);

        $i5_2 = Phi($i5_1 #15, $i5_3 #17, $i5_3 #18);

        $f0_8 = Phi($f0_7 #15, $f0_9 #17, $f0_9 #18);

        $f1_9 = Phi($f1_8 #15, $f1_10 #17, $f1_10 #18);

        $i3_8 = $i3_7 + 1;

(16)    goto label14;

     label16:
        $f0_9 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i3_7);

        $f1_10 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i3_7);

        $i5_3 = (int) $f0_9;

        $i6 = (int) $f1_10;

        $r3_10 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i5_3, $i6);

        $r7 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(17)    if $r3_10 != $r7 goto label15;

        $r3_11 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $z0_8 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3_11, $i4_4);

(18)    if $z0_8 == 0 goto label15;

(19)    $i1_17 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

     label17:
        $z0_9 = Phi($z0_6 #14, $z0_8 #19);

        $i4_5 = Phi($i4_3 #14, $i4_4 #19);

        $r3_12 = Phi($r3_8 #14, $r3_11 #19);

        $i5_4 = Phi($i5 #14, $i5_3 #19);

        $f0_10 = Phi($f0_7 #14, $f0_9 #19);

        $f1_11 = Phi($f1_8 #14, $f1_10 #19);

        $i1_18 = Phi($i1_16 #14, $i1_17 #19);

(20)    if $i1_18 != -1 goto label18;

(21)    specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label18:
        $i2_15 = Phi($i2 #11, $i2 #12, $i2_14 #20, $i2_14 #21);

        $z0_10 = Phi($z0 #11, $z0 #12, $z0_9 #20, $z0_9 #21);

        $i4_6 = Phi($i4 #11, $i4 #12, $i4_5 #20, $i4_5 #21);

        $r3_13 = Phi($r3 #11, $r3 #12, $r3_12 #20, $r3_12 #21);

        $i5_5 = Phi($i5 #11, $i5 #12, $i5_4 #20, $i5_4 #21);

        $f0_11 = Phi($f0 #11, $f0 #12, $f0_10 #20, $f0_10 #21);

        $f1_12 = Phi($f1 #11, $f1 #12, $f1_11 #20, $f1_11 #21);

        $i3_9 = Phi($i3 #11, $i3 #12, $i3_7 #20, $i3_7 #21);

        $i1_19 = Phi($i1_14 #11, $i1_15 #12, $i1_18 #20, $i1_18 #21);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory(int)>($i0_9);

        return;

     label19:
        $i0_10 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i0_10 != 1 goto label20;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label20:
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        return;

     label21:
        $i0_11 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i0_11 != 1 goto label22;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void dispatchViewReleased(float,float)>(0.0F, 0.0F);

     label22:
(22)    virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label23:
        $i2_16 = Phi($i2_2 #2, $i2_6 #3, $i2_8 #4, $i2 #22);

        $z0_11 = Phi($z0 #2, $z0 #3, $z0 #4, $z0 #22);

        $r3_14 = Phi($r3 #2, $r3_1 #3, $r3 #4, $r3 #22);

        $f0_12 = Phi($f0 #2, $f0_1 #3, $f0_1 #4, $f0 #22);

        $f1_13 = Phi($f1 #2, $f1_1 #3, $f1_1 #4, $f1 #22);

        $i1_20 = Phi($i1_2 #2, $i1_6 #3, $i1_8 #4, $i1 #22);

        $r4_2 = Phi($r4 #2, $r4_1 #3, $r4 #4, $r4 #22);

        $i0_12 = Phi($i0_1 #2, $i0_2 #3, $i0_2 #4, $i0_11 #22);

        return;
    }

    void setDragState(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.ViewGroup $r1;
        java.lang.Runnable $r2;
        int $i0, $i1, $i1_1, $i1_2;
        android.support.v4.widget.ViewDragHelper$Callback $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i1 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable>;

        virtualinvoke $r1.<android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(0)     if $i0 == $i1 goto label1;

        $r0.<android.support.v4.widget.ViewDragHelper: int mDragState> = $i1;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)>($i1);

        $i1_1 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(1)     if $i1_1 != 0 goto label1;

(2)     $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label1:
        $i1_2 = Phi($i1 #0, $i1_1 #1, $i1_1 #2);

        return;
    }

    public void setEdgeTrackingEnabled(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges> = $i0;

        return;
    }

    public void setMinVelocity(float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity> = $f0;

        return;
    }

    public boolean settleCapturedViewAt(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i2_1, $i3_1;
        java.lang.IllegalStateException $r1;
        boolean $z0, $z0_1;
        android.view.VelocityTracker $r2, $r2_1;
        float $f0, $f0_1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot settleCapturedViewAt outside of a call to Callback#onViewReleased");

        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r2, $i2);

        $i2_1 = (int) $f0;

        $r2_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f0_1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r2_1, $i3);

        $i3_1 = (int) $f0_1;

        $z0_1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>($i0, $i1, $i2_1, $i3_1);

        return $z0_1;
    }

    public boolean shouldInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i1_1, $i0_1, $i0_2, $i0_3, $i1_2, $i2_1, $i1_3, $i1_4, $i1_5, $i2_2, $i2_3, $i2_4, $i1_6, $i0_4, $i1_7, $i1_8, $i2_5, $i2_6, $i2_7, $i1_9, $i1_10, $i1_11, $i2_8, $i0_5, $i1_12, $i3_1, $i6_1, $i5_1, $i2_9, $i7_1, $i1_13, $i4_1, $i2_10, $i3_2, $i4_2, $i3_3, $i4_3, $i4_4, $i5_2, $i4_5, $i5_3, $i6_2, $i6_3, $i7_2, $i6_4, $i7_3, $i3_4, $i6_5, $i5_4, $i7_4, $i4_6, $i3_5, $i1_14, $i3_6, $i6_6, $i5_5, $i2_11, $i7_5, $i4_7, $i0_6;
        android.view.VelocityTracker $r2, $r2_1, $r2_2, $r2_3;
        float $f0, $f1, $f2, $f3, $f0_1, $f1_1, $f0_2, $f1_2, $f0_3, $f2_1, $f1_3, $f3_1, $f0_4, $f1_4, $f2_2, $f2_3, $f3_2, $f3_3, $f0_5, $f2_4, $f1_5, $f3_4;
        android.view.View $r3, $r4, $r3_1, $r4_1, $r3_2, $r4_2, $r3_3, $r3_4, $r3_5;
        int[] $r5, $r5_1, $r5_2;
        android.support.v4.widget.ViewDragHelper$Callback $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6, $r6_7, $r6_8, $r6_9;
        float[] $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        if $i0 != 0 goto label01;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label01:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

(0)     if $r2 != null goto label02;

        $r2_1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

(1)     $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r2_1;

     label02:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r2_3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2_3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

(2)     lookupswitch($i0)
        {
            case 0: goto label05;
            case 1: goto label18;
            case 2: goto label09;
            case 3: goto label18;
            case 4: goto label04;
            case 5: goto label07;
            case 6: goto label17;
            default: goto label03;
        };

     label03:
(3)     goto label04;

     label04:
        $f0 = Phi($f0 #2, $f0 #3, $f0_1 #7, $f0_1 #8, $f0_2 #9, $f0_2 #10, $f0_2 #11, $f0_2 #12, $f0_2 #13, $f0 #14, $f0 #15, $f0_5 #27, $f0 #33, $f0 #34);

        $i3 = Phi($i3 #2, $i3 #3, $i3 #7, $i3 #8, $i3 #9, $i3 #10, $i3 #11, $i3 #12, $i3 #13, $i3 #14, $i3 #15, $i3_6 #27, $i3 #33, $i3 #34);

        $r4 = Phi($r4 #2, $r4 #3, $r4_1 #7, $r4_1 #8, $r4 #9, $r4 #10, $r4 #11, $r4_2 #12, $r4_2 #13, $r4 #14, $r4 #15, $r4 #27, $r4 #33, $r4 #34);

        $i6 = Phi($i6 #2, $i6 #3, $i6 #7, $i6 #8, $i6 #9, $i6 #10, $i6 #11, $i6 #12, $i6 #13, $i6 #14, $i6 #15, $i6_6 #27, $i6 #33, $i6 #34);

        $i5 = Phi($i5 #2, $i5 #3, $i5 #7, $i5 #8, $i5 #9, $i5 #10, $i5 #11, $i5 #12, $i5 #13, $i5 #14, $i5 #15, $i5_5 #27, $i5 #33, $i5 #34);

        $r7 = Phi($r7 #2, $r7 #3, $r7 #7, $r7 #8, $r7 #9, $r7 #10, $r7 #11, $r7 #12, $r7 #13, $r7_1 #14, $r7_2 #15, $r7_6 #27, $r7 #33, $r7 #34);

        $z0 = Phi($z0 #2, $z0 #3, $z0 #7, $z0 #8, $z0 #9, $z0 #10, $z0 #11, $z0 #12, $z0 #13, $z0 #14, $z0 #15, $z0_9 #27, $z0 #33, $z0 #34);

        $i2 = Phi($i2 #2, $i2 #3, $i2_3 #7, $i2_4 #8, $i2_6 #9, $i2_7 #10, $i2 #11, $i2_8 #12, $i2_8 #13, $i2 #14, $i2 #15, $i2_11 #27, $i2 #33, $i2 #34);

        $i7 = Phi($i7 #2, $i7 #3, $i7 #7, $i7 #8, $i7 #9, $i7 #10, $i7 #11, $i7 #12, $i7 #13, $i7 #14, $i7 #15, $i7_5 #27, $i7 #33, $i7 #34);

        $f2 = Phi($f2 #2, $f2 #3, $f2 #7, $f2 #8, $f2 #9, $f2 #10, $f2 #11, $f2 #12, $f2 #13, $f2 #14, $f2 #15, $f2_4 #27, $f2 #33, $f2 #34);

        $i1_1 = Phi($i1 #2, $i1 #3, $i1_5 #7, $i1_6 #8, $i1_8 #9, $i1_9 #10, $i1_10 #11, $i1_11 #12, $i1_11 #13, $i1 #14, $i1 #15, $i1_13 #27, $i1 #33, $i1 #34);

        $i0_1 = Phi($i0 #2, $i0 #3, $i0_3 #7, $i0_3 #8, $i0_4 #9, $i0_4 #10, $i0_4 #11, $i0_4 #12, $i0_4 #13, $i0 #14, $i0 #15, $i0_5 #27, $i0_6 #33, $i0 #34);

        $r6 = Phi($r6 #2, $r6 #3, $r6 #7, $r6_1 #8, $r6 #9, $r6_2 #10, $r6 #11, $r6 #12, $r6 #13, $r6 #14, $r6 #15, $r6_9 #27, $r6 #33, $r6 #34);

        $i4 = Phi($i4 #2, $i4 #3, $i4 #7, $i4 #8, $i4 #9, $i4 #10, $i4 #11, $i4 #12, $i4 #13, $i4 #14, $i4 #15, $i4_7 #27, $i4 #33, $i4 #34);

        $f1 = Phi($f1 #2, $f1 #3, $f1_1 #7, $f1_1 #8, $f1_2 #9, $f1_2 #10, $f1_2 #11, $f1_2 #12, $f1_2 #13, $f1 #14, $f1 #15, $f1_5 #27, $f1 #33, $f1 #34);

        $r3 = Phi($r3 #2, $r3 #3, $r3_1 #7, $r3_1 #8, $r3 #9, $r3 #10, $r3 #11, $r3_2 #12, $r3_2 #13, $r3 #14, $r3 #15, $r3_5 #27, $r3 #33, $r3 #34);

        $f3 = Phi($f3 #2, $f3 #3, $f3 #7, $f3 #8, $f3 #9, $f3 #10, $f3 #11, $f3 #12, $f3 #13, $f3 #14, $f3 #15, $f3_4 #27, $f3 #33, $f3 #34);

        $r5 = Phi($r5 #2, $r5 #3, $r5_1 #7, $r5_1 #8, $r5_2 #9, $r5_2 #10, $r5 #11, $r5 #12, $r5 #13, $r5 #14, $r5 #15, $r5 #27, $r5 #33, $r5 #34);

        $i0_2 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i0_2 != 1 goto label19;

        return 1;

     label05:
        $f0_1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1_1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0_3 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0_1, $f1_1, $i0_3);

        $i1_2 = (int) $f0_1;

        $i2_1 = (int) $f1_1;

        $r3_1 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1_2, $i2_1);

        $r4_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(4)     if $r3_1 != $r4_1 goto label06;

        $i1_3 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(5)     if $i1_3 != 2 goto label06;

(6)     virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3_1, $i0_3);

     label06:
        $i1_4 = Phi($i1_2 #4, $i1_3 #5, $i1_3 #6);

        $r5_1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1_5 = $r5_1[$i0_3];

        $i2_2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i2_3 = $i2_2 & $i1_5;

(7)     if $i2_3 == 0 goto label04;

        $r6_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i2_4 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i1_6 = $i2_4 & $i1_5;

        virtualinvoke $r6_1.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1_6, $i0_3);

(8)     goto label04;

     label07:
        $i0_4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);

        $f0_2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);

        $f1_2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0_2, $f1_2, $i0_4);

        $i1_7 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i1_7 != 0 goto label08;

        $r5_2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1_8 = $r5_2[$i0_4];

        $i2_5 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i2_6 = $i2_5 & $i1_8;

(9)     if $i2_6 == 0 goto label04;

        $r6_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i2_7 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i1_9 = $i2_7 & $i1_8;

        virtualinvoke $r6_2.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1_9, $i0_4);

(10)    goto label04;

     label08:
        $i1_10 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(11)    if $i1_10 != 2 goto label04;

        $i1_11 = (int) $f0_2;

        $i2_8 = (int) $f1_2;

        $r3_2 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1_11, $i2_8);

        $r4_2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(12)    if $r3_2 != $r4_2 goto label04;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3_2, $i0_4);

(13)    goto label04;

     label09:
        $r7_1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

(14)    if $r7_1 == null goto label04;

        $r7_2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

(15)    if $r7_2 == null goto label04;

        $i0_5 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);

(16)    $i1_12 = 0;

     label10:
        $f0_3 = Phi($f0 #16, $f0_4 #32);

        $i3_1 = Phi($i3 #16, $i3_5 #32);

        $i6_1 = Phi($i6 #16, $i6_5 #32);

        $i5_1 = Phi($i5 #16, $i5_4 #32);

        $r7_3 = Phi($r7_2 #16, $r7_5 #32);

        $z0_1 = Phi($z0 #16, $z0_6 #32);

        $i2_9 = Phi($i2 #16, $i2_10 #32);

        $i7_1 = Phi($i7 #16, $i7_4 #32);

        $f2_1 = Phi($f2 #16, $f2_3 #32);

        $i1_13 = Phi($i1_12 #16, $i1_14 #32);

        $r6_3 = Phi($r6 #16, $r6_8 #32);

        $i4_1 = Phi($i4 #16, $i4_6 #32);

        $f1_3 = Phi($f1 #16, $f1_4 #32);

        $r3_3 = Phi($r3 #16, $r3_4 #32);

        $f3_1 = Phi($f3 #16, $f3_3 #32);

(17)    if $i1_13 >= $i0_5 goto label13;

        $i2_10 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1_13);

        $f0_4 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1_13);

        $f1_4 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1_13);

        $r7_4 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f2_2 = $r7_4[$i2_10];

        $f2_3 = $f0_4 - $f2_2;

        $r7_5 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f3_2 = $r7_5[$i2_10];

        $f3_3 = $f1_4 - $f3_2;

        $i3_2 = (int) $f0_4;

        $i4_2 = (int) $f1_4;

        $r3_4 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i3_2, $i4_2);

(18)    if $r3_4 == null goto label14;

        $z0_2 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>($r3_4, $f2_3, $f3_3);

(19)    if $z0_2 == 0 goto label14;

(20)    $z0_3 = 1;

     label11:
        $z0_4 = Phi($z0_3 #20, $z0_8 #28);

(21)    if $z0_4 == 0 goto label15;

        $i3_3 = virtualinvoke $r3_4.<android.view.View: int getLeft()>();

        $i4_3 = (int) $f2_3;

        $i4_4 = $i3_3 + $i4_3;

        $r6_4 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i5_2 = (int) $f2_3;

        $i4_5 = virtualinvoke $r6_4.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>($r3_4, $i4_4, $i5_2);

        $i5_3 = virtualinvoke $r3_4.<android.view.View: int getTop()>();

        $i6_2 = (int) $f3_3;

        $i6_3 = $i5_3 + $i6_2;

        $r6_5 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i7_2 = (int) $f3_3;

        $i6_4 = virtualinvoke $r6_5.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>($r3_4, $i6_3, $i7_2);

        $r6_6 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i7_3 = virtualinvoke $r6_6.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r3_4);

        $r6_7 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i8 = virtualinvoke $r6_7.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r3_4);

        if $i7_3 == 0 goto label12;

(22)    if $i7_3 <= 0 goto label15;

(23)    if $i4_5 != $i3_3 goto label15;

     label12:
(24)    if $i8 == 0 goto label13;

(25)    if $i8 <= 0 goto label15;

(26)    if $i6_4 != $i5_3 goto label15;

     label13:
        $f0_5 = Phi($f0_3 #17, $f0_4 #24, $f0_4 #26, $f0_4 #29, $f0_4 #31);

        $i3_6 = Phi($i3_1 #17, $i3_3 #24, $i3_3 #26, $i3_5 #29, $i3_5 #31);

        $i6_6 = Phi($i6_1 #17, $i6_4 #24, $i6_4 #26, $i6_5 #29, $i6_5 #31);

        $i5_5 = Phi($i5_1 #17, $i5_3 #24, $i5_3 #26, $i5_4 #29, $i5_4 #31);

        $r7_6 = Phi($r7_3 #17, $r7_5 #24, $r7_5 #26, $r7_5 #29, $r7_5 #31);

        $z0_9 = Phi($z0_1 #17, $z0_4 #24, $z0_4 #26, $z0_4 #29, $z0_5 #31);

        $i2_11 = Phi($i2_9 #17, $i2_10 #24, $i2_10 #26, $i2_10 #29, $i2_10 #31);

        $i7_5 = Phi($i7_1 #17, $i7_3 #24, $i7_3 #26, $i7_4 #29, $i7_4 #31);

        $f2_4 = Phi($f2_1 #17, $f2_3 #24, $f2_3 #26, $f2_3 #29, $f2_3 #31);

        $r6_9 = Phi($r6_3 #17, $r6_7 #24, $r6_7 #26, $r6_8 #29, $r6_8 #31);

        $i4_7 = Phi($i4_1 #17, $i4_5 #24, $i4_5 #26, $i4_6 #29, $i4_6 #31);

        $f1_5 = Phi($f1_3 #17, $f1_4 #24, $f1_4 #26, $f1_4 #29, $f1_4 #31);

        $r3_5 = Phi($r3_3 #17, $r3_4 #24, $r3_4 #26, $r3_4 #29, $r3_4 #31);

        $f3_4 = Phi($f3_1 #17, $f3_3 #24, $f3_3 #26, $f3_3 #29, $f3_3 #31);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);

(27)    goto label04;

     label14:
        $z0_7 = Phi($z0_1 #18, $z0_2 #19);

        $z0_8 = 0;

(28)    goto label11;

     label15:
        $i3_4 = Phi($i3_2 #21, $i3_3 #22, $i3_3 #23, $i3_3 #25, $i3_3 #26);

        $i6_5 = Phi($i6_1 #21, $i6_4 #22, $i6_4 #23, $i6_4 #25, $i6_4 #26);

        $i5_4 = Phi($i5_1 #21, $i5_3 #22, $i5_3 #23, $i5_3 #25, $i5_3 #26);

        $i7_4 = Phi($i7_1 #21, $i7_3 #22, $i7_3 #23, $i7_3 #25, $i7_3 #26);

        $r6_8 = Phi($r6_3 #21, $r6_7 #22, $r6_7 #23, $r6_7 #25, $r6_7 #26);

        $i4_6 = Phi($i4_2 #21, $i4_5 #22, $i4_5 #23, $i4_5 #25, $i4_5 #26);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>($f2_3, $f3_3, $i2_10);

        $i3_5 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(29)    if $i3_5 == 1 goto label13;

(30)    if $z0_4 == 0 goto label16;

        $z0_5 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3_4, $i2_10);

(31)    if $z0_5 != 0 goto label13;

     label16:
        $z0_6 = Phi($z0_4 #30, $z0_5 #31);

        $i1_14 = $i1_13 + 1;

(32)    goto label10;

     label17:
        $i0_6 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory(int)>($i0_6);

(33)    goto label04;

     label18:
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

(34)    goto label04;

     label19:
        return 0;
    }

    public boolean smoothSlideViewTo(android.view.View, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i1_1, $i1_2;
        boolean $z0;
        android.view.View $r1, $r1_1, $r1_2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = $r1;

        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;

        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>($i1, $i0, 0, 0);

(0)     if $z0 != 0 goto label1;

        $i1_1 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

(1)     if $i1_1 != 0 goto label1;

        $r1_1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

(2)     if $r1_1 == null goto label1;

(3)     $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label1:
        $r1_2 = Phi($r1 #0, $r1 #1, $r1_1 #2, $r1_1 #3);

        $i1_2 = Phi($i1 #0, $i1_1 #1, $i1_1 #2, $i1_1 #3);

        return $z0;
    }

    boolean tryCaptureViewForDrag(android.view.View, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1, $r2;
        int $i0, $i1;
        android.support.v4.widget.ViewDragHelper$Callback $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r1 != $r2 goto label1;

        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $z0 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label2;

        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = $i0;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>($r1, $i0);

        return 1;

     label2:
        return 0;
    }
}
