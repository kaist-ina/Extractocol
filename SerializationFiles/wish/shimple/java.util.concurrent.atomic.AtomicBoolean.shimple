public class java.util.concurrent.atomic.AtomicBoolean extends java.lang.Object implements java.io.Serializable
{

    public void <init>(boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean get()
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean compareAndSet(boolean, boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        boolean z0, z1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean weakCompareAndSet(boolean, boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        boolean z0, z1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void set(boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void lazySet(boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean getAndSet(boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.util.concurrent.atomic.AtomicBoolean r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicBoolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
