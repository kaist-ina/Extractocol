public final class com.google.gson.internal.LinkedHashTreeMap extends java.util.AbstractMap implements java.io.Serializable
{
    static final boolean $assertionsDisabled;
    private static final java.util.Comparator NATURAL_ORDER;
    java.util.Comparator comparator;
    private com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet;
    final com.google.gson.internal.LinkedHashTreeMap$Node header;
    private com.google.gson.internal.LinkedHashTreeMap$KeySet keySet;
    int modCount;
    int size;
    com.google.gson.internal.LinkedHashTreeMap$Node[] table;
    int threshold;

    static void <clinit>()
    {
        java.lang.Class $r0;
        com.google.gson.internal.LinkedHashTreeMap$1 $r1;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 = class "com/google/gson/internal/LinkedHashTreeMap";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

(0)     $z0_1 = 1;

     label1:
        $z0_2 = Phi($z0_1 #0, $z0_3 #1);

        <com.google.gson.internal.LinkedHashTreeMap: boolean $assertionsDisabled> = $z0_2;

        $r1 = new com.google.gson.internal.LinkedHashTreeMap$1;

        specialinvoke $r1.<com.google.gson.internal.LinkedHashTreeMap$1: void <init>()>();

        <com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator NATURAL_ORDER> = $r1;

        return;

     label2:
        $z0_3 = 0;

(1)     goto label1;
    }

    public void <init>()
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.util.Comparator $r1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 = <com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator NATURAL_ORDER>;

        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void <init>(java.util.Comparator)>($r1);

        return;
    }

    public void <init>(java.util.Comparator)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1;
        java.util.Comparator $r2, $r2_1, $r2_2;
        com.google.gson.internal.LinkedHashTreeMap$Node[] $r3, $r3_1, $r3_2;
        int $i0, $i1, $i0_1, $i1_1, $i0_2;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r2 := @parameter0: java.util.Comparator;

        specialinvoke $r0.<java.util.AbstractMap: void <init>()>();

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int size> = 0;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int modCount> = 0;

(0)     if $r2 == null goto label2;

     label1:
        $r2_1 = Phi($r2 #0, $r2_2 #1);

        $r0.<com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator comparator> = $r2_1;

        $r1 = new com.google.gson.internal.LinkedHashTreeMap$Node;

        specialinvoke $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: void <init>()>();

        $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node header> = $r1;

        $r3 = newarray (com.google.gson.internal.LinkedHashTreeMap$Node)[16];

        $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table> = $r3;

        $r3_1 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $i0 = lengthof $r3_1;

        $i0_1 = $i0 / 2;

        $r3_2 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $i1 = lengthof $r3_2;

        $i1_1 = $i1 / 4;

        $i0_2 = $i0_1 + $i1_1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int threshold> = $i0_2;

        return;

     label2:
        $r2_2 = <com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator NATURAL_ORDER>;

(1)     goto label1;
    }

    private void doubleCapacity()
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node[] $r1, $r1_1, $r1_2, $r1_3;
        int $i0, $i1, $i0_1, $i1_1, $i0_2;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $r1_1 = staticinvoke <com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])>($r1);

        $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table> = $r1_1;

        $r1_2 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $i0 = lengthof $r1_2;

        $i0_1 = $i0 / 2;

        $r1_3 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $i1 = lengthof $r1_3;

        $i1_1 = $i1 / 4;

        $i0_2 = $i0_1 + $i1_1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int threshold> = $i0_2;

        return;
    }

    static com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])
    {
        com.google.gson.internal.LinkedHashTreeMap$Node[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i1_1, $i1_2, $i2_1, $i3_1, $i4_1, $i1_3, $i2_2, $i3_2, $i2_3, $i3_3, $i4_2, $i4_3, $i4_4, $i2_4, $i3_4, $i4_5, $i4_6, $i4_7, $i2_5;
        com.google.gson.internal.LinkedHashTreeMap$AvlIterator $r2;
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder $r3, $r4;
        com.google.gson.internal.LinkedHashTreeMap$Node $r5, $r6, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8, $r5_9, $r5_10;

        $r0 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node[];

        $i0 = lengthof $r0;

        $i1 = $i0 * 2;

        $r1 = newarray (com.google.gson.internal.LinkedHashTreeMap$Node)[$i1];

        $r2 = new com.google.gson.internal.LinkedHashTreeMap$AvlIterator;

        specialinvoke $r2.<com.google.gson.internal.LinkedHashTreeMap$AvlIterator: void <init>()>();

        $r3 = new com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        specialinvoke $r3.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void <init>()>();

        $r4 = new com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        specialinvoke $r4.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void <init>()>();

(0)     $i1_1 = 0;

     label01:
        $i1_2 = Phi($i1_1 #0, $i1_3 #2);

        $i2 = Phi($i2 #0, $i2_1 #2);

        $i3 = Phi($i3 #0, $i3_1 #2);

        $r5 = Phi($r5 #0, $r5_2 #2);

        $i4 = Phi($i4 #0, $i4_1 #2);

        if $i1_2 >= $i0 goto label14;

        $r5_1 = $r0[$i1_2];

(1)     if $r5_1 != null goto label03;

     label02:
        $i2_1 = Phi($i2 #1, $i2_5 #11);

        $i3_1 = Phi($i3 #1, $i3_3 #11);

        $r5_2 = Phi($r5_1 #1, $r5_8 #11);

        $i4_1 = Phi($i4 #1, $i4_5 #11);

        $i1_3 = $i1_2 + 1;

(2)     goto label01;

     label03:
        virtualinvoke $r2.<com.google.gson.internal.LinkedHashTreeMap$AvlIterator: void reset(com.google.gson.internal.LinkedHashTreeMap$Node)>($r5_1);

        $i2_2 = 0;

(3)     $i3_2 = 0;

     label04:
        $i2_3 = Phi($i2_2 #3, $i2_4 #4, $i2_3 #5);

        $i3_3 = Phi($i3_2 #3, $i3_3 #4, $i3_4 #5);

        $i4_2 = Phi($i4 #3, $i4_4 #4, $i4_4 #5);

        $r6 = virtualinvoke $r2.<com.google.gson.internal.LinkedHashTreeMap$AvlIterator: com.google.gson.internal.LinkedHashTreeMap$Node next()>();

        if $r6 == null goto label06;

        $i4_3 = $r6.<com.google.gson.internal.LinkedHashTreeMap$Node: int hash>;

        $i4_4 = $i4_3 & $i0;

        if $i4_4 != 0 goto label05;

        $i2_4 = $i2_3 + 1;

(4)     goto label04;

     label05:
        $i3_4 = $i3_3 + 1;

(5)     goto label04;

     label06:
        virtualinvoke $r3.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void reset(int)>($i2_3);

        virtualinvoke $r4.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void reset(int)>($i3_3);

(6)     virtualinvoke $r2.<com.google.gson.internal.LinkedHashTreeMap$AvlIterator: void reset(com.google.gson.internal.LinkedHashTreeMap$Node)>($r5_1);

     label07:
        $r5_3 = Phi($r5_1 #6, $r5_4 #7, $r5_4 #8);

        $i4_5 = Phi($i4_2 #6, $i4_7 #7, $i4_7 #8);

        $r5_4 = virtualinvoke $r2.<com.google.gson.internal.LinkedHashTreeMap$AvlIterator: com.google.gson.internal.LinkedHashTreeMap$Node next()>();

        if $r5_4 == null goto label09;

        $i4_6 = $r5_4.<com.google.gson.internal.LinkedHashTreeMap$Node: int hash>;

        $i4_7 = $i4_6 & $i0;

        if $i4_7 != 0 goto label08;

        virtualinvoke $r3.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void add(com.google.gson.internal.LinkedHashTreeMap$Node)>($r5_4);

(7)     goto label07;

     label08:
        virtualinvoke $r4.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void add(com.google.gson.internal.LinkedHashTreeMap$Node)>($r5_4);

(8)     goto label07;

     label09:
        if $i2_3 <= 0 goto label12;

(9)     $r5_5 = virtualinvoke $r3.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node root()>();

     label10:
        $r5_6 = Phi($r5_5 #9, $r5_10 #12);

        $r1[$i1_2] = $r5_6;

        $i2_5 = $i1_2 + $i0;

        if $i3_3 <= 0 goto label13;

(10)    $r5_7 = virtualinvoke $r4.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node root()>();

     label11:
        $r5_8 = Phi($r5_7 #10, $r5_9 #13);

        $r1[$i2_5] = $r5_8;

(11)    goto label02;

     label12:
        $r5_10 = null;

(12)    goto label10;

     label13:
        $r5_9 = null;

(13)    goto label11;

     label14:
        return $r1;
    }

    private boolean equal(java.lang.Object, java.lang.Object)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == $r2 goto label1;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node, boolean)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        boolean $z0, $z1, $z1_1, $z1_2, $z1_3, $z1_4, $z1_5, $z1_6, $z1_7;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i1_1, $i1_2, $i0_3, $i0_4, $i1_3, $i1_4, $i0_5, $i1_5, $i0_6, $i0_7, $i0_8, $i1_6, $i1_7, $i0_9, $i1_8, $i0_10, $i0_11, $i0_12, $i0_13, $i1_9, $i0_14, $i1_10, $i0_15, $i1_11, $i0_16;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r2, $r3, $r4, $r1_1, $r2_1, $r3_1, $r2_2, $r4_1, $r3_2, $r4_2, $r3_3, $r4_3, $r2_3, $r1_2, $r3_4, $r4_4, $r2_4;
        java.lang.AssertionError $r5, $r5_1, $r5_2;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node;

(0)     $z0 := @parameter1: boolean;

     label01:
        $r3 = Phi($r3 #0, $r3_3 #17);

        $i1 = Phi($i1 #0, $i1_9 #17);

        $z1 = Phi($z1 #0, $z1_6 #17);

        $r4 = Phi($r4 #0, $r4_3 #17);

        $i0 = Phi($i0 #0, $i0_14 #17);

        $r1_1 = Phi($r1 #0, $r1_2 #17);

        $r2 = Phi($r2 #0, $r2_3 #17);

(1)     if $r1_1 == null goto label27;

        $r2_1 = $r1_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r3_1 = $r1_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        if $r2_1 == null goto label08;

(2)     $i0_1 = $r2_1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label02:
        $i0_2 = Phi($i0_1 #2, $i0_15 #8);

        if $r3_1 == null goto label09;

(3)     $i1_1 = $r3_1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label03:
        $i1_2 = Phi($i1_1 #3, $i1_10 #9);

        $i2 = $i0_2 - $i1_2;

        if $i2 != -2 goto label14;

        $r2_2 = $r3_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r4_1 = $r3_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        if $r4_1 == null goto label10;

(4)     $i0_3 = $r4_1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label04:
        $i0_4 = Phi($i0_3 #4, $i0_6 #10);

        if $r2_2 == null goto label11;

(5)     $i1_3 = $r2_2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label05:
        $i1_4 = Phi($i1_3 #5, $i1_5 #11);

        $i0_5 = $i1_4 - $i0_4;

        if $i0_5 == -1 goto label06;

        if $i0_5 != 0 goto label12;

        if $z0 != 0 goto label12;

     label06:
(6)     specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)>($r1_1);

     label07:
        $z1_2 = Phi($z1 #6, $z1_1 #12);

(7)     if $z0 == 0 goto label19;

        return;

     label08:
        $i0_15 = 0;

(8)     goto label02;

     label09:
        $i1_10 = 0;

(9)     goto label03;

     label10:
        $i0_6 = 0;

(10)    goto label04;

     label11:
        $i1_5 = 0;

(11)    goto label05;

     label12:
        $z1_1 = <com.google.gson.internal.LinkedHashTreeMap: boolean $assertionsDisabled>;

        if $z1_1 != 0 goto label13;

        if $i0_5 == 1 goto label13;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label13:
        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)>($r3_1);

        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)>($r1_1);

(12)    goto label07;

     label14:
        if $i2 != 2 goto label24;

        $r3_2 = $r2_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r4_2 = $r2_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        if $r4_2 == null goto label20;

(13)    $i0_7 = $r4_2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label15:
        $i0_8 = Phi($i0_7 #13, $i0_10 #18);

        if $r3_2 == null goto label21;

(14)    $i1_6 = $r3_2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label16:
        $i1_7 = Phi($i1_6 #14, $i1_8 #19);

        $i0_9 = $i1_7 - $i0_8;

        if $i0_9 == 1 goto label17;

        if $i0_9 != 0 goto label22;

        if $z0 != 0 goto label22;

     label17:
(15)    specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)>($r1_1);

     label18:
        $z1_4 = Phi($z1 #15, $z1_3 #20);

(16)    if $z0 != 0 goto label27;

     label19:
        $r3_3 = Phi($r3_1 #7, $r3_2 #16, $r3_1 #21, $r3_1 #22);

        $i1_9 = Phi($i1_4 #7, $i1_7 #16, $i1_2 #21, $i1_2 #22);

        $z1_6 = Phi($z1_2 #7, $z1_4 #16, $z1 #21, $z1_5 #22);

        $r4_3 = Phi($r4_1 #7, $r4_2 #16, $r4 #21, $r4 #22);

        $i0_14 = Phi($i0_5 #7, $i0_9 #16, $i0_11 #21, $i0_13 #22);

        $r2_3 = Phi($r2_2 #7, $r2_1 #16, $r2_1 #21, $r2_1 #22);

        $r1_2 = $r1_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

(17)    goto label01;

     label20:
        $i0_10 = 0;

(18)    goto label15;

     label21:
        $i1_8 = 0;

(19)    goto label16;

     label22:
        $z1_3 = <com.google.gson.internal.LinkedHashTreeMap: boolean $assertionsDisabled>;

        if $z1_3 != 0 goto label23;

        if $i0_9 == -1 goto label23;

        $r5_1 = new java.lang.AssertionError;

        specialinvoke $r5_1.<java.lang.AssertionError: void <init>()>();

        throw $r5_1;

     label23:
        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)>($r2_1);

        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)>($r1_1);

(20)    goto label18;

     label24:
        if $i2 != 0 goto label25;

        $i0_11 = $i0_2 + 1;

        $r1_1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i0_11;

(21)    if $z0 == 0 goto label19;

        return;

     label25:
        $z1_5 = <com.google.gson.internal.LinkedHashTreeMap: boolean $assertionsDisabled>;

        if $z1_5 != 0 goto label26;

        if $i2 == -1 goto label26;

        if $i2 == 1 goto label26;

        $r5_2 = new java.lang.AssertionError;

        specialinvoke $r5_2.<java.lang.AssertionError: void <init>()>();

        throw $r5_2;

     label26:
        $i0_12 = staticinvoke <java.lang.Math: int max(int,int)>($i0_2, $i1_2);

        $i0_13 = $i0_12 + 1;

        $r1_1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i0_13;

(22)    if $z0 != 0 goto label19;

     label27:
        $r3_4 = Phi($r3 #1, $r3_2 #16, $r3_1 #22);

        $i1_11 = Phi($i1 #1, $i1_7 #16, $i1_2 #22);

        $z1_7 = Phi($z1 #1, $z1_4 #16, $z1_5 #22);

        $r4_4 = Phi($r4 #1, $r4_2 #16, $r4 #22);

        $i0_16 = Phi($i0 #1, $i0_9 #16, $i0_13 #22);

        $r2_4 = Phi($r2 #1, $r2_1 #16, $r2_1 #22);

        return;
    }

    private void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node, com.google.gson.internal.LinkedHashTreeMap$Node)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r2, $r3, $r5, $r5_1, $r5_2;
        boolean $z0;
        java.lang.AssertionError $r4;
        int $i0, $i1, $i1_1, $i0_1;
        com.google.gson.internal.LinkedHashTreeMap$Node[] $r6, $r6_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node;

        $r2 := @parameter1: com.google.gson.internal.LinkedHashTreeMap$Node;

        $r3 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = null;

        if $r2 == null goto label1;

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r3;

     label1:
        if $r3 == null goto label4;

        $r5 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        if $r5 != $r1 goto label2;

        $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = $r2;

        return;

     label2:
        $z0 = <com.google.gson.internal.LinkedHashTreeMap: boolean $assertionsDisabled>;

(0)     if $z0 != 0 goto label3;

        $r5_1 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

(1)     if $r5_1 == $r1 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r2;

        return;

     label4:
        $i0 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int hash>;

        $r6 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $i1 = lengthof $r6;

        $i1_1 = $i1 + -1;

        $i0_1 = $i0 & $i1_1;

        $r6_1 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $r6_1[$i0_1] = $r2;

        return;
    }

    private void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i1_1, $i2_1, $i1_2, $i1_3, $i1_4, $i0_1, $i0_2, $i0_3, $i0_4, $i2_2, $i1_5;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node;

        $i0 = 0;

        $r2 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r3 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        $r4 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r5 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r4;

        if $r4 == null goto label1;

        $r4.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r1;

     label1:
        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r1, $r3);

        $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = $r1;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r3;

        if $r2 == null goto label5;

(0)     $i1 = $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label2:
        $i1_1 = Phi($i1 #0, $i1_5 #4);

        if $r4 == null goto label6;

(1)     $i2 = $r4.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label3:
        $i2_1 = Phi($i2 #1, $i2_2 #5);

        $i1_2 = staticinvoke <java.lang.Math: int max(int,int)>($i1_1, $i2_1);

        $i1_3 = $i1_2 + 1;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i1_3;

        $i1_4 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

(2)     if $r5 == null goto label4;

(3)     $i0_1 = $r5.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label4:
        $i0_2 = Phi($i0 #2, $i0_1 #3);

        $i0_3 = staticinvoke <java.lang.Math: int max(int,int)>($i1_4, $i0_2);

        $i0_4 = $i0_3 + 1;

        $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i0_4;

        return;

     label5:
        $i1_5 = 0;

(4)     goto label2;

     label6:
        $i2_2 = 0;

(5)     goto label3;
    }

    private void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i1_1, $i2_1, $i1_2, $i1_3, $i1_4, $i0_1, $i0_2, $i0_3, $i0_4, $i2_2, $i1_5;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node;

        $i0 = 0;

        $r2 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r3 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        $r4 = $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r5 = $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = $r5;

        if $r5 == null goto label1;

        $r5.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r1;

     label1:
        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r1, $r2);

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r1;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2;

        if $r3 == null goto label5;

(0)     $i1 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label2:
        $i1_1 = Phi($i1 #0, $i1_5 #4);

        if $r5 == null goto label6;

(1)     $i2 = $r5.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label3:
        $i2_1 = Phi($i2 #1, $i2_2 #5);

        $i1_2 = staticinvoke <java.lang.Math: int max(int,int)>($i1_1, $i2_1);

        $i1_3 = $i1_2 + 1;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i1_3;

        $i1_4 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

(2)     if $r4 == null goto label4;

(3)     $i0_1 = $r4.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

     label4:
        $i0_2 = Phi($i0 #2, $i0_1 #3);

        $i0_3 = staticinvoke <java.lang.Math: int max(int,int)>($i1_4, $i0_2);

        $i0_4 = $i0_3 + 1;

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i0_4;

        return;

     label5:
        $i1_5 = 0;

(4)     goto label2;

     label6:
        $i2_2 = 0;

(5)     goto label3;
    }

    private static int secondaryHash(int)
    {
        int $i0, $i1, $i2, $i0_1, $i1_1, $i0_2, $i0_3, $i1_2, $i1_3;

        $i1 := @parameter0: int;

        $i2 = $i1 >>> 20;

        $i0 = $i1 >>> 12;

        $i0_1 = $i2 ^ $i0;

        $i1_1 = $i1 ^ $i0_1;

        $i0_2 = $i1_1 >>> 7;

        $i0_3 = $i0_2 ^ $i1_1;

        $i1_2 = $i1_1 >>> 4;

        $i1_3 = $i0_3 ^ $i1_2;

        return $i1_3;
    }

    private java.lang.Object writeReplace() throws java.io.ObjectStreamException
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.util.LinkedHashMap $r1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r0);

        return $r1;
    }

    public void clear()
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node[] $r1;
        com.google.gson.internal.LinkedHashTreeMap$Node $r2, $r3, $r4, $r4_1, $r4_2;
        int $i0, $i0_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int size> = 0;

        $i0 = $r0.<com.google.gson.internal.LinkedHashTreeMap: int modCount>;

        $i0_1 = $i0 + 1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int modCount> = $i0_1;

        $r2 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node header>;

(0)     $r4 = $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next>;

     label1:
        $r4_1 = Phi($r4 #0, $r4_2 #1);

        if $r4_1 == $r2 goto label2;

        $r3 = $r4_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next>;

        $r4_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev> = null;

        $r4_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next> = null;

        $r4_2 = $r3;

(1)     goto label1;

     label2:
        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev> = $r2;

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next> = $r2;

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.lang.Object $r1;
        com.google.gson.internal.LinkedHashTreeMap$Node $r2;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Set entrySet()
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$EntrySet $r1, $r1_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r1_1 = new com.google.gson.internal.LinkedHashTreeMap$EntrySet;

        specialinvoke $r1_1.<com.google.gson.internal.LinkedHashTreeMap$EntrySet: void <init>(com.google.gson.internal.LinkedHashTreeMap)>($r0);

        $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet> = $r1_1;

        return $r1_1;
    }

    com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object, boolean)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.lang.Object $r1, $r8, $r8_1, $r8_2, $r8_3, $r8_4;
        java.util.Comparator $r2, $r6, $r6_1, $r6_2, $r6_3;
        com.google.gson.internal.LinkedHashTreeMap$Node[] $r3;
        java.lang.ClassCastException $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i1_2, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i0_2, $i1_3, $i1_4, $i0_3, $i0_4;
        com.google.gson.internal.LinkedHashTreeMap$Node $r5, $r9, $r13, $r14, $r5_1, $r9_1, $r9_2, $r5_2, $r9_3, $r5_3, $r9_4, $r9_5, $r13_1, $r14_1, $r13_2, $r14_2;
        java.lang.Comparable $r7, $r7_1, $r7_2, $r7_3;
        java.lang.StringBuilder $r10, $r10_1, $r10_2;
        java.lang.Class $r11;
        java.lang.String $r12, $r12_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator comparator>;

        $r3 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0_1 = staticinvoke <com.google.gson.internal.LinkedHashTreeMap: int secondaryHash(int)>($i0);

        $i1 = lengthof $r3;

        $i1_1 = $i1 + -1;

        $i1_2 = $i0_1 & $i1_1;

        $r5 = $r3[$i1_2];

        $i2 = 0;

(0)     if $r5 == null goto label07;

        $r6 = <com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator NATURAL_ORDER>;

        if $r2 != $r6 goto label03;

(1)     $r7 = (java.lang.Comparable) $r1;

     label01:
        $r8 = Phi($r8 #1, $r8 #3, $r8_2 #10);

        $r5_1 = Phi($r5 #1, $r5 #3, $r5_2 #10);

        $r9 = Phi($r9 #1, $r9 #3, $r9_2 #10);

        $r7_1 = Phi($r7 #1, $r7_2 #3, $r7_1 #10);

        $i2_1 = Phi($i2 #1, $i2 #3, $i2_3 #10);

        if $r7_1 == null goto label04;

        $r8_1 = $r5_1.<com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object key>;

(2)     $i2_2 = interfaceinvoke $r7_1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8_1);

     label02:
        $r8_2 = Phi($r8_1 #2, $r8_3 #4);

        $i2_3 = Phi($i2_2 #2, $i2_4 #4);

        if $i2_3 != 0 goto label05;

        return $r5_1;

     label03:
        $r7_2 = null;

(3)     goto label01;

     label04:
        $r8_3 = $r5_1.<com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object key>;

        $i2_4 = interfaceinvoke $r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r1, $r8_3);

(4)     goto label02;

     label05:
        if $i2_3 >= 0 goto label08;

(5)     $r9_1 = $r5_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

     label06:
        $r9_2 = Phi($r9_1 #5, $r9_3 #9);

(6)     if $r9_2 != null goto label09;

     label07:
        $r8_4 = Phi($r8 #0, $r8_2 #6);

        $r6_1 = Phi($r6 #0, $r6 #6);

        $r5_3 = Phi($r5 #0, $r5_1 #6);

        $r9_4 = Phi($r9 #0, $r9_2 #6);

        $r7_3 = Phi($r7 #0, $r7_1 #6);

        $i2_5 = Phi($i2 #0, $i2_3 #6);

        if $z0 == 0 goto label16;

        $r9_5 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node header>;

        if $r5_3 != null goto label13;

        $r6_2 = <com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator NATURAL_ORDER>;

(7)     if $r2 != $r6_2 goto label10;

        $z0_1 = $r1 instanceof java.lang.Comparable;

(8)     if $z0_1 != 0 goto label10;

        $r4 = new java.lang.ClassCastException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r10_1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r10_2 = virtualinvoke $r10_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not Comparable");

        $r12_1 = virtualinvoke $r10_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.ClassCastException: void <init>(java.lang.String)>($r12_1);

        throw $r4;

     label08:
        $r9_3 = $r5_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

(9)     goto label06;

     label09:
        $r5_2 = $r9_2;

(10)    goto label01;

     label10:
        $z0_2 = Phi($z0 #7, $z0_1 #8);

        $r13 = new com.google.gson.internal.LinkedHashTreeMap$Node;

        $r14 = $r9_5.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev>;

        specialinvoke $r13.<com.google.gson.internal.LinkedHashTreeMap$Node: void <init>(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.Object,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r5_3, $r1, $i0_1, $r9_5, $r14);

(11)    $r3[$i1_2] = $r13;

     label11:
        $r13_1 = Phi($r13 #11, $r13_2 #12);

        $r6_3 = Phi($r6_2 #11, $r6_1 #12);

        $r14_1 = Phi($r14 #11, $r14_2 #12);

        $z0_3 = Phi($z0_2 #11, $z0 #12);

        $i0_2 = $r0.<com.google.gson.internal.LinkedHashTreeMap: int size>;

        $i1_3 = $i0_2 + 1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int size> = $i1_3;

        $i1_4 = $r0.<com.google.gson.internal.LinkedHashTreeMap: int threshold>;

        if $i0_2 <= $i1_4 goto label12;

        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void doubleCapacity()>();

     label12:
        $i0_3 = $r0.<com.google.gson.internal.LinkedHashTreeMap: int modCount>;

        $i0_4 = $i0_3 + 1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int modCount> = $i0_4;

        return $r13_1;

     label13:
        $r13_2 = new com.google.gson.internal.LinkedHashTreeMap$Node;

        $r14_2 = $r9_5.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev>;

        specialinvoke $r13_2.<com.google.gson.internal.LinkedHashTreeMap$Node: void <init>(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.Object,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r5_3, $r1, $i0_1, $r9_5, $r14_2);

        if $i2_5 >= 0 goto label15;

        $r5_3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = $r13_2;

     label14:
        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)>($r5_3, 1);

(12)    goto label11;

     label15:
        $r5_3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r13_2;

        goto label14;

     label16:
        return null;
    }

    com.google.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2, $r4, $r2_1, $r2_2, $r2_3;
        com.google.gson.internal.LinkedHashTreeMap$Node $r3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object)>($r2);

(0)     if $r3 == null goto label2;

        $r2_1 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object value>;

        $r4 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: boolean equal(java.lang.Object,java.lang.Object)>($r2_1, $r4);

(1)     if $z0 == 0 goto label2;

(2)     $z0_1 = 1;

     label1:
        $r2_2 = Phi($r2_1 #2, $r2_3 #3);

        $z0_2 = Phi($z0_1 #2, $z0_4 #3);

        if $z0_2 == 0 goto label3;

        return $r3;

     label2:
        $r2_3 = Phi($r2 #0, $r2_1 #1);

        $z0_3 = Phi($z0 #0, $z0 #1);

        $z0_4 = 0;

(3)     goto label1;

     label3:
        return null;
    }

    com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.lang.Object $r1;
        java.lang.ClassCastException $r2;
        com.google.gson.internal.LinkedHashTreeMap$Node $r3;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label4;

     label1:
        $r3 = virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean)>($r1, 0);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

     label4:
        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1;
        java.lang.Object $r2, $r2_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object)>($r2);

        if $r1 == null goto label1;

        $r2_1 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object value>;

        return $r2_1;

     label1:
        return null;
    }

    public java.util.Set keySet()
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$KeySet $r1, $r1_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 = $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$KeySet keySet>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r1_1 = new com.google.gson.internal.LinkedHashTreeMap$KeySet;

        specialinvoke $r1_1.<com.google.gson.internal.LinkedHashTreeMap$KeySet: void <init>(com.google.gson.internal.LinkedHashTreeMap)>($r0);

        $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$KeySet keySet> = $r1_1;

        return $r1_1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.lang.Object $r1, $r4, $r4_1;
        java.lang.NullPointerException $r2;
        com.google.gson.internal.LinkedHashTreeMap$Node $r3;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r4 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean)>($r4, 1);

        $r4_1 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object value>;

        $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object value> = $r1;

        return $r4_1;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1;
        java.lang.Object $r2, $r2_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object)>($r2);

        if $r1 == null goto label1;

        $r2_1 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object value>;

        return $r2_1;

     label1:
        return null;
    }

    void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node, boolean)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r2, $r3, $r4, $r2_1, $r3_1, $r2_2, $r3_2, $r3_3, $r2_3, $r2_4, $r2_5, $r3_4, $r3_5, $r2_6;
        boolean $z0;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i1_1, $i1_2, $i1_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node;

        $z0 := @parameter1: boolean;

(0)     if $z0 == 0 goto label1;

        $r2 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev>;

        $r3 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next>;

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next> = $r3;

        $r2_1 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next>;

        $r3_1 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev>;

        $r2_1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev> = $r3_1;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev> = null;

(1)     $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next> = null;

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r3_3 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

        $r2_3 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

        $r4 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        if $r3_3 == null goto label6;

        if $r2_3 == null goto label6;

        $i0 = $r3_3.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        $i1 = $r2_3.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        if $i0 <= $i1 goto label5;

(2)     $r2_4 = virtualinvoke $r3_3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node last()>();

     label2:
        $r2_5 = Phi($r2_4 #2, $r2_6 #7);

        virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)>($r2_5, 0);

        $i0_1 = 0;

        $r3_4 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left>;

(3)     if $r3_4 == null goto label3;

        $i0_2 = $r3_4.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        $r2_5.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = $r3_4;

        $r3_4.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2_5;

(4)     $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = null;

     label3:
        $i0_3 = Phi($i0_1 #3, $i0_2 #4);

        $i1_1 = 0;

        $r3_5 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right>;

(5)     if $r3_5 == null goto label4;

        $i1_2 = $r3_5.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        $r2_5.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r3_5;

        $r3_5.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2_5;

(6)     $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = null;

     label4:
        $i1_3 = Phi($i1_1 #5, $i1_2 #6);

        $i0_4 = staticinvoke <java.lang.Math: int max(int,int)>($i0_3, $i1_3);

        $i0_5 = $i0_4 + 1;

        $r2_5.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i0_5;

        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r1, $r2_5);

        return;

     label5:
        $r2_6 = virtualinvoke $r2_3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node first()>();

(7)     goto label2;

     label6:
        if $r3_3 == null goto label8;

        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r1, $r3_3);

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = null;

     label7:
        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)>($r4, 0);

        $i0_6 = $r0.<com.google.gson.internal.LinkedHashTreeMap: int size>;

        $i0_7 = $i0_6 + -1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int size> = $i0_7;

        $i0_8 = $r0.<com.google.gson.internal.LinkedHashTreeMap: int modCount>;

        $i0_9 = $i0_8 + 1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap: int modCount> = $i0_9;

        return;

     label8:
        if $r2_3 == null goto label9;

        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r1, $r2_3);

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = null;

        goto label7;

     label9:
        specialinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)>($r1, null);

        goto label7;
    }

    com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object)
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        java.lang.Object $r1;
        com.google.gson.internal.LinkedHashTreeMap$Node $r2;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        virtualinvoke $r0.<com.google.gson.internal.LinkedHashTreeMap: void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)>($r2, 1);

     label1:
        return $r2;
    }

    public int size()
    {
        com.google.gson.internal.LinkedHashTreeMap $r0;
        int i0;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap;

        i0 = $r0.<com.google.gson.internal.LinkedHashTreeMap: int size>;

        return i0;
    }
}
