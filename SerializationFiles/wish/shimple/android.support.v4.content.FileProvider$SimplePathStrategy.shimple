class android.support.v4.content.FileProvider$SimplePathStrategy extends java.lang.Object implements android.support.v4.content.FileProvider$PathStrategy
{
    private final java.lang.String mAuthority;
    private final java.util.HashMap mRoots;

    public void <init>(java.lang.String)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots> = $r2;

        $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority> = $r1;

        return;
    }

    public void addRoot(java.lang.String, java.io.File)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        java.util.HashMap $r1;
        java.io.IOException $r2;
        java.lang.String $r3, $r3_1;
        java.io.File $r4, $r4_1, $r4_2;
        boolean $z0;
        java.lang.IllegalArgumentException $r5, $r5_1;
        java.lang.StringBuilder $r6, $r6_1, $r6_2;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.io.File;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

(0)     if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name must not be empty");

        throw $r5;

     label1:
(1)     $r4_1 = virtualinvoke $r4.<java.io.File: java.io.File getCanonicalFile()>();

     label2:
        $r1 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4_1);

        return;

     label3:
        $r2 := @caughtexception;

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r5_1 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4_2);

        $r3_1 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r3_1, $r2);

        throw $r5_1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.io.File getFileForUri(android.net.Uri)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        android.net.Uri $r1;
        java.util.HashMap $r2;
        java.lang.SecurityException $r3;
        java.io.IOException $r4;
        java.lang.String $r5, $r6, $r6_1, $r5_1, $r5_2, $r6_2, $r6_3, $r5_3, $r6_4;
        int $i0, $i0_1;
        java.lang.Object $r7;
        java.io.File $r8, $r11, $r11_1, $r11_2;
        java.lang.IllegalArgumentException $r9, $r9_1;
        java.lang.StringBuilder $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5;
        boolean $z0;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        $r1 := @parameter0: android.net.Uri;

        $r5 = virtualinvoke $r1.<android.net.Uri: java.lang.String getEncodedPath()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int,int)>(47, 1);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r6_1 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r6);

        $i0_1 = $i0 + 1;

        $r5_1 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i0_1);

        $r5_2 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r5_1);

        $r2 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        $r7 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6_1);

        $r8 = (java.io.File) $r7;

        if $r8 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10_1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find configured root for ");

        $r10_2 = virtualinvoke $r10_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6_2 = virtualinvoke $r10_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6_2);

        throw $r9;

     label1:
        $r11 = new java.io.File;

(0)     specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, $r5_2);

     label2:
(1)     $r11_1 = virtualinvoke $r11.<java.io.File: java.io.File getCanonicalFile()>();

     label3:
        $r6_3 = virtualinvoke $r11_1.<java.io.File: java.lang.String getPath()>();

        $r5_3 = virtualinvoke $r8.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r6_3.<java.lang.String: boolean startsWith(java.lang.String)>($r5_3);

        if $z0 != 0 goto label5;

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Resolved path jumped beyond configured root");

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r11_2 = Phi($r11 #0, $r11_1 #1);

        $r9_1 = new java.lang.IllegalArgumentException;

        $r10_3 = new java.lang.StringBuilder;

        specialinvoke $r10_3.<java.lang.StringBuilder: void <init>()>();

        $r10_4 = virtualinvoke $r10_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r10_5 = virtualinvoke $r10_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11_2);

        $r6_4 = virtualinvoke $r10_5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6_4);

        throw $r9_1;

     label5:
        return $r11_1;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public android.net.Uri getUriForFile(java.io.File)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        java.util.HashMap $r1;
        java.io.IOException $r2;
        java.io.File $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;
        java.lang.String $r4, $r10, $r10_1, $r10_2, $r10_3, $r4_1, $r10_4, $r4_2, $r4_3, $r10_5, $r10_6, $r4_4, $r4_5, $r10_7, $r4_6, $r4_7, $r4_8;
        java.util.Map$Entry $r5, $r9, $r5_1, $r5_2;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.Object $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6;
        java.lang.IllegalArgumentException $r11, $r11_1;
        java.lang.StringBuilder $r12, $r12_1, $r12_2, $r12_3, $r12_4, $r12_5, $r12_6, $r12_7, $r12_8, $r12_9;
        android.net.Uri$Builder $r13, $r13_1, $r13_2, $r13_3;
        android.net.Uri $r14;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

(0)     $r3 := @parameter0: java.io.File;

     label1:
        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getCanonicalPath()>();

     label2:
        $r5 = null;

        $r1 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        $r6 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

(1)     $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = Phi($z0 #1, $z0_2 #2, $z0_2 #4, $z0_2 #5);

        $r3_1 = Phi($r3 #1, $r3_2 #2, $r3_3 #4, $r3_4 #5);

        $r10 = Phi($r10 #1, $r10_1 #2, $r10_2 #4, $r10_3 #5);

        $i0 = Phi($i0 #1, $i0 #2, $i0_1 #4, $i0_2 #5);

        $r5_1 = Phi($r5 #1, $r5_1 #2, $r5_1 #4, $r5_2 #5);

        $r8 = Phi($r8 #1, $r8_2 #2, $r8_3 #4, $r8_4 #5);

        $z0_1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label6;

        $r8_1 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8_1;

        $r8_2 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3_2 = (java.io.File) $r8_2;

        $r10_1 = virtualinvoke $r3_2.<java.io.File: java.lang.String getPath()>();

        $z0_2 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r10_1);

(2)     if $z0_2 == 0 goto label3;

(3)     if $r5_1 == null goto label4;

        $i0_1 = virtualinvoke $r10_1.<java.lang.String: int length()>();

        $r8_3 = interfaceinvoke $r5_1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3_3 = (java.io.File) $r8_3;

        $r10_2 = virtualinvoke $r3_3.<java.io.File: java.lang.String getPath()>();

        $i1 = virtualinvoke $r10_2.<java.lang.String: int length()>();

(4)     if $i0_1 <= $i1 goto label3;

     label4:
        $r3_4 = Phi($r3_2 #3, $r3_3 #4);

        $r10_3 = Phi($r10_1 #3, $r10_2 #4);

        $i0_2 = Phi($i0 #3, $i0_1 #4);

        $r8_4 = Phi($r8_2 #3, $r8_3 #4);

        $r5_2 = $r9;

(5)     goto label3;

     label5:
        $r2 := @caughtexception;

        $r4_7 = Phi($r4 #0);

        $r11_1 = new java.lang.IllegalArgumentException;

        $r12_7 = new java.lang.StringBuilder;

        specialinvoke $r12_7.<java.lang.StringBuilder: void <init>()>();

        $r12_8 = virtualinvoke $r12_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r12_9 = virtualinvoke $r12_8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4_8 = virtualinvoke $r12_9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4_8);

        throw $r11_1;

     label6:
        if $r5_1 != null goto label7;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12_1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find configured root that contains ");

        $r12_2 = virtualinvoke $r12_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4_1 = virtualinvoke $r12_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4_1);

        throw $r11;

     label7:
        $r8_5 = interfaceinvoke $r5_1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3_5 = (java.io.File) $r8_5;

        $r10_4 = virtualinvoke $r3_5.<java.io.File: java.lang.String getPath()>();

        $z0_3 = virtualinvoke $r10_4.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0_3 == 0 goto label9;

        $i0_3 = virtualinvoke $r10_4.<java.lang.String: int length()>();

(6)     $r4_2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0_3);

     label8:
        $i0_4 = Phi($i0_3 #6, $i0_6 #7);

        $r4_3 = Phi($r4_2 #6, $r4_6 #7);

        $r12_3 = new java.lang.StringBuilder;

        specialinvoke $r12_3.<java.lang.StringBuilder: void <init>()>();

        $r8_6 = interfaceinvoke $r5_1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10_5 = (java.lang.String) $r8_6;

        $r10_6 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r10_5);

        $r12_4 = virtualinvoke $r12_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10_6);

        $r12_5 = virtualinvoke $r12_4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r4_4 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r4_3, "/");

        $r12_6 = virtualinvoke $r12_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_4);

        $r4_5 = virtualinvoke $r12_6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new android.net.Uri$Builder;

        specialinvoke $r13.<android.net.Uri$Builder: void <init>()>();

        $r13_1 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r10_7 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority>;

        $r13_2 = virtualinvoke $r13_1.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r10_7);

        $r13_3 = virtualinvoke $r13_2.<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>($r4_5);

        $r14 = virtualinvoke $r13_3.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r14;

     label9:
        $i0_5 = virtualinvoke $r10_4.<java.lang.String: int length()>();

        $i0_6 = $i0_5 + 1;

        $r4_6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0_6);

(7)     goto label8;

        catch java.io.IOException from label1 to label2 with label5;
    }
}
