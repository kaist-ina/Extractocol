public class de.greenrobot.event.util.ExceptionToResourceMapping extends java.lang.Object
{
    public final java.util.Map throwableToMsgIdMap;

    public void <init>()
    {
        de.greenrobot.event.util.ExceptionToResourceMapping $r0;
        java.util.HashMap $r1;

        $r0 := @this: de.greenrobot.event.util.ExceptionToResourceMapping;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<de.greenrobot.event.util.ExceptionToResourceMapping: java.util.Map throwableToMsgIdMap> = $r1;

        return;
    }

    public de.greenrobot.event.util.ExceptionToResourceMapping addMapping(java.lang.Class, int)
    {
        de.greenrobot.event.util.ExceptionToResourceMapping $r0;
        java.lang.Class $r1;
        int $i0;
        java.util.Map $r2;
        java.lang.Integer $r3;

        $r0 := @this: de.greenrobot.event.util.ExceptionToResourceMapping;

        $r1 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        $r2 = $r0.<de.greenrobot.event.util.ExceptionToResourceMapping: java.util.Map throwableToMsgIdMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $r0;
    }

    public java.lang.Integer mapThrowable(java.lang.Throwable)
    {
        de.greenrobot.event.util.ExceptionToResourceMapping $r0;
        java.lang.Throwable $r1, $r3, $r5, $r3_1, $r3_2;
        java.lang.String $r2, $r7;
        int $i0, $i0_1, $i0_2;
        java.lang.Integer $r4;
        java.lang.StringBuilder $r6, $r6_1, $r6_2;

        $r0 := @this: de.greenrobot.event.util.ExceptionToResourceMapping;

        $r1 := @parameter0: java.lang.Throwable;

        $r3 = $r1;

(0)     $i0 = 20;

     label1:
        $i0_1 = Phi($i0 #0, $i0_2 #1);

        $r3_1 = Phi($r3 #0, $r3_2 #1);

        $r4 = virtualinvoke $r0.<de.greenrobot.event.util.ExceptionToResourceMapping: java.lang.Integer mapThrowableFlat(java.lang.Throwable)>($r3_1);

        if $r4 == null goto label2;

        return $r4;

     label2:
        $r5 = virtualinvoke $r3_1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $r3_2 = $r5;

        $i0_2 = $i0_1 + -1;

        if $i0_2 <= 0 goto label3;

        if $r5 == $r1 goto label3;

(1)     if $r5 != null goto label1;

     label3:
        $r2 = <de.greenrobot.event.EventBus: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No specific message ressource ID found for ");

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r7);

        return null;
    }

    protected java.lang.Integer mapThrowableFlat(java.lang.Throwable)
    {
        de.greenrobot.event.util.ExceptionToResourceMapping $r0;
        java.lang.Throwable $r1;
        java.lang.Class $r2, $r7, $r11, $r7_1, $r7_2;
        java.util.Map $r3, $r3_1;
        java.lang.Object $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.Integer $r5, $r6, $r6_1, $r6_2;
        java.util.Set $r8;
        java.util.Iterator $r9;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.util.Map$Entry $r10;

        $r0 := @this: de.greenrobot.event.util.ExceptionToResourceMapping;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = $r0.<de.greenrobot.event.util.ExceptionToResourceMapping: java.util.Map throwableToMsgIdMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.lang.Integer) $r4;

        $r6 = $r5;

        if $r5 != null goto label3;

        $r7 = null;

        $r3_1 = $r0.<de.greenrobot.event.util.ExceptionToResourceMapping: java.util.Map throwableToMsgIdMap>;

        $r8 = interfaceinvoke $r3_1.<java.util.Map: java.util.Set entrySet()>();

(0)     $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r4_1 = Phi($r4 #0, $r4_3 #1, $r4_3 #3, $r4_4 #4);

        $z0 = Phi($z0 #0, $z0_2 #1, $z0_3 #3, $z0_4 #4);

        $r7_1 = Phi($r7 #0, $r7_1 #1, $r7_1 #3, $r7_2 #4);

        $r6_1 = Phi($r6 #0, $r6_1 #1, $r6_1 #3, $r6_2 #4);

        $z0_1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label4;

        $r4_2 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r4_2;

        $r4_3 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.Class) $r4_3;

        $z0_2 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

(1)     if $z0_2 == 0 goto label1;

(2)     if $r7_1 == null goto label2;

        $z0_3 = virtualinvoke $r7_1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

(3)     if $z0_3 == 0 goto label1;

     label2:
        $z0_4 = Phi($z0_2 #2, $z0_3 #3);

        $r7_2 = $r11;

        $r4_4 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6_2 = (java.lang.Integer) $r4_4;

(4)     goto label1;

     label3:
        return $r5;

     label4:
        return $r6_1;
    }
}
