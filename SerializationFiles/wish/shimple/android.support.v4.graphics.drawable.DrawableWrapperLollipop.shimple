class android.support.v4.graphics.drawable.DrawableWrapperLollipop extends android.support.v4.graphics.drawable.DrawableWrapperKitKat
{

    void <init>(android.graphics.drawable.Drawable)
    {
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperKitKat: void <init>(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r0;
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>($r1);

        return;
    }

    public boolean canApplyTheme()
    {
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        return $z0;
    }

    public android.graphics.Rect getDirtyBounds()
    {
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>();

        return $r2;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r0;
        android.graphics.Outline $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        $r1 := @parameter0: android.graphics.Outline;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>($r1);

        return;
    }

    public void setHotspot(float, float)
    {
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r0;
        float $f0, $f1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspot(float,float)>($f0, $f1);

        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.support.v4.graphics.drawable.DrawableWrapperLollipop $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperLollipop;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
}
