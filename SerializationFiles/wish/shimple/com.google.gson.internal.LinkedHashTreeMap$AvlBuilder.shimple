final class com.google.gson.internal.LinkedHashTreeMap$AvlBuilder extends java.lang.Object
{
    private int leavesSkipped;
    private int leavesToSkip;
    private int size;
    private com.google.gson.internal.LinkedHashTreeMap$Node stack;

    void <init>()
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder $r0;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void add(com.google.gson.internal.LinkedHashTreeMap$Node)
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r2, $r3, $r4, $r2_1, $r1_1, $r1_2, $r2_2, $r2_3, $r1_3, $r1_4, $r2_4;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10, $i0_11, $i0_12, $i0_13, $i0_14, $i0_15, $i0_16, $i0_17, $i0_18, $i0_19, $i0_20, $i0_21, $i0_22, $i0_23, $i1_1, $i2_1, $i1_2, $i2_2, $i1_3, $i1_4, $i1_5, $i1_6, $i0_24, $i1_7, $i1_8, $i1_9, $i1_10;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        $r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = null;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = null;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = null;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = 1;

        $i0 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

(0)     if $i0 <= 0 goto label1;

        $i0_1 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0_2 = $i0_1 & 1;

(1)     if $i0_2 != 0 goto label1;

        $i0_3 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0_4 = $i0_3 + 1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = $i0_4;

        $i0_5 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

        $i0_6 = $i0_5 + -1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip> = $i0_6;

        $i0_7 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        $i0_8 = $i0_7 + 1;

(2)     $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = $i0_8;

     label1:
        $i0_9 = Phi($i0 #0, $i0_2 #1, $i0_8 #2);

        $r2 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = $r1;

        $i0_10 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0_11 = $i0_10 + 1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = $i0_11;

        $i0_12 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

(3)     if $i0_12 <= 0 goto label2;

        $i0_13 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0_14 = $i0_13 & 1;

(4)     if $i0_14 != 0 goto label2;

        $i0_15 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0_16 = $i0_15 + 1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = $i0_16;

        $i0_17 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

        $i0_18 = $i0_17 + -1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip> = $i0_18;

        $i0_19 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        $i0_20 = $i0_19 + 1;

(5)     $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = $i0_20;

     label2:
        $i0_21 = Phi($i0_12 #3, $i0_14 #4, $i0_20 #5);

(6)     $i0_22 = 4;

     label3:
        $i2 = Phi($i2 #6, $i2_2 #8);

        $r2_1 = Phi($r2 #6, $r2_3 #8);

        $r1_1 = Phi($r1 #6, $r1_3 #8);

        $i0_23 = Phi($i0_22 #6, $i0_24 #8);

        $i1 = Phi($i1 #6, $i1_6 #8);

        $i1_1 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i2_1 = $i0_23 + -1;

        $i1_2 = $i1_1 & $i2_1;

        $i2_2 = $i0_23 + -1;

        if $i1_2 != $i2_2 goto label7;

        $i1_3 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        if $i1_3 != 0 goto label5;

        $r3 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        $r1_2 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        $r4 = $r1_2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        $r2_2 = $r4.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        $r1_2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2_2;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = $r1_2;

        $r1_2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = $r4;

        $r1_2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r3;

        $i1_4 = $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        $i1_5 = $i1_4 + 1;

        $r1_2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i1_5;

        $r4.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r1_2;

(7)     $r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r1_2;

     label4:
        $r2_3 = Phi($r2_2 #7, $r2_4 #9, $r2_1 #10, $r2_1 #11);

        $r1_3 = Phi($r1_2 #7, $r1_4 #9, $r1_1 #10, $r1_1 #11);

        $i1_6 = Phi($i1_5 #7, $i1_9 #9, $i1_10 #10, $i1_10 #11);

        $i0_24 = $i0_23 * 2;

(8)     goto label3;

     label5:
        $i1_7 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        if $i1_7 != 1 goto label6;

        $r1_4 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        $r2_4 = $r1_4.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = $r2_4;

        $r2_4.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r1_4;

        $i1_8 = $r1_4.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        $i1_9 = $i1_8 + 1;

        $r2_4.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i1_9;

        $r1_4.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2_4;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = 0;

(9)     goto label4;

     label6:
        $i1_10 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

(10)    if $i1_10 != 2 goto label4;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = 0;

(11)    goto label4;

     label7:
        return;
    }

    void reset(int)
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder $r0;
        int $i0, $i1, $i0_1, $i0_2, $i1_1;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        $i1 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i1);

        $i0_1 = $i0 * 2;

        $i0_2 = $i0_1 + -1;

        $i1_1 = $i0_2 - $i1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip> = $i1_1;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = 0;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = 0;

        $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = null;

        return;
    }

    com.google.gson.internal.LinkedHashTreeMap$Node root()
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder $r0;
        com.google.gson.internal.LinkedHashTreeMap$Node $r1, $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        $r1 = $r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        $r2 = $r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        return $r1;
    }
}
