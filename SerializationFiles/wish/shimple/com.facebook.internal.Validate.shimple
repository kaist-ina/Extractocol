public final class com.facebook.internal.Validate extends java.lang.Object
{

    public void <init>()
    {
        com.facebook.internal.Validate $r0;

        $r0 := @this: com.facebook.internal.Validate;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void containsNoNullOrEmpty(java.util.Collection, java.lang.String)
    {
        java.util.Collection $r0;
        java.lang.NullPointerException $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, $r6, $r3_1, $r3_2;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7;
        int $i0;

        $r0 := @parameter0: java.util.Collection;

        $r3 := @parameter1: java.lang.String;

        staticinvoke <com.facebook.internal.Validate: void notNull(java.lang.Object,java.lang.String)>($r0, $r3);

        $r4 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        if $r6 != null goto label2;

        $r1 = new java.lang.NullPointerException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7_1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container \'");

        $r7_2 = virtualinvoke $r7_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7_3 = virtualinvoke $r7_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot contain null values");

        $r3_1 = virtualinvoke $r7_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r3_1);

        throw $r1;

     label2:
        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r7_4 = new java.lang.StringBuilder;

        specialinvoke $r7_4.<java.lang.StringBuilder: void <init>()>();

        $r7_5 = virtualinvoke $r7_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container \'");

        $r7_6 = virtualinvoke $r7_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7_7 = virtualinvoke $r7_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot contain empty values");

        $r3_2 = virtualinvoke $r7_7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3_2);

        throw $r2;

     label3:
        return;
    }

    public static void containsNoNulls(java.util.Collection, java.lang.String)
    {
        java.util.Collection $r0;
        java.lang.NullPointerException $r1;
        java.lang.String $r2, $r2_1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @parameter0: java.util.Collection;

        $r2 := @parameter1: java.lang.String;

        staticinvoke <com.facebook.internal.Validate: void notNull(java.lang.Object,java.lang.String)>($r0, $r2);

        $r3 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $r4 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container \'");

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5_3 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot contain null values");

        $r2_1 = virtualinvoke $r5_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r2_1);

        throw $r1;

     label2:
        return;
    }

    public static void notEmpty(java.util.Collection, java.lang.String)
    {
        java.util.Collection $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, $r2_1;
        boolean $z0;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3;

        $r0 := @parameter0: java.util.Collection;

        $r2 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container \'");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot be empty");

        $r2_1 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2_1);

        throw $r1;

     label1:
        return;
    }

    public static void notEmptyAndContainsNoNulls(java.util.Collection, java.lang.String)
    {
        java.util.Collection $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.facebook.internal.Validate: void containsNoNulls(java.util.Collection,java.lang.String)>($r0, $r1);

        staticinvoke <com.facebook.internal.Validate: void notEmpty(java.util.Collection,java.lang.String)>($r0, $r1);

        return;
    }

    public static void notNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.NullPointerException $r1;
        java.lang.String $r2, $r2_1;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3;

        $r0 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument \'");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot be null");

        $r2_1 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>($r2_1);

        throw $r1;

     label1:
        return;
    }

    public static void notNullOrEmpty(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2, $r2_1;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.facebook.internal.Utility: boolean isNullOrEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument \'");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot be null or empty");

        $r2_1 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2_1);

        throw $r1;

     label1:
        return;
    }

    public static transient void oneOf(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object $r0, $r2;
        java.lang.Object[] $r1;
        int $i0, $i1, $i1_1, $i1_2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r4_1;
        boolean $z0;
        java.lang.StringBuilder $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @parameter0: java.lang.Object;

        $r4 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.Object[];

        $i0 = lengthof $r1;

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #1);

        if $i1_1 >= $i0 goto label4;

        $r2 = $r1[$i1_1];

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        return;

     label2:
        if $r0 == null goto label5;

     label3:
        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument \'");

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5_3 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was not one of the allowed values");

        $r4_1 = virtualinvoke $r5_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4_1);

        throw $r3;

     label5:
        return;
    }
}
