public class java.io.StringWriter extends java.io.Writer
{

    public void <init>()
    {
        java.io.StringWriter r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(int)
    {
        java.io.StringWriter r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        java.io.StringWriter r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void flush()
    {
        java.io.StringWriter r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuffer getBuffer()
    {
        java.io.StringWriter r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.io.StringWriter r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void write(char[], int, int)
    {
        java.io.StringWriter r0;
        char[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void write(int)
    {
        java.io.StringWriter r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void write(java.lang.String)
    {
        java.io.StringWriter r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void write(java.lang.String, int, int)
    {
        java.io.StringWriter r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.io.StringWriter append(char)
    {
        java.io.StringWriter r0;
        char c0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.StringWriter;

        c0 := @parameter0: char;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.io.StringWriter append(java.lang.CharSequence)
    {
        java.io.StringWriter r0;
        java.lang.CharSequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.io.StringWriter append(java.lang.CharSequence, int, int)
    {
        java.io.StringWriter r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public volatile java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.StringWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.StringWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.io.Writer append(char) throws java.io.IOException
    {
        java.io.StringWriter r0, $r1;
        char c0;

        r0 := @this: java.io.StringWriter;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.io.StringWriter: java.io.StringWriter append(char)>(c0);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.StringWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.StringWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.StringWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        java.io.StringWriter r0, $r1;
        char c0;

        r0 := @this: java.io.StringWriter;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.io.StringWriter: java.io.StringWriter append(char)>(c0);

        return $r1;
    }
}
