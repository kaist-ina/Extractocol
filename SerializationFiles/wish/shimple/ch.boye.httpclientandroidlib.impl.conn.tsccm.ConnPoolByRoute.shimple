public class ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute extends ch.boye.httpclientandroidlib.impl.conn.tsccm.AbstractConnPool
{
    protected final ch.boye.httpclientandroidlib.conn.params.ConnPerRoute connPerRoute;
    private final long connTTL;
    private final java.util.concurrent.TimeUnit connTTLTimeUnit;
    protected final java.util.Queue freeConnections;
    protected final java.util.Set leasedConnections;
    public ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log;
    protected volatile int maxTotalConnections;
    protected volatile int numConnections;
    protected final ch.boye.httpclientandroidlib.conn.ClientConnectionOperator operator;
    private final java.util.concurrent.locks.Lock poolLock;
    protected final java.util.Map routeToPool;
    protected volatile boolean shutdown;
    protected final java.util.Queue waitingThreads;

    public void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionOperator, ch.boye.httpclientandroidlib.conn.params.ConnPerRoute, int)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.ClientConnectionOperator $r1;
        ch.boye.httpclientandroidlib.conn.params.ConnPerRoute $r2;
        int $i0;
        java.util.concurrent.TimeUnit $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.ClientConnectionOperator;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.conn.params.ConnPerRoute;

        $i0 := @parameter2: int;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionOperator,ch.boye.httpclientandroidlib.conn.params.ConnPerRoute,int,long,java.util.concurrent.TimeUnit)>($r1, $r2, $i0, -1L, $r3);

        return;
    }

    public void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionOperator, ch.boye.httpclientandroidlib.conn.params.ConnPerRoute, int, long, java.util.concurrent.TimeUnit)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.ClientConnectionOperator $r1;
        ch.boye.httpclientandroidlib.conn.params.ConnPerRoute $r2;
        int $i0;
        long $l1;
        java.util.concurrent.TimeUnit $r3;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r4;
        java.util.concurrent.locks.Lock $r5;
        java.util.Set $r6;
        java.lang.Class $r7;
        java.lang.IllegalArgumentException $r8, $r8_1;
        java.util.Queue $r9, $r9_1;
        java.util.Map $r10;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.ClientConnectionOperator;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.conn.params.ConnPerRoute;

        $i0 := @parameter2: int;

        $l1 := @parameter3: long;

        $r3 := @parameter4: java.util.concurrent.TimeUnit;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.AbstractConnPool: void <init>()>();

        $r4 = new ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog;

        $r7 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r4.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void <init>(java.lang.Object)>($r7);

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log> = $r4;

        if $r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection operator may not be null");

        throw $r8;

     label1:
        if $r2 != null goto label2;

        $r8_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r8_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connections per route may not be null");

        throw $r8_1;

     label2:
        $r5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.AbstractConnPool: java.util.concurrent.locks.Lock poolLock>;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock> = $r5;

        $r6 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.AbstractConnPool: java.util.Set leasedConnections>;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections> = $r6;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.conn.ClientConnectionOperator operator> = $r1;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.conn.params.ConnPerRoute connPerRoute> = $r2;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections> = $i0;

        $r9 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>();

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections> = $r9;

        $r9_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>();

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads> = $r9_1;

        $r10 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>();

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool> = $r10;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: long connTTL> = $l1;

        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.TimeUnit connTTLTimeUnit> = $r3;

        return;
    }

    public void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionOperator, ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.ClientConnectionOperator $r1;
        ch.boye.httpclientandroidlib.params.HttpParams $r2;
        ch.boye.httpclientandroidlib.conn.params.ConnPerRoute $r3;
        int $i0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.ClientConnectionOperator;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.params.HttpParams;

        $r3 = staticinvoke <ch.boye.httpclientandroidlib.conn.params.ConnManagerParams: ch.boye.httpclientandroidlib.conn.params.ConnPerRoute getMaxConnectionsPerRoute(ch.boye.httpclientandroidlib.params.HttpParams)>($r2);

        $i0 = staticinvoke <ch.boye.httpclientandroidlib.conn.params.ConnManagerParams: int getMaxTotalConnections(ch.boye.httpclientandroidlib.params.HttpParams)>($r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionOperator,ch.boye.httpclientandroidlib.conn.params.ConnPerRoute,int)>($r1, $r3, $i0);

        return;
    }

    static java.util.concurrent.locks.Lock access$000(ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.locks.Lock r1;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        r1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        return r1;
    }

    private void closeConnection(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r1;
        java.io.IOException $r2;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r3;
        ch.boye.httpclientandroidlib.conn.OperatedClientConnection $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry;

        $r4 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: ch.boye.httpclientandroidlib.conn.OperatedClientConnection getConnection()>();

        if $r4 == null goto label4;

     label1:
        interfaceinvoke $r4.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        virtualinvoke $r3.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void closeExpiredConnections()
    {
        java.util.Queue $r0;
        java.util.Date $r1;
        java.lang.Throwable $r2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r3, $r5;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        long $l0, $l1;
        java.util.concurrent.locks.Lock $r6, $r6_1, $r6_2;
        java.util.Iterator $r7;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.lang.Object $r8;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r9;
        java.lang.StringBuilder $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5;
        java.lang.String $r11;

        $r3 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r4 = $r3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r5 = $r3;

        virtualinvoke $r4.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>("Closing expired connections");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = $r3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(0)     interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        $r0 = $r3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

(1)     $r7 = interfaceinvoke $r0.<java.util.Queue: java.util.Iterator iterator()>();

     label02:
        $r4_1 = Phi($r4 #1, $r4_1 #4, $r4_4 #14);

        $r10 = Phi($r10 #1, $r10 #4, $r10_4 #14);

        $z0 = Phi($z0 #1, $z0_2 #4, $z0_3 #14);

(2)     $z0_1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0_1 == 0 goto label12;

     label04:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry) $r8;

(3)     $z0_2 = virtualinvoke $r9.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: boolean isExpired(long)>($l0);

     label05:
(4)     if $z0_2 == 0 goto label02;

     label06:
(5)     $r4_2 = $r5.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(6)     $z0_3 = virtualinvoke $r4_2.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label07:
(7)     if $z0_3 == 0 goto label09;

     label08:
(8)     $r4_3 = $r5.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(9)     $r10_1 = new java.lang.StringBuilder;

        specialinvoke $r10_1.<java.lang.StringBuilder: void <init>()>();

(10)    $r10_2 = virtualinvoke $r10_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection expired @ ");

        $r1 = new java.util.Date;

        $l1 = virtualinvoke $r9.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: long getExpiry()>();

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l1);

(11)    $r10_3 = virtualinvoke $r10_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r11 = virtualinvoke $r10_3.<java.lang.StringBuilder: java.lang.String toString()>();

(12)    virtualinvoke $r4_3.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r11);

     label09:
        $r4_4 = Phi($r4_2 #7, $r4_3 #12);

        $r10_4 = Phi($r10 #7, $r10_3 #12);

(13)    interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        virtualinvoke $r5.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r9);

     label10:
(14)    goto label02;

     label11:
        $r2 := @caughtexception;

        $r4_5 = Phi($r4 #0, $r4_1 #2, $r4_2 #5, $r4_3 #8, $r4_4 #13);

        $r10_5 = Phi($r10 #0, $r10_1 #9, $r10_2 #10, $r10_3 #11, $r10_4 #13);

        $z0_4 = Phi($z0 #0, $z0_1 #2, $z0_2 #3, $z0_3 #6);

        $r6_2 = $r5.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r2;

     label12:
        $r6_1 = $r5.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label10 with label11;
    }

    public void closeIdleConnections(long, java.util.concurrent.TimeUnit)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.TimeUnit $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.Date $r3;
        java.lang.Throwable $r4;
        long $l0, $l2, $l0_1, $l0_2, $l0_3, $l0_4, $l2_1, $l2_2, $l2_3, $l2_4, $l2_5;
        byte $b1, $b1_1, $b1_2, $b1_3;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6, $r6_7, $r6_8, $r6_9, $r6_10, $r6_11;
        java.lang.String $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5;
        java.util.concurrent.locks.Lock $r8, $r8_1, $r8_2;
        java.util.Queue $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r12;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        if $r1 != null goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time unit must not be null.");

        throw $r2;

     label01:
        $b1 = $l0 cmp 0L;

(0)     if $b1 >= 0 goto label02;

(1)     $l0_1 = 0L;

     label02:
        $l0_2 = Phi($l0 #0, $l0_1 #1);

        $r5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z0 = virtualinvoke $r5.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

(2)     if $z0 == 0 goto label03;

        $r5_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connections idle longer than ");

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0_2);

        $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6_4 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6_4.<java.lang.StringBuilder: java.lang.String toString()>();

(3)     virtualinvoke $r5_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r7);

     label03:
        $r7_1 = Phi($r7 #2, $r7 #3);

        $r6_5 = Phi($r6 #2, $r6_4 #3);

        $r5_2 = Phi($r5 #2, $r5_1 #3);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0_3 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0_2);

        $l0_4 = $l2 - $l0_3;

        $r8 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(4)     interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void lock()>();

     label04:
        $r9 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

(5)     $r10 = interfaceinvoke $r9.<java.util.Queue: java.util.Iterator iterator()>();

     label05:
        $r7_2 = Phi($r7_1 #5, $r7_2 #8, $r7_4 #20);

        $z0_1 = Phi($z0 #5, $z0_2 #8, $z0_3 #20);

        $b1_1 = Phi($b1 #5, $b1_2 #8, $b1_2 #20);

        $r6_6 = Phi($r6_5 #5, $r6_6 #8, $r6_10 #20);

        $r5_3 = Phi($r5_2 #5, $r5_3 #8, $r5_6 #20);

        $l2_1 = Phi($l2 #5, $l2_2 #8, $l2_4 #20);

(6)     $z0_2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z0_2 == 0 goto label15;

     label07:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry) $r11;

(7)     $l2_2 = virtualinvoke $r12.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: long getUpdated()>();

     label08:
        $b1_2 = $l2_2 cmp $l0_4;

(8)     if $b1_2 > 0 goto label05;

     label09:
(9)     $r5_4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(10)    $z0_3 = virtualinvoke $r5_4.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label10:
(11)    if $z0_3 == 0 goto label12;

     label11:
(12)    $r5_5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(13)    $r6_7 = new java.lang.StringBuilder;

        specialinvoke $r6_7.<java.lang.StringBuilder: void <init>()>();

(14)    $r6_8 = virtualinvoke $r6_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection last used @ ");

        $r3 = new java.util.Date;

(15)    $l2_3 = virtualinvoke $r12.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: long getUpdated()>();

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l2_3);

(16)    $r6_9 = virtualinvoke $r6_8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

(17)    $r7_3 = virtualinvoke $r6_9.<java.lang.StringBuilder: java.lang.String toString()>();

(18)    virtualinvoke $r5_5.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r7_3);

     label12:
        $r7_4 = Phi($r7_2 #11, $r7_3 #18);

        $r6_10 = Phi($r6_6 #11, $r6_9 #18);

        $r5_6 = Phi($r5_4 #11, $r5_5 #18);

        $l2_4 = Phi($l2_2 #11, $l2_3 #18);

(19)    interfaceinvoke $r10.<java.util.Iterator: void remove()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r12);

     label13:
(20)    goto label05;

     label14:
        $r4 := @caughtexception;

        $r7_5 = Phi($r7_1 #4, $r7_2 #6, $r7_3 #17, $r7_4 #19);

        $z0_4 = Phi($z0 #4, $z0_2 #6, $z0_3 #10);

        $b1_3 = Phi($b1 #4, $b1_2 #8, $b1_1 #6);

        $r6_11 = Phi($r6_5 #4, $r6_6 #6, $r6_7 #13, $r6_8 #14, $r6_9 #16, $r6_10 #19);

        $r5_7 = Phi($r5_2 #4, $r5_3 #6, $r5_4 #9, $r5_5 #12, $r5_6 #19);

        $l2_5 = Phi($l2 #4, $l2_1 #6, $l2_2 #7, $l2_3 #15, $l2_4 #19);

        $r8_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r4;

     label15:
        $r8_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label04 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label13 with label14;
    }

    protected ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry createEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool, ch.boye.httpclientandroidlib.conn.ClientConnectionOperator)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r1;
        ch.boye.httpclientandroidlib.conn.ClientConnectionOperator $r2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r3;
        long $l0;
        java.util.concurrent.TimeUnit $r4;
        java.lang.Throwable $r5;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r6, $r6_1, $r6_2;
        boolean $z0;
        java.lang.StringBuilder $r7, $r7_1, $r7_2, $r7_3, $r7_4;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r8, $r8_1, $r8_2;
        java.lang.String $r9;
        java.util.concurrent.locks.Lock $r10, $r10_1, $r10_2;
        int $i1, $i1_1, $i1_2;
        java.util.Set $r11;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.conn.ClientConnectionOperator;

        $r6 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z0 = virtualinvoke $r6.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

(0)     if $z0 == 0 goto label1;

        $r6_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7_1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating new connection [");

        $r8 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute()>();

        $r7_2 = virtualinvoke $r7_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r7_3 = virtualinvoke $r7_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r7_3.<java.lang.StringBuilder: java.lang.String toString()>();

(1)     virtualinvoke $r6_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r9);

     label1:
        $r6_2 = Phi($r6 #0, $r6_1 #1);

        $r8_1 = Phi($r8 #0, $r8 #1);

        $r7_4 = Phi($r7 #0, $r7_3 #1);

        $r3 = new ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry;

        $r8_2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute()>();

        $l0 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: long connTTL>;

        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.TimeUnit connTTLTimeUnit>;

        specialinvoke $r3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionOperator,ch.boye.httpclientandroidlib.conn.routing.HttpRoute,long,java.util.concurrent.TimeUnit)>($r2, $r8_2, $l0, $r4);

        $r10 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(2)     interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void createdEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r3);

        $i1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

     label3:
(3)     $i1_1 = $i1 + 1;

     label4:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1_1;

        $r11 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label5:
        $r10_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r3;

     label6:
        $r5 := @caughtexception;

        $i1_2 = Phi($i1 #2, $i1_1 #3);

        $r10_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    protected java.util.Queue createFreeConnQueue()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.LinkedList $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    protected java.util.Map createRouteToPoolMap()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.HashMap $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }

    protected java.util.Queue createWaitingThreadQueue()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.LinkedList $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    public void deleteClosedConnections()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.Queue $r1;
        java.lang.Throwable $r2;
        java.util.concurrent.locks.Lock $r3, $r3_1, $r3_2;
        java.util.Iterator $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.Object $r5;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r6;
        ch.boye.httpclientandroidlib.conn.OperatedClientConnection $r7;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(0)     interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

(1)     $r4 = interfaceinvoke $r1.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = Phi($z0 #1, $z0_2 #4, $z0_2 #5);

(2)     $z0_1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0_1 == 0 goto label9;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry) $r5;

        $r7 = virtualinvoke $r6.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: ch.boye.httpclientandroidlib.conn.OperatedClientConnection getConnection()>();

(3)     $z0_2 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.conn.OperatedClientConnection: boolean isOpen()>();

     label5:
(4)     if $z0_2 != 0 goto label2;

     label6:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r6);

     label7:
(5)     goto label2;

     label8:
        $r2 := @caughtexception;

        $z0_3 = Phi($z0 #0, $z0_1 #2, $z0_2 #3);

        $r3_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r2;

     label9:
        $r3_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    protected void deleteEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r1;
        java.util.Map $r2;
        java.lang.Throwable $r3;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r4;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r5, $r5_1, $r5_2;
        boolean $z0, $z0_1, $z0_2;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6;
        java.lang.Object $r7;
        java.lang.String $r8;
        java.util.concurrent.locks.Lock $r9, $r9_1, $r9_2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r10;
        int $i0, $i0_1, $i0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry;

        $r4 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getPlannedRoute()>();

        $r5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z0 = virtualinvoke $r5.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

(0)     if $z0 == 0 goto label1;

        $r5_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting connection [");

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r7 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r6_4 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6_5 = virtualinvoke $r6_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r6_5.<java.lang.StringBuilder: java.lang.String toString()>();

(1)     virtualinvoke $r5_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r8);

     label1:
        $r6_6 = Phi($r6 #0, $r6_5 #1);

        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r9 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(2)     interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r1);

        $r10 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool getRoutePool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,boolean)>($r4, 1);

        virtualinvoke $r10.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: boolean deleteEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r1);

        $i0 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

     label3:
(3)     $i0_1 = $i0 + -1;

     label4:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i0_1;

(4)     $z0_1 = virtualinvoke $r10.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

     label5:
        if $z0_1 == 0 goto label7;

     label6:
        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

     label7:
        $r9_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label8:
        $r3 := @caughtexception;

        $i0_2 = Phi($i0 #2, $i0_1 #3);

        $z0_2 = Phi($z0 #2, $z0_1 #4);

        $r9_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    protected void deleteLeastUsedEntry()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.Queue $r1;
        java.lang.Throwable $r2;
        java.util.concurrent.locks.Lock $r3, $r3_1, $r3_2;
        java.lang.Object $r4;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r5;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r6, $r6_1, $r6_2, $r6_3;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(0)     interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r4 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object remove()>();

        $r5 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry) $r4;

     label2:
        if $r5 == null goto label5;

     label3:
(1)     virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r5);

     label4:
        $r6 = Phi($r6 #1, $r6_1 #3, $r6_2 #5);

        $r3_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label5:
(2)     $r6_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z0 = virtualinvoke $r6_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label6:
(3)     if $z0 == 0 goto label4;

     label7:
(4)     $r6_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        virtualinvoke $r6_2.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>("No free connection to delete");

     label8:
(5)     goto label4;

     label9:
        $r2 := @caughtexception;

        $r6_3 = Phi($r6 #0, $r6_1 #2, $r6_2 #4);

        $r3_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void freeEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r1;
        long $l0;
        java.util.concurrent.TimeUnit $r2;
        java.util.Set $r3;
        byte $b1;
        java.lang.Throwable $r4;
        boolean $z0, $z1, $z1_1, $z0_1, $z0_2, $z0_3, $z1_2;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r5;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6, $r6_7;
        java.lang.StringBuilder $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7, $r7_8, $r7_9, $r7_10, $r7_11, $r7_12, $r7_13, $r7_14, $r7_15, $r7_16, $r7_17, $r7_18, $r7_19, $r7_20, $r7_21, $r7_22;
        java.lang.Object $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5;
        java.lang.String $r9, $r9_1, $r9_2, $r9_3, $r9_4, $r9_5, $r9_6, $r9_7, $r9_8;
        java.util.concurrent.locks.Lock $r10, $r10_1, $r10_2, $r10_3;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r11;
        int $i2, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5;
        java.util.Queue $r12;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry;

        $z0 := @parameter1: boolean;

        $l0 := @parameter2: long;

        $r2 := @parameter3: java.util.concurrent.TimeUnit;

        $r5 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getPlannedRoute()>();

        $r6 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z1 = virtualinvoke $r6.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

(0)     if $z1 == 0 goto label01;

        $r6_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7_1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Releasing connection [");

        $r7_2 = virtualinvoke $r7_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7_3 = virtualinvoke $r7_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r8 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r7_4 = virtualinvoke $r7_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r7_5 = virtualinvoke $r7_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r7_5.<java.lang.StringBuilder: java.lang.String toString()>();

(1)     virtualinvoke $r6_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r9);

     label01:
        $r9_1 = Phi($r9 #0, $r9 #1);

        $r7_6 = Phi($r7 #0, $r7_5 #1);

        $r6_2 = Phi($r6 #0, $r6_1 #1);

        $r8_1 = Phi($r8 #0, $r8 #1);

        $r10 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(2)     interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
(3)     $z1_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown>;

     label03:
        if $z1_1 == 0 goto label06;

     label04:
        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r1);

     label05:
        $r10_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label06:
        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        $r11 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool getRoutePool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,boolean)>($r5, 1);

     label07:
(4)     if $z0 == 0 goto label18;

     label08:
        $i2 = virtualinvoke $r11.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

     label09:
(5)     if $i2 < 0 goto label18;

     label10:
(6)     $r6_3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(7)     $z0_1 = virtualinvoke $r6_3.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label11:
(8)     if $z0_1 == 0 goto label14;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label17;

     label12:
(9)     $r7_7 = new java.lang.StringBuilder;

        specialinvoke $r7_7.<java.lang.StringBuilder: void <init>()>();

(10)    $r7_8 = virtualinvoke $r7_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for ");

(11)    $r7_9 = virtualinvoke $r7_8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

(12)    $r7_10 = virtualinvoke $r7_9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

(13)    $r7_11 = virtualinvoke $r7_10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

(14)    $r9_2 = virtualinvoke $r7_11.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $r9_3 = Phi($r9_2 #14, $r9_5 #29);

        $r7_12 = Phi($r7_11 #14, $r7_6 #29);

(15)    $r6_4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(16)    $r7_13 = new java.lang.StringBuilder;

        specialinvoke $r7_13.<java.lang.StringBuilder: void <init>()>();

(17)    $r7_14 = virtualinvoke $r7_13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pooling connection [");

(18)    $r7_15 = virtualinvoke $r7_14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

(19)    $r7_16 = virtualinvoke $r7_15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

(20)    $r8_2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

(21)    $r7_17 = virtualinvoke $r7_16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8_2);

(22)    $r7_18 = virtualinvoke $r7_17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]; keep alive ");

(23)    $r7_19 = virtualinvoke $r7_18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9_3);

(24)    $r9_4 = virtualinvoke $r7_19.<java.lang.StringBuilder: java.lang.String toString()>();

(25)    virtualinvoke $r6_4.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r9_4);

     label14:
        $r9_6 = Phi($r9_1 #8, $r9_4 #25);

        $r7_20 = Phi($r7_6 #8, $r7_19 #25);

        $r6_5 = Phi($r6_3 #8, $r6_4 #25);

        $r8_3 = Phi($r8_1 #8, $r8_2 #25);

(26)    virtualinvoke $r11.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void freeEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r1);

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: void updateExpiry(long,java.util.concurrent.TimeUnit)>($l0, $r2);

        $r12 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

(27)    interfaceinvoke $r12.<java.util.Queue: boolean add(java.lang.Object)>($r1);

     label15:
        $r9_7 = Phi($r9_6 #27, $r9_1 #33);

        $i2_1 = Phi($i2 #27, $i2_4 #33);

        $r7_21 = Phi($r7_20 #27, $r7_6 #33);

        $r6_6 = Phi($r6_5 #27, $r6_2 #33);

        $z0_2 = Phi($z0_1 #27, $z0 #33);

        $r8_4 = Phi($r8_3 #27, $r8_1 #33);

(28)    virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool)>($r11);

     label16:
        $r10_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10_2.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label17:
        $r9_5 = "indefinitely";

(29)    goto label13;

     label18:
        $i2_2 = Phi($i2 #4, $i2 #5);

(30)    specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r1);

        virtualinvoke $r11.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

(31)    $i2_3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

     label19:
(32)    $i2_4 = $i2_3 + -1;

     label20:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i2_4;

     label21:
(33)    goto label15;

     label22:
        $r4 := @caughtexception;

        $r9_8 = Phi($r9_1 #2, $r9_2 #14, $r9_5 #29, $r9_3 #15, $r9_4 #24, $r9_6 #26, $r9_7 #28);

        $i2_5 = Phi($i2 #2, $i2_1 #28, $i2_2 #30, $i2_3 #31, $i2_4 #32);

        $r7_22 = Phi($r7_6 #2, $r7_7 #9, $r7_8 #10, $r7_9 #11, $r7_10 #12, $r7_11 #13, $r7_12 #15, $r7_13 #16, $r7_14 #17, $r7_15 #18, $r7_16 #19, $r7_17 #21, $r7_18 #22, $r7_19 #23, $r7_20 #26, $r7_21 #28);

        $r6_7 = Phi($r6_2 #2, $r6_3 #6, $r6_4 #15, $r6_5 #26, $r6_6 #28);

        $z0_3 = Phi($z0 #2, $z0_1 #7, $z0_2 #28);

        $r8_5 = Phi($r8_1 #2, $r8_2 #20, $r8_3 #26, $r8_4 #28);

        $z1_2 = Phi($z1 #2, $z1_1 #3);

        $r10_3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10_3.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label13 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    public int getConnectionsInPool()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.lang.Throwable $r1;
        java.util.concurrent.locks.Lock $r2, $r2_1, $r2_2;
        int i0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        i0 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

     label2:
        $r2_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return i0;

     label3:
        $r1 := @caughtexception;

        $r2_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getConnectionsInPool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r1;
        java.lang.Throwable $r2;
        int $i0, $i0_1, $i0_2, $i0_3;
        java.util.concurrent.locks.Lock $r3, $r3_1, $r3_2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.HttpRoute;

        $i0 = 0;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(0)     interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r4 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool getRoutePool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,boolean)>($r1, 0);

     label2:
(1)     if $r4 == null goto label4;

     label3:
(2)     $i0_1 = virtualinvoke $r4.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>();

     label4:
        $i0_2 = Phi($i0 #1, $i0_1 #2);

        $r3_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return $i0_2;

     label5:
        $r2 := @caughtexception;

        $i0_3 = Phi($i0 #0, $i0_1 #2);

        $r3_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(ch.boye.httpclientandroidlib.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit, ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter) throws ch.boye.httpclientandroidlib.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r1;
        java.lang.Object $r2;
        java.util.concurrent.TimeUnit $r3;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter $r4;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r6, $r8;
        ch.boye.httpclientandroidlib.conn.ConnectionPoolTimeoutException $r7;
        long $l0, $l2, $l0_1, $l0_2, $l0_3, $l2_1, $l0_4, $l2_2, $l0_5, $l2_3, $l0_6, $l2_4;
        java.util.Date $r9, $r9_1, $r9_2;
        byte $b1, $b1_1, $b1_2, $b1_3;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r10, $r19, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5, $r10_6;
        java.util.concurrent.locks.Lock $r11, $r11_1, $r11_2, $r11_3, $r11_4, $r11_5, $r11_6, $r11_7;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r12, $r21, $r12_1, $r12_2, $r12_3;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread $r13, $r23, $r13_1, $r13_2, $r13_3, $r13_4, $r13_5;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11, $z0_12;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r14, $r14_1, $r14_2, $r14_3, $r14_4, $r14_5, $r14_6, $r14_7, $r14_8, $r14_9, $r14_10, $r14_11;
        java.lang.StringBuilder $r15, $r15_1, $r15_2, $r15_3, $r15_4, $r15_5, $r15_6, $r15_7, $r15_8, $r15_9, $r15_10, $r15_11, $r15_12, $r15_13, $r15_14, $r15_15, $r15_16, $r15_17, $r15_18, $r15_19, $r15_20, $r15_21, $r15_22, $r15_23, $r15_24, $r15_25, $r15_26, $r15_27, $r15_28, $r15_29, $r15_30, $r15_31, $r15_32;
        java.util.Queue $r16, $r16_1, $r16_2, $r16_3, $r16_4, $r16_5, $r16_6, $r16_7, $r16_8, $r16_9, $r16_10;
        int $i3, $i4, $i3_1, $i3_2, $i3_3, $i3_4, $i3_5, $i3_6, $i3_7, $i3_8, $i3_9, $i3_10, $i3_11, $i3_12, $i3_13;
        java.util.Set $r17;
        java.lang.String $r18, $r18_1, $r18_2, $r18_3, $r18_4, $r18_5, $r18_6, $r18_7, $r18_8;
        ch.boye.httpclientandroidlib.conn.ClientConnectionOperator $r20, $r20_1, $r20_2, $r20_3;
        java.util.concurrent.locks.Condition $r22;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.HttpRoute;

        $r2 := @parameter1: java.lang.Object;

        $l0 := @parameter2: long;

        $r3 := @parameter3: java.util.concurrent.TimeUnit;

        $r4 := @parameter4: ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter;

        $r9 = null;

        $b1 = $l0 cmp 0L;

(0)     if $b1 <= 0 goto label01;

        $r9_1 = new java.util.Date;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0_1 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $l0_2 = $l2 + $l0_1;

(1)     specialinvoke $r9_1.<java.util.Date: void <init>(long)>($l0_2);

     label01:
        $r9_2 = Phi($r9 #0, $r9_1 #1);

        $l0_3 = Phi($l0 #0, $l0_2 #1);

        $l2_1 = Phi($l2 #0, $l2 #1);

        $r10 = null;

        $r11 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(2)     interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $r12 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool getRoutePool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,boolean)>($r1, 1);

     label03:
(3)     $r13 = null;

     label04:
        $r18 = Phi($r18 #3, $r18_4 #54, $r18_4 #63, $r18_6 #84, $r18_6 #85, $r18_6 #88);

        $r10_1 = Phi($r10 #3, $r10_3 #54, $r10_4 #63, $r10_2 #84, $r10_2 #85, $r10_2 #88);

        $b1_1 = Phi($b1 #3, $b1_1 #54, $b1_1 #63, $b1_1 #84, $b1_1 #85, $b1_2 #88);

        $i3 = Phi($i3 #3, $i3_10 #54, $i3_11 #63, $i3_11 #84, $i3_11 #85, $i3_11 #88);

        $r11_1 = Phi($r11 #3, $r11_1 #54, $r11_1 #63, $r11_3 #84, $r11_3 #85, $r11_3 #88);

        $r13_1 = Phi($r13 #3, $r13_1 #54, $r13_1 #63, $r13_3 #84, $r13_3 #85, $r13_3 #88);

        $r15 = Phi($r15 #3, $r15_23 #54, $r15_23 #63, $r15_30 #84, $r15_30 #85, $r15_30 #88);

        $r14 = Phi($r14 #3, $r14_6 #54, $r14_6 #63, $r14_9 #84, $r14_9 #85, $r14_9 #88);

        $l0_4 = Phi($l0_3 #3, $l0_4 #54, $l0_4 #63, $l0_4 #84, $l0_4 #85, $l0_5 #88);

        $r20 = Phi($r20 #3, $r20_1 #54, $r20_2 #63, $r20 #84, $r20 #85, $r20 #88);

        $r12_1 = Phi($r12 #3, $r12_1 #54, $r12_2 #63, $r12_1 #84, $r12_1 #85, $r12_1 #88);

        $l2_2 = Phi($l2_1 #3, $l2_2 #54, $l2_2 #63, $l2_2 #84, $l2_2 #85, $l2_3 #88);

        $r16 = Phi($r16 #3, $r16_2 #54, $r16_3 #63, $r16_6 #84, $r16_6 #85, $r16_6 #88);

        $z0 = Phi($z0 #3, $z0_4 #54, $z0_5 #63, $z0_8 #84, $z0_8 #85, $z0_8 #88);

(4)     if $r10_1 != null goto label14;

     label05:
(5)     $z0_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown>;

     label06:
        if $z0_1 == 0 goto label09;

     label07:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection pool shut down");

        throw $r5;

     label08:
        $r6 := @caughtexception;

        $r18_8 = Phi($r18 #2, $r18_1 #26, $r18_2 #28, $r18_3 #47, $r18_4 #49, $r18_5 #74, $r18_6 #76);

        $r10_6 = Phi($r10 #2, $r10_1 #4, $r10_2 #29, $r10_3 #53, $r10_4 #62);

        $b1_3 = Phi($b1 #2, $b1_1 #4, $b1_2 #88);

        $i3_13 = Phi($i3 #2, $i3_1 #15, $i3_2 #18, $i3_3 #21, $i3_4 #24, $i3_5 #28, $i3_6 #30, $i3_7 #37, $i3_8 #40, $i3_9 #49, $i3_10 #50, $i3_11 #56);

        $r11_6 = Phi($r11 #2, $r11_1 #4, $r11_2 #77, $r11_3 #82, $r11_4 #89);

        $r13_5 = Phi($r13 #2, $r13_1 #4, $r13_2 #78, $r13_3 #82, $r13_4 #89);

        $r15_32 = Phi($r15 #2, $r15_1 #10, $r15_2 #11, $r15_3 #12, $r15_4 #13, $r15_5 #16, $r15_6 #17, $r15_7 #19, $r15_8 #20, $r15_9 #22, $r15_10 #23, $r15_11 #25, $r15_12 #28, $r15_13 #35, $r15_14 #36, $r15_15 #38, $r15_16 #39, $r15_17 #41, $r15_18 #42, $r15_19 #43, $r15_20 #44, $r15_21 #45, $r15_22 #46, $r15_23 #49, $r15_24 #68, $r15_25 #69, $r15_26 #70, $r15_27 #71, $r15_28 #72, $r15_29 #73, $r15_30 #76);

        $r14_11 = Phi($r14 #2, $r14_1 #6, $r14_2 #9, $r14_3 #28, $r14_4 #32, $r14_5 #34, $r14_6 #49, $r14_7 #64, $r14_8 #67, $r14_9 #76);

        $l0_6 = Phi($l0_3 #2, $l0_4 #4, $l0_5 #86);

        $r20_3 = Phi($r20 #2, $r20_1 #52, $r20_2 #61);

        $r12_3 = Phi($r12 #2, $r12_1 #4, $r12_2 #60);

        $l2_4 = Phi($l2_1 #2, $l2_2 #4, $l2_3 #87);

        $r16_10 = Phi($r16 #2, $r16_1 #14, $r16_2 #28, $r16_3 #57, $r16_4 #64, $r16_5 #82, $r16_6 #83, $r16_7 #89, $r16_8 #90);

        $z0_12 = Phi($z0 #2, $z0_1 #5, $z0_2 #7, $z0_3 #31, $z0_10 #55, $z0_4 #32, $z0_5 #58, $z0_6 #64, $z0_7 #65, $z0_8 #82, $z0_9 #89);

        $r11_7 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r11_7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

     label09:
(6)     $r14_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(7)     $z0_2 = virtualinvoke $r14_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label10:
(8)     if $z0_2 == 0 goto label12;

     label11:
(9)     $r14_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(10)    $r15_1 = new java.lang.StringBuilder;

        specialinvoke $r15_1.<java.lang.StringBuilder: void <init>()>();

(11)    $r15_2 = virtualinvoke $r15_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

(12)    $r15_3 = virtualinvoke $r15_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

(13)    $r15_4 = virtualinvoke $r15_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] total kept alive: ");

(14)    $r16_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

(15)    $i3_1 = interfaceinvoke $r16_1.<java.util.Queue: int size()>();

(16)    $r15_5 = virtualinvoke $r15_4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3_1);

(17)    $r15_6 = virtualinvoke $r15_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", total issued: ");

        $r17 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

(18)    $i3_2 = interfaceinvoke $r17.<java.util.Set: int size()>();

(19)    $r15_7 = virtualinvoke $r15_6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3_2);

(20)    $r15_8 = virtualinvoke $r15_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", total allocated: ");

(21)    $i3_3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

(22)    $r15_9 = virtualinvoke $r15_8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3_3);

(23)    $r15_10 = virtualinvoke $r15_9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

(24)    $i3_4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

(25)    $r15_11 = virtualinvoke $r15_10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3_4);

(26)    $r18_1 = virtualinvoke $r15_11.<java.lang.StringBuilder: java.lang.String toString()>();

(27)    virtualinvoke $r14_2.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r18_1);

     label12:
        $r18_2 = Phi($r18 #8, $r18_1 #27);

        $i3_5 = Phi($i3 #8, $i3_4 #27);

        $r15_12 = Phi($r15 #8, $r15_11 #27);

        $r14_3 = Phi($r14_1 #8, $r14_2 #27);

        $r16_2 = Phi($r16 #8, $r16_1 #27);

(28)    $r19 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry getFreeEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>($r12_1, $r2);

     label13:
        $r10_2 = $r19;

(29)    if $r19 == null goto label15;

     label14:
        $r18_7 = Phi($r18 #4, $r18_2 #29);

        $r10_5 = Phi($r10_1 #4, $r10_2 #29);

        $i3_12 = Phi($i3 #4, $i3_5 #29);

        $r15_31 = Phi($r15 #4, $r15_12 #29);

        $r14_10 = Phi($r14 #4, $r14_3 #29);

        $r16_9 = Phi($r16 #4, $r16_2 #29);

        $z0_11 = Phi($z0 #4, $z0_2 #29);

        $r11_5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r11_5.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r10_5;

     label15:
(30)    $i3_6 = virtualinvoke $r12_1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

     label16:
        if $i3_6 <= 0 goto label25;

(31)    $z0_3 = 1;

     label17:
        $z0_4 = Phi($z0_3 #31, $z0_10 #55);

(32)    $r14_4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $z1 = virtualinvoke $r14_4.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label18:
(33)    if $z1 == 0 goto label20;

     label19:
(34)    $r14_5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(35)    $r15_13 = new java.lang.StringBuilder;

        specialinvoke $r15_13.<java.lang.StringBuilder: void <init>()>();

(36)    $r15_14 = virtualinvoke $r15_13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Available capacity: ");

(37)    $i3_7 = virtualinvoke $r12_1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

(38)    $r15_15 = virtualinvoke $r15_14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3_7);

(39)    $r15_16 = virtualinvoke $r15_15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

(40)    $i3_8 = virtualinvoke $r12_1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>();

(41)    $r15_17 = virtualinvoke $r15_16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3_8);

(42)    $r15_18 = virtualinvoke $r15_17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

(43)    $r15_19 = virtualinvoke $r15_18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

(44)    $r15_20 = virtualinvoke $r15_19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

(45)    $r15_21 = virtualinvoke $r15_20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

(46)    $r15_22 = virtualinvoke $r15_21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

(47)    $r18_3 = virtualinvoke $r15_22.<java.lang.StringBuilder: java.lang.String toString()>();

(48)    virtualinvoke $r14_5.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r18_3);

     label20:
        $r18_4 = Phi($r18_2 #33, $r18_3 #48);

        $i3_9 = Phi($i3_6 #33, $i3_8 #48);

        $r15_23 = Phi($r15_12 #33, $r15_22 #48);

        $r14_6 = Phi($r14_4 #33, $r14_5 #48);

(49)    if $z0_4 == 0 goto label26;

     label21:
(50)    $i3_10 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

     label22:
(51)    if $i3_10 >= $i4 goto label26;

     label23:
(52)    $r20_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.conn.ClientConnectionOperator operator>;

(53)    $r10_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry createEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool,ch.boye.httpclientandroidlib.conn.ClientConnectionOperator)>($r12_1, $r20_1);

     label24:
(54)    goto label04;

     label25:
        $z0_10 = 0;

(55)    goto label17;

     label26:
        $i3_11 = Phi($i3_9 #49, $i3_10 #51);

(56)    if $z0_4 == 0 goto label33;

     label27:
(57)    $r16_3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

(58)    $z0_5 = interfaceinvoke $r16_3.<java.util.Queue: boolean isEmpty()>();

     label28:
(59)    if $z0_5 != 0 goto label33;

     label29:
        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void deleteLeastUsedEntry()>();

        $r21 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool getRoutePool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,boolean)>($r1, 1);

     label30:
(60)    $r12_2 = $r21;

     label31:
(61)    $r20_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.conn.ClientConnectionOperator operator>;

(62)    $r10_4 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry createEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool,ch.boye.httpclientandroidlib.conn.ClientConnectionOperator)>($r21, $r20_2);

     label32:
(63)    goto label04;

     label33:
        $r16_4 = Phi($r16_2 #56, $r16_3 #59);

        $z0_6 = Phi($z0_4 #56, $z0_5 #59);

(64)    $r14_7 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(65)    $z0_7 = virtualinvoke $r14_7.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label34:
(66)    if $z0_7 == 0 goto label36;

     label35:
(67)    $r14_8 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(68)    $r15_24 = new java.lang.StringBuilder;

        specialinvoke $r15_24.<java.lang.StringBuilder: void <init>()>();

(69)    $r15_25 = virtualinvoke $r15_24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to wait for connection [");

(70)    $r15_26 = virtualinvoke $r15_25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

(71)    $r15_27 = virtualinvoke $r15_26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

(72)    $r15_28 = virtualinvoke $r15_27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

(73)    $r15_29 = virtualinvoke $r15_28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

(74)    $r18_5 = virtualinvoke $r15_29.<java.lang.StringBuilder: java.lang.String toString()>();

(75)    virtualinvoke $r14_8.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r18_5);

     label36:
        $r18_6 = Phi($r18_4 #66, $r18_5 #75);

        $r15_30 = Phi($r15_23 #66, $r15_29 #75);

        $r14_9 = Phi($r14_7 #66, $r14_8 #75);

(76)    if $r13_1 != null goto label40;

     label37:
(77)    $r11_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        $r22 = interfaceinvoke $r11_2.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        $r23 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool)>($r22, $r12_1);

     label38:
(78)    $r13_2 = $r23;

     label39:
(79)    virtualinvoke $r4.<ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread)>($r23);

     label40:
        $r11_3 = Phi($r11_1 #76, $r11_2 #79);

        $r13_3 = Phi($r13_1 #76, $r13_2 #79);

(80)    virtualinvoke $r12_1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void queueThread(ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread)>($r13_3);

(81)    $r16_5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r16_5.<java.util.Queue: boolean add(java.lang.Object)>($r13_3);

(82)    $z0_8 = virtualinvoke $r13_3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread: boolean await(java.util.Date)>($r9_2);

     label41:
        virtualinvoke $r12_1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void removeThread(ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread)>($r13_3);

(83)    $r16_6 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r16_6.<java.util.Queue: boolean remove(java.lang.Object)>($r13_3);

     label42:
(84)    if $z0_8 != 0 goto label04;

(85)    if $r9_2 == null goto label04;

     label43:
(86)    $l0_5 = virtualinvoke $r9_2.<java.util.Date: long getTime()>();

(87)    $l2_3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label44:
        $b1_2 = $l0_5 cmp $l2_3;

(88)    if $b1_2 > 0 goto label04;

     label45:
        $r7 = new ch.boye.httpclientandroidlib.conn.ConnectionPoolTimeoutException;

        specialinvoke $r7.<ch.boye.httpclientandroidlib.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>("Timeout waiting for connection");

        throw $r7;

     label46:
        $r8 := @caughtexception;

        $r11_4 = Phi($r11_1 #76, $r11_2 #79, $r11_3 #80);

        $r13_4 = Phi($r13_1 #76, $r13_2 #79, $r13_3 #80);

        $r16_7 = Phi($r16_4 #76, $r16_5 #81);

(89)    $z0_9 = Phi($z0_7 #76, $z0_8 #82);

     label47:
        virtualinvoke $r12_1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void removeThread(ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread)>($r13_4);

(90)    $r16_8 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r16_8.<java.util.Queue: boolean remove(java.lang.Object)>($r13_4);

        throw $r8;

     label48:
        nop;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label13 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label17 to label18 with label08;
        catch java.lang.Throwable from label19 to label20 with label08;
        catch java.lang.Throwable from label21 to label22 with label08;
        catch java.lang.Throwable from label23 to label24 with label08;
        catch java.lang.Throwable from label27 to label28 with label08;
        catch java.lang.Throwable from label29 to label30 with label08;
        catch java.lang.Throwable from label31 to label32 with label08;
        catch java.lang.Throwable from label33 to label34 with label08;
        catch java.lang.Throwable from label35 to label36 with label08;
        catch java.lang.Throwable from label37 to label38 with label08;
        catch java.lang.Throwable from label39 to label40 with label08;
        catch java.lang.Throwable from label40 to label41 with label46;
        catch java.lang.Throwable from label41 to label42 with label08;
        catch java.lang.Throwable from label43 to label44 with label08;
        catch java.lang.Throwable from label45 to label46 with label08;
        catch java.lang.Throwable from label47 to label48 with label08;
    }

    protected ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry getFreeEntry(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool, java.lang.Object)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r1;
        java.lang.Object $r2;
        java.util.Queue $r3;
        java.lang.Throwable $r4;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r5, $r7, $r5_1, $r5_2, $r5_3;
        java.util.concurrent.locks.Lock $r6, $r6_1, $r6_2;
        boolean $z0, $z1, $z0_1, $z1_1, $z1_2, $z1_3, $z0_2, $z0_3, $z1_4, $z0_4, $z1_5;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6, $r8_7, $r8_8, $r8_9;
        java.lang.StringBuilder $r9, $r9_1, $r9_2, $r9_3, $r9_4, $r9_5, $r9_6, $r9_7, $r9_8, $r9_9, $r9_10, $r9_11, $r9_12, $r9_13, $r9_14, $r9_15, $r9_16, $r9_17, $r9_18, $r9_19, $r9_20, $r9_21;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5, $r10_6;
        java.lang.String $r11, $r11_1, $r11_2, $r11_3, $r11_4, $r11_5, $r11_6;
        long $l0;
        int $i1, $i1_1, $i1_2, $i1_3;
        java.util.Set $r12;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool;

        $r2 := @parameter1: java.lang.Object;

        $r5 = null;

        $r6 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>();

(0)     $z0 = 0;

     label01:
        $r11 = Phi($r11 #0, $r11_4 #34, $r11_2 #35, $r11 #39, $r11_5 #49);

        $r5_1 = Phi($r5 #0, $r5_2 #34, $r5_2 #35, $r5_2 #39, $r5_2 #49);

        $r10 = Phi($r10 #0, $r10_4 #34, $r10_2 #35, $r10 #39, $r10_5 #49);

        $i1 = Phi($i1 #0, $i1_2 #34, $i1 #35, $i1 #39, $i1 #49);

        $r9 = Phi($r9 #0, $r9_14 #34, $r9_7 #35, $r9 #39, $r9_20 #49);

        $z0_1 = Phi($z0 #0, $z0_1 #34, $z0_2 #35, $z0_3 #39, $z0_3 #49);

        $r8 = Phi($r8 #0, $r8_6 #34, $r8_3 #35, $r8_7 #39, $r8_8 #49);

        $z1 = Phi($z1 #0, $z1_3 #34, $z1_2 #35, $z1_4 #39, $z1_4 #49);

(1)     if $z0_1 != 0 goto label24;

     label02:
        $r7 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object)>($r2);

     label03:
        $r5_2 = $r7;

(2)     if $r7 == null goto label19;

     label04:
(3)     $r8_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(4)     $z1_1 = virtualinvoke $r8_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label05:
(5)     if $z1_1 == 0 goto label07;

     label06:
(6)     $r8_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(7)     $r9_1 = new java.lang.StringBuilder;

        specialinvoke $r9_1.<java.lang.StringBuilder: void <init>()>();

(8)     $r9_2 = virtualinvoke $r9_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting free connection [");

(9)     $r10_1 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute()>();

(10)    $r9_3 = virtualinvoke $r9_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10_1);

(11)    $r9_4 = virtualinvoke $r9_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

(12)    $r9_5 = virtualinvoke $r9_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

(13)    $r9_6 = virtualinvoke $r9_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

(14)    $r11_1 = virtualinvoke $r9_6.<java.lang.StringBuilder: java.lang.String toString()>();

(15)    virtualinvoke $r8_2.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r11_1);

     label07:
        $r11_2 = Phi($r11 #5, $r11_1 #15);

        $r10_2 = Phi($r10 #5, $r10_1 #15);

        $r9_7 = Phi($r9 #5, $r9_6 #15);

        $r8_3 = Phi($r8_1 #5, $r8_2 #15);

(16)    $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r3.<java.util.Queue: boolean remove(java.lang.Object)>($r7);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

(17)    $z1_2 = virtualinvoke $r7.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: boolean isExpired(long)>($l0);

     label08:
        if $z1_2 == 0 goto label17;

     label09:
(18)    $r8_4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(19)    $z1_3 = virtualinvoke $r8_4.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label10:
(20)    if $z1_3 == 0 goto label12;

     label11:
(21)    $r8_5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(22)    $r9_8 = new java.lang.StringBuilder;

        specialinvoke $r9_8.<java.lang.StringBuilder: void <init>()>();

(23)    $r9_9 = virtualinvoke $r9_8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing expired free connection [");

(24)    $r10_3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute()>();

(25)    $r9_10 = virtualinvoke $r9_9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10_3);

(26)    $r9_11 = virtualinvoke $r9_10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

(27)    $r9_12 = virtualinvoke $r9_11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

(28)    $r9_13 = virtualinvoke $r9_12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

(29)    $r11_3 = virtualinvoke $r9_13.<java.lang.StringBuilder: java.lang.String toString()>();

(30)    virtualinvoke $r8_5.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r11_3);

     label12:
        $r11_4 = Phi($r11_2 #20, $r11_3 #30);

        $r10_4 = Phi($r10_2 #20, $r10_3 #30);

        $r9_14 = Phi($r9_7 #20, $r9_13 #30);

        $r8_6 = Phi($r8_4 #20, $r8_5 #30);

(31)    specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r7);

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

(32)    $i1_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

     label13:
(33)    $i1_2 = $i1_1 + -1;

     label14:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1_2;

     label15:
(34)    goto label01;

     label16:
        $r4 := @caughtexception;

        $r11_6 = Phi($r11 #1, $r11_1 #14, $r11_2 #16, $r11_3 #29, $r11_4 #31, $r11_5 #48);

        $r5_3 = Phi($r5_1 #1, $r5_2 #2);

        $r10_6 = Phi($r10 #1, $r10_1 #9, $r10_2 #16, $r10_3 #24, $r10_4 #31, $r10_5 #43);

        $i1_3 = Phi($i1 #1, $i1_1 #32, $i1_2 #33);

        $r9_21 = Phi($r9 #1, $r9_1 #7, $r9_2 #8, $r9_3 #10, $r9_4 #11, $r9_5 #12, $r9_6 #13, $r9_7 #16, $r9_8 #22, $r9_9 #23, $r9_10 #25, $r9_11 #26, $r9_12 #27, $r9_13 #28, $r9_14 #31, $r9_15 #41, $r9_16 #42, $r9_17 #44, $r9_18 #45, $r9_19 #46, $r9_20 #47);

        $z0_4 = Phi($z0_1 #1, $z0_3 #36);

        $r8_9 = Phi($r8 #1, $r8_1 #3, $r8_2 #6, $r8_3 #16, $r8_4 #18, $r8_5 #21, $r8_6 #31, $r8_7 #37, $r8_8 #40);

        $z1_5 = Phi($z1 #1, $z1_1 #4, $z1_2 #17, $z1_3 #19, $z1_4 #38);

        $r6_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6_1.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r4;

     label17:
        $r12 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label18:
        $z0_2 = 1;

(35)    goto label01;

     label19:
(36)    $z0_3 = 1;

     label20:
(37)    $r8_7 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(38)    $z1_4 = virtualinvoke $r8_7.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label21:
(39)    if $z1_4 == 0 goto label01;

     label22:
(40)    $r8_8 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(41)    $r9_15 = new java.lang.StringBuilder;

        specialinvoke $r9_15.<java.lang.StringBuilder: void <init>()>();

(42)    $r9_16 = virtualinvoke $r9_15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No free connections [");

(43)    $r10_5 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute()>();

(44)    $r9_17 = virtualinvoke $r9_16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10_5);

(45)    $r9_18 = virtualinvoke $r9_17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

(46)    $r9_19 = virtualinvoke $r9_18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

(47)    $r9_20 = virtualinvoke $r9_19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

(48)    $r11_5 = virtualinvoke $r9_20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8_8.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r11_5);

     label23:
(49)    goto label01;

     label24:
        $r6_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6_2.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r5_1;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label16;
        catch java.lang.Throwable from label22 to label23 with label16;
    }

    protected java.util.concurrent.locks.Lock getLock()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.locks.Lock r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        r1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        return r1;
    }

    public int getMaxTotalConnections()
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        int i0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        i0 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        return i0;
    }

    protected ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool getRoutePool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute, boolean)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        java.util.concurrent.locks.Lock $r3, $r3_1, $r3_2;
        java.util.Map $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Object $r5;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r6, $r7, $r6_1, $r7_1, $r7_2, $r6_2, $r7_3, $r6_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.HttpRoute;

        $z0 := @parameter1: boolean;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(0)     interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool) $r5;

     label2:
        $r7 = $r6;

(1)     if $r6 != null goto label6;

(2)     if $z0 == 0 goto label6;

     label3:
(3)     $r6_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute)>($r1);

     label4:
(4)     $r7_1 = $r6_1;

     label5:
(5)     $r4_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

(6)     interfaceinvoke $r4_1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6_1);

     label6:
        $r4_2 = Phi($r4 #1, $r4 #2, $r4_1 #6);

        $r7_2 = Phi($r7 #1, $r7 #2, $r7_1 #6);

        $r6_2 = Phi($r6 #1, $r6 #2, $r6_1 #6);

        $r3_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r7_2;

     label7:
        $r2 := @caughtexception;

        $r4_3 = Phi($r4 #0, $r4_1 #5);

        $r7_3 = Phi($r7 #0, $r7_1 #4);

        $r6_3 = Phi($r6 #0, $r6_1 #3);

        $r3_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    protected void handleLostEntry(ch.boye.httpclientandroidlib.conn.routing.HttpRoute)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r1;
        java.util.Map $r2;
        java.lang.Throwable $r3;
        java.util.concurrent.locks.Lock $r4, $r4_1, $r4_2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r5;
        boolean $z0;
        int $i0, $i0_1, $i0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.HttpRoute;

        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(0)     interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r5 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool getRoutePool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,boolean)>($r1, 1);

        virtualinvoke $r5.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $z0 = virtualinvoke $r5.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

     label2:
        if $z0 == 0 goto label4;

     label3:
        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label4:
        $i0 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

     label5:
(1)     $i0_1 = $i0 + -1;

     label6:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i0_1;

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool)>($r5);

     label7:
        $r4_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label8:
        $r3 := @caughtexception;

        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $r4_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    protected ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(ch.boye.httpclientandroidlib.conn.routing.HttpRoute)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r1;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r2;
        ch.boye.httpclientandroidlib.conn.params.ConnPerRoute $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.HttpRoute;

        $r2 = new ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.conn.params.ConnPerRoute connPerRoute>;

        specialinvoke $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: void <init>(ch.boye.httpclientandroidlib.conn.routing.HttpRoute,ch.boye.httpclientandroidlib.conn.params.ConnPerRoute)>($r1, $r3);

        return $r2;
    }

    protected ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition, ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        java.util.concurrent.locks.Condition $r1;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: java.util.concurrent.locks.Condition;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool;

        $r3 = new ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread;

        specialinvoke $r3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread: void <init>(java.util.concurrent.locks.Condition,ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool)>($r1, $r2);

        return $r3;
    }

    protected void notifyWaitingThread(ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool $r1;
        java.lang.Throwable $r2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.util.concurrent.locks.Lock $r4, $r4_1, $r4_2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8, $r5_9;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r7;
        java.lang.String $r8;
        java.util.Queue $r9, $r9_1, $r9_2, $r9_3;
        java.lang.Object $r10;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool;

        $r3 = null;

        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

(0)     if $r1 == null goto label10;

     label01:
        $z0 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: boolean hasThread()>();

     label02:
(1)     if $z0 == 0 goto label10;

     label03:
        $r5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(2)     $z0_1 = virtualinvoke $r5.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label04:
(3)     if $z0_1 == 0 goto label06;

     label05:
(4)     $r5_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

(5)     $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying thread waiting on pool [");

        $r7 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getRoute()>();

(6)     $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

(7)     $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.String toString()>();

(8)     virtualinvoke $r5_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r8);

     label06:
        $r5_2 = Phi($r5 #3, $r5_1 #8);

        $r6_4 = Phi($r6 #3, $r6_3 #8);

(9)     $r3_1 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.tsccm.RouteSpecificPool: ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread nextThread()>();

     label07:
        $r5_3 = Phi($r5_2 #9, $r5_6 #20, $r5_7 #23, $r5_8 #25);

        $r6_5 = Phi($r6_4 #9, $r6 #20, $r6 #23, $r6 #25);

        $r9 = Phi($r9 #9, $r9_2 #20, $r9_1 #23, $r9_1 #25);

        $z0_2 = Phi($z0_1 #9, $z0_5 #20, $z0_6 #23, $z0_6 #25);

        $r3_2 = Phi($r3_1 #9, $r3_3 #20, $r3 #23, $r3 #25);

(10)    if $r3_2 == null goto label09;

     label08:
        virtualinvoke $r3_2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread: void wakeup()>();

     label09:
        $r4_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label10:
        $z0_3 = Phi($z0 #0, $z0 #1);

(11)    $r9_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

(12)    $z0_4 = interfaceinvoke $r9_1.<java.util.Queue: boolean isEmpty()>();

     label11:
        if $z0_4 != 0 goto label17;

     label12:
(13)    $r5_4 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(14)    $z0_5 = virtualinvoke $r5_4.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label13:
(15)    if $z0_5 == 0 goto label15;

     label14:
(16)    $r5_5 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(17)    virtualinvoke $r5_5.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>("Notifying thread waiting on any pool");

     label15:
        $r5_6 = Phi($r5_4 #15, $r5_5 #17);

(18)    $r9_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $r10 = interfaceinvoke $r9_2.<java.util.Queue: java.lang.Object remove()>();

(19)    $r3_3 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread) $r10;

     label16:
(20)    goto label07;

     label17:
(21)    $r5_7 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(22)    $z0_6 = virtualinvoke $r5_7.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label18:
(23)    if $z0_6 == 0 goto label07;

     label19:
(24)    $r5_8 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

        virtualinvoke $r5_8.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>("Notifying no-one, there are no waiting threads");

     label20:
(25)    goto label07;

     label21:
        $r2 := @caughtexception;

        $r5_9 = Phi($r5 #0, $r5_1 #4, $r5_2 #9, $r5_3 #10, $r5_4 #13, $r5_5 #16, $r5_6 #18, $r5_7 #21, $r5_8 #24);

        $r6_6 = Phi($r6 #0, $r6_1 #5, $r6_2 #6, $r6_3 #7, $r6_4 #9, $r6_5 #10);

        $r9_3 = Phi($r9 #0, $r9_1 #11, $r9_2 #18);

        $z0_7 = Phi($z0 #0, $z0_1 #2, $z0_2 #10, $z0_3 #11, $z0_4 #12, $z0_5 #14, $z0_6 #22);

        $r3_4 = Phi($r3 #0, $r3_1 #9, $r3_2 #10, $r3_3 #19);

        $r4_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label14 to label16 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
    }

    public ch.boye.httpclientandroidlib.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(ch.boye.httpclientandroidlib.conn.routing.HttpRoute, java.lang.Object)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r1;
        java.lang.Object $r2;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter $r3;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute$1 $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.HttpRoute;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter;

        specialinvoke $r3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter: void <init>()>();

        $r4 = new ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute$1;

        specialinvoke $r4.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute$1: void <init>(ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute,ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThreadAborter,ch.boye.httpclientandroidlib.conn.routing.HttpRoute,java.lang.Object)>($r0, $r3, $r1, $r2);

        return $r4;
    }

    public void setMaxTotalConnections(int)
    {
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r0;
        int $i0;
        java.lang.Throwable $r1;
        java.util.concurrent.locks.Lock $r2, $r2_1, $r2_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $i0 := @parameter0: int;

        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections> = $i0;

     label2:
        $r2_1 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r1 := @caughtexception;

        $r2_2 = $r0.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2_2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void shutdown()
    {
        java.util.Set $r0;
        java.lang.Throwable $r1;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute $r2;
        java.util.concurrent.locks.Lock $r3, $r3_1, $r3_2, $r3_3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8;
        java.util.Iterator $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        java.util.Queue $r7, $r7_1, $r7_2;
        ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog $r8, $r8_1, $r8_2, $r8_3, $r8_4;
        java.lang.StringBuilder $r9, $r9_1, $r9_2, $r9_3, $r9_4, $r9_5, $r9_6, $r9_7, $r9_8;
        ch.boye.httpclientandroidlib.conn.routing.HttpRoute $r10;
        java.lang.String $r11;
        ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread $r12;
        java.util.Map $r13;

        $r2 := @this: ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute;

        $r3 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

(0)     interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        $z0 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown>;

     label02:
        if $z0 == 0 goto label03;

        $r3_1 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label03:
        $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: boolean shutdown> = 1;

        $r0 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Set leasedConnections>;

(1)     $r4 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $r6 = Phi($r6 #1, $r6_1 #5);

        $r5 = Phi($r5 #1, $r5_1 #5);

        $z0_1 = Phi($z0 #1, $z0_2 #5);

(2)     $z0_2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0_2 == 0 goto label09;

     label06:
(3)     $r5_1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

(4)     $r6_1 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry) $r5_1;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        specialinvoke $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r6_1);

     label07:
(5)     goto label04;

     label08:
        $r1 := @caughtexception;

        $r6_4 = Phi($r6 #0, $r6_1 #4, $r6_2 #7, $r6_3 #9);

        $r7_2 = Phi($r7 #0, $r7_1 #24);

        $r5_8 = Phi($r5 #0, $r5_1 #3, $r5_2 #7, $r5_3 #8, $r5_4 #18, $r5_5 #22, $r5_6 #26, $r5_7 #27);

        $z0_8 = Phi($z0 #0, $z0_2 #2, $z0_4 #7, $z0_5 #11, $z0_7 #26);

        $r4_3 = Phi($r4 #0, $r4_1 #6, $r4_2 #25);

        $r9_8 = Phi($r9 #0, $r9_1 #14, $r9_2 #15, $r9_3 #16, $r9_4 #17, $r9_5 #19, $r9_6 #20, $r9_7 #22);

        $r8_4 = Phi($r8 #0, $r8_1 #10, $r8_2 #13, $r8_3 #22);

        $r3_3 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_3.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r1;

     label09:
        $r7 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

(6)     $r4_1 = interfaceinvoke $r7.<java.util.Queue: java.util.Iterator iterator()>();

     label10:
        $r6_2 = Phi($r6 #6, $r6_3 #23);

        $r5_2 = Phi($r5 #6, $r5_5 #23);

        $z0_3 = Phi($z0_2 #6, $z0_5 #23);

        $r9 = Phi($r9 #6, $r9_7 #23);

        $r8 = Phi($r8 #6, $r8_3 #23);

(7)     $z0_4 = interfaceinvoke $r4_1.<java.util.Iterator: boolean hasNext()>();

     label11:
        if $z0_4 == 0 goto label17;

     label12:
(8)     $r5_3 = interfaceinvoke $r4_1.<java.util.Iterator: java.lang.Object next()>();

(9)     $r6_3 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry) $r5_3;

        interfaceinvoke $r4_1.<java.util.Iterator: void remove()>();

(10)    $r8_1 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(11)    $z0_5 = virtualinvoke $r8_1.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: boolean isDebugEnabled()>();

     label13:
(12)    if $z0_5 == 0 goto label15;

     label14:
(13)    $r8_2 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog log>;

(14)    $r9_1 = new java.lang.StringBuilder;

        specialinvoke $r9_1.<java.lang.StringBuilder: void <init>()>();

(15)    $r9_2 = virtualinvoke $r9_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection [");

        $r10 = virtualinvoke $r6_3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: ch.boye.httpclientandroidlib.conn.routing.HttpRoute getPlannedRoute()>();

(16)    $r9_3 = virtualinvoke $r9_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

(17)    $r9_4 = virtualinvoke $r9_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

(18)    $r5_4 = virtualinvoke $r6_3.<ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

(19)    $r9_5 = virtualinvoke $r9_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5_4);

(20)    $r9_6 = virtualinvoke $r9_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r9_6.<java.lang.StringBuilder: java.lang.String toString()>();

(21)    virtualinvoke $r8_2.<ch.boye.httpclientandroidlib.androidextra.HttpClientAndroidLog: void debug(java.lang.Object)>($r11);

     label15:
        $r5_5 = Phi($r5_3 #12, $r5_4 #21);

        $r9_7 = Phi($r9 #12, $r9_6 #21);

        $r8_3 = Phi($r8_1 #12, $r8_2 #21);

(22)    specialinvoke $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(ch.boye.httpclientandroidlib.impl.conn.tsccm.BasicPoolEntry)>($r6_3);

     label16:
(23)    goto label10;

     label17:
(24)    $r7_1 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

(25)    $r4_2 = interfaceinvoke $r7_1.<java.util.Queue: java.util.Iterator iterator()>();

     label18:
        $r5_6 = Phi($r5_2 #25, $r5_7 #28);

        $z0_6 = Phi($z0_4 #25, $z0_7 #28);

(26)    $z0_7 = interfaceinvoke $r4_2.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z0_7 == 0 goto label22;

     label20:
(27)    $r5_7 = interfaceinvoke $r4_2.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread) $r5_7;

        interfaceinvoke $r4_2.<java.util.Iterator: void remove()>();

        virtualinvoke $r12.<ch.boye.httpclientandroidlib.impl.conn.tsccm.WaitingThread: void wakeup()>();

     label21:
(28)    goto label18;

     label22:
        $r13 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r13.<java.util.Map: void clear()>();

     label23:
        $r3_2 = $r2.<ch.boye.httpclientandroidlib.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3_2.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label11 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch java.lang.Throwable from label14 to label16 with label08;
        catch java.lang.Throwable from label17 to label19 with label08;
        catch java.lang.Throwable from label20 to label21 with label08;
        catch java.lang.Throwable from label22 to label23 with label08;
    }
}
