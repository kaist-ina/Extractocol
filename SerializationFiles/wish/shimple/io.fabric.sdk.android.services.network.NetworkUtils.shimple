public final class io.fabric.sdk.android.services.network.NetworkUtils extends java.lang.Object
{

    private void <init>()
    {
        io.fabric.sdk.android.services.network.NetworkUtils $r0;

        $r0 := @this: io.fabric.sdk.android.services.network.NetworkUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final javax.net.ssl.SSLSocketFactory getSSLSocketFactory(io.fabric.sdk.android.services.network.PinningInfoProvider) throws java.security.KeyManagementException, java.security.NoSuchAlgorithmException
    {
        io.fabric.sdk.android.services.network.PinningInfoProvider $r0;
        io.fabric.sdk.android.services.network.SystemKeyStore $r1;
        io.fabric.sdk.android.services.network.PinningTrustManager $r2;
        javax.net.ssl.TrustManager[] $r3;
        javax.net.ssl.SSLContext $r4;
        java.io.InputStream $r5;
        java.lang.String $r6;
        javax.net.ssl.SSLSocketFactory $r7;

        $r0 := @parameter0: io.fabric.sdk.android.services.network.PinningInfoProvider;

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");

        $r1 = new io.fabric.sdk.android.services.network.SystemKeyStore;

        $r5 = interfaceinvoke $r0.<io.fabric.sdk.android.services.network.PinningInfoProvider: java.io.InputStream getKeyStoreStream()>();

        $r6 = interfaceinvoke $r0.<io.fabric.sdk.android.services.network.PinningInfoProvider: java.lang.String getKeyStorePassword()>();

        specialinvoke $r1.<io.fabric.sdk.android.services.network.SystemKeyStore: void <init>(java.io.InputStream,java.lang.String)>($r5, $r6);

        $r2 = new io.fabric.sdk.android.services.network.PinningTrustManager;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.PinningTrustManager: void <init>(io.fabric.sdk.android.services.network.SystemKeyStore,io.fabric.sdk.android.services.network.PinningInfoProvider)>($r1, $r0);

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        $r3[0] = $r2;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, $r3, null);

        $r7 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        return $r7;
    }
}
