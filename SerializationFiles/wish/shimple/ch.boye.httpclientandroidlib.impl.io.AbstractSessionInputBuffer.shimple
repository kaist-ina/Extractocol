public abstract class ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer extends java.lang.Object implements ch.boye.httpclientandroidlib.io.BufferInfo, ch.boye.httpclientandroidlib.io.SessionInputBuffer
{
    private static final java.nio.charset.Charset ASCII;
    private boolean ascii;
    private byte[] buffer;
    private int bufferlen;
    private int bufferpos;
    private java.nio.CharBuffer cbuf;
    private java.nio.charset.Charset charset;
    private java.nio.charset.CharsetDecoder decoder;
    private java.io.InputStream instream;
    private ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer;
    private int maxLineLen;
    private ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl metrics;
    private int minChunkLimit;
    private java.nio.charset.CodingErrorAction onMalformedInputAction;
    private java.nio.charset.CodingErrorAction onUnMappableInputAction;

    static void <clinit>()
    {
        java.nio.charset.Charset $r0;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset ASCII> = $r0;

        return;
    }

    public void <init>()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer> = null;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean ascii> = 1;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int maxLineLen> = -1;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int minChunkLimit> = 512;

        return;
    }

    private int appendDecoded(ch.boye.httpclientandroidlib.util.CharArrayBuffer, java.nio.ByteBuffer) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r1;
        java.nio.ByteBuffer $r2;
        java.nio.charset.Charset $r3;
        boolean $z0, $z0_1, $z0_2;
        java.nio.charset.CharsetDecoder $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6, $r4_7, $r4_8;
        java.nio.charset.CodingErrorAction $r5, $r5_1, $r5_2;
        java.nio.CharBuffer $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2, $i0_3;
        java.nio.charset.CoderResult $r7, $r7_1, $r7_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        $r2 := @parameter1: java.nio.ByteBuffer;

        $z0 = virtualinvoke $r2.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder>;

(0)     if $r4 != null goto label2;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset charset>;

        $r4_1 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder> = $r4_1;

        $r4_2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder>;

        $r5 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CodingErrorAction onMalformedInputAction>;

        virtualinvoke $r4_2.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r5);

        $r4_3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder>;

        $r5_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CodingErrorAction onUnMappableInputAction>;

(1)     virtualinvoke $r4_3.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r5_1);

     label2:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r4_4 = Phi($r4 #0, $r4_3 #1);

        $r6 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

(2)     if $r6 != null goto label3;

        $r6_1 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(1024);

(3)     $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf> = $r6_1;

     label3:
        $r6_2 = Phi($r6 #2, $r6_1 #3);

        $r4_5 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder>;

        virtualinvoke $r4_5.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>();

(4)     $i0 = 0;

     label4:
        $z0_1 = Phi($z0 #4, $z0_2 #5);

        $r7 = Phi($r7 #4, $r7_1 #5);

        $i0_1 = Phi($i0 #4, $i0_2 #5);

        $r6_3 = Phi($r6_2 #4, $r6_4 #5);

        $i1 = Phi($i1 #4, $i1_1 #5);

        $r4_6 = Phi($r4_5 #4, $r4_7 #5);

        $z0_2 = virtualinvoke $r2.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0_2 == 0 goto label5;

        $r4_7 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder>;

        $r6_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

        $r7_1 = virtualinvoke $r4_7.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r2, $r6_4, 1);

        $i1_1 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int handleDecodingResult(java.nio.charset.CoderResult,ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.nio.ByteBuffer)>($r7_1, $r1, $r2);

        $i0_2 = $i0_1 + $i1_1;

(5)     goto label4;

     label5:
        $r4_8 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder>;

        $r6_5 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

        $r7_2 = virtualinvoke $r4_8.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult flush(java.nio.CharBuffer)>($r6_5);

        $i1_2 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int handleDecodingResult(java.nio.charset.CoderResult,ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.nio.ByteBuffer)>($r7_2, $r1, $r2);

        $i0_3 = $i0_1 + $i1_2;

        $r6_6 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

        virtualinvoke $r6_6.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        return $i0_3;
    }

    private int handleDecodingResult(java.nio.charset.CoderResult, ch.boye.httpclientandroidlib.util.CharArrayBuffer, java.nio.ByteBuffer) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        java.nio.charset.CoderResult $r1;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r2;
        java.nio.ByteBuffer $r3;
        boolean $z0, $z0_1, $z0_2;
        java.nio.CharBuffer $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        int $i0;
        char $c1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: java.nio.charset.CoderResult;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        $r3 := @parameter2: java.nio.ByteBuffer;

        $z0 = virtualinvoke $r1.<java.nio.charset.CoderResult: boolean isError()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.nio.charset.CoderResult: void throwException()>();

     label1:
        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

        virtualinvoke $r4.<java.nio.CharBuffer: java.nio.Buffer flip()>();

        $r4_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

(0)     $i0 = virtualinvoke $r4_1.<java.nio.CharBuffer: int remaining()>();

     label2:
        $z0_1 = Phi($z0 #0, $z0_2 #1);

        $r4_2 = Phi($r4_1 #0, $r4_4 #1);

        $r4_3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

        $z0_2 = virtualinvoke $r4_3.<java.nio.CharBuffer: boolean hasRemaining()>();

        if $z0_2 == 0 goto label3;

        $r4_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

        $c1 = virtualinvoke $r4_4.<java.nio.CharBuffer: char get()>();

        virtualinvoke $r2.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(char)>($c1);

(1)     goto label2;

     label3:
        $r4_5 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.CharBuffer cbuf>;

        virtualinvoke $r4_5.<java.nio.CharBuffer: java.nio.CharBuffer compact()>();

        return $i0;
    }

    private int lineFromLineBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r1;
        boolean $z0;
        ch.boye.httpclientandroidlib.util.ByteArrayBuffer $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7;
        int $i0, $i1, $i2, $i2_1, $i1_1, $i1_2, $i0_1, $i0_2, $i1_3, $i0_3, $i2_2, $i1_4, $i1_5, $i1_6;
        byte[] $r3;
        java.nio.ByteBuffer $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $i0 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: int length()>();

        $i1 = $i0;

(0)     if $i0 <= 0 goto label2;

        $r2_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $i2 = $i0 + -1;

        $i2_1 = virtualinvoke $r2_1.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: int byteAt(int)>($i2);

(1)     if $i2_1 != 10 goto label1;

(2)     $i1_1 = $i0 + -1;

     label1:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     if $i1_2 <= 0 goto label2;

        $r2_2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $i0_1 = $i1_2 + -1;

        $i0_2 = virtualinvoke $r2_2.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: int byteAt(int)>($i0_1);

(4)     if $i0_2 != 13 goto label2;

(5)     $i1_3 = $i1_2 + -1;

     label2:
        $i0_3 = Phi($i0 #0, $i0 #3, $i0_2 #4, $i0_2 #5);

        $i2_2 = Phi($i2 #0, $i2_1 #3, $i2_1 #4, $i2_1 #5);

        $i1_4 = Phi($i1 #0, $i1_2 #3, $i1_2 #4, $i1_3 #5);

        $r2_3 = Phi($r2 #0, $r2_1 #3, $r2_2 #4, $r2_2 #5);

        $z0 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean ascii>;

        if $z0 == 0 goto label4;

        $r2_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

(6)     virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(ch.boye.httpclientandroidlib.util.ByteArrayBuffer,int,int)>($r2_4, 0, $i1_4);

     label3:
        $i1_5 = Phi($i1_4 #6, $i1_6 #7);

        $r2_5 = Phi($r2_4 #6, $r2_7 #7);

        $r2_6 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        virtualinvoke $r2_6.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: void clear()>();

        return $i1_5;

     label4:
        $r2_7 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $r3 = virtualinvoke $r2_7.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: byte[] buffer()>();

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r3, 0, $i1_4);

        $i1_6 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int appendDecoded(ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.nio.ByteBuffer)>($r1, $r4);

(7)     goto label3;
    }

    private int lineFromReadBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer, int) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r1;
        int $i0, $i2, $i3, $i3_1, $i2_1, $i2_2, $i3_2, $i2_3, $i2_4;
        byte $b1;
        boolean $z0;
        byte[] $r2, $r2_1, $r2_2, $r2_3;
        java.nio.ByteBuffer $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        $i2 := @parameter1: int;

        $i0 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i3 = $i2 + 1;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = $i3;

(0)     if $i2 <= $i0 goto label1;

        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i3_1 = $i2 + -1;

        $b1 = $r2[$i3_1];

(1)     if $b1 != 13 goto label1;

(2)     $i2_1 = $i2 + -1;

     label1:
        $i2_2 = Phi($i2 #0, $i2 #1, $i2_1 #2);

        $i3_2 = Phi($i3 #0, $i3_1 #1, $i3_1 #2);

        $r2_1 = Phi($r2 #0, $r2 #1, $r2 #2);

        $i2_3 = $i2_2 - $i0;

        $z0 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean ascii>;

        if $z0 == 0 goto label2;

        $r2_2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(byte[],int,int)>($r2_2, $i0, $i2_3);

        return $i2_3;

     label2:
        $r2_3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r2_3, $i0, $i2_3);

        $i2_4 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int appendDecoded(ch.boye.httpclientandroidlib.util.CharArrayBuffer,java.nio.ByteBuffer)>($r1, $r3);

        return $i2_4;
    }

    private int locateLF()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        int $i0, $i2, $i2_1, $i2_2;
        byte[] $r1;
        byte $b1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

(0)     $i2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

     label1:
        $i2_1 = Phi($i2 #0, $i2_2 #1);

        $i0 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        if $i2_1 >= $i0 goto label3;

        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $b1 = $r1[$i2_1];

        if $b1 != 10 goto label2;

        return $i2_1;

     label2:
        $i2_2 = $i2_1 + 1;

(1)     goto label1;

     label3:
        return -1;
    }

    public int available()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        int $i0, $i1, $i0_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $i0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int capacity()>();

        $i1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int length()>();

        $i0_1 = $i0 - $i1;

        return $i0_1;
    }

    public int capacity()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }

    protected ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl createTransportMetrics()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 = new ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl;

        specialinvoke $r1.<ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl: void <init>()>();

        return $r1;
    }

    protected int fillBuffer() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        byte[] $r1, $r4, $r1_1, $r1_2, $r1_3, $r1_4;
        java.io.InputStream $r2;
        ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl $r3;
        long $l0;
        int $i1, $i2, $i2_1, $i2_2, $i1_1, $i1_2, $i2_3, $i1_3, $i2_4, $i1_4, $i1_5, $i1_6, $i2_5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $i2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

(0)     if $i2 <= 0 goto label2;

        $i2_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        $i1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i2_2 = $i2_1 - $i1;

(1)     if $i2_2 <= 0 goto label1;

        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i1_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

(2)     staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1_1, $r4, 0, $i2_2);

     label1:
        $r1_1 = Phi($r1 #1, $r1 #2);

        $i1_2 = Phi($i1 #1, $i1_1 #2);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0;

(3)     $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen> = $i2_2;

     label2:
        $i2_3 = Phi($i2 #0, $i2_2 #3);

        $r1_2 = Phi($r1 #0, $r1_1 #3);

        $i1_3 = Phi($i1 #0, $i1_2 #3);

        $i2_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        $r1_3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i1_4 = lengthof $r1_3;

        $i1_5 = $i1_4 - $i2_4;

        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream>;

        $r1_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i1_6 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1_4, $i2_4, $i1_5);

        if $i1_6 != -1 goto label3;

        return -1;

     label3:
        $i2_5 = $i2_4 + $i1_6;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen> = $i2_5;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl metrics>;

        $l0 = (long) $i1_6;

        virtualinvoke $r3.<ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl: void incrementBytesTransferred(long)>($l0);

        return $i1_6;
    }

    public ch.boye.httpclientandroidlib.io.HttpTransportMetrics getMetrics()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        r1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl metrics>;

        return r1;
    }

    protected boolean hasBufferedData()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        int $i0, $i1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $i0 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void init(java.io.InputStream, int, ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        java.io.InputStream $r1;
        ch.boye.httpclientandroidlib.params.HttpParams $r2;
        byte[] $r3;
        ch.boye.httpclientandroidlib.util.ByteArrayBuffer $r4;
        java.nio.charset.Charset $r5, $r8, $r5_1;
        int $i0, $i0_1, $i0_2;
        java.lang.IllegalArgumentException $r6, $r6_1, $r6_2;
        java.lang.String $r7;
        boolean $z0;
        ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl $r9;
        java.nio.charset.CodingErrorAction $r10, $r10_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r2 := @parameter2: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input stream may not be null");

        throw $r6;

     label1:
        if $i0 > 0 goto label2;

        $r6_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r6_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer size may not be negative or zero");

        throw $r6_1;

     label2:
        if $r2 != null goto label3;

        $r6_2 = new java.lang.IllegalArgumentException;

        specialinvoke $r6_2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r6_2;

     label3:
        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream> = $r1;

        $r3 = newarray (byte)[$i0];

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer> = $r3;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = 0;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen> = 0;

        $r4 = new ch.boye.httpclientandroidlib.util.ByteArrayBuffer;

        specialinvoke $r4.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: void <init>(int)>($i0);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer> = $r4;

        $r7 = staticinvoke <ch.boye.httpclientandroidlib.params.HttpProtocolParams: java.lang.String getHttpElementCharset(ch.boye.httpclientandroidlib.params.HttpParams)>($r2);

        $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r7);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset charset> = $r5;

        $r8 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset charset>;

        $r5_1 = <ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.Charset ASCII>;

        $z0 = virtualinvoke $r8.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r5_1);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean ascii> = $z0;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CharsetDecoder decoder> = null;

        $i0_1 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.max-line-length", -1);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int maxLineLen> = $i0_1;

        $i0_2 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.min-chunk-limit", 512);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int minChunkLimit> = $i0_2;

        $r9 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl createTransportMetrics()>();

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl metrics> = $r9;

        $r10 = staticinvoke <ch.boye.httpclientandroidlib.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getMalformedInputAction(ch.boye.httpclientandroidlib.params.HttpParams)>($r2);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CodingErrorAction onMalformedInputAction> = $r10;

        $r10_1 = staticinvoke <ch.boye.httpclientandroidlib.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getUnmappableInputAction(ch.boye.httpclientandroidlib.params.HttpParams)>($r2);

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.nio.charset.CodingErrorAction onUnMappableInputAction> = $r10_1;

        return;
    }

    public int length()
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        int $i0, $i1, $i0_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $i0 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        $i1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i0_1 = $i0 - $i1;

        return $i0_1;
    }

    public int read() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        byte[] $r1;
        int $i0, $i3, $i0_1, $i0_2;
        byte $b1;
        short $s2;
        boolean $z0;

(0)     $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

     label1:
        $i0 = Phi($i0 #0, $i0_1 #1);

        $z0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>();

        if $z0 != 0 goto label2;

        $i0_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int fillBuffer()>();

(1)     if $i0_1 != -1 goto label1;

        return -1;

     label2:
        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i0_2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i3 = $i0_2 + 1;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = $i3;

        $b1 = $r1[$i0_2];

        $s2 = $b1 & 255;

        return $s2;
    }

    public int read(byte[]) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        byte[] $r1;
        int $i0, $i0_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = lengthof $r1;

        $i0_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0_1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        byte[] $r1, $r4, $r4_1;
        java.io.InputStream $r2;
        ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl $r3;
        long $l0;
        int $i1, $i2, $i3, $i4, $i3_1, $i2_1, $i3_2, $i1_1, $i1_2, $i3_3, $i1_3, $i3_4, $i3_5, $i3_6, $i4_1, $i3_7, $i2_2, $i3_8, $i1_4, $i1_5;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>();

        if $z0 == 0 goto label2;

        $i3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        $i4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i3_1 = $i3 - $i4;

        $i2_1 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3_1);

        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i3_2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i3_2, $r1, $i1, $i2_1);

        $i1_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i1_2 = $i1_1 + $i2_1;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = $i1_2;

        return $i2_1;

     label2:
        $i3_3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int minChunkLimit>;

(0)     if $i2 <= $i3_3 goto label3;

        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: java.io.InputStream instream>;

        $i1_3 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i2);

        if $i1_3 <= 0 goto label5;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl metrics>;

        $l0 = (long) $i1_3;

        virtualinvoke $r3.<ch.boye.httpclientandroidlib.impl.io.HttpTransportMetricsImpl: void incrementBytesTransferred(long)>($l0);

        return $i1_3;

     label3:
        $z0_1 = Phi($z0 #0, $z0_2 #1);

        $i3_4 = Phi($i3_3 #0, $i3_5 #1);

        $z0_2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>();

        if $z0_2 != 0 goto label4;

        $i3_5 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int fillBuffer()>();

(1)     if $i3_5 != -1 goto label3;

        return -1;

     label4:
        $i3_6 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        $i4_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i3_7 = $i3_6 - $i4_1;

        $i2_2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3_7);

        $r4_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i3_8 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4_1, $i3_8, $r1, $i1, $i2_2);

        $i1_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i1_5 = $i1_4 + $i2_2;

        $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = $i1_5;

        return $i2_2;

     label5:
        return $i1_3;
    }

    public int readLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r1;
        java.lang.IllegalArgumentException $r2;
        java.io.IOException $r3;
        int $i0, $i1, $i2, $i3, $i0_1, $i1_1, $i0_2, $i2_1, $i3_1, $i2_2, $i3_2, $i1_2, $i0_3, $i3_3, $i2_3, $i1_3, $i1_4, $i1_5, $i2_4, $i0_4, $i1_6, $i0_5, $i1_7, $i0_6, $i0_7, $i1_8, $i1_9, $i0_8, $i0_9;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        ch.boye.httpclientandroidlib.util.ByteArrayBuffer $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6, $r4_7, $r4_8;
        byte[] $r5, $r5_1, $r5_2, $r5_3, $r5_4;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Char array buffer may not be null");

        throw $r2;

     label1:
        $i0 = 0;

(0)     $z0 = 1;

     label2:
        $r4 = Phi($r4 #0, $r4_3 #2, $r4_4 #3);

        $i0_1 = Phi($i0 #0, $i0_3 #2, $i0_3 #3);

        $i3 = Phi($i3 #0, $i3_3 #2, $i3_3 #3);

        $i2 = Phi($i2 #0, $i2_3 #2, $i2_4 #3);

        $z0_1 = Phi($z0 #0, $z0_4 #2, $z0_4 #3);

        $r5 = Phi($r5 #0, $r5_2 #2, $r5_2 #3);

        $i1 = Phi($i1 #0, $i1_4 #2, $i1_5 #3);

        if $z0_1 == 0 goto label7;

        $i1_1 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int locateLF()>();

        if $i1_1 == -1 goto label5;

        $r4_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $z0_2 = virtualinvoke $r4_1.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: boolean isEmpty()>();

        if $z0_2 == 0 goto label3;

        $i0_2 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int lineFromReadBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer,int)>($r1, $i1_1);

        return $i0_2;

     label3:
        $z0_3 = 0;

        $i2_1 = $i1_1 + 1;

        $i3_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i2_2 = $i2_1 - $i3_1;

        $r4_2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $r5_1 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i3_2 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        virtualinvoke $r4_2.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: void append(byte[],int,int)>($r5_1, $i3_2, $i2_2);

        $i1_2 = $i1_1 + 1;

(1)     $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = $i1_2;

     label4:
        $r4_3 = Phi($r4_2 #1, $r4_6 #6, $r4_6 #7);

        $i0_3 = Phi($i0_1 #1, $i0_8 #6, $i0_8 #7);

        $i3_3 = Phi($i3_2 #1, $i3 #6, $i3 #7);

        $i2_3 = Phi($i2_2 #1, $i2 #6, $i2 #7);

        $z0_4 = Phi($z0_3 #1, $z0_1 #6, $z0_5 #7);

        $r5_2 = Phi($r5_1 #1, $r5_4 #6, $r5_4 #7);

        $i1_3 = Phi($i1_2 #1, $i1_9 #6, $i1_9 #7);

        $i1_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int maxLineLen>;

(2)     if $i1_4 <= 0 goto label2;

        $r4_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $i1_5 = virtualinvoke $r4_4.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: int length()>();

        $i2_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int maxLineLen>;

(3)     if $i1_5 < $i2_4 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Maximum line length limit exceeded");

        throw $r3;

     label5:
        $z1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>();

(4)     if $z1 == 0 goto label6;

        $i0_4 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

        $i1_6 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        $i0_5 = $i0_4 - $i1_6;

        $r4_5 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $r5_3 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: byte[] buffer>;

        $i1_7 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos>;

        virtualinvoke $r4_5.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: void append(byte[],int,int)>($r5_3, $i1_7, $i0_5);

        $i0_6 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferlen>;

(5)     $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int bufferpos> = $i0_6;

     label6:
        $r4_6 = Phi($r4 #4, $r4_5 #5);

        $i0_7 = Phi($i0_1 #4, $i0_6 #5);

        $r5_4 = Phi($r5 #4, $r5_3 #5);

        $i1_8 = Phi($i1_1 #4, $i1_7 #5);

        $i1_9 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int fillBuffer()>();

        $i0_8 = $i1_9;

(6)     if $i1_9 != -1 goto label4;

        $z0_5 = 0;

(7)     goto label4;

     label7:
(8)     if $i0_1 != -1 goto label8;

        $r4_7 = $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: ch.boye.httpclientandroidlib.util.ByteArrayBuffer linebuffer>;

        $z0_6 = virtualinvoke $r4_7.<ch.boye.httpclientandroidlib.util.ByteArrayBuffer: boolean isEmpty()>();

(9)     if $z0_6 != 0 goto label9;

     label8:
        $r4_8 = Phi($r4 #8, $r4_7 #9);

        $z0_7 = Phi($z0_1 #8, $z0_6 #9);

        $i0_9 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int lineFromLineBuffer(ch.boye.httpclientandroidlib.util.CharArrayBuffer)>($r1);

        return $i0_9;

     label9:
        return -1;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer $r0;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer;

        $r1 = new ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        specialinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void <init>(int)>(64);

        $i0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.io.AbstractSessionInputBuffer: int readLine(ch.boye.httpclientandroidlib.util.CharArrayBuffer)>($r1);

        if $i0 == -1 goto label1;

        $r2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: java.lang.String toString()>();

        return $r2;

     label1:
        return null;
    }
}
