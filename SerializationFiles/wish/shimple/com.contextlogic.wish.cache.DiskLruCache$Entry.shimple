final class com.contextlogic.wish.cache.DiskLruCache$Entry extends java.lang.Object
{
    private com.contextlogic.wish.cache.DiskLruCache$Editor currentEditor;
    private final java.lang.String key;
    private final long[] lengths;
    private boolean readable;
    private long sequenceNumber;
    final com.contextlogic.wish.cache.DiskLruCache this$0;
    private long timestamp;

    private void <init>(com.contextlogic.wish.cache.DiskLruCache, java.lang.String)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        java.lang.String $r2;
        long[] $r3;
        int $i0;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter0: com.contextlogic.wish.cache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.lang.String key> = $r2;

        $i0 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: int access$2400(com.contextlogic.wish.cache.DiskLruCache)>($r1);

        $r3 = newarray (long)[$i0];

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long[] lengths> = $r3;

        return;
    }

    void <init>(com.contextlogic.wish.cache.DiskLruCache, java.lang.String, com.contextlogic.wish.cache.DiskLruCache$1)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        java.lang.String $r2;
        com.contextlogic.wish.cache.DiskLruCache$1 $r3;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter0: com.contextlogic.wish.cache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.contextlogic.wish.cache.DiskLruCache$1;

        specialinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: void <init>(com.contextlogic.wish.cache.DiskLruCache,java.lang.String)>($r1, $r2);

        return;
    }

    static long[] access$1100(com.contextlogic.wish.cache.DiskLruCache$Entry)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        long[] r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long[] lengths>;

        return r1;
    }

    static java.lang.String access$1200(com.contextlogic.wish.cache.DiskLruCache$Entry)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.lang.String key>;

        return r1;
    }

    static long access$1300(com.contextlogic.wish.cache.DiskLruCache$Entry)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        long l0;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        l0 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long timestamp>;

        return l0;
    }

    static long access$1400(com.contextlogic.wish.cache.DiskLruCache$Entry)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        long l0;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        l0 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long sequenceNumber>;

        return l0;
    }

    static long access$1402(com.contextlogic.wish.cache.DiskLruCache$Entry, long)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        long $l0;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $l0 := @parameter1: long;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long sequenceNumber> = $l0;

        return $l0;
    }

    static boolean access$600(com.contextlogic.wish.cache.DiskLruCache$Entry)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        boolean z0;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        z0 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: boolean readable>;

        return z0;
    }

    static boolean access$602(com.contextlogic.wish.cache.DiskLruCache$Entry, boolean)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        boolean $z0;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $z0 := @parameter1: boolean;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: boolean readable> = $z0;

        return $z0;
    }

    static com.contextlogic.wish.cache.DiskLruCache$Editor access$700(com.contextlogic.wish.cache.DiskLruCache$Entry)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        com.contextlogic.wish.cache.DiskLruCache$Editor r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache$Editor currentEditor>;

        return r1;
    }

    static com.contextlogic.wish.cache.DiskLruCache$Editor access$702(com.contextlogic.wish.cache.DiskLruCache$Entry, com.contextlogic.wish.cache.DiskLruCache$Editor)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        com.contextlogic.wish.cache.DiskLruCache$Editor $r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter1: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache$Editor currentEditor> = $r1;

        return $r1;
    }

    static void access$800(com.contextlogic.wish.cache.DiskLruCache$Entry, java.lang.String) throws java.lang.NumberFormatException
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: void setTimestamp(java.lang.String)>($r1);

        return;
    }

    static void access$900(com.contextlogic.wish.cache.DiskLruCache$Entry, java.lang.String[]) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        java.lang.String[] $r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter1: java.lang.String[];

        specialinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: void setLengths(java.lang.String[])>($r1);

        return;
    }

    private java.io.IOException invalidLengths(java.lang.String[]) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        java.lang.String[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2;
        java.lang.String $r4, $r4_1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal line: ");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4_1 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4_1);

        throw $r2;
    }

    private void setLengths(java.lang.String[]) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        java.lang.String[] $r1;
        com.contextlogic.wish.cache.DiskLruCache $r2;
        long[] $r3;
        java.lang.String $r4;
        java.lang.NumberFormatException $r5;
        int $i0, $i1, $i0_1, $i0_2, $i1_1, $i1_2, $i0_3;
        java.io.IOException $r6, $r6_1;
        long $l2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $i0 = lengthof $r1;

        $r2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache this$0>;

        $i1 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: int access$2400(com.contextlogic.wish.cache.DiskLruCache)>($r2);

        if $i0 == $i1 goto label1;

        $r6 = specialinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r6;

     label1:
(0)     $i0_1 = 0;

     label2:
        $i0_2 = Phi($i0_1 #0, $i0_3 #1);

        $i1_1 = Phi($i1 #0, $i1_2 #1);

        $i1_2 = lengthof $r1;

        if $i0_2 >= $i1_2 goto label6;

        $r3 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long[] lengths>;

        $r4 = $r1[$i0_2];

     label3:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

     label4:
        $r3[$i0_2] = $l2;

        $i0_3 = $i0_2 + 1;

(1)     goto label2;

     label5:
        $r5 := @caughtexception;

        $r6_1 = specialinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r6_1;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private void setTimestamp(java.lang.String) throws java.lang.NumberFormatException
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        java.lang.String $r1;
        long $l0;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long timestamp> = $l0;

        return;
    }

    public java.io.File getCleanFile(int)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        int $i0;
        java.io.File $r1, $r3;
        com.contextlogic.wish.cache.DiskLruCache $r2;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3;
        java.lang.String $r5, $r5_1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache this$0>;

        $r3 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: java.io.File access$2500(com.contextlogic.wish.cache.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.lang.String key>;

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5_1 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5_1);

        return $r1;
    }

    public java.io.File getDirtyFile(int)
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        int $i0;
        java.io.File $r1, $r3;
        com.contextlogic.wish.cache.DiskLruCache $r2;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.String $r5, $r5_1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache this$0>;

        $r3 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: java.io.File access$2500(com.contextlogic.wish.cache.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.lang.String key>;

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4_4 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5_1 = virtualinvoke $r4_4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5_1);

        return $r1;
    }

    public java.lang.String getLengths() throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Entry $r0;
        java.lang.StringBuilder $r1, $r3;
        long[] $r2;
        int $i0, $i2, $i2_1, $i2_2;
        long $l1;
        java.lang.String $r4;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Entry: long[] lengths>;

        $i0 = lengthof $r2;

(0)     $i2 = 0;

     label1:
        $i2_1 = Phi($i2 #0, $i2_2 #1);

        if $i2_1 >= $i0 goto label2;

        $l1 = $r2[$i2_1];

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $i2_2 = $i2_1 + 1;

(1)     goto label1;

     label2:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
