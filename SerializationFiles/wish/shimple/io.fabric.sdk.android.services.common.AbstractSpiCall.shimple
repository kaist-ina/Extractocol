public abstract class io.fabric.sdk.android.services.common.AbstractSpiCall extends java.lang.Object
{
    public static final java.lang.String ACCEPT_JSON_VALUE;
    public static final java.lang.String ANDROID_CLIENT_TYPE;
    public static final java.lang.String CLS_ANDROID_SDK_DEVELOPER_TOKEN;
    public static final java.lang.String CRASHLYTICS_USER_AGENT;
    public static final int DEFAULT_TIMEOUT;
    public static final java.lang.String HEADER_ACCEPT;
    public static final java.lang.String HEADER_API_KEY;
    public static final java.lang.String HEADER_CLIENT_TYPE;
    public static final java.lang.String HEADER_CLIENT_VERSION;
    public static final java.lang.String HEADER_D;
    public static final java.lang.String HEADER_DEVELOPER_TOKEN;
    public static final java.lang.String HEADER_DEVICE_STATE;
    public static final java.lang.String HEADER_REQUEST_ID;
    public static final java.lang.String HEADER_USER_AGENT;
    private static final java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN;
    protected final io.fabric.sdk.android.Kit kit;
    private final io.fabric.sdk.android.services.network.HttpMethod method;
    private final java.lang.String protocolAndHostOverride;
    private final io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory;
    private final java.lang.String url;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("http(s?)://[^\\/]+", 2);

        <io.fabric.sdk.android.services.common.AbstractSpiCall: java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN> = $r0;

        return;
    }

    public void <init>(io.fabric.sdk.android.Kit, java.lang.String, java.lang.String, io.fabric.sdk.android.services.network.HttpRequestFactory, io.fabric.sdk.android.services.network.HttpMethod)
    {
        io.fabric.sdk.android.services.common.AbstractSpiCall $r0;
        io.fabric.sdk.android.Kit $r1;
        java.lang.String $r2, $r5, $r5_1;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r3;
        io.fabric.sdk.android.services.network.HttpMethod $r4;
        java.lang.IllegalArgumentException $r6, $r6_1;

        $r0 := @this: io.fabric.sdk.android.services.common.AbstractSpiCall;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        $r5 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: io.fabric.sdk.android.services.network.HttpRequestFactory;

        $r4 := @parameter4: io.fabric.sdk.android.services.network.HttpMethod;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r2 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url must not be null.");

        throw $r6;

     label1:
        if $r3 != null goto label2;

        $r6_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r6_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("requestFactory must not be null.");

        throw $r6_1;

     label2:
        $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: io.fabric.sdk.android.Kit kit> = $r1;

        $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: java.lang.String protocolAndHostOverride> = $r5;

        $r5_1 = specialinvoke $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: java.lang.String overrideProtocolAndHost(java.lang.String)>($r2);

        $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: java.lang.String url> = $r5_1;

        $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory> = $r3;

        $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: io.fabric.sdk.android.services.network.HttpMethod method> = $r4;

        return;
    }

    private java.lang.String overrideProtocolAndHost(java.lang.String)
    {
        io.fabric.sdk.android.services.common.AbstractSpiCall $r0;
        java.lang.String $r1, $r3, $r3_1, $r3_2, $r3_3;
        java.util.regex.Pattern $r2;
        boolean $z0;
        java.util.regex.Matcher $r4;

        $r0 := @this: io.fabric.sdk.android.services.common.AbstractSpiCall;

        $r3 := @parameter0: java.lang.String;

        $r1 = $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: java.lang.String protocolAndHostOverride>;

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isNullOrEmpty(java.lang.String)>($r1);

(0)     if $z0 != 0 goto label1;

        $r2 = <io.fabric.sdk.android.services.common.AbstractSpiCall: java.util.regex.Pattern PROTOCOL_AND_HOST_PATTERN>;

        $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $r3_1 = $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: java.lang.String protocolAndHostOverride>;

(1)     $r3_2 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>($r3_1);

     label1:
        $r3_3 = Phi($r3 #0, $r3_2 #1);

        return $r3_3;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest getHttpRequest()
    {
        io.fabric.sdk.android.services.common.AbstractSpiCall $r0;
        java.util.Map $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2;

        $r0 := @this: io.fabric.sdk.android.services.common.AbstractSpiCall;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: io.fabric.sdk.android.services.network.HttpRequest getHttpRequest(java.util.Map)>($r1);

        return $r2;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest getHttpRequest(java.util.Map)
    {
        io.fabric.sdk.android.services.common.AbstractSpiCall $r0;
        java.util.Map $r1;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r2;
        io.fabric.sdk.android.services.network.HttpMethod $r3;
        io.fabric.sdk.android.Kit $r4;
        java.lang.String $r5, $r5_1, $r5_2;
        io.fabric.sdk.android.services.network.HttpRequest $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        java.lang.StringBuilder $r7, $r7_1, $r7_2;

        $r0 := @this: io.fabric.sdk.android.services.common.AbstractSpiCall;

        $r1 := @parameter0: java.util.Map;

        $r2 = $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: io.fabric.sdk.android.services.network.HttpRequestFactory requestFactory>;

        $r3 = $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: io.fabric.sdk.android.services.network.HttpMethod method>;

        $r5 = virtualinvoke $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: java.lang.String getUrl()>();

        $r6 = interfaceinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequestFactory: io.fabric.sdk.android.services.network.HttpRequest buildHttpRequest(io.fabric.sdk.android.services.network.HttpMethod,java.lang.String,java.util.Map)>($r3, $r5, $r1);

        $r6_1 = virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)>(0);

        $r6_2 = virtualinvoke $r6_1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)>(10000);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7_1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics Android SDK/");

        $r4 = $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: io.fabric.sdk.android.Kit kit>;

        $r5_1 = virtualinvoke $r4.<io.fabric.sdk.android.Kit: java.lang.String getVersion()>();

        $r7_2 = virtualinvoke $r7_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5_1);

        $r5_2 = virtualinvoke $r7_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6_3 = virtualinvoke $r6_2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("User-Agent", $r5_2);

        $r6_4 = virtualinvoke $r6_3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-DEVELOPER-TOKEN", "470fa2b4ae81cd56ecbcda9735803434cec591fa");

        return $r6_4;
    }

    protected java.lang.String getUrl()
    {
        io.fabric.sdk.android.services.common.AbstractSpiCall $r0;
        java.lang.String r1;

        $r0 := @this: io.fabric.sdk.android.services.common.AbstractSpiCall;

        r1 = $r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: java.lang.String url>;

        return r1;
    }
}
