public class ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy extends java.lang.Object implements ch.boye.httpclientandroidlib.ConnectionReuseStrategy
{

    public void <init>()
    {
        ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean keepAlive(ch.boye.httpclientandroidlib.HttpResponse, ch.boye.httpclientandroidlib.protocol.HttpContext)
    {
        ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        ch.boye.httpclientandroidlib.protocol.HttpContext $r2;
        java.lang.IllegalArgumentException $r3, $r3_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.protocol.HttpContext;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r3_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r3_1;

     label2:
        return 0;
    }
}
