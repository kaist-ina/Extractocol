class com.samsung.android.sdk.richnotification.templates.TemplateUtil extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sSetCompressFormatMethod;

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.lang.NoSuchMethodException $r1;
        java.lang.Class $r2, $r2_1;
        java.lang.String $r3, $r5, $r3_1;
        java.lang.reflect.Method $r4, $r4_1, $r4_2;

        $r2 = class "com/samsung/android/sdk/richnotification/templates/TemplateUtil";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        <com.samsung.android.sdk.richnotification.templates.TemplateUtil: java.lang.String TAG> = $r3;

        $r2_1 = class "com/samsung/android/sdk/richnotification/SrnImageAsset";

        $r0 = newarray (java.lang.Class)[1];

(0)     $r0[0] = class "android/graphics/Bitmap$CompressFormat";

     label1:
        $r4 = virtualinvoke $r2_1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setCompressFormat", $r0);

     label2:
        <com.samsung.android.sdk.richnotification.templates.TemplateUtil: java.lang.reflect.Method sSetCompressFormatMethod> = $r4;

(1)     $r4_1 = <com.samsung.android.sdk.richnotification.templates.TemplateUtil: java.lang.reflect.Method sSetCompressFormatMethod>;

     label3:
        virtualinvoke $r4_1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r3_1 = <com.samsung.android.sdk.richnotification.templates.TemplateUtil: java.lang.String TAG>;

        $r5 = virtualinvoke $r1.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3_1, $r5, $r1);

        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    void <init>()
    {
        com.samsung.android.sdk.richnotification.templates.TemplateUtil $r0;

        $r0 := @this: com.samsung.android.sdk.richnotification.templates.TemplateUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void setCompressFormat(com.samsung.android.sdk.richnotification.SrnImageAsset, android.graphics.Bitmap$CompressFormat)
    {
        com.samsung.android.sdk.richnotification.SrnImageAsset $r0;
        android.graphics.Bitmap$CompressFormat $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r5;
        java.lang.Exception $r6, $r6_1, $r6_2, $r6_3;

        $r0 := @parameter0: com.samsung.android.sdk.richnotification.SrnImageAsset;

        $r1 := @parameter1: android.graphics.Bitmap$CompressFormat;

        $r2 = <com.samsung.android.sdk.richnotification.templates.TemplateUtil: java.lang.reflect.Method sSetCompressFormatMethod>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

     label1:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r3);

     label2:
        return;

     label3:
(0)     $r6 := @caughtexception;

     label4:
        $r6_1 = Phi($r6 #0, $r6_2 #1, $r6_3 #2);

        $r4 = <com.samsung.android.sdk.richnotification.templates.TemplateUtil: java.lang.String TAG>;

        $r5 = virtualinvoke $r6_1.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r5, $r6_1);

        return;

     label5:
        $r6_2 := @caughtexception;

(1)     goto label4;

     label6:
        $r6_3 := @caughtexception;

(2)     goto label4;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }
}
