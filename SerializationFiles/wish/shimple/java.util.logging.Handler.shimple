public abstract class java.util.logging.Handler extends java.lang.Object
{

    protected void <init>()
    {
        java.util.logging.Handler r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.logging.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract void close();

    public abstract void flush();

    public abstract void publish(java.util.logging.LogRecord);

    public java.lang.String getEncoding()
    {
        java.util.logging.Handler r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.logging.Handler;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.logging.ErrorManager getErrorManager()
    {
        java.util.logging.Handler r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.logging.Handler;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.logging.Filter getFilter()
    {
        java.util.logging.Handler r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.logging.Handler;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.logging.Formatter getFormatter()
    {
        java.util.logging.Handler r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.logging.Handler;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.logging.Level getLevel()
    {
        java.util.logging.Handler r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.logging.Handler;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isLoggable(java.util.logging.LogRecord)
    {
        java.util.logging.Handler r0;
        java.util.logging.LogRecord r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.logging.Handler;

        r1 := @parameter0: java.util.logging.LogRecord;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected void reportError(java.lang.String, java.lang.Exception, int)
    {
        java.util.logging.Handler r0;
        java.lang.String r1;
        java.lang.Exception r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @this: java.util.logging.Handler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        i0 := @parameter2: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public void setEncoding(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.util.logging.Handler r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.logging.Handler;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setErrorManager(java.util.logging.ErrorManager)
    {
        java.util.logging.Handler r0;
        java.util.logging.ErrorManager r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.logging.Handler;

        r1 := @parameter0: java.util.logging.ErrorManager;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setFilter(java.util.logging.Filter)
    {
        java.util.logging.Handler r0;
        java.util.logging.Filter r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.logging.Handler;

        r1 := @parameter0: java.util.logging.Filter;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setFormatter(java.util.logging.Formatter)
    {
        java.util.logging.Handler r0;
        java.util.logging.Formatter r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.logging.Handler;

        r1 := @parameter0: java.util.logging.Formatter;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setLevel(java.util.logging.Level)
    {
        java.util.logging.Handler r0;
        java.util.logging.Level r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.logging.Handler;

        r1 := @parameter0: java.util.logging.Level;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }
}
