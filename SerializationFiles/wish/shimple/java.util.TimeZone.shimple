public abstract class java.util.TimeZone extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    public static final int LONG;
    public static final int SHORT;

    public void <init>()
    {
        java.util.TimeZone r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.TimeZone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object clone()
    {
        java.util.TimeZone r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.TimeZone;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static synchronized java.lang.String[] getAvailableIDs()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static synchronized java.lang.String[] getAvailableIDs(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static synchronized java.util.TimeZone getDefault()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public final java.lang.String getDisplayName()
    {
        java.util.TimeZone r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.TimeZone;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.String getDisplayName(java.util.Locale)
    {
        java.util.TimeZone r0;
        java.util.Locale r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.TimeZone;

        r1 := @parameter0: java.util.Locale;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.lang.String getDisplayName(boolean, int)
    {
        java.util.TimeZone r0;
        boolean z0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.TimeZone;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String getDisplayName(boolean, int, java.util.Locale)
    {
        java.util.TimeZone r0;
        boolean z0;
        int i0;
        java.util.Locale r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.TimeZone;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.Locale;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String getID()
    {
        java.util.TimeZone r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.TimeZone;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getDSTSavings()
    {
        java.util.TimeZone r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.TimeZone;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getOffset(long)
    {
        java.util.TimeZone r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.TimeZone;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract int getOffset(int, int, int, int, int, int);

    public abstract int getRawOffset();

    public static synchronized java.util.TimeZone getTimeZone(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean hasSameRules(java.util.TimeZone)
    {
        java.util.TimeZone r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.TimeZone;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract boolean inDaylightTime(java.util.Date);

    public static synchronized void setDefault(java.util.TimeZone)
    {
        java.util.TimeZone r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.TimeZone;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setID(java.lang.String)
    {
        java.util.TimeZone r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.TimeZone;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract void setRawOffset(int);

    public abstract boolean useDaylightTime();
}
