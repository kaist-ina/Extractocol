public class com.contextlogic.wish.ui.components.layout.FlowLayout extends android.view.ViewGroup
{
    static final boolean $assertionsDisabled;
    private int line_height;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 = class "com/contextlogic/wish/ui/components/layout/FlowLayout";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

(0)     $z0_1 = 1;

     label1:
        $z0_2 = Phi($z0_1 #0, $z0_3 #1);

        <com.contextlogic.wish.ui.components.layout.FlowLayout: boolean $assertionsDisabled> = $z0_2;

        return;

     label2:
        $z0_3 = 0;

(1)     goto label1;
    }

    public void <init>(android.content.Context)
    {
        com.contextlogic.wish.ui.components.layout.FlowLayout $r0;
        android.content.Context $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.layout.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.contextlogic.wish.ui.components.layout.FlowLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.layout.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.contextlogic.wish.ui.components.layout.FlowLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.layout.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.contextlogic.wish.ui.components.layout.FlowLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.ui.components.layout.FlowLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.contextlogic.wish.ui.components.layout.FlowLayout $r0;
        com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.layout.FlowLayout;

        $r1 = new com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams;

        specialinvoke $r1.<com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams: void <init>(int,int)>(1, 1);

        return $r1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.contextlogic.wish.ui.components.layout.FlowLayout $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i1_1, $i0_1, $i2_1, $i3_1, $i2_2, $i4_1, $i3_2, $i5_1, $i5_2, $i6_1, $i7_1, $i2_3, $i7_2, $i3_3, $i7_3, $i2_4, $i3_4, $i7_4, $i6_2, $i6_3, $i5_3, $i2_5, $i7_5, $i2_6, $i5_4, $i3_5, $i6_4, $i4_2;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams $r3;

        $r0 := @this: com.contextlogic.wish.ui.components.layout.FlowLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i1_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getChildCount()>();

        $i0_1 = $i2 - $i0;

        $i2_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingLeft()>();

        $i3_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingTop()>();

(0)     $i4 = 0;

     label1:
        $i7 = Phi($i7 #0, $i7_5 #5);

        $i2_2 = Phi($i2_1 #0, $i2_6 #5);

        $i5 = Phi($i5 #0, $i5_4 #5);

        $i4_1 = Phi($i4 #0, $i4_2 #5);

        $i3_2 = Phi($i3_1 #0, $i3_5 #5);

        $i6 = Phi($i6 #0, $i6_4 #5);

        if $i4_1 >= $i1_1 goto label4;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: android.view.View getChildAt(int)>($i4_1);

        $i5_1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

(1)     if $i5_1 == 8 goto label3;

        $i5_2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i6_1 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams) $r2;

        $i7_1 = $i2_2 + $i5_2;

(2)     if $i7_1 <= $i0_1 goto label2;

        $i2_3 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingLeft()>();

        $i7_2 = $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int line_height>;

(3)     $i3_3 = $i3_2 + $i7_2;

     label2:
        $i7_3 = Phi($i7_1 #2, $i7_2 #3);

        $i2_4 = Phi($i2_2 #2, $i2_3 #3);

        $i3_4 = Phi($i3_2 #2, $i3_3 #3);

        $i7_4 = $i2_4 + $i5_2;

        $i6_2 = $i3_4 + $i6_1;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i2_4, $i3_4, $i7_4, $i6_2);

        $i6_3 = $r3.<com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams: int horizontal_spacing>;

        $i5_3 = $i6_3 + $i5_2;

(4)     $i2_5 = $i2_4 + $i5_3;

     label3:
        $i7_5 = Phi($i7 #1, $i7_4 #4);

        $i2_6 = Phi($i2_2 #1, $i2_5 #4);

        $i5_4 = Phi($i5_1 #1, $i5_3 #4);

        $i3_5 = Phi($i3_2 #1, $i3_4 #4);

        $i6_4 = Phi($i6 #1, $i6_3 #4);

        $i4_2 = $i4_1 + 1;

(5)     goto label1;

     label4:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.contextlogic.wish.ui.components.layout.FlowLayout $r0;
        boolean $z0;
        java.lang.AssertionError $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i2_1, $i0_1, $i2_2, $i0_2, $i2_3, $i0_3, $i2_4, $i2_5, $i3_1, $i2_6, $i3_2, $i7_1, $i7_2, $i8_1, $i6_1, $i5_1, $i3_3, $i9_1, $i9_2, $i9_3, $i10_1, $i11_1, $i10_2, $i10_3, $i3_4, $i11_2, $i6_2, $i5_2, $i6_3, $i5_3, $i10_4, $i9_4, $i6_4, $i11_3, $i10_5, $i9_5, $i6_5, $i5_4, $i3_5, $i8_2, $i4_1, $i2_7, $i2_8, $i1_1, $i1_2, $i1_3, $i2_9, $i7_3;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams $r4;

        $r0 := @this: com.contextlogic.wish.ui.components.layout.FlowLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = <com.contextlogic.wish.ui.components.layout.FlowLayout: boolean $assertionsDisabled>;

(0)     if $z0 != 0 goto label1;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

(1)     if $i2 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i2_1 = Phi($i2 #0, $i2 #1);

        $i0_1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i2_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingLeft()>();

        $i0_2 = $i0_1 - $i2_2;

        $i2_3 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingRight()>();

        $i0_3 = $i0_2 - $i2_3;

        $i2_4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i3 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingTop()>();

        $i2_5 = $i2_4 - $i3;

        $i3_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingBottom()>();

        $i2_6 = $i2_5 - $i3_1;

        $i4 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getChildCount()>();

        $i3_2 = 0;

        $i6 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingLeft()>();

        $i5 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingTop()>();

        $i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i7 != -2147483648 goto label6;

(2)     $i7_1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2_6, -2147483648);

     label2:
        $i7_2 = Phi($i7_1 #2, $i7_3 #9);

(3)     $i8 = 0;

     label3:
        $i11 = Phi($i11 #3, $i11_3 #8);

        $i10 = Phi($i10 #3, $i10_5 #8);

        $i9 = Phi($i9 #3, $i9_5 #8);

        $i8_1 = Phi($i8 #3, $i8_2 #8);

        $i6_1 = Phi($i6 #3, $i6_5 #8);

        $i5_1 = Phi($i5 #3, $i5_4 #8);

        $i3_3 = Phi($i3_2 #3, $i3_5 #8);

        if $i8_1 >= $i4 goto label7;

        $r2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: android.view.View getChildAt(int)>($i8_1);

        $i9_1 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

(4)     if $i9_1 == 8 goto label5;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams) $r3;

        $i9_2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0_3, -2147483648);

        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i9_2, $i7_2);

        $i9_3 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i10_1 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();

        $i11_1 = $r4.<com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams: int vertical_spacing>;

        $i10_2 = $i10_1 + $i11_1;

        $i10_3 = staticinvoke <java.lang.Math: int max(int,int)>($i3_3, $i10_2);

        $i3_4 = $i10_3;

        $i11_2 = $i6_1 + $i9_3;

(5)     if $i11_2 <= $i0_3 goto label4;

        $i6_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int getPaddingLeft()>();

(6)     $i5_2 = $i5_1 + $i10_3;

     label4:
        $i6_3 = Phi($i6_1 #5, $i6_2 #6);

        $i5_3 = Phi($i5_1 #5, $i5_2 #6);

        $i10_4 = $r4.<com.contextlogic.wish.ui.components.layout.FlowLayout$LayoutParams: int horizontal_spacing>;

        $i9_4 = $i10_4 + $i9_3;

(7)     $i6_4 = $i6_3 + $i9_4;

     label5:
        $i11_3 = Phi($i11 #4, $i11_2 #7);

        $i10_5 = Phi($i10 #4, $i10_4 #7);

        $i9_5 = Phi($i9_1 #4, $i9_4 #7);

        $i6_5 = Phi($i6_1 #4, $i6_4 #7);

        $i5_4 = Phi($i5_1 #4, $i5_3 #7);

        $i3_5 = Phi($i3_3 #4, $i3_4 #7);

        $i8_2 = $i8_1 + 1;

(8)     goto label3;

     label6:
        $i7_3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

(9)     goto label2;

     label7:
        $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: int line_height> = $i3_3;

        $i4_1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i4_1 != 0 goto label9;

(10)    $i2_7 = $i5_1 + $i3_3;

     label8:
        $i2_8 = Phi($i2_7 #10, $i2_6 #11, $i2_6 #12, $i2_9 #13);

        $i1_1 = Phi($i1 #10, $i1_2 #11, $i1_3 #12, $i1_3 #13);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.layout.FlowLayout: void setMeasuredDimension(int,int)>($i0_3, $i2_8);

        return;

     label9:
        $i1_2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

(11)    if $i1_2 != -2147483648 goto label8;

        $i1_3 = $i5_1 + $i3_3;

(12)    if $i1_3 >= $i2_6 goto label8;

        $i2_9 = $i5_1 + $i3_3;

(13)    goto label8;
    }
}
