class com.contextlogic.wish.WishApplication$3 extends java.lang.Object implements com.contextlogic.wish.api.service.GetLoggedOutExperimentsService$SuccessCallback
{
    final com.contextlogic.wish.WishApplication this$0;

    void <init>(com.contextlogic.wish.WishApplication)
    {
        com.contextlogic.wish.WishApplication$3 $r0;
        com.contextlogic.wish.WishApplication $r1;

        $r0 := @this: com.contextlogic.wish.WishApplication$3;

        $r1 := @parameter0: com.contextlogic.wish.WishApplication;

        $r0.<com.contextlogic.wish.WishApplication$3: com.contextlogic.wish.WishApplication this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceSucceeded(java.util.HashMap)
    {
        com.contextlogic.wish.WishApplication$3 $r0;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r4_1, $r4_2, $r4_3;
        java.util.Map$Entry $r5;
        java.lang.String $r6, $r7;

        $r0 := @this: com.contextlogic.wish.WishApplication$3;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

(0)     $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r4 = Phi($r4 #0, $r4_3 #1);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4_1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4_1;

        $r4_2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4_2;

        $r4_3 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r4_3;

        staticinvoke <com.contextlogic.wish.user.UserPreferences: void setExperimentOverride(java.lang.String,java.lang.String)>($r6, $r7);

(1)     goto label1;

     label2:
        return;
    }
}
