public abstract class java.nio.channels.SelectableChannel extends java.nio.channels.spi.AbstractInterruptibleChannel implements java.nio.channels.Channel
{

    protected void <init>()
    {
        java.nio.channels.SelectableChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.SelectableChannel;

        specialinvoke r0.<java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.lang.Object blockingLock();

    public abstract java.nio.channels.SelectableChannel configureBlocking(boolean) throws java.io.IOException;

    public abstract boolean isBlocking();

    public abstract boolean isRegistered();

    public abstract java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector);

    public abstract java.nio.channels.spi.SelectorProvider provider();

    public final java.nio.channels.SelectionKey register(java.nio.channels.Selector, int) throws java.nio.channels.ClosedChannelException
    {
        java.nio.channels.SelectableChannel r0;
        java.nio.channels.Selector r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.SelectableChannel;

        r1 := @parameter0: java.nio.channels.Selector;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract java.nio.channels.SelectionKey register(java.nio.channels.Selector, int, java.lang.Object) throws java.nio.channels.ClosedChannelException;

    public abstract int validOps();
}
