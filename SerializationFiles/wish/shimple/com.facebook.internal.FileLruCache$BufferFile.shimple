class com.facebook.internal.FileLruCache$BufferFile extends java.lang.Object
{
    private static final java.lang.String FILE_NAME_PREFIX;
    private static final java.io.FilenameFilter filterExcludeBufferFiles;
    private static final java.io.FilenameFilter filterExcludeNonBufferFiles;

    static void <clinit>()
    {
        com.facebook.internal.FileLruCache$BufferFile$1 $r0;
        com.facebook.internal.FileLruCache$BufferFile$2 $r1;

        $r0 = new com.facebook.internal.FileLruCache$BufferFile$1;

        specialinvoke $r0.<com.facebook.internal.FileLruCache$BufferFile$1: void <init>()>();

        <com.facebook.internal.FileLruCache$BufferFile: java.io.FilenameFilter filterExcludeBufferFiles> = $r0;

        $r1 = new com.facebook.internal.FileLruCache$BufferFile$2;

        specialinvoke $r1.<com.facebook.internal.FileLruCache$BufferFile$2: void <init>()>();

        <com.facebook.internal.FileLruCache$BufferFile: java.io.FilenameFilter filterExcludeNonBufferFiles> = $r1;

        return;
    }

    private void <init>()
    {
        com.facebook.internal.FileLruCache$BufferFile $r0;

        $r0 := @this: com.facebook.internal.FileLruCache$BufferFile;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void deleteAll(java.io.File)
    {
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        java.io.File $r0, $r0_1, $r0_2, $r0_3;
        java.io.FilenameFilter $r1;
        java.io.File[] $r2;

        $r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <com.facebook.internal.FileLruCache$BufferFile: java.io.FilenameFilter excludeNonBufferFiles()>();

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r1);

(0)     if $r2 == null goto label2;

        $i0 = lengthof $r2;

(1)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #1, $i1_2 #3);

        $r0_1 = Phi($r0 #1, $r0_2 #3);

(2)     if $i1_1 >= $i0 goto label2;

        $r0_2 = $r2[$i1_1];

        virtualinvoke $r0_2.<java.io.File: boolean delete()>();

        $i1_2 = $i1_1 + 1;

(3)     goto label1;

     label2:
        $i1_3 = Phi($i1 #0, $i1_1 #2);

        $r0_3 = Phi($r0 #0, $r0_1 #2);

        return;
    }

    static java.io.FilenameFilter excludeBufferFiles()
    {
        java.io.FilenameFilter r0;

        r0 = <com.facebook.internal.FileLruCache$BufferFile: java.io.FilenameFilter filterExcludeBufferFiles>;

        return r0;
    }

    static java.io.FilenameFilter excludeNonBufferFiles()
    {
        java.io.FilenameFilter r0;

        r0 = <com.facebook.internal.FileLruCache$BufferFile: java.io.FilenameFilter filterExcludeNonBufferFiles>;

        return r0;
    }

    static java.io.File newFile(java.io.File)
    {
        java.io.File $r0, $r1;
        java.lang.StringBuilder $r2, $r2_1, $r2_2;
        java.util.concurrent.atomic.AtomicLong $r3;
        long $l0;
        java.lang.Long $r4;
        java.lang.String $r5, $r5_1;

        $r0 := @parameter0: java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2_1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("buffer");

        $r3 = staticinvoke <com.facebook.internal.FileLruCache: java.util.concurrent.atomic.AtomicLong access$300()>();

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.Long: java.lang.String toString()>();

        $r2_2 = virtualinvoke $r2_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5_1 = virtualinvoke $r2_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, $r5_1);

        return $r1;
    }
}
