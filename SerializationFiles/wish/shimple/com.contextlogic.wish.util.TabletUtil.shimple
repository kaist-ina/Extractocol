public class com.contextlogic.wish.util.TabletUtil extends java.lang.Object
{
    private static boolean CACHED_LARGE_TABLET_CHECK_RESULT;
    private static boolean CACHED_TABLET_CHECK_RESULT;
    private static boolean HAS_CACHED_CHECK_RESULT;
    private static boolean HAS_CACHED_LARGE_CHECK_RESULT;
    private static final int LARGE_TABLET_THRESHOLD;
    private static final int TABLET_THRESHOLD;

    public void <init>()
    {
        com.contextlogic.wish.util.TabletUtil $r0;

        $r0 := @this: com.contextlogic.wish.util.TabletUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isLargeTablet(android.app.Activity)
    {
        android.app.Activity $r0;
        boolean $z0, $z1, $z1_1, $z1_2, $z1_3, $z0_1;
        android.util.DisplayMetrics $r1;
        float $f0, $f1, $f2, $f1_1, $f0_1, $f0_2, $f1_2, $f0_3, $f1_3;
        byte $b0;
        android.view.WindowManager $r2;
        android.view.Display $r3;
        int $i1, $i1_1, $i1_2;

        $r0 := @parameter0: android.app.Activity;

        $z1 = 0;

        if $r0 != null goto label1;

        return 0;

     label1:
        $z0 = <com.contextlogic.wish.util.TabletUtil: boolean HAS_CACHED_LARGE_CHECK_RESULT>;

(0)     if $z0 != 0 goto label3;

        $r2 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r1 = new android.util.DisplayMetrics;

        specialinvoke $r1.<android.util.DisplayMetrics: void <init>()>();

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r1);

        $i1 = $r1.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i1;

        $f0 = $r1.<android.util.DisplayMetrics: float density>;

        $f1_1 = $f1 / $f0;

        $i1_1 = $r1.<android.util.DisplayMetrics: int heightPixels>;

        $f2 = (float) $i1_1;

        $f0_1 = $r1.<android.util.DisplayMetrics: float density>;

        $f0_2 = $f2 / $f0_1;

        $f1_2 = staticinvoke <java.lang.Math: float min(float,float)>($f1_1, $f0_2);

        $b0 = $f1_2 cmpl 725.0F;

(1)     if $b0 < 0 goto label2;

(2)     $z1_1 = 1;

     label2:
        $z1_2 = Phi($z1 #1, $z1_1 #2);

        <com.contextlogic.wish.util.TabletUtil: boolean CACHED_LARGE_TABLET_CHECK_RESULT> = $z1_2;

(3)     <com.contextlogic.wish.util.TabletUtil: boolean HAS_CACHED_LARGE_CHECK_RESULT> = 1;

     label3:
        $f0_3 = Phi($f0 #0, $f0_2 #3);

        $i1_2 = Phi($i1 #0, $i1_1 #3);

        $z1_3 = Phi($z1 #0, $z1_2 #3);

        $f1_3 = Phi($f1 #0, $f1_2 #3);

        $z0_1 = <com.contextlogic.wish.util.TabletUtil: boolean CACHED_LARGE_TABLET_CHECK_RESULT>;

        return $z0_1;
    }

    public static boolean isLargeTablet(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0, $z0_1, $z0_2;
        android.app.Activity $r1;

        $r0 := @parameter0: android.content.Context;

(0)     if $r0 == null goto label1;

        $z0 = $r0 instanceof android.app.Activity;

(1)     if $z0 == 0 goto label1;

        $r1 = (android.app.Activity) $r0;

        $z0_1 = staticinvoke <com.contextlogic.wish.util.TabletUtil: boolean isTablet(android.app.Activity)>($r1);

        return $z0_1;

     label1:
        $z0_2 = Phi($z0 #0, $z0 #1);

        return 0;
    }

    public static boolean isTablet(android.app.Activity)
    {
        android.app.Activity $r0;
        boolean $z0, $z1, $z1_1, $z1_2, $z1_3, $z0_1;
        android.util.DisplayMetrics $r1;
        float $f0, $f1, $f2, $f1_1, $f0_1, $f0_2, $f1_2, $f0_3, $f1_3;
        byte $b0;
        android.view.WindowManager $r2;
        android.view.Display $r3;
        int $i1, $i1_1, $i1_2;

        $r0 := @parameter0: android.app.Activity;

        $z1 = 0;

        if $r0 != null goto label1;

        return 0;

     label1:
        $z0 = <com.contextlogic.wish.util.TabletUtil: boolean HAS_CACHED_CHECK_RESULT>;

(0)     if $z0 != 0 goto label3;

        $r2 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r1 = new android.util.DisplayMetrics;

        specialinvoke $r1.<android.util.DisplayMetrics: void <init>()>();

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r1);

        $i1 = $r1.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i1;

        $f0 = $r1.<android.util.DisplayMetrics: float density>;

        $f1_1 = $f1 / $f0;

        $i1_1 = $r1.<android.util.DisplayMetrics: int heightPixels>;

        $f2 = (float) $i1_1;

        $f0_1 = $r1.<android.util.DisplayMetrics: float density>;

        $f0_2 = $f2 / $f0_1;

        $f1_2 = staticinvoke <java.lang.Math: float min(float,float)>($f1_1, $f0_2);

        $b0 = $f1_2 cmpl 525.0F;

(1)     if $b0 < 0 goto label2;

(2)     $z1_1 = 1;

     label2:
        $z1_2 = Phi($z1 #1, $z1_1 #2);

        <com.contextlogic.wish.util.TabletUtil: boolean CACHED_TABLET_CHECK_RESULT> = $z1_2;

(3)     <com.contextlogic.wish.util.TabletUtil: boolean HAS_CACHED_CHECK_RESULT> = 1;

     label3:
        $f0_3 = Phi($f0 #0, $f0_2 #3);

        $f1_3 = Phi($f1 #0, $f1_2 #3);

        $i1_2 = Phi($i1 #0, $i1_1 #3);

        $z1_3 = Phi($z1 #0, $z1_2 #3);

        $z0_1 = <com.contextlogic.wish.util.TabletUtil: boolean CACHED_TABLET_CHECK_RESULT>;

        return $z0_1;
    }

    public static boolean isTablet(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0, $z0_1, $z0_2;
        android.app.Activity $r1;

        $r0 := @parameter0: android.content.Context;

(0)     if $r0 == null goto label1;

        $z0 = $r0 instanceof android.app.Activity;

(1)     if $z0 == 0 goto label1;

        $r1 = (android.app.Activity) $r0;

        $z0_1 = staticinvoke <com.contextlogic.wish.util.TabletUtil: boolean isTablet(android.app.Activity)>($r1);

        return $z0_1;

     label1:
        $z0_2 = Phi($z0 #0, $z0 #1);

        return 0;
    }
}
