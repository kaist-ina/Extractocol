public abstract class java.security.cert.X509Certificate extends java.security.cert.Certificate implements java.security.cert.X509Extension
{

    protected void <init>()
    {
        java.security.cert.X509Certificate r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.security.cert.X509Certificate;

        $r1 = (java.lang.String) null;

        specialinvoke r0.<java.security.cert.Certificate: void <init>(java.lang.String)>($r1);

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException;

    public abstract void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException;

    public abstract int getVersion();

    public abstract java.math.BigInteger getSerialNumber();

    public abstract java.security.Principal getIssuerDN();

    public javax.security.auth.x500.X500Principal getIssuerX500Principal()
    {
        java.security.cert.X509Certificate r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.security.cert.X509Certificate;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.security.Principal getSubjectDN();

    public javax.security.auth.x500.X500Principal getSubjectX500Principal()
    {
        java.security.cert.X509Certificate r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.security.cert.X509Certificate;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.util.Date getNotBefore();

    public abstract java.util.Date getNotAfter();

    public abstract byte[] getTBSCertificate() throws java.security.cert.CertificateEncodingException;

    public abstract byte[] getSignature();

    public abstract java.lang.String getSigAlgName();

    public abstract java.lang.String getSigAlgOID();

    public abstract byte[] getSigAlgParams();

    public abstract boolean[] getIssuerUniqueID();

    public abstract boolean[] getSubjectUniqueID();

    public abstract boolean[] getKeyUsage();

    public java.util.List getExtendedKeyUsage() throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.security.cert.X509Certificate;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract int getBasicConstraints();

    public java.util.Collection getSubjectAlternativeNames() throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.security.cert.X509Certificate;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.Collection getIssuerAlternativeNames() throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.security.cert.X509Certificate;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
