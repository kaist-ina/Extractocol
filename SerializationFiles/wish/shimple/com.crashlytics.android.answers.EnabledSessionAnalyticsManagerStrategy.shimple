class com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy extends io.fabric.sdk.android.services.events.EnabledEventsStrategy implements com.crashlytics.android.answers.SessionAnalyticsManagerStrategy
{
    io.fabric.sdk.android.services.common.ApiKey apiKey;
    boolean customEventsEnabled;
    com.crashlytics.android.answers.EventFilter eventFilter;
    io.fabric.sdk.android.services.events.FilesSender filesSender;
    private final io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory;
    private final io.fabric.sdk.android.Kit kit;
    final com.crashlytics.android.answers.SessionEventMetadata metadata;
    boolean predefinedEventsEnabled;

    public void <init>(io.fabric.sdk.android.Kit, android.content.Context, java.util.concurrent.ScheduledExecutorService, com.crashlytics.android.answers.SessionAnalyticsFilesManager, io.fabric.sdk.android.services.network.HttpRequestFactory, com.crashlytics.android.answers.SessionEventMetadata)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy $r0;
        io.fabric.sdk.android.Kit $r1;
        android.content.Context $r2;
        java.util.concurrent.ScheduledExecutorService $r3;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r4;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r5;
        com.crashlytics.android.answers.SessionEventMetadata $r6;
        com.crashlytics.android.answers.KeepAllEventFilter $r7;
        io.fabric.sdk.android.services.common.ApiKey $r8;

        $r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.util.concurrent.ScheduledExecutorService;

        $r4 := @parameter3: com.crashlytics.android.answers.SessionAnalyticsFilesManager;

        $r5 := @parameter4: io.fabric.sdk.android.services.network.HttpRequestFactory;

        $r6 := @parameter5: com.crashlytics.android.answers.SessionEventMetadata;

        specialinvoke $r0.<io.fabric.sdk.android.services.events.EnabledEventsStrategy: void <init>(android.content.Context,java.util.concurrent.ScheduledExecutorService,io.fabric.sdk.android.services.events.EventsFilesManager)>($r2, $r3, $r4);

        $r7 = new com.crashlytics.android.answers.KeepAllEventFilter;

        specialinvoke $r7.<com.crashlytics.android.answers.KeepAllEventFilter: void <init>()>();

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r7;

        $r8 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r8.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.common.ApiKey apiKey> = $r8;

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = 1;

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = 1;

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.Kit kit> = $r1;

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory> = $r5;

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata> = $r6;

        return;
    }

    public io.fabric.sdk.android.services.events.FilesSender getFilesSender()
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy $r0;
        io.fabric.sdk.android.services.events.FilesSender r1;

        $r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        r1 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.events.FilesSender filesSender>;

        return r1;
    }

    public void processEvent(com.crashlytics.android.answers.SessionEvent$Builder)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy $r0;
        com.crashlytics.android.answers.SessionEvent$Builder $r1;
        com.crashlytics.android.answers.SessionEventMetadata $r2;
        com.crashlytics.android.answers.EventFilter $r3;
        com.crashlytics.android.answers.SessionEvent $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6;
        com.crashlytics.android.answers.SessionEvent$Type $r5, $r6, $r6_1, $r5_1, $r5_2, $r6_2, $r6_3, $r5_3;
        io.fabric.sdk.android.Logger $r7, $r7_1, $r7_2;
        java.lang.StringBuilder $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6, $r8_7, $r8_8;
        java.lang.String $r9, $r9_1, $r9_2;

        $r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: com.crashlytics.android.answers.SessionEvent$Builder;

        $r2 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.SessionEventMetadata metadata>;

        $r4 = virtualinvoke $r1.<com.crashlytics.android.answers.SessionEvent$Builder: com.crashlytics.android.answers.SessionEvent build(com.crashlytics.android.answers.SessionEventMetadata)>($r2);

        $z0 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

(0)     if $z0 != 0 goto label1;

        $r5 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type CUSTOM>;

        $r6 = $r4.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0_1 = virtualinvoke $r5.<com.crashlytics.android.answers.SessionEvent$Type: boolean equals(java.lang.Object)>($r6);

(1)     if $z0_1 == 0 goto label1;

        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8_1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom events tracking disabled - skipping event: ");

        $r8_2 = virtualinvoke $r8_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8_2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r9);

        return;

     label1:
        $r6_1 = Phi($r6 #0, $r6 #1);

        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r5_1 = Phi($r5 #0, $r5 #1);

        $z0_3 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

(2)     if $z0_3 != 0 goto label2;

        $r5_2 = <com.crashlytics.android.answers.SessionEvent$Type: com.crashlytics.android.answers.SessionEvent$Type PREDEFINED>;

        $r6_2 = $r4.<com.crashlytics.android.answers.SessionEvent: com.crashlytics.android.answers.SessionEvent$Type type>;

        $z0_4 = virtualinvoke $r5_2.<com.crashlytics.android.answers.SessionEvent$Type: boolean equals(java.lang.Object)>($r6_2);

(3)     if $z0_4 == 0 goto label2;

        $r7_1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8_3 = new java.lang.StringBuilder;

        specialinvoke $r8_3.<java.lang.StringBuilder: void <init>()>();

        $r8_4 = virtualinvoke $r8_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined events tracking disabled - skipping event: ");

        $r8_5 = virtualinvoke $r8_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9_1 = virtualinvoke $r8_5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7_1.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r9_1);

        return;

     label2:
        $r6_3 = Phi($r6_1 #2, $r6_2 #3);

        $z0_5 = Phi($z0_3 #2, $z0_4 #3);

        $r5_3 = Phi($r5_1 #2, $r5_2 #3);

        $r3 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter>;

        $z0_6 = interfaceinvoke $r3.<com.crashlytics.android.answers.EventFilter: boolean skipEvent(com.crashlytics.android.answers.SessionEvent)>($r4);

        if $z0_6 == 0 goto label3;

        $r7_2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r8_6 = new java.lang.StringBuilder;

        specialinvoke $r8_6.<java.lang.StringBuilder: void <init>()>();

        $r8_7 = virtualinvoke $r8_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping filtered event: ");

        $r8_8 = virtualinvoke $r8_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9_2 = virtualinvoke $r8_8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7_2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r9_2);

        return;

     label3:
        virtualinvoke $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void recordEvent(java.lang.Object)>($r4);

        return;
    }

    public void setAnalyticsSettingsData(io.fabric.sdk.android.services.settings.AnalyticsSettingsData, java.lang.String)
    {
        com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy $r0;
        io.fabric.sdk.android.services.settings.AnalyticsSettingsData $r1;
        com.crashlytics.android.answers.SessionAnalyticsFilesSender $r2;
        io.fabric.sdk.android.Kit $r3;
        java.lang.String $r4, $r10, $r11, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5, $r10_6, $r10_7, $r10_8;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r5;
        io.fabric.sdk.android.services.common.ApiKey $r6;
        android.content.Context $r7;
        io.fabric.sdk.android.services.events.EventsFilesManager $r8;
        com.crashlytics.android.answers.SamplingEventFilter $r9;
        com.crashlytics.android.answers.AnswersRetryFilesSender $r12;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r13;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        io.fabric.sdk.android.Logger $r14, $r14_1, $r14_2, $r14_3;
        java.lang.StringBuilder $r15, $r15_1, $r15_2, $r15_3, $r15_4, $r15_5;
        int $i0, $i0_1, $i0_2, $i0_3;

        $r0 := @this: com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.AnalyticsSettingsData;

        $r10 := @parameter1: java.lang.String;

        $r2 = new com.crashlytics.android.answers.SessionAnalyticsFilesSender;

        $r3 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.Kit kit>;

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: java.lang.String analyticsURL>;

        $r5 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.network.HttpRequestFactory httpRequestFactory>;

        $r6 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.common.ApiKey apiKey>;

        $r7 = $r0.<io.fabric.sdk.android.services.events.EnabledEventsStrategy: android.content.Context context>;

        $r11 = virtualinvoke $r6.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r7);

        specialinvoke $r2.<com.crashlytics.android.answers.SessionAnalyticsFilesSender: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory,java.lang.String)>($r3, $r10, $r4, $r5, $r11);

        $r12 = staticinvoke <com.crashlytics.android.answers.AnswersRetryFilesSender: com.crashlytics.android.answers.AnswersRetryFilesSender build(com.crashlytics.android.answers.SessionAnalyticsFilesSender)>($r2);

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: io.fabric.sdk.android.services.events.FilesSender filesSender> = $r12;

        $r8 = $r0.<io.fabric.sdk.android.services.events.EnabledEventsStrategy: io.fabric.sdk.android.services.events.EventsFilesManager filesManager>;

        $r13 = (com.crashlytics.android.answers.SessionAnalyticsFilesManager) $r8;

        virtualinvoke $r13.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void setAnalyticsSettingsData(io.fabric.sdk.android.services.settings.AnalyticsSettingsData)>($r1);

        $z0 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: boolean trackCustomEvents>;

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled> = $z0;

        $r14 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15_1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom event tracking ");

        $z0_1 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean customEventsEnabled>;

        if $z0_1 == 0 goto label4;

(0)     $r10_1 = "enabled";

     label1:
        $r10_2 = Phi($r10_1 #0, $r10_8 #4);

        $r15_2 = virtualinvoke $r15_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10_2);

        $r10_3 = virtualinvoke $r15_2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r10_3);

        $z0_2 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: boolean trackPredefinedEvents>;

        $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled> = $z0_2;

        $r14_1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r15_3 = new java.lang.StringBuilder;

        specialinvoke $r15_3.<java.lang.StringBuilder: void <init>()>();

        $r15_4 = virtualinvoke $r15_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predefined event tracking ");

        $z0_3 = $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: boolean predefinedEventsEnabled>;

        if $z0_3 == 0 goto label5;

(1)     $r10_4 = "enabled";

     label2:
        $r10_5 = Phi($r10_4 #1, $r10_7 #5);

        $r15_5 = virtualinvoke $r15_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10_5);

        $r10_6 = virtualinvoke $r15_5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14_1.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", $r10_6);

        $i0 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: int samplingRate>;

(2)     if $i0 <= 1 goto label3;

        $r14_2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r14_2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Answers", "Event sampling enabled");

        $r9 = new com.crashlytics.android.answers.SamplingEventFilter;

        $i0_1 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: int samplingRate>;

        specialinvoke $r9.<com.crashlytics.android.answers.SamplingEventFilter: void <init>(int)>($i0_1);

(3)     $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: com.crashlytics.android.answers.EventFilter eventFilter> = $r9;

     label3:
        $r14_3 = Phi($r14_1 #2, $r14_2 #3);

        $i0_2 = Phi($i0 #2, $i0_1 #3);

        $i0_3 = $r1.<io.fabric.sdk.android.services.settings.AnalyticsSettingsData: int flushIntervalSeconds>;

        virtualinvoke $r0.<com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void configureRollover(int)>($i0_3);

        return;

     label4:
        $r10_8 = "disabled";

(4)     goto label1;

     label5:
        $r10_7 = "disabled";

(5)     goto label2;
    }
}
