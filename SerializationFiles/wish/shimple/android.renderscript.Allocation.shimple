public class android.renderscript.Allocation extends android.renderscript.BaseObj
{
    public static final int USAGE_GRAPHICS_CONSTANTS;
    public static final int USAGE_GRAPHICS_RENDER_TARGET;
    public static final int USAGE_GRAPHICS_TEXTURE;
    public static final int USAGE_GRAPHICS_VERTEX;
    public static final int USAGE_IO_INPUT;
    public static final int USAGE_IO_OUTPUT;
    public static final int USAGE_SCRIPT;
    public static final int USAGE_SHARED;

    void <init>()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.renderscript.Element getElement()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getUsage()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getBytesSize()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.renderscript.Type getType()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void syncAll(int)
    {
        android.renderscript.Allocation r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void ioSend()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void ioReceive()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void copyFrom(android.renderscript.BaseObj[])
    {
        android.renderscript.Allocation r0;
        android.renderscript.BaseObj[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: android.renderscript.BaseObj[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFromUnchecked(java.lang.Object)
    {
        android.renderscript.Allocation r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFromUnchecked(int[])
    {
        android.renderscript.Allocation r0;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFromUnchecked(short[])
    {
        android.renderscript.Allocation r0;
        short[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: short[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFromUnchecked(byte[])
    {
        android.renderscript.Allocation r0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFromUnchecked(float[])
    {
        android.renderscript.Allocation r0;
        float[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: float[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFrom(java.lang.Object)
    {
        android.renderscript.Allocation r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFrom(int[])
    {
        android.renderscript.Allocation r0;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFrom(short[])
    {
        android.renderscript.Allocation r0;
        short[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: short[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFrom(byte[])
    {
        android.renderscript.Allocation r0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFrom(float[])
    {
        android.renderscript.Allocation r0;
        float[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: float[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFrom(android.graphics.Bitmap)
    {
        android.renderscript.Allocation r0;
        android.graphics.Bitmap r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyFrom(android.renderscript.Allocation)
    {
        android.renderscript.Allocation r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: android.renderscript.Allocation;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setFromFieldPacker(int, android.renderscript.FieldPacker)
    {
        android.renderscript.Allocation r0;
        int i0;
        android.renderscript.FieldPacker r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.FieldPacker;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setFromFieldPacker(int, int, android.renderscript.FieldPacker)
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        android.renderscript.FieldPacker r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.renderscript.FieldPacker;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void generateMipmaps()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void copy1DRangeFromUnchecked(int, int, java.lang.Object)
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFromUnchecked(int, int, int[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFromUnchecked(int, int, short[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        short[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: short[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFromUnchecked(int, int, byte[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFromUnchecked(int, int, float[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        float[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFrom(int, int, java.lang.Object)
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFrom(int, int, int[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFrom(int, int, short[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        short[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: short[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFrom(int, int, byte[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFrom(int, int, float[])
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        float[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy1DRangeFrom(int, int, android.renderscript.Allocation, int)
    {
        android.renderscript.Allocation r0, r1;
        int i0, i1, i2;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.renderscript.Allocation;

        i2 := @parameter3: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy2DRangeFrom(int, int, int, int, java.lang.Object)
    {
        android.renderscript.Allocation r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy2DRangeFrom(int, int, int, int, byte[])
    {
        android.renderscript.Allocation r0;
        int i0, i1, i2, i3;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy2DRangeFrom(int, int, int, int, short[])
    {
        android.renderscript.Allocation r0;
        int i0, i1, i2, i3;
        short[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: short[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy2DRangeFrom(int, int, int, int, int[])
    {
        android.renderscript.Allocation r0;
        int i0, i1, i2, i3;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy2DRangeFrom(int, int, int, int, float[])
    {
        android.renderscript.Allocation r0;
        int i0, i1, i2, i3;
        float[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: float[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy2DRangeFrom(int, int, int, int, android.renderscript.Allocation, int, int)
    {
        android.renderscript.Allocation r0, r1;
        int i0, i1, i2, i3, i4, i5;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.renderscript.Allocation;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copy2DRangeFrom(int, int, android.graphics.Bitmap)
    {
        android.renderscript.Allocation r0;
        int i0, i1;
        android.graphics.Bitmap r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyTo(android.graphics.Bitmap)
    {
        android.renderscript.Allocation r0;
        android.graphics.Bitmap r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyTo(java.lang.Object)
    {
        android.renderscript.Allocation r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyTo(byte[])
    {
        android.renderscript.Allocation r0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyTo(short[])
    {
        android.renderscript.Allocation r0;
        short[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: short[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyTo(int[])
    {
        android.renderscript.Allocation r0;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void copyTo(float[])
    {
        android.renderscript.Allocation r0;
        float[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: float[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public synchronized void resize(int)
    {
        android.renderscript.Allocation r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static android.renderscript.Allocation createTyped(android.renderscript.RenderScript, android.renderscript.Type, android.renderscript.Allocation$MipmapControl, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Type r1;
        android.renderscript.Allocation$MipmapControl r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Type;

        r2 := @parameter2: android.renderscript.Allocation$MipmapControl;

        i0 := @parameter3: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static android.renderscript.Allocation createTyped(android.renderscript.RenderScript, android.renderscript.Type, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Type r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Type;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createTyped(android.renderscript.RenderScript, android.renderscript.Type)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Type r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Type;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createSized(android.renderscript.RenderScript, android.renderscript.Element, int, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Element;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createSized(android.renderscript.RenderScript, android.renderscript.Element, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Element;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap, android.renderscript.Allocation$MipmapControl, int)
    {
        android.renderscript.RenderScript r0;
        android.graphics.Bitmap r1;
        android.renderscript.Allocation$MipmapControl r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        r2 := @parameter2: android.renderscript.Allocation$MipmapControl;

        i0 := @parameter3: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public android.view.Surface getSurface()
    {
        android.renderscript.Allocation r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.renderscript.Allocation;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setSurface(android.view.Surface)
    {
        android.renderscript.Allocation r0;
        android.view.Surface r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: android.view.Surface;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        android.graphics.Bitmap r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap, android.renderscript.Allocation$MipmapControl, int)
    {
        android.renderscript.RenderScript r0;
        android.graphics.Bitmap r1;
        android.renderscript.Allocation$MipmapControl r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        r2 := @parameter2: android.renderscript.Allocation$MipmapControl;

        i0 := @parameter3: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        android.graphics.Bitmap r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.renderscript.Allocation$MipmapControl, int)
    {
        android.renderscript.RenderScript r0;
        android.graphics.Bitmap r1, r2, r3, r4, r5, r6;
        android.renderscript.Allocation$MipmapControl r7;
        int i0;
        java.lang.RuntimeException $r8;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        r2 := @parameter2: android.graphics.Bitmap;

        r3 := @parameter3: android.graphics.Bitmap;

        r4 := @parameter4: android.graphics.Bitmap;

        r5 := @parameter5: android.graphics.Bitmap;

        r6 := @parameter6: android.graphics.Bitmap;

        r7 := @parameter7: android.renderscript.Allocation$MipmapControl;

        i0 := @parameter8: int;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r8;
    }

    public static android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        android.graphics.Bitmap r1, r2, r3, r4, r5, r6;
        java.lang.RuntimeException $r7;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.graphics.Bitmap;

        r2 := @parameter2: android.graphics.Bitmap;

        r3 := @parameter3: android.graphics.Bitmap;

        r4 := @parameter4: android.graphics.Bitmap;

        r5 := @parameter5: android.graphics.Bitmap;

        r6 := @parameter6: android.graphics.Bitmap;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r7;
    }

    public static android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int, android.renderscript.Allocation$MipmapControl, int)
    {
        android.renderscript.RenderScript r0;
        android.content.res.Resources r1;
        int i0, i1;
        android.renderscript.Allocation$MipmapControl r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        r2 := @parameter3: android.renderscript.Allocation$MipmapControl;

        i1 := @parameter4: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int)
    {
        android.renderscript.RenderScript r0;
        android.content.res.Resources r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.renderscript.Allocation createFromString(android.renderscript.RenderScript, java.lang.String, int)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setOnBufferAvailableListener(android.renderscript.Allocation$OnBufferAvailableListener)
    {
        android.renderscript.Allocation r0;
        android.renderscript.Allocation$OnBufferAvailableListener r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.renderscript.Allocation;

        r1 := @parameter0: android.renderscript.Allocation$OnBufferAvailableListener;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }
}
