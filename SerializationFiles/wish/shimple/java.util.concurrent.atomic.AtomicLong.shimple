public class java.util.concurrent.atomic.AtomicLong extends java.lang.Number implements java.io.Serializable
{

    public void <init>(long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long get()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void set(long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void lazySet(long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndSet(long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean compareAndSet(long, long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0, l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean weakCompareAndSet(long, long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0, l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndIncrement()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndDecrement()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndAdd(long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long incrementAndGet()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long decrementAndGet()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long addAndGet(long)
    {
        java.util.concurrent.atomic.AtomicLong r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int intValue()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long longValue()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float floatValue()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public double doubleValue()
    {
        java.util.concurrent.atomic.AtomicLong r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLong;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
