public class java.lang.reflect.AccessibleObject extends java.lang.Object implements java.lang.reflect.AnnotatedElement
{

    protected void <init>()
    {
        java.lang.reflect.AccessibleObject r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.reflect.AccessibleObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isAccessible()
    {
        java.lang.reflect.AccessibleObject r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.reflect.AccessibleObject;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setAccessible(boolean)
    {
        java.lang.reflect.AccessibleObject r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.reflect.AccessibleObject;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void setAccessible(java.lang.reflect.AccessibleObject[], boolean)
    {
        java.lang.reflect.AccessibleObject[] r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.reflect.AccessibleObject[];

        z0 := @parameter1: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isAnnotationPresent(java.lang.Class)
    {
        java.lang.reflect.AccessibleObject r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.reflect.AccessibleObject;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.annotation.Annotation[] getDeclaredAnnotations()
    {
        java.lang.reflect.AccessibleObject r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.reflect.AccessibleObject;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.annotation.Annotation[] getAnnotations()
    {
        java.lang.reflect.AccessibleObject r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.reflect.AccessibleObject;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.reflect.AccessibleObject r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.reflect.AccessibleObject;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }
}
