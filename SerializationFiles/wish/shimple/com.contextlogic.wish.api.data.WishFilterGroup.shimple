public class com.contextlogic.wish.api.data.WishFilterGroup extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.ArrayList filters;
    private java.lang.String iconUrl;
    private boolean isExclusive;
    private boolean isSubCategory;
    private java.lang.String name;

    public void <init>(org.json.JSONObject) throws com.contextlogic.wish.api.core.ApiMalformedDataException
    {
        com.contextlogic.wish.api.data.WishFilterGroup $r0;
        org.json.JSONObject $r1, $r8;
        com.contextlogic.wish.api.data.WishFilter $r2;
        org.json.JSONException $r3;
        com.contextlogic.wish.api.core.ApiMalformedDataException $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        java.lang.String $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;
        java.util.ArrayList $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        org.json.JSONArray $r7;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4;

        $r0 := @this: com.contextlogic.wish.api.data.WishFilterGroup;

        $r1 := @parameter0: org.json.JSONObject;

(0)     specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("is_exclusive", 0);

     label02:
        $r0.<com.contextlogic.wish.api.data.WishFilterGroup: boolean isExclusive> = $z0;

     label03:
(1)     $z0_1 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("name");

     label04:
(2)     if $z0_1 == 0 goto label07;

     label05:
        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

     label06:
(3)     $r0.<com.contextlogic.wish.api.data.WishFilterGroup: java.lang.String name> = $r5;

     label07:
        $r5_1 = Phi($r5 #2, $r5 #3);

(4)     $z0_2 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("icon_url");

     label08:
(5)     if $z0_2 == 0 goto label11;

     label09:
(6)     $r5_2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("icon_url");

     label10:
(7)     $r0.<com.contextlogic.wish.api.data.WishFilterGroup: java.lang.String iconUrl> = $r5_2;

     label11:
        $r5_3 = Phi($r5_1 #5, $r5_2 #7);

(8)     $z0_3 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("filters");

     label12:
(9)     if $z0_3 == 0 goto label23;

     label13:
(10)    $z0_4 = virtualinvoke $r1.<org.json.JSONObject: boolean isNull(java.lang.String)>("filters");

     label14:
(11)    if $z0_4 != 0 goto label23;

        $r6 = new java.util.ArrayList;

     label15:
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

     label16:
        $r0.<com.contextlogic.wish.api.data.WishFilterGroup: java.util.ArrayList filters> = $r6;

     label17:
        $r7 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("filters");

     label18:
(12)    $i0 = 0;

     label19:
        $r6_1 = Phi($r6 #12, $r6_2 #16);

        $i0_1 = Phi($i0 #12, $i0_2 #16);

(13)    $i1 = virtualinvoke $r7.<org.json.JSONArray: int length()>();

     label20:
(14)    if $i0_1 >= $i1 goto label23;

        $r6_2 = $r0.<com.contextlogic.wish.api.data.WishFilterGroup: java.util.ArrayList filters>;

(15)    $r2 = new com.contextlogic.wish.api.data.WishFilter;

     label21:
        $r8 = virtualinvoke $r7.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0_1);

        specialinvoke $r2.<com.contextlogic.wish.api.data.WishFilter: void <init>(org.json.JSONObject)>($r8);

        virtualinvoke $r6_2.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label22:
        $i0_2 = $i0_1 + 1;

(16)    goto label19;

     label23:
        $z0_5 = Phi($z0_3 #9, $z0_4 #11, $z0_4 #14);

        $r6_3 = Phi($r6 #9, $r6 #11, $r6_1 #14);

        $i0_3 = Phi($i0 #9, $i0 #11, $i0_1 #14);

(17)    $z0_6 = virtualinvoke $r1.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("is_sub_category", 0);

     label24:
        $r0.<com.contextlogic.wish.api.data.WishFilterGroup: boolean isSubCategory> = $z0_6;

        return;

     label25:
        $r3 := @caughtexception;

        $r5_4 = Phi($r5 #0, $r5_1 #4, $r5_2 #6, $r5_3 #8);

        $z0_7 = Phi($z0 #0, $z0_1 #1, $z0_2 #4, $z0_3 #8, $z0_4 #10, $z0_6 #17);

        $r6_4 = Phi($r6 #0, $r6_1 #13, $r6_2 #15, $r6_3 #17);

        $i0_4 = Phi($i0 #0, $i0_2 #16, $i0_1 #13, $i0_3 #17);

        $r4 = new com.contextlogic.wish.api.core.ApiMalformedDataException;

        $r5_5 = virtualinvoke $r3.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r4.<com.contextlogic.wish.api.core.ApiMalformedDataException: void <init>(java.lang.String)>($r5_5);

        throw $r4;

        catch org.json.JSONException from label01 to label02 with label25;
        catch org.json.JSONException from label03 to label04 with label25;
        catch org.json.JSONException from label05 to label06 with label25;
        catch org.json.JSONException from label07 to label08 with label25;
        catch org.json.JSONException from label09 to label10 with label25;
        catch org.json.JSONException from label11 to label12 with label25;
        catch org.json.JSONException from label13 to label14 with label25;
        catch org.json.JSONException from label15 to label16 with label25;
        catch org.json.JSONException from label17 to label18 with label25;
        catch org.json.JSONException from label19 to label20 with label25;
        catch org.json.JSONException from label21 to label22 with label25;
        catch org.json.JSONException from label23 to label24 with label25;
    }

    public java.util.ArrayList getFilters()
    {
        com.contextlogic.wish.api.data.WishFilterGroup $r0;
        java.util.ArrayList r1;

        $r0 := @this: com.contextlogic.wish.api.data.WishFilterGroup;

        r1 = $r0.<com.contextlogic.wish.api.data.WishFilterGroup: java.util.ArrayList filters>;

        return r1;
    }

    public java.lang.String getIconUrl()
    {
        com.contextlogic.wish.api.data.WishFilterGroup $r0;
        java.lang.String r1;

        $r0 := @this: com.contextlogic.wish.api.data.WishFilterGroup;

        r1 = $r0.<com.contextlogic.wish.api.data.WishFilterGroup: java.lang.String iconUrl>;

        return r1;
    }

    public java.lang.String getName()
    {
        com.contextlogic.wish.api.data.WishFilterGroup $r0;
        java.lang.String r1;

        $r0 := @this: com.contextlogic.wish.api.data.WishFilterGroup;

        r1 = $r0.<com.contextlogic.wish.api.data.WishFilterGroup: java.lang.String name>;

        return r1;
    }

    public boolean isExclusive()
    {
        com.contextlogic.wish.api.data.WishFilterGroup $r0;
        boolean z0;

        $r0 := @this: com.contextlogic.wish.api.data.WishFilterGroup;

        z0 = $r0.<com.contextlogic.wish.api.data.WishFilterGroup: boolean isExclusive>;

        return z0;
    }

    public boolean isSubCategory()
    {
        com.contextlogic.wish.api.data.WishFilterGroup $r0;
        boolean z0;

        $r0 := @this: com.contextlogic.wish.api.data.WishFilterGroup;

        z0 = $r0.<com.contextlogic.wish.api.data.WishFilterGroup: boolean isSubCategory>;

        return z0;
    }
}
