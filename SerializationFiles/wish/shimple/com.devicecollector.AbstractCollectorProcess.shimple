public abstract class com.devicecollector.AbstractCollectorProcess extends android.os.AsyncTask
{
    protected android.app.Activity activity;
    protected boolean finished;
    protected com.devicecollector.DeviceCollector$StatusListener lstnr;
    protected java.util.EnumSet skipList;
    private long timeout;
    private boolean timeoutOverridden;

    public void <init>(android.app.Activity, com.devicecollector.DeviceCollector$StatusListener, java.util.EnumSet)
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        android.app.Activity $r1;
        com.devicecollector.DeviceCollector$StatusListener $r2;
        java.util.EnumSet $r3;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: com.devicecollector.DeviceCollector$StatusListener;

        $r3 := @parameter2: java.util.EnumSet;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished> = 1;

        $r0.<com.devicecollector.AbstractCollectorProcess: long timeout> = 10000L;

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean timeoutOverridden> = 0;

        $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr> = $r2;

        $r0.<com.devicecollector.AbstractCollectorProcess: android.app.Activity activity> = $r1;

        $r0.<com.devicecollector.AbstractCollectorProcess: java.util.EnumSet skipList> = $r3;

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished> = 0;

        return;
    }

    transient void debug(java.lang.String, java.lang.Object[])
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r2_1, $r2_2;
        java.lang.Class $r3;
        java.lang.StringBuilder $r5, $r5_1, $r5_2, $r5_3, $r5_4;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5_3 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r1);

        $r5_4 = virtualinvoke $r5_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_1);

        $r2_2 = virtualinvoke $r5_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r4, $r2_2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        java.lang.Object[] $r1;
        java.lang.Void $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        $r1 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r1;

        $r2 = virtualinvoke $r0.<com.devicecollector.AbstractCollectorProcess: java.lang.Void doInBackground(java.lang.String[])>($r3);

        return $r2;
    }

    protected abstract transient java.lang.Void doInBackground(java.lang.String[]);

    public long getTimeoutMs()
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        long l0;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        l0 = $r0.<com.devicecollector.AbstractCollectorProcess: long timeout>;

        return l0;
    }

    public boolean getTimeoutOverridden()
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        boolean z0;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        z0 = $r0.<com.devicecollector.AbstractCollectorProcess: boolean timeoutOverridden>;

        return z0;
    }

    public boolean isFinished()
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        boolean z0;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        z0 = $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished>;

        return z0;
    }

    protected void onPreExecute()
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        com.devicecollector.DeviceCollector$StatusListener $r1, $r1_1, $r1_2;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        $r1 = $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr>;

(1)     interfaceinvoke $r1_1.<com.devicecollector.DeviceCollector$StatusListener: void onCollectorStart()>();

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished> = 0;

        return;
    }

    public void setListener(com.devicecollector.DeviceCollector$StatusListener)
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        com.devicecollector.DeviceCollector$StatusListener $r1;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        $r1 := @parameter0: com.devicecollector.DeviceCollector$StatusListener;

        $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr> = $r1;

        return;
    }

    public void setTimoutMs(long)
    {
        com.devicecollector.AbstractCollectorProcess $r0;
        long $l0;
        byte $b1;

        $r0 := @this: com.devicecollector.AbstractCollectorProcess;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 5000L;

        if $b1 <= 0 goto label1;

        $r0.<com.devicecollector.AbstractCollectorProcess: long timeout> = $l0;

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean timeoutOverridden> = 1;

     label1:
        return;
    }
}
