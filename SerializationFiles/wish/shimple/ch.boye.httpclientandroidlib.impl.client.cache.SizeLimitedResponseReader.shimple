class ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader extends java.lang.Object
{
    private boolean consumed;
    private java.io.InputStream instream;
    private ch.boye.httpclientandroidlib.client.cache.InputLimit limit;
    private final long maxResponseSizeBytes;
    private final ch.boye.httpclientandroidlib.HttpRequest request;
    private ch.boye.httpclientandroidlib.client.cache.Resource resource;
    private final ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory;
    private final ch.boye.httpclientandroidlib.HttpResponse response;

    public void <init>(ch.boye.httpclientandroidlib.client.cache.ResourceFactory, long, ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        ch.boye.httpclientandroidlib.client.cache.ResourceFactory $r1;
        long $l0;
        ch.boye.httpclientandroidlib.HttpRequest $r2;
        ch.boye.httpclientandroidlib.HttpResponse $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.ResourceFactory;

        $l0 := @parameter1: long;

        $r2 := @parameter2: ch.boye.httpclientandroidlib.HttpRequest;

        $r3 := @parameter3: ch.boye.httpclientandroidlib.HttpResponse;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory> = $r1;

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: long maxResponseSizeBytes> = $l0;

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.HttpRequest request> = $r2;

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.HttpResponse response> = $r3;

        return;
    }

    private void doConsume() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        long $l0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        ch.boye.httpclientandroidlib.HttpRequest $r2;
        ch.boye.httpclientandroidlib.client.cache.ResourceFactory $r3;
        ch.boye.httpclientandroidlib.client.cache.InputLimit $r4, $r4_1;
        ch.boye.httpclientandroidlib.HttpEntity $r5;
        ch.boye.httpclientandroidlib.RequestLine $r6;
        java.lang.String $r7;
        java.io.InputStream $r8, $r8_1;
        ch.boye.httpclientandroidlib.client.cache.Resource $r9;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: void ensureNotConsumed()>();

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: boolean consumed> = 1;

        $r4 = new ch.boye.httpclientandroidlib.client.cache.InputLimit;

        $l0 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: long maxResponseSizeBytes>;

        specialinvoke $r4.<ch.boye.httpclientandroidlib.client.cache.InputLimit: void <init>(long)>($l0);

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.InputLimit limit> = $r4;

        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.HttpResponse response>;

        $r5 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.HttpEntity getEntity()>();

        if $r5 != null goto label1;

        return;

     label1:
        $r2 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.HttpRequest request>;

        $r6 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.RequestLine getRequestLine()>();

        $r7 = interfaceinvoke $r6.<ch.boye.httpclientandroidlib.RequestLine: java.lang.String getUri()>();

        $r8 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.HttpEntity: java.io.InputStream getContent()>();

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: java.io.InputStream instream> = $r8;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory>;

        $r8_1 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: java.io.InputStream instream>;

        $r4_1 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.InputLimit limit>;

        $r9 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.client.cache.ResourceFactory: ch.boye.httpclientandroidlib.client.cache.Resource generate(java.lang.String,java.io.InputStream,ch.boye.httpclientandroidlib.client.cache.InputLimit)>($r7, $r8_1, $r4_1);

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.Resource resource> = $r9;

        return;
    }

    private void ensureConsumed()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        $z0 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: boolean consumed>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Response has not been consumed");

        throw $r1;

     label1:
        return;
    }

    private void ensureNotConsumed()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        $z0 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: boolean consumed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Response has already been consumed");

        throw $r1;

     label1:
        return;
    }

    ch.boye.httpclientandroidlib.HttpResponse getReconstructedResponse() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        ch.boye.httpclientandroidlib.message.BasicHttpResponse $r1;
        ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity $r2;
        ch.boye.httpclientandroidlib.client.cache.Resource $r3;
        java.io.InputStream $r4;
        ch.boye.httpclientandroidlib.HttpResponse $r5, $r5_1, $r5_2;
        ch.boye.httpclientandroidlib.StatusLine $r6;
        ch.boye.httpclientandroidlib.Header[] $r7;
        ch.boye.httpclientandroidlib.HttpEntity $r8;
        ch.boye.httpclientandroidlib.Header $r9, $r9_1, $r9_2;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: void ensureConsumed()>();

        $r1 = new ch.boye.httpclientandroidlib.message.BasicHttpResponse;

        $r5 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.HttpResponse response>;

        $r6 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        specialinvoke $r1.<ch.boye.httpclientandroidlib.message.BasicHttpResponse: void <init>(ch.boye.httpclientandroidlib.StatusLine)>($r6);

        $r5_1 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.HttpResponse response>;

        $r7 = interfaceinvoke $r5_1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header[] getAllHeaders()>();

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void setHeaders(ch.boye.httpclientandroidlib.Header[])>($r7);

        $r2 = new ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity;

        $r3 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.Resource resource>;

        $r4 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: java.io.InputStream instream>;

        specialinvoke $r2.<ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity: void <init>(ch.boye.httpclientandroidlib.client.cache.Resource,java.io.InputStream)>($r3, $r4);

        $r5_2 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.HttpResponse response>;

        $r8 = interfaceinvoke $r5_2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.HttpEntity getEntity()>();

(0)     if $r8 == null goto label1;

        $r9 = interfaceinvoke $r8.<ch.boye.httpclientandroidlib.HttpEntity: ch.boye.httpclientandroidlib.Header getContentType()>();

        virtualinvoke $r2.<ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity: void setContentType(ch.boye.httpclientandroidlib.Header)>($r9);

        $r9_1 = interfaceinvoke $r8.<ch.boye.httpclientandroidlib.HttpEntity: ch.boye.httpclientandroidlib.Header getContentEncoding()>();

        virtualinvoke $r2.<ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity: void setContentEncoding(ch.boye.httpclientandroidlib.Header)>($r9_1);

        $z0 = interfaceinvoke $r8.<ch.boye.httpclientandroidlib.HttpEntity: boolean isChunked()>();

(1)     virtualinvoke $r2.<ch.boye.httpclientandroidlib.impl.client.cache.CombinedEntity: void setChunked(boolean)>($z0);

     label1:
        $r9_2 = Phi($r9 #0, $r9_1 #1);

        interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: void setEntity(ch.boye.httpclientandroidlib.HttpEntity)>($r2);

        return $r1;
    }

    ch.boye.httpclientandroidlib.client.cache.Resource getResource()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        ch.boye.httpclientandroidlib.client.cache.Resource r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: void ensureConsumed()>();

        r1 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.Resource resource>;

        return r1;
    }

    boolean isLimitReached()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        ch.boye.httpclientandroidlib.client.cache.InputLimit $r1;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: void ensureConsumed()>();

        $r1 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: ch.boye.httpclientandroidlib.client.cache.InputLimit limit>;

        $z0 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.InputLimit: boolean isReached()>();

        return $z0;
    }

    protected void readResponse() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader $r0;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader;

        $z0 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: boolean consumed>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.SizeLimitedResponseReader: void doConsume()>();

     label1:
        return;
    }
}
