public final class ch.boye.httpclientandroidlib.params.HttpProtocolParams extends java.lang.Object implements ch.boye.httpclientandroidlib.params.CoreProtocolPNames
{

    private void <init>()
    {
        ch.boye.httpclientandroidlib.params.HttpProtocolParams $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.params.HttpProtocolParams;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getContentCharset(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.IllegalArgumentException $r1;
        java.nio.charset.Charset $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r4_1, $r4_2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $r3 = interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.content-charset");

        $r4 = (java.lang.String) $r3;

(0)     if $r4 != null goto label2;

        $r2 = <ch.boye.httpclientandroidlib.protocol.HTTP: java.nio.charset.Charset DEF_CONTENT_CHARSET>;

(1)     $r4_1 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

     label2:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return $r4_2;
    }

    public static java.lang.String getHttpElementCharset(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.IllegalArgumentException $r1;
        java.nio.charset.Charset $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r4_1, $r4_2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $r3 = interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset");

        $r4 = (java.lang.String) $r3;

(0)     if $r4 != null goto label2;

        $r2 = <ch.boye.httpclientandroidlib.protocol.HTTP: java.nio.charset.Charset DEF_PROTOCOL_CHARSET>;

(1)     $r4_1 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

     label2:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return $r4_2;
    }

    public static java.nio.charset.CodingErrorAction getMalformedInputAction(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        java.nio.charset.CodingErrorAction $r3, $r3_1;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $r2 = interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.malformed.input.action");

        if $r2 != null goto label2;

        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        return $r3;

     label2:
        $r3_1 = (java.nio.charset.CodingErrorAction) $r2;

        return $r3_1;
    }

    public static java.nio.charset.CodingErrorAction getUnmappableInputAction(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        java.nio.charset.CodingErrorAction $r3, $r3_1;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $r2 = interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.unmappable.input.action");

        if $r2 != null goto label2;

        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        return $r3;

     label2:
        $r3_1 = (java.nio.charset.CodingErrorAction) $r2;

        return $r3_1;
    }

    public static java.lang.String getUserAgent(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $r2 = interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.useragent");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public static ch.boye.httpclientandroidlib.ProtocolVersion getVersion(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        ch.boye.httpclientandroidlib.ProtocolVersion $r3;
        ch.boye.httpclientandroidlib.HttpVersion r4;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $r2 = interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.version");

        if $r2 != null goto label2;

        r4 = <ch.boye.httpclientandroidlib.HttpVersion: ch.boye.httpclientandroidlib.HttpVersion HTTP_1_1>;

        return r4;

     label2:
        $r3 = (ch.boye.httpclientandroidlib.ProtocolVersion) $r2;

        return $r3;
    }

    public static void setContentCharset(ch.boye.httpclientandroidlib.params.HttpParams, java.lang.String)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.content-charset", $r1);

        return;
    }

    public static void setHttpElementCharset(ch.boye.httpclientandroidlib.params.HttpParams, java.lang.String)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.element-charset", $r1);

        return;
    }

    public static void setMalformedInputAction(ch.boye.httpclientandroidlib.params.HttpParams, java.nio.charset.CodingErrorAction)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.nio.charset.CodingErrorAction $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        $r1 := @parameter1: java.nio.charset.CodingErrorAction;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.malformed.input.action", $r1);

        return;
    }

    public static void setUnmappableInputAction(ch.boye.httpclientandroidlib.params.HttpParams, java.nio.charset.CodingErrorAction)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.nio.charset.CodingErrorAction $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        $r1 := @parameter1: java.nio.charset.CodingErrorAction;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may no be null");

        throw $r2;

     label1:
        interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.unmappable.input.action", $r1);

        return;
    }

    public static void setUseExpectContinue(ch.boye.httpclientandroidlib.params.HttpParams, boolean)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        $z0 := @parameter1: boolean;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: ch.boye.httpclientandroidlib.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.expect-continue", $z0);

        return;
    }

    public static void setUserAgent(ch.boye.httpclientandroidlib.params.HttpParams, java.lang.String)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.useragent", $r1);

        return;
    }

    public static void setVersion(ch.boye.httpclientandroidlib.params.HttpParams, ch.boye.httpclientandroidlib.ProtocolVersion)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        ch.boye.httpclientandroidlib.ProtocolVersion $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        $r1 := @parameter1: ch.boye.httpclientandroidlib.ProtocolVersion;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: ch.boye.httpclientandroidlib.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.version", $r1);

        return;
    }

    public static boolean useExpectContinue(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.params.HttpParams $r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $z0 = interfaceinvoke $r0.<ch.boye.httpclientandroidlib.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>("http.protocol.expect-continue", 0);

        return $z0;
    }
}
