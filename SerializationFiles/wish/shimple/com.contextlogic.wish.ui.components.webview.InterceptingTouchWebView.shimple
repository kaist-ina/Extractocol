public class com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView extends android.webkit.WebView
{
    private boolean allowTouch;

    public void <init>(android.content.Context)
    {
        com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView $r0;
        android.content.Context $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16842885);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16842885);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i0_1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        android.view.ViewParent $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $i0_1 = $i0 & 255;

(0)     lookupswitch($i0_1)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
(1)     goto label2;

     label2:
        $z0 = Phi($z0 #1, $z0_4 #4, $z0_4 #5);

        $z0_1 = specialinvoke $r0.<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0_1;

     label3:
        $z0_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView: boolean hasFocus()>();

(2)     if $z0_2 != 0 goto label4;

(3)     virtualinvoke $r0.<com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView: boolean requestFocus()>();

     label4:
        $z0_3 = Phi($z0 #0, $z0_2 #2, $z0_2 #3);

        $z0_4 = $r0.<com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView: boolean allowTouch>;

(4)     if $z0_4 != 0 goto label2;

        $r2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

(5)     goto label2;
    }

    public void setAllowTouch(boolean)
    {
        com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView $r0;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView;

        $z0 := @parameter0: boolean;

        $r0.<com.contextlogic.wish.ui.components.webview.InterceptingTouchWebView: boolean allowTouch> = $z0;

        return;
    }
}
