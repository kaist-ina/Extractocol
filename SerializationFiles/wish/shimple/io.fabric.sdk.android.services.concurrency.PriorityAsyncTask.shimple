public abstract class io.fabric.sdk.android.services.concurrency.PriorityAsyncTask extends io.fabric.sdk.android.services.concurrency.AsyncTask implements io.fabric.sdk.android.services.concurrency.DelegateProvider, io.fabric.sdk.android.services.concurrency.Dependency, io.fabric.sdk.android.services.concurrency.PriorityProvider, io.fabric.sdk.android.services.concurrency.Task
{
    private final io.fabric.sdk.android.services.concurrency.PriorityTask priorityTask;

    public void <init>()
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.PriorityTask $r1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        specialinvoke $r0.<io.fabric.sdk.android.services.concurrency.AsyncTask: void <init>()>();

        $r1 = new io.fabric.sdk.android.services.concurrency.PriorityTask;

        specialinvoke $r1.<io.fabric.sdk.android.services.concurrency.PriorityTask: void <init>()>();

        $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.PriorityTask priorityTask> = $r1;

        return;
    }

    public void addDependency(io.fabric.sdk.android.services.concurrency.Task)
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.Task $r1;
        io.fabric.sdk.android.services.concurrency.AsyncTask$Status $r2, $r4;
        java.lang.IllegalStateException $r3;
        io.fabric.sdk.android.services.concurrency.Dependency $r5, $r5_1;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r6;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 := @parameter0: io.fabric.sdk.android.services.concurrency.Task;

        $r4 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.AsyncTask$Status getStatus()>();

        $r2 = <io.fabric.sdk.android.services.concurrency.AsyncTask$Status: io.fabric.sdk.android.services.concurrency.AsyncTask$Status PENDING>;

        if $r4 == $r2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must not add Dependency after task is running");

        throw $r3;

     label1:
        $r5 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r6 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r5;

        $r5_1 = (io.fabric.sdk.android.services.concurrency.Dependency) $r6;

        interfaceinvoke $r5_1.<io.fabric.sdk.android.services.concurrency.Dependency: void addDependency(java.lang.Object)>($r1);

        return;
    }

    public volatile void addDependency(java.lang.Object)
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        java.lang.Object $r1;
        io.fabric.sdk.android.services.concurrency.Task $r2;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (io.fabric.sdk.android.services.concurrency.Task) $r1;

        virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: void addDependency(io.fabric.sdk.android.services.concurrency.Task)>($r2);

        return;
    }

    public boolean areDependenciesMet()
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.Dependency $r1, $r1_1;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r2;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r2 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r1;

        $r1_1 = (io.fabric.sdk.android.services.concurrency.Dependency) $r2;

        $z0 = interfaceinvoke $r1_1.<io.fabric.sdk.android.services.concurrency.Dependency: boolean areDependenciesMet()>();

        return $z0;
    }

    public int compareTo(java.lang.Object)
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        java.lang.Object $r1;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <io.fabric.sdk.android.services.concurrency.Priority: int compareTo(io.fabric.sdk.android.services.concurrency.PriorityProvider,java.lang.Object)>($r0, $r1);

        return $i0;
    }

    public final transient void executeOnExecutor(java.util.concurrent.ExecutorService, java.lang.Object[])
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        java.util.concurrent.ExecutorService $r1;
        java.lang.Object[] $r2;
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask$ProxyExecutor $r3;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 := @parameter0: java.util.concurrent.ExecutorService;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = new io.fabric.sdk.android.services.concurrency.PriorityAsyncTask$ProxyExecutor;

        specialinvoke $r3.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask$ProxyExecutor: void <init>(java.util.concurrent.Executor,io.fabric.sdk.android.services.concurrency.PriorityAsyncTask)>($r1, $r0);

        specialinvoke $r0.<io.fabric.sdk.android.services.concurrency.AsyncTask: io.fabric.sdk.android.services.concurrency.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r3, $r2);

        return;
    }

    public io.fabric.sdk.android.services.concurrency.Dependency getDelegate()
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.PriorityTask r1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        r1 = $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.PriorityTask priorityTask>;

        return r1;
    }

    public java.util.Collection getDependencies()
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.Dependency $r1, $r1_1;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r2;
        java.util.Collection $r3;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r2 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r1;

        $r1_1 = (io.fabric.sdk.android.services.concurrency.Dependency) $r2;

        $r3 = interfaceinvoke $r1_1.<io.fabric.sdk.android.services.concurrency.Dependency: java.util.Collection getDependencies()>();

        return $r3;
    }

    public java.lang.Throwable getError()
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.Dependency $r1;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r2;
        io.fabric.sdk.android.services.concurrency.Task $r3;
        java.lang.Throwable $r4;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r2 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r1;

        $r3 = (io.fabric.sdk.android.services.concurrency.Task) $r2;

        $r4 = interfaceinvoke $r3.<io.fabric.sdk.android.services.concurrency.Task: java.lang.Throwable getError()>();

        return $r4;
    }

    public io.fabric.sdk.android.services.concurrency.Priority getPriority()
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.Dependency $r1;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r2;
        io.fabric.sdk.android.services.concurrency.Priority $r3;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r2 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r1;

        $r3 = interfaceinvoke $r2.<io.fabric.sdk.android.services.concurrency.PriorityProvider: io.fabric.sdk.android.services.concurrency.Priority getPriority()>();

        return $r3;
    }

    public boolean isFinished()
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        io.fabric.sdk.android.services.concurrency.Dependency $r1;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r2;
        io.fabric.sdk.android.services.concurrency.Task $r3;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r2 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r1;

        $r3 = (io.fabric.sdk.android.services.concurrency.Task) $r2;

        $z0 = interfaceinvoke $r3.<io.fabric.sdk.android.services.concurrency.Task: boolean isFinished()>();

        return $z0;
    }

    public void setError(java.lang.Throwable)
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        java.lang.Throwable $r1;
        io.fabric.sdk.android.services.concurrency.Dependency $r2;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r3;
        io.fabric.sdk.android.services.concurrency.Task $r4;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r3 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r2;

        $r4 = (io.fabric.sdk.android.services.concurrency.Task) $r3;

        interfaceinvoke $r4.<io.fabric.sdk.android.services.concurrency.Task: void setError(java.lang.Throwable)>($r1);

        return;
    }

    public void setFinished(boolean)
    {
        io.fabric.sdk.android.services.concurrency.PriorityAsyncTask $r0;
        boolean $z0;
        io.fabric.sdk.android.services.concurrency.Dependency $r1;
        io.fabric.sdk.android.services.concurrency.PriorityProvider $r2;
        io.fabric.sdk.android.services.concurrency.Task $r3;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityAsyncTask;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: io.fabric.sdk.android.services.concurrency.Dependency getDelegate()>();

        $r2 = (io.fabric.sdk.android.services.concurrency.PriorityProvider) $r1;

        $r3 = (io.fabric.sdk.android.services.concurrency.Task) $r2;

        interfaceinvoke $r3.<io.fabric.sdk.android.services.concurrency.Task: void setFinished(boolean)>($z0);

        return;
    }
}
