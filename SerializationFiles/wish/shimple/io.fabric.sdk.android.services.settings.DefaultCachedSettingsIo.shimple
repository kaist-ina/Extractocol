class io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo extends java.lang.Object implements io.fabric.sdk.android.services.settings.CachedSettingsIo
{
    private final io.fabric.sdk.android.Kit kit;

    public void <init>(io.fabric.sdk.android.Kit)
    {
        io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo $r0;
        io.fabric.sdk.android.Kit $r1;

        $r0 := @this: io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: io.fabric.sdk.android.Kit kit> = $r1;

        return;
    }

    public org.json.JSONObject readCachedSettings()
    {
        io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo $r0;
        java.io.File $r1, $r8;
        io.fabric.sdk.android.services.persistence.FileStoreImpl $r2;
        io.fabric.sdk.android.Kit $r3;
        java.io.FileInputStream $r4, $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6, $r6_7;
        io.fabric.sdk.android.Logger $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7;
        org.json.JSONObject $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7;
        boolean $z0;
        java.lang.String $r9;
        java.lang.Exception $r10, $r10_1, $r10_2, $r10_3, $r10_4;
        java.lang.Throwable $r11, $r11_1, $r11_2;

        $r0 := @this: io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo;

        $r5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Reading cached settings...");

        $r6 = null;

        $r7 = null;

        $r1 = new java.io.File;

(0)     $r2 = new io.fabric.sdk.android.services.persistence.FileStoreImpl;

     label01:
        $r3 = $r0.<io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: io.fabric.sdk.android.Kit kit>;

        specialinvoke $r2.<io.fabric.sdk.android.services.persistence.FileStoreImpl: void <init>(io.fabric.sdk.android.Kit)>($r3);

        $r8 = virtualinvoke $r2.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.io.File getFilesDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "com.crashlytics.settings.json");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label09;

        $r4 = new java.io.FileInputStream;

     label03:
(1)     specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label04:
        $r9 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String streamToString(java.io.InputStream)>($r4);

     label05:
(2)     $r7_1 = new org.json.JSONObject;

     label06:
        specialinvoke $r7_1.<org.json.JSONObject: void <init>(java.lang.String)>($r9);

     label07:
(3)     $r6_1 = $r4;

     label08:
        $r7_4 = Phi($r7_1 #3, $r7 #5);

        $r5_1 = Phi($r5 #3, $r5_2 #5);

        $r6_4 = Phi($r6_1 #3, $r6 #5);

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r6_4, "Error while closing settings cache file.");

        return $r7_4;

     label09:
(4)     $r5_2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5_2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "No cached settings found.");

     label10:
(5)     goto label08;

     label11:
        $r10_1 := @caughtexception;

(6)     $r5_3 = Phi($r5 #0, $r5_2 #4);

     label12:
        $r7_5 = Phi($r7 #6, $r7_3 #10);

        $r10_2 = Phi($r10_1 #6, $r10 #10);

        $r5_4 = Phi($r5_3 #6, $r5 #10);

        $r6_5 = Phi($r6 #6, $r6_3 #10);

(7)     $r5_5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r5_5.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to fetch cached settings", $r10_2);

     label13:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r6_5, "Error while closing settings cache file.");

        return null;

     label14:
        $r11_1 := @caughtexception;

        $r7_6 = Phi($r7 #0, $r7_3 #10, $r7_5 #7);

        $r10_3 = Phi($r10 #0, $r10_1 #6, $r10_2 #7);

        $r5_6 = Phi($r5 #0, $r5_2 #4, $r5_3 #6, $r5_5 #7);

(8)     $r6_6 = Phi($r6 #0, $r6_3 #10, $r6_5 #7);

     label15:
        $r7_7 = Phi($r7_6 #8, $r7_2 #9);

        $r10_4 = Phi($r10_3 #8, $r10 #9);

        $r5_7 = Phi($r5_6 #8, $r5 #9);

        $r11_2 = Phi($r11_1 #8, $r11 #9);

        $r6_7 = Phi($r6_6 #8, $r6_2 #9);

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r6_7, "Error while closing settings cache file.");

        throw $r11_2;

     label16:
        $r11 := @caughtexception;

        $r7_2 = Phi($r7 #1, $r7_1 #2);

        $r6_2 = $r4;

(9)     goto label15;

     label17:
        $r10 := @caughtexception;

        $r7_3 = Phi($r7 #1, $r7_1 #2);

        $r6_3 = $r4;

(10)    goto label12;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void writeCachedSettings(long, org.json.JSONObject)
    {
        io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo $r0;
        long $l0;
        org.json.JSONObject $r1;
        java.io.FileWriter $r2, $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5;
        java.io.File $r3, $r8;
        io.fabric.sdk.android.services.persistence.FileStoreImpl $r4;
        io.fabric.sdk.android.Kit $r5;
        io.fabric.sdk.android.Logger $r6, $r6_1, $r6_2, $r6_3;
        java.lang.String $r9;
        java.lang.Exception $r10, $r10_1, $r10_2, $r10_3, $r10_4;
        java.lang.Throwable $r11, $r11_1, $r11_2;

        $r0 := @this: io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo;

        $l0 := @parameter0: long;

        $r1 := @parameter1: org.json.JSONObject;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Writing settings to cache file...");

        if $r1 == null goto label13;

(0)     $r7 = null;

     label01:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("expires_at", $l0);

     label02:
        $r2 = new java.io.FileWriter;

        $r3 = new java.io.File;

        $r4 = new io.fabric.sdk.android.services.persistence.FileStoreImpl;

     label03:
        $r5 = $r0.<io.fabric.sdk.android.services.settings.DefaultCachedSettingsIo: io.fabric.sdk.android.Kit kit>;

        specialinvoke $r4.<io.fabric.sdk.android.services.persistence.FileStoreImpl: void <init>(io.fabric.sdk.android.Kit)>($r5);

        $r8 = virtualinvoke $r4.<io.fabric.sdk.android.services.persistence.FileStoreImpl: java.io.File getFilesDir()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "com.crashlytics.settings.json");

        specialinvoke $r2.<java.io.FileWriter: void <init>(java.io.File)>($r3);

     label04:
        $r9 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.FileWriter: void write(java.lang.String)>($r9);

        virtualinvoke $r2.<java.io.FileWriter: void flush()>();

     label05:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r2, "Failed to close settings writer.");

        return;

     label06:
(1)     $r10_1 := @caughtexception;

     label07:
        $r10_2 = Phi($r10_1 #1, $r10 #5);

        $r7_3 = Phi($r7 #1, $r7_2 #5);

(2)     $r6_1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6_1.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to cache settings", $r10_2);

     label08:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r7_3, "Failed to close settings writer.");

        return;

     label09:
        $r11_1 := @caughtexception;

        $r10_3 = Phi($r10 #0, $r10_1 #1, $r10_2 #2);

        $r6_2 = Phi($r6 #0, $r6_1 #2);

(3)     $r7_4 = Phi($r7 #0, $r7_2 #5, $r7_3 #2);

     label10:
        $r11_2 = Phi($r11_1 #3, $r11 #4);

        $r10_4 = Phi($r10_3 #3, $r10 #4);

        $r6_3 = Phi($r6_2 #3, $r6 #4);

        $r7_5 = Phi($r7_4 #3, $r7_1 #4);

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r7_5, "Failed to close settings writer.");

        throw $r11_2;

     label11:
        $r11 := @caughtexception;

        $r7_1 = $r2;

(4)     goto label10;

     label12:
        $r10 := @caughtexception;

        $r7_2 = $r2;

(5)     goto label07;

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label09;
    }
}
