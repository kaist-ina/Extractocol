public class org.apache.http.ProtocolVersion extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    protected final int major;
    protected final int minor;
    protected final java.lang.String protocol;

    public void <init>(java.lang.String, int, int)
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.ProtocolVersion;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.lang.String getProtocol()
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.ProtocolVersion;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getMajor()
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.ProtocolVersion;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getMinor()
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.ProtocolVersion;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public org.apache.http.ProtocolVersion forVersion(int, int)
    {
        org.apache.http.ProtocolVersion r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.ProtocolVersion;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int hashCode()
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.ProtocolVersion;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.ProtocolVersion;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean isComparable(org.apache.http.ProtocolVersion)
    {
        org.apache.http.ProtocolVersion r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.ProtocolVersion;

        r1 := @parameter0: org.apache.http.ProtocolVersion;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int compareToVersion(org.apache.http.ProtocolVersion)
    {
        org.apache.http.ProtocolVersion r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.ProtocolVersion;

        r1 := @parameter0: org.apache.http.ProtocolVersion;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final boolean greaterEquals(org.apache.http.ProtocolVersion)
    {
        org.apache.http.ProtocolVersion r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.ProtocolVersion;

        r1 := @parameter0: org.apache.http.ProtocolVersion;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final boolean lessEquals(org.apache.http.ProtocolVersion)
    {
        org.apache.http.ProtocolVersion r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.ProtocolVersion;

        r1 := @parameter0: org.apache.http.ProtocolVersion;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String toString()
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.ProtocolVersion;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.ProtocolVersion r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.ProtocolVersion;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
