public abstract class android.text.Layout extends java.lang.Object
{
    public static final int DIR_LEFT_TO_RIGHT;
    public static final int DIR_RIGHT_TO_LEFT;

    protected void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float)
    {
        android.text.Layout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0;
        android.text.Layout$Alignment r3;
        float f0, f1;
        java.lang.RuntimeException $r4;

        r0 := @this: android.text.Layout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public static float getDesiredWidth(java.lang.CharSequence, android.text.TextPaint)
    {
        java.lang.CharSequence r0;
        android.text.TextPaint r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.text.TextPaint;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static float getDesiredWidth(java.lang.CharSequence, int, int, android.text.TextPaint)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        android.text.TextPaint r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.text.TextPaint;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void draw(android.graphics.Canvas)
    {
        android.text.Layout r0;
        android.graphics.Canvas r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.text.Layout;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void draw(android.graphics.Canvas, android.graphics.Path, android.graphics.Paint, int)
    {
        android.text.Layout r0;
        android.graphics.Canvas r1;
        android.graphics.Path r2;
        android.graphics.Paint r3;
        int i0;
        java.lang.RuntimeException $r4;

        r0 := @this: android.text.Layout;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Path;

        r3 := @parameter2: android.graphics.Paint;

        i0 := @parameter3: int;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public final java.lang.CharSequence getText()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final android.text.TextPaint getPaint()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getWidth()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getEllipsizedWidth()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void increaseWidthTo(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getHeight()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final android.text.Layout$Alignment getAlignment()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final float getSpacingMultiplier()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final float getSpacingAdd()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract int getLineCount();

    public int getLineBounds(int, android.graphics.Rect)
    {
        android.text.Layout r0;
        int i0;
        android.graphics.Rect r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract int getLineTop(int);

    public abstract int getLineDescent(int);

    public abstract int getLineStart(int);

    public abstract int getParagraphDirection(int);

    public abstract boolean getLineContainsTab(int);

    public abstract android.text.Layout$Directions getLineDirections(int);

    public abstract int getTopPadding();

    public abstract int getBottomPadding();

    public boolean isRtlCharAt(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float getPrimaryHorizontal(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float getSecondaryHorizontal(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float getLineLeft(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float getLineRight(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float getLineMax(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float getLineWidth(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getLineForVertical(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getLineForOffset(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getOffsetForHorizontal(int, float)
    {
        android.text.Layout r0;
        int i0;
        float f0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getLineEnd(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getLineVisibleEnd(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getLineBottom(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getLineBaseline(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getLineAscent(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getOffsetToLeftOf(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getOffsetToRightOf(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void getCursorPath(int, android.graphics.Path, java.lang.CharSequence)
    {
        android.text.Layout r0;
        int i0;
        android.graphics.Path r1;
        java.lang.CharSequence r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Path;

        r2 := @parameter2: java.lang.CharSequence;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public void getSelectionPath(int, int, android.graphics.Path)
    {
        android.text.Layout r0;
        int i0, i1;
        android.graphics.Path r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Path;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final android.text.Layout$Alignment getParagraphAlignment(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getParagraphLeft(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getParagraphRight(int)
    {
        android.text.Layout r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected final boolean isSpanned()
    {
        android.text.Layout r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.Layout;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract int getEllipsisStart(int);

    public abstract int getEllipsisCount(int);
}
