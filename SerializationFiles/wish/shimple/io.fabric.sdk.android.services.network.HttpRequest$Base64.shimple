public class io.fabric.sdk.android.services.network.HttpRequest$Base64 extends java.lang.Object
{
    private static final byte EQUALS_SIGN;
    private static final java.lang.String PREFERRED_ENCODING;
    private static final byte[] _STANDARD_ALPHABET;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] _STANDARD_ALPHABET> = $r0;

        return;
    }

    private void <init>()
    {
        io.fabric.sdk.android.services.network.HttpRequest$Base64 $r0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest$Base64;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.io.UnsupportedEncodingException $r0;
        java.lang.String $r1, $r1_1;
        byte[] $r2, $r2_1, $r2_2, $r2_3;

(0)     $r1 := @parameter0: java.lang.String;

     label1:
(1)     $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        $r2_1 = Phi($r2 #1, $r2_3 #2);

        $r1_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encodeBytes(byte[])>($r2_1);

        return $r1_1;

     label3:
        $r0 := @caughtexception;

        $r2_2 = Phi($r2 #0);

        $r2_3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

(2)     goto label2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private static byte[] encode3to4(byte[], int, int, byte[], int)
    {
        byte[] $r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i5_1, $i5_2, $i6_1, $i6_2, $i6_3, $i5_3, $i1_1, $i1_2, $i3_1, $i1_3, $i3_2, $i1_4, $i2_1, $i2_2, $i3_3, $i3_4, $i2_3, $i3_5, $i3_6, $i2_4, $i1_5, $i2_5, $i2_6, $i3_7, $i3_8, $i2_7, $i1_6, $i1_7, $i1_8, $i2_8, $i2_9, $i1_9, $i1_10, $i1_11, $i1_12, $i6_4, $i5_4;
        byte $b4, $b4_1, $b4_2, $b4_3, $b4_4, $b4_5, $b4_6, $b4_7, $b4_8, $b4_9, $b4_10, $b4_11, $b4_12, $b4_13, $b4_14;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: byte[];

        $i0 := @parameter4: int;

        $i3 = 0;

        $r2 = <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] _STANDARD_ALPHABET>;

        if $i2 <= 0 goto label5;

        $b4 = $r0[$i1];

        $i5 = $b4 << 24;

(0)     $i5_1 = $i5 >>> 8;

     label1:
        $i5_2 = Phi($i5_1 #0, $i5_4 #4);

        $b4_1 = Phi($b4 #0, $b4 #4);

        if $i2 <= 1 goto label6;

        $i6 = $i1 + 1;

        $b4_2 = $r0[$i6];

        $i6_1 = $b4_2 << 24;

(1)     $i6_2 = $i6_1 >>> 16;

     label2:
        $b4_3 = Phi($b4_2 #1, $b4_1 #5);

        $i6_3 = Phi($i6_2 #1, $i6_4 #5);

        $i5_3 = $i6_3 | $i5_2;

(2)     if $i2 <= 2 goto label3;

        $i1_1 = $i1 + 2;

        $b4_4 = $r0[$i1_1];

        $i1_2 = $b4_4 << 24;

(3)     $i3_1 = $i1_2 >>> 24;

     label3:
        $b4_5 = Phi($b4_3 #2, $b4_4 #3);

        $i1_3 = Phi($i1 #2, $i1_2 #3);

        $i3_2 = Phi($i3 #2, $i3_1 #3);

        $i1_4 = $i5_3 | $i3_2;

        lookupswitch($i2)
        {
            case 1: goto label9;
            case 2: goto label8;
            case 3: goto label7;
            default: goto label4;
        };

     label4:
        return $r1;

     label5:
        $i5_4 = 0;

(4)     goto label1;

     label6:
        $i6_4 = 0;

(5)     goto label2;

     label7:
        $i2_1 = $i1_4 >>> 18;

        $b4_6 = $r2[$i2_1];

        $r1[$i0] = $b4_6;

        $i2_2 = $i0 + 1;

        $i3_3 = $i1_4 >>> 12;

        $i3_4 = $i3_3 & 63;

        $b4_7 = $r2[$i3_4];

        $r1[$i2_2] = $b4_7;

        $i2_3 = $i0 + 2;

        $i3_5 = $i1_4 >>> 6;

        $i3_6 = $i3_5 & 63;

        $b4_8 = $r2[$i3_6];

        $r1[$i2_3] = $b4_8;

        $i2_4 = $i0 + 3;

        $i1_5 = $i1_4 & 63;

        $b4_9 = $r2[$i1_5];

        $r1[$i2_4] = $b4_9;

        return $r1;

     label8:
        $i2_5 = $i1_4 >>> 18;

        $b4_10 = $r2[$i2_5];

        $r1[$i0] = $b4_10;

        $i2_6 = $i0 + 1;

        $i3_7 = $i1_4 >>> 12;

        $i3_8 = $i3_7 & 63;

        $b4_11 = $r2[$i3_8];

        $r1[$i2_6] = $b4_11;

        $i2_7 = $i0 + 2;

        $i1_6 = $i1_4 >>> 6;

        $i1_7 = $i1_6 & 63;

        $b4_12 = $r2[$i1_7];

        $r1[$i2_7] = $b4_12;

        $i1_8 = $i0 + 3;

        $r1[$i1_8] = 61;

        return $r1;

     label9:
        $i2_8 = $i1_4 >>> 18;

        $b4_13 = $r2[$i2_8];

        $r1[$i0] = $b4_13;

        $i2_9 = $i0 + 1;

        $i1_9 = $i1_4 >>> 12;

        $i1_10 = $i1_9 & 63;

        $b4_14 = $r2[$i1_10];

        $r1[$i2_9] = $b4_14;

        $i1_11 = $i0 + 2;

        $r1[$i1_11] = 61;

        $i1_12 = $i0 + 3;

        $r1[$i1_12] = 61;

        return $r1;
    }

    public static java.lang.String encodeBytes(byte[])
    {
        byte[] $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encodeBytes(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String encodeBytes(byte[], int, int)
    {
        int $i0, $i1;
        java.io.UnsupportedEncodingException $r0;
        byte[] $r1, $r1_1;
        java.lang.String $r2, $r2_1;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] encodeBytesToBytes(byte[],int,int)>($r1, $i0, $i1);

        $r2 = new java.lang.String;

     label1:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1_1, "US-ASCII");

     label2:
        return $r2;

     label3:
        $r0 := @caughtexception;

        $r2_1 = new java.lang.String;

        specialinvoke $r2_1.<java.lang.String: void <init>(byte[])>($r1_1);

        return $r2_1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static byte[] encodeBytesToBytes(byte[], int, int)
    {
        java.lang.NullPointerException $r0;
        java.lang.Object[] $r1;
        byte[] $r2, $r3, $r3_1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i2_1, $i4_1, $i4_2, $i5_1, $i4_3, $i5_2, $i4_4, $i4_5, $i5_3, $i5_4, $i4_6, $i2_2, $i3_1, $i4_7, $i2_3, $i4_8, $i3_2, $i2_4, $i2_5;
        java.lang.IllegalArgumentException $r4, $r4_1, $r4_2;
        java.lang.StringBuilder $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;
        java.lang.String $r6, $r6_1, $r6_2;
        java.lang.Integer $r7, $r7_1, $r7_2;
        byte $b6, $b6_1, $b6_2;

        $r3 := @parameter0: byte[];

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        if $r3 != null goto label01;

        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot serialize a null array.");

        throw $r0;

     label01:
        if $i2 >= 0 goto label02;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have negative offset: ");

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label02:
        if $i3 >= 0 goto label03;

        $r4_1 = new java.lang.IllegalArgumentException;

        $r5_3 = new java.lang.StringBuilder;

        specialinvoke $r5_3.<java.lang.StringBuilder: void <init>()>();

        $r5_4 = virtualinvoke $r5_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have length offset: ");

        $r5_5 = virtualinvoke $r5_4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6_1 = virtualinvoke $r5_5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6_1);

        throw $r4_1;

     label03:
        $i4 = $i2 + $i3;

        $i5 = lengthof $r3;

        if $i4 <= $i5 goto label04;

        $r4_2 = new java.lang.IllegalArgumentException;

        $r1 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[0] = $r7;

        $r7_1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[1] = $r7_1;

        $i2_1 = lengthof $r3;

        $r7_2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2_1);

        $r1[2] = $r7_2;

        $r6_2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot have offset of %d and length of %d with array of length %d", $r1);

        specialinvoke $r4_2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6_2);

        throw $r4_2;

     label04:
        $i4_1 = $i3 / 3;

        $i4_2 = $i4_1 * 4;

        $i5_1 = $i3 % 3;

        if $i5_1 <= 0 goto label07;

(0)     $b6 = 4;

     label05:
        $b6_1 = Phi($b6 #0, $b6_2 #3);

        $i4_3 = $i4_2 + $b6_1;

        $r2 = newarray (byte)[$i4_3];

        $i5_2 = 0;

        $i4_4 = 0;

(1)     $i0 = $i3 + -2;

     label06:
        $i4_5 = Phi($i4_4 #1, $i4_6 #2);

        $i5_3 = Phi($i5_2 #1, $i5_4 #2);

        if $i5_3 >= $i0 goto label08;

        $i1 = $i5_3 + $i2;

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] encode3to4(byte[],int,int,byte[],int)>($r3, $i1, 3, $r2, $i4_5);

        $i5_4 = $i5_3 + 3;

        $i4_6 = $i4_5 + 4;

(2)     goto label06;

     label07:
        $b6_2 = 0;

(3)     goto label05;

     label08:
(4)     if $i5_3 >= $i3 goto label09;

        $i2_2 = $i5_3 + $i2;

        $i3_1 = $i3 - $i5_3;

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: byte[] encode3to4(byte[],int,int,byte[],int)>($r3, $i2_2, $i3_1, $r2, $i4_5);

(5)     $i4_7 = $i4_5 + 4;

     label09:
        $i2_3 = Phi($i2 #4, $i2_2 #5);

        $i4_8 = Phi($i4_5 #4, $i4_7 #5);

        $i3_2 = Phi($i3 #4, $i3_1 #5);

        $i2_4 = lengthof $r2;

        $i2_5 = $i2_4 + -1;

        if $i4_8 > $i2_5 goto label10;

        $r3_1 = newarray (byte)[$i4_8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3_1, 0, $i4_8);

        return $r3_1;

     label10:
        return $r2;
    }
}
