public class com.android.volley.toolbox.PoolingByteArrayOutputStream extends java.io.ByteArrayOutputStream
{
    private static final int DEFAULT_SIZE;
    private final com.android.volley.toolbox.ByteArrayPool mPool;

    public void <init>(com.android.volley.toolbox.ByteArrayPool)
    {
        com.android.volley.toolbox.PoolingByteArrayOutputStream $r0;
        com.android.volley.toolbox.ByteArrayPool $r1;

        $r0 := @this: com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $r1 := @parameter0: com.android.volley.toolbox.ByteArrayPool;

        specialinvoke $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: void <init>(com.android.volley.toolbox.ByteArrayPool,int)>($r1, 256);

        return;
    }

    public void <init>(com.android.volley.toolbox.ByteArrayPool, int)
    {
        com.android.volley.toolbox.PoolingByteArrayOutputStream $r0;
        com.android.volley.toolbox.ByteArrayPool $r1, $r1_1;
        int $i0, $i0_1;
        byte[] $r2;

        $r0 := @this: com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $r1 := @parameter0: com.android.volley.toolbox.ByteArrayPool;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: com.android.volley.toolbox.ByteArrayPool mPool> = $r1;

        $r1_1 = $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: com.android.volley.toolbox.ByteArrayPool mPool>;

        $i0_1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 256);

        $r2 = virtualinvoke $r1_1.<com.android.volley.toolbox.ByteArrayPool: byte[] getBuf(int)>($i0_1);

        $r0.<java.io.ByteArrayOutputStream: byte[] buf> = $r2;

        return;
    }

    private void expand(int)
    {
        com.android.volley.toolbox.PoolingByteArrayOutputStream $r0;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i1_1, $i1_2, $i1_3;
        byte[] $r1, $r3, $r1_1, $r3_1;
        com.android.volley.toolbox.ByteArrayPool $r2, $r2_1;

        $r0 := @this: com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $i1 := @parameter0: int;

        $i0 = $r0.<java.io.ByteArrayOutputStream: int count>;

        $i2 = $i0 + $i1;

        $r1 = $r0.<java.io.ByteArrayOutputStream: byte[] buf>;

        $i0_1 = lengthof $r1;

        if $i2 > $i0_1 goto label1;

        return;

     label1:
        $r2 = $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: com.android.volley.toolbox.ByteArrayPool mPool>;

        $i0_2 = $r0.<java.io.ByteArrayOutputStream: int count>;

        $i1_1 = $i0_2 + $i1;

        $i1_2 = $i1_1 * 2;

        $r1_1 = virtualinvoke $r2.<com.android.volley.toolbox.ByteArrayPool: byte[] getBuf(int)>($i1_2);

        $r3 = $r0.<java.io.ByteArrayOutputStream: byte[] buf>;

        $i1_3 = $r0.<java.io.ByteArrayOutputStream: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r1_1, 0, $i1_3);

        $r2_1 = $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: com.android.volley.toolbox.ByteArrayPool mPool>;

        $r3_1 = $r0.<java.io.ByteArrayOutputStream: byte[] buf>;

        virtualinvoke $r2_1.<com.android.volley.toolbox.ByteArrayPool: void returnBuf(byte[])>($r3_1);

        $r0.<java.io.ByteArrayOutputStream: byte[] buf> = $r1_1;

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.volley.toolbox.PoolingByteArrayOutputStream $r0;
        com.android.volley.toolbox.ByteArrayPool $r1;
        byte[] $r2;

        $r0 := @this: com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $r1 = $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: com.android.volley.toolbox.ByteArrayPool mPool>;

        $r2 = $r0.<java.io.ByteArrayOutputStream: byte[] buf>;

        virtualinvoke $r1.<com.android.volley.toolbox.ByteArrayPool: void returnBuf(byte[])>($r2);

        $r0.<java.io.ByteArrayOutputStream: byte[] buf> = null;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void close()>();

        return;
    }

    public void finalize()
    {
        com.android.volley.toolbox.PoolingByteArrayOutputStream $r0;
        com.android.volley.toolbox.ByteArrayPool $r1;
        byte[] $r2;

        $r0 := @this: com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $r1 = $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: com.android.volley.toolbox.ByteArrayPool mPool>;

        $r2 = $r0.<java.io.ByteArrayOutputStream: byte[] buf>;

        virtualinvoke $r1.<com.android.volley.toolbox.ByteArrayPool: void returnBuf(byte[])>($r2);

        return;
    }

    public void write(int)
    {
        com.android.volley.toolbox.PoolingByteArrayOutputStream $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: void expand(int)>(1);

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(byte[], int, int)
    {
        com.android.volley.toolbox.PoolingByteArrayOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.Throwable $r2;

        $r0 := @this: com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<com.android.volley.toolbox.PoolingByteArrayOutputStream: void expand(int)>($i1);

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
