public class com.google.gson.internal.bind.util.ISO8601Utils extends java.lang.Object
{
    private static final java.util.TimeZone TIMEZONE_UTC;
    private static final java.lang.String UTC_ID;

    static void <clinit>()
    {
        java.util.TimeZone $r0;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        <com.google.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.gson.internal.bind.util.ISO8601Utils $r0;

        $r0 := @this: com.google.gson.internal.bind.util.ISO8601Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean checkOffset(java.lang.String, int, char)
    {
        java.lang.String $r0;
        int $i0, $i2;
        char $c1, $c3;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $c1 := @parameter2: char;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i2 goto label1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c3 != $c1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String format(java.util.Date)
    {
        java.util.Date $r0;
        java.util.TimeZone $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.util.Date;

        $r1 = <com.google.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC>;

        $r2 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean,java.util.TimeZone)>($r0, 0, $r1);

        return $r2;
    }

    public static java.lang.String format(java.util.Date, boolean)
    {
        java.util.Date $r0;
        boolean $z0;
        java.util.TimeZone $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.util.Date;

        $z0 := @parameter1: boolean;

        $r1 = <com.google.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC>;

        $r2 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean,java.util.TimeZone)>($r0, $z0, $r1);

        return $r2;
    }

    public static java.lang.String format(java.util.Date, boolean, java.util.TimeZone)
    {
        java.util.Date $r0;
        boolean $z0;
        java.util.TimeZone $r1;
        java.util.GregorianCalendar $r2;
        java.util.Locale $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8, $r5_9, $r5_10, $r5_11, $r5_12, $r5_13, $r5_14, $r5_15, $r5_16, $r5_17;
        int $i0, $i1, $i3, $i1_1, $i0_1, $i1_2, $i1_3, $i1_4, $i0_2, $i0_3, $i1_5, $i0_4, $i0_5, $i1_6, $i0_6, $i1_7, $i0_7, $i1_8, $i0_8, $i1_9, $i0_9, $i1_10, $i0_10, $i1_11, $i1_12, $i0_11, $i0_12, $i1_13, $i1_14, $i1_15, $i3_1, $i3_2, $i0_13, $i0_14, $i3_3, $i1_16, $i0_15, $i1_17, $i1_18;
        long $l2;
        char $c4, $c4_1, $c4_2, $c4_3;

        $r0 := @parameter0: java.util.Date;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.util.TimeZone;

        $r2 = new java.util.GregorianCalendar;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r3);

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        $r5 = "yyyy-MM-ddThh:mm:ss";

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $z0 == 0 goto label6;

        $r5_1 = ".sss";

(0)     $i1 = virtualinvoke $r5_1.<java.lang.String: int length()>();

     label1:
        $i1_1 = Phi($i1 #0, $i1_18 #6);

        $r5_2 = Phi($r5_1 #0, $r5 #6);

        $i0_1 = $i0 + $i1_1;

        $i1_2 = virtualinvoke $r1.<java.util.TimeZone: int getRawOffset()>();

        if $i1_2 != 0 goto label7;

        $r5_3 = "Z";

(1)     $i1_3 = virtualinvoke $r5_3.<java.lang.String: int length()>();

     label2:
        $i1_4 = Phi($i1_3 #1, $i1_17 #7);

        $r5_4 = Phi($r5_3 #1, $r5_17 #7);

        $i0_2 = $i0_1 + $i1_4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0_2);

        $i0_3 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $r5_5 = "yyyy";

        $i1_5 = virtualinvoke $r5_5.<java.lang.String: int length()>();

        staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i0_3, $i1_5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i0_4 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        $i0_5 = $i0_4 + 1;

        $r5_6 = "MM";

        $i1_6 = virtualinvoke $r5_6.<java.lang.String: int length()>();

        staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i0_5, $i1_6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i0_6 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(5);

        $r5_7 = "dd";

        $i1_7 = virtualinvoke $r5_7.<java.lang.String: int length()>();

        staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i0_6, $i1_7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84);

        $i0_7 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(11);

        $r5_8 = "hh";

        $i1_8 = virtualinvoke $r5_8.<java.lang.String: int length()>();

        staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i0_7, $i1_8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i0_8 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(12);

        $r5_9 = "mm";

        $i1_9 = virtualinvoke $r5_9.<java.lang.String: int length()>();

        staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i0_8, $i1_9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i0_9 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(13);

        $r5_10 = "ss";

        $i1_10 = virtualinvoke $r5_10.<java.lang.String: int length()>();

        staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i0_9, $i1_10);

(2)     if $z0 == 0 goto label3;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i0_10 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(14);

        $r5_11 = "sss";

        $i1_11 = virtualinvoke $r5_11.<java.lang.String: int length()>();

(3)     staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i0_10, $i1_11);

     label3:
        $i1_12 = Phi($i1_10 #2, $i1_11 #3);

        $r5_12 = Phi($r5_10 #2, $r5_11 #3);

        $i0_11 = Phi($i0_9 #2, $i0_10 #3);

        $l2 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        $i0_12 = virtualinvoke $r1.<java.util.TimeZone: int getOffset(long)>($l2);

        if $i0_12 == 0 goto label9;

        $i1_13 = $i0_12 / 60000;

        $i1_14 = $i1_13 / 60;

        $i1_15 = staticinvoke <java.lang.Math: int abs(int)>($i1_14);

        $i3 = $i0_12 / 60000;

        $i3_1 = $i3 % 60;

        $i3_2 = staticinvoke <java.lang.Math: int abs(int)>($i3_1);

        if $i0_12 >= 0 goto label8;

(4)     $c4 = 45;

     label4:
        $c4_1 = Phi($c4 #4, $c4_2 #8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4_1);

        $r5_13 = "hh";

        $i0_13 = virtualinvoke $r5_13.<java.lang.String: int length()>();

        staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i1_15, $i0_13);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r5_14 = "mm";

        $i0_14 = virtualinvoke $r5_14.<java.lang.String: int length()>();

(5)     staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r4, $i3_2, $i0_14);

     label5:
        $c4_3 = Phi($c4_1 #5, $c4 #9);

        $i3_3 = Phi($i3_2 #5, $i3 #9);

        $i1_16 = Phi($i1_15 #5, $i1_12 #9);

        $r5_15 = Phi($r5_14 #5, $r5_12 #9);

        $i0_15 = Phi($i0_14 #5, $i0_12 #9);

        $r5_16 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5_16;

     label6:
        $i1_18 = 0;

(6)     goto label1;

     label7:
        $r5_17 = "+hh:mm";

        $i1_17 = virtualinvoke $r5_17.<java.lang.String: int length()>();

(7)     goto label2;

     label8:
        $c4_2 = 43;

(8)     goto label4;

     label9:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

(9)     goto label5;
    }

    private static int indexOfNonDigit(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4;
        char $c2;

        $r0 := @parameter0: java.lang.String;

(0)     $i0 := @parameter1: int;

     label1:
        $i0_1 = Phi($i0 #0, $i0_2 #2);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0_1 >= $i1 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0_1);

(1)     if $c2 < 48 goto label4;

        if $c2 <= 57 goto label2;

        return $i0_1;

     label2:
        $i0_2 = $i0_1 + 1;

(2)     goto label1;

     label3:
(3)     $i0_3 = virtualinvoke $r0.<java.lang.String: int length()>();

     label4:
        $i0_4 = Phi($i0_1 #1, $i0_3 #3);

        return $i0_4;
    }

    private static void padInt(java.lang.StringBuilder, int, int)
    {
        java.lang.StringBuilder $r0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $i1_1 = virtualinvoke $r1.<java.lang.String: int length()>();

(0)     $i1_2 = $i0 - $i1_1;

     label1:
        $i1_3 = Phi($i1_2 #0, $i1_4 #1);

        if $i1_3 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $i1_4 = $i1_3 + -1;

(1)     goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        return;
    }

    public static java.util.Date parse(java.lang.String, java.text.ParsePosition) throws java.text.ParseException
    {
        java.text.ParsePosition $r0;
        java.text.ParseException $r1;
        java.lang.NumberFormatException $r2;
        java.lang.String $r3, $r9, $r10, $r9_1, $r10_1, $r9_2, $r9_3, $r10_2, $r10_3, $r9_4, $r10_4, $r10_5, $r9_5, $r9_6, $r10_6, $r9_7, $r10_7, $r9_8, $r10_8, $r9_9, $r3_1, $r3_2, $r9_10, $r10_9, $r9_11, $r10_10, $r10_11, $r9_12, $r3_3, $r3_4, $r10_12, $r9_13, $r10_13, $r9_14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i0_1, $i1_1, $i1_2, $i1_3, $i2_1, $i2_2, $i2_3, $i1_4, $i8_1, $i4_1, $i5_1, $i4_2, $i5_2, $i5_3, $i3_1, $i5_4, $i8_2, $i8_3, $i3_2, $i3_3, $i8_4, $i6_1, $i6_2, $i6_3, $i7_1, $i3_4, $i8_5, $i3_5, $i10_1, $i8_6, $i7_2, $i7_3, $i7_4, $i7_5, $i3_6, $i8_7, $i3_7, $i6_4, $i8_8, $i7_6, $i4_3, $i5_5, $i10_2, $i8_9, $i3_8, $i3_9, $i8_10, $i0_2, $i8_11, $i8_12, $i3_10, $i3_11, $i6_5, $i1_5, $i0_3, $i8_13, $i7_7, $i2_4, $i4_4, $i5_6, $i10_3, $i3_12, $i6_6, $i1_6, $i0_4, $i8_14, $i7_8, $i2_5, $i4_5, $i5_7, $i10_4, $i0_5, $i3_13, $i6_7, $i1_7, $i0_6, $i8_15, $i7_9, $i2_6, $i4_6, $i5_8, $i10_5, $i3_14, $i6_8, $i1_8, $i0_7, $i8_16, $i7_10, $i2_7, $i4_7, $i5_9, $i10_6;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11, $z0_12, $z0_13, $z0_14, $z0_15, $z0_16, $z0_17, $z0_18, $z0_19;
        java.util.GregorianCalendar $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        java.util.Date $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;
        char $c9, $c9_1, $c9_2, $c9_3, $c9_4, $c9_5, $c9_6, $c9_7;
        java.lang.IllegalArgumentException $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5;
        java.lang.IndexOutOfBoundsException $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6;
        java.lang.RuntimeException $r8, $r8_1, $r8_2, $r8_3;
        java.lang.StringBuilder $r11, $r11_1, $r11_2, $r11_3, $r11_4, $r11_5, $r11_6, $r11_7, $r11_8, $r11_9, $r11_10, $r11_11, $r11_12, $r11_13, $r11_14, $r11_15, $r11_16, $r11_17, $r11_18, $r11_19, $r11_20, $r11_21, $r11_22, $r11_23, $r11_24, $r11_25, $r11_26, $r11_27, $r11_28, $r11_29, $r11_30, $r11_31, $r11_32, $r11_33, $r11_34, $r11_35;
        java.lang.Class $r12;
        java.util.TimeZone $r13, $r14, $r13_1, $r13_2, $r13_3, $r13_4, $r13_5, $r13_6, $r13_7;

        $r3 := @parameter0: java.lang.String;

(0)     $r0 := @parameter1: java.text.ParsePosition;

     label01:
        $i0 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

     label02:
        $i1 = $i0 + 4;

     label03:
(1)     $i0_1 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)>($r3, $i0, $i1);

        $z0 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)>($r3, $i1, 45);

     label04:
(2)     if $z0 == 0 goto label05;

(3)     $i1_1 = $i1 + 1;

     label05:
        $i1_2 = Phi($i1 #2, $i1_1 #3);

(4)     $i2 = $i1_2 + 2;

     label06:
(5)     $i1_3 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)>($r3, $i1_2, $i2);

(6)     $z0_1 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)>($r3, $i2, 45);

     label07:
(7)     if $z0_1 == 0 goto label08;

(8)     $i2_1 = $i2 + 1;

     label08:
        $i2_2 = Phi($i2 #7, $i2_1 #8);

(9)     $i3 = $i2_2 + 2;

     label09:
(10)    $i2_3 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)>($r3, $i2_2, $i3);

     label10:
        $i4 = 0;

        $i5 = 0;

        $i6 = 0;

        $i7 = 0;

     label11:
(11)    $z0_2 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)>($r3, $i3, 84);

     label12:
(12)    if $z0_2 != 0 goto label17;

     label13:
        $i8 = virtualinvoke $r3.<java.lang.String: int length()>();

     label14:
(13)    if $i8 > $i3 goto label17;

        $r4 = new java.util.GregorianCalendar;

(14)    $i1_4 = $i1_3 + -1;

     label15:
        specialinvoke $r4.<java.util.GregorianCalendar: void <init>(int,int,int)>($i0_1, $i1_4, $i2_3);

        virtualinvoke $r0.<java.text.ParsePosition: void setIndex(int)>($i3);

        $r5 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

     label16:
        return $r5;

     label17:
        $i8_1 = Phi($i8 #12, $i8 #13);

(15)    if $z0_2 == 0 goto label39;

        $i4_1 = $i3 + 1;

(16)    $i5_1 = $i4_1 + 2;

     label18:
(17)    $i4_2 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)>($r3, $i4_1, $i5_1);

     label19:
(18)    $z0_3 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)>($r3, $i5_1, 58);

     label20:
(19)    if $z0_3 == 0 goto label21;

(20)    $i5_2 = $i5_1 + 1;

     label21:
        $i5_3 = Phi($i5_1 #19, $i5_2 #20);

(21)    $i3_1 = $i5_3 + 2;

     label22:
(22)    $i5_4 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)>($r3, $i5_3, $i3_1);

     label23:
(23)    $z0_4 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)>($r3, $i3_1, 58);

     label24:
        if $z0_4 == 0 goto label88;

(24)    $i8_2 = $i3_1 + 1;

     label25:
        $i8_3 = Phi($i8_2 #24, $i8_7 #100);

(25)    $i3_2 = virtualinvoke $r3.<java.lang.String: int length()>();

     label26:
(26)    if $i3_2 <= $i8_3 goto label87;

     label27:
        $c9 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i8_3);

     label28:
(27)    if $c9 == 90 goto label87;

(28)    if $c9 == 43 goto label87;

(29)    if $c9 == 45 goto label87;

(30)    $i3_3 = $i8_3 + 2;

     label29:
(31)    $i8_4 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)>($r3, $i8_3, $i3_3);

     label30:
        $i6_1 = $i8_4;

(32)    if $i8_4 <= 59 goto label31;

(33)    if $i8_4 >= 63 goto label31;

(34)    $i6_2 = 59;

     label31:
        $i6_3 = Phi($i6_1 #32, $i6_1 #33, $i6_2 #34);

(35)    $z0_5 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)>($r3, $i3_3, 46);

     label32:
(36)    if $z0_5 == 0 goto label39;

        $i7_1 = $i3_3 + 1;

(37)    $i3_4 = $i7_1 + 1;

     label33:
(38)    $i8_5 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int indexOfNonDigit(java.lang.String,int)>($r3, $i3_4);

     label34:
        $i3_5 = $i8_5;

(39)    $i10 = $i7_1 + 3;

     label35:
(40)    $i10_1 = staticinvoke <java.lang.Math: int min(int,int)>($i8_5, $i10);

(41)    $i8_6 = staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)>($r3, $i7_1, $i10_1);

     label36:
        $i7_2 = $i10_1 - $i7_1;

        lookupswitch($i7_2)
        {
            case 1: goto label49;
            case 2: goto label48;
            default: goto label37;
        };

     label37:
        goto label38;

     label38:
(42)    $i7_3 = $i8_6;

     label39:
        $c9_2 = Phi($c9 #15, $c9 #36, $c9 #42, $c9 #49, $c9 #50, $c9_1 #99);

        $i3_7 = Phi($i3 #15, $i3_3 #36, $i3_5 #42, $i3_5 #49, $i3_5 #50, $i3_6 #99);

        $i6_4 = Phi($i6 #15, $i6_3 #36, $i6_3 #42, $i6_3 #49, $i6_3 #50, $i6 #99);

        $i8_8 = Phi($i8_1 #15, $i8_4 #36, $i8_6 #42, $i8_6 #49, $i8_6 #50, $i8_3 #99);

        $z0_6 = Phi($z0_2 #15, $z0_5 #36, $z0_5 #42, $z0_5 #49, $z0_5 #50, $z0_4 #99);

        $i7_6 = Phi($i7 #15, $i7 #36, $i7_3 #42, $i7_4 #49, $i7_5 #50, $i7 #99);

        $i4_3 = Phi($i4 #15, $i4_2 #36, $i4_2 #42, $i4_2 #49, $i4_2 #50, $i4_2 #99);

        $i5_5 = Phi($i5 #15, $i5_4 #36, $i5_4 #42, $i5_4 #49, $i5_4 #50, $i5_4 #99);

        $i10_2 = Phi($i10 #15, $i10 #36, $i10_1 #42, $i10_1 #49, $i10_1 #50, $i10 #99);

(43)    $i8_9 = virtualinvoke $r3.<java.lang.String: int length()>();

     label40:
        if $i8_9 > $i3_7 goto label50;

        $r6 = new java.lang.IllegalArgumentException;

     label41:
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No time zone indicator");

     label42:
        throw $r6;

     label43:
        $r7_2 := @caughtexception;

        $r4_2 = Phi($r4 #0, $r4_1 #53);

        $r6_1 = Phi($r6 #0);

        $r10_7 = Phi($r10 #0, $r10_1 #56, $r10_2 #61, $r10_3 #64, $r10_4 #78, $r10_5 #81);

        $c9_4 = Phi($c9 #0, $c9_1 #99, $c9_2 #43, $c9_3 #51);

        $r13_4 = Phi($r13 #0, $r13_1 #53, $r13_2 #77);

        $i3_11 = Phi($i3 #0, $i3_1 #21, $i3_2 #25, $i3_3 #30, $i3_4 #37, $i3_5 #39, $i3_6 #99, $i3_7 #43, $i3_9 #53, $i3_10 #61);

        $i6_5 = Phi($i6 #0, $i6_1 #32, $i6_2 #34, $i6_3 #35, $i6_4 #43);

        $i1_5 = Phi($i1 #0, $i1_2 #4, $i1_3 #5, $i1_4 #14);

        $i0_3 = Phi($i0 #0, $i0_1 #1, $i0_2 #54);

        $i8_13 = Phi($i8 #0, $i8_2 #24, $i8_7 #100, $i8_3 #25, $i8_4 #31, $i8_5 #38, $i8_6 #41, $i8_1 #15, $i8_9 #43, $i8_10 #53, $i8_11 #58, $i8_12 #60);

        $z0_13 = Phi($z0 #0, $z0_1 #6, $z0_2 #11, $z0_3 #18, $z0_4 #23, $z0_5 #35, $z0_6 #43, $z0_7 #53, $z0_8 #62, $z0_9 #65, $z0_10 #79, $z0_11 #82);

        $r11_17 = Phi($r11 #0, $r11_5 #60, $r11_14 #68, $r11_15 #69, $r11_16 #70, $r11_6 #73, $r11_7 #74, $r11_8 #75, $r11_9 #84, $r11_10 #85, $r11_11 #86, $r11_12 #87, $r11_13 #89, $r11_1 #92, $r11_2 #93, $r11_3 #94, $r11_4 #95);

        $i7_7 = Phi($i7 #0, $i7_1 #37, $i7_3 #42, $i7_4 #49, $i7_5 #50, $i7_6 #43);

        $i2_4 = Phi($i2 #0, $i2_2 #9, $i2_3 #10);

        $r9_8 = Phi($r9 #0, $r9_2 #57, $r9_3 #60, $r9_7 #71, $r9_4 #76, $r9_5 #88, $r9_6 #90, $r9_1 #96);

        $r7_3 = Phi($r7 #0, $r7_1 #84);

        $i4_4 = Phi($i4 #0, $i4_1 #16, $i4_2 #17, $i4_3 #43);

        $i5_6 = Phi($i5 #0, $i5_1 #16, $i5_3 #21, $i5_4 #22, $i5_5 #43);

        $r5_2 = Phi($r5 #0, $r5_1 #55);

        $i10_3 = Phi($i10 #0, $i10_1 #40, $i10_2 #43);

(44)    $r8 = $r7_3;

     label44:
        $r4_3 = Phi($r4_2 #44, $r4_4 #91, $r4_5 #97);

        $r6_2 = Phi($r6_1 #44, $r6_3 #91, $r6_5 #97);

        $r10_8 = Phi($r10_7 #44, $r10_12 #91, $r10_13 #97);

        $c9_5 = Phi($c9_4 #44, $c9_6 #91, $c9_7 #97);

        $r13_5 = Phi($r13_4 #44, $r13_6 #91, $r13_7 #97);

        $i3_12 = Phi($i3_11 #44, $i3_13 #91, $i3_14 #97);

        $i6_6 = Phi($i6_5 #44, $i6_7 #91, $i6_8 #97);

        $i1_6 = Phi($i1_5 #44, $i1_7 #91, $i1_8 #97);

        $r8_1 = Phi($r8 #44, $r8_2 #91, $r8_3 #97);

        $i0_4 = Phi($i0_3 #44, $i0_6 #91, $i0_7 #97);

        $i8_14 = Phi($i8_13 #44, $i8_15 #91, $i8_16 #97);

        $z0_14 = Phi($z0_13 #44, $z0_18 #91, $z0_19 #97);

        $r11_18 = Phi($r11_17 #44, $r11_34 #91, $r11_35 #97);

        $i7_8 = Phi($i7_7 #44, $i7_9 #91, $i7_10 #97);

        $i2_5 = Phi($i2_4 #44, $i2_6 #91, $i2_7 #97);

        $r9_9 = Phi($r9_8 #44, $r9_13 #91, $r9_14 #97);

        $r7_4 = Phi($r7_3 #44, $r7_5 #91, $r7_6 #97);

        $i4_5 = Phi($i4_4 #44, $i4_6 #91, $i4_7 #97);

        $i5_7 = Phi($i5_6 #44, $i5_8 #91, $i5_9 #97);

        $r5_3 = Phi($r5_2 #44, $r5_4 #91, $r5_5 #97);

        $i10_4 = Phi($i10_3 #44, $i10_5 #91, $i10_6 #97);

        if $r3 != null goto label86;

(45)    $r3_1 = null;

     label45:
        $r3_2 = Phi($r3_1 #45, $r3_4 #98);

        $r11_19 = Phi($r11_18 #45, $r11_33 #98);

        $r9_10 = virtualinvoke $r8_1.<java.lang.Exception: java.lang.String getMessage()>();

        $r10_9 = $r9_10;

(46)    if $r9_10 == null goto label46;

        $z0_15 = virtualinvoke $r9_10.<java.lang.String: boolean isEmpty()>();

(47)    if $z0_15 == 0 goto label47;

     label46:
        $z0_16 = Phi($z0_14 #46, $z0_15 #47);

        $r11_20 = new java.lang.StringBuilder;

        specialinvoke $r11_20.<java.lang.StringBuilder: void <init>()>();

        $r11_21 = virtualinvoke $r11_20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r12 = virtualinvoke $r8_1.<java.lang.Object: java.lang.Class getClass()>();

        $r9_11 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r11_22 = virtualinvoke $r11_21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9_11);

        $r11_23 = virtualinvoke $r11_22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

(48)    $r10_10 = virtualinvoke $r11_23.<java.lang.StringBuilder: java.lang.String toString()>();

     label47:
        $r10_11 = Phi($r10_9 #47, $r10_10 #48);

        $z0_17 = Phi($z0_15 #47, $z0_16 #48);

        $r11_24 = Phi($r11_19 #47, $r11_23 #48);

        $r9_12 = Phi($r9_10 #47, $r9_11 #48);

        $r1 = new java.text.ParseException;

        $r11_25 = new java.lang.StringBuilder;

        specialinvoke $r11_25.<java.lang.StringBuilder: void <init>()>();

        $r11_26 = virtualinvoke $r11_25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse date [");

        $r11_27 = virtualinvoke $r11_26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3_2);

        $r11_28 = virtualinvoke $r11_27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r11_29 = virtualinvoke $r11_28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10_11);

        $r3_3 = virtualinvoke $r11_29.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0_5 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        specialinvoke $r1.<java.text.ParseException: void <init>(java.lang.String,int)>($r3_3, $i0_5);

        virtualinvoke $r1.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>($r8_1);

        throw $r1;

     label48:
        $i7_4 = $i8_6 * 10;

(49)    goto label39;

     label49:
        $i7_5 = $i8_6 * 100;

(50)    goto label39;

     label50:
(51)    $c9_3 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i3_7);

     label51:
        if $c9_3 != 90 goto label57;

        $r13 = <com.google.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC>;

(52)    $i3_8 = $i3_7 + 1;

     label52:
        $r10 = Phi($r10 #52, $r10_6 #67, $r10_4 #80, $r10_5 #83);

        $r13_1 = Phi($r13 #52, $r13_3 #67, $r13_2 #80, $r13_2 #83);

        $i3_9 = Phi($i3_8 #52, $i3_10 #67, $i3_10 #80, $i3_10 #83);

        $i8_10 = Phi($i8_9 #52, $i8_12 #67, $i8_12 #80, $i8_12 #83);

        $z0_7 = Phi($z0_6 #52, $z0_12 #67, $z0_10 #80, $z0_11 #83);

        $r11 = Phi($r11 #52, $r11_5 #67, $r11_8 #80, $r11_8 #83);

        $r9 = Phi($r9 #52, $r9_3 #67, $r9_4 #80, $r9_4 #83);

(53)    $r4_1 = new java.util.GregorianCalendar;

     label53:
        specialinvoke $r4_1.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r13_1);

        virtualinvoke $r4_1.<java.util.Calendar: void setLenient(boolean)>(0);

        virtualinvoke $r4_1.<java.util.Calendar: void set(int,int)>(1, $i0_1);

     label54:
(54)    $i0_2 = $i1_3 + -1;

     label55:
        virtualinvoke $r4_1.<java.util.Calendar: void set(int,int)>(2, $i0_2);

        virtualinvoke $r4_1.<java.util.Calendar: void set(int,int)>(5, $i2_3);

        virtualinvoke $r4_1.<java.util.Calendar: void set(int,int)>(11, $i4_3);

        virtualinvoke $r4_1.<java.util.Calendar: void set(int,int)>(12, $i5_5);

        virtualinvoke $r4_1.<java.util.Calendar: void set(int,int)>(13, $i6_4);

        virtualinvoke $r4_1.<java.util.Calendar: void set(int,int)>(14, $i7_6);

        virtualinvoke $r0.<java.text.ParsePosition: void setIndex(int)>($i3_9);

(55)    $r5_1 = virtualinvoke $r4_1.<java.util.Calendar: java.util.Date getTime()>();

     label56:
        return $r5_1;

     label57:
        if $c9_3 == 43 goto label58;

        if $c9_3 != 45 goto label82;

     label58:
(56)    $r10_1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i3_7);

     label59:
(57)    $r9_2 = $r10_1;

     label60:
(58)    $i8_11 = virtualinvoke $r10_1.<java.lang.String: int length()>();

     label61:
(59)    if $i8_11 < 5 goto label69;

     label62:
        $r11_5 = Phi($r11 #59, $r11_16 #72);

        $r9_3 = Phi($r9_2 #59, $r9_7 #72);

(60)    $i8_12 = virtualinvoke $r9_3.<java.lang.String: int length()>();

     label63:
        $i3_10 = $i3_7 + $i8_12;

(61)    $r10_2 = "+0000";

     label64:
(62)    $z0_8 = virtualinvoke $r10_2.<java.lang.String: boolean equals(java.lang.Object)>($r9_3);

     label65:
(63)    if $z0_8 != 0 goto label68;

(64)    $r10_3 = "+00:00";

     label66:
(65)    $z0_9 = virtualinvoke $r10_3.<java.lang.String: boolean equals(java.lang.Object)>($r9_3);

     label67:
(66)    if $z0_9 == 0 goto label72;

     label68:
        $r10_6 = Phi($r10_2 #63, $r10_3 #66);

        $z0_12 = Phi($z0_8 #63, $z0_9 #66);

        $r13_3 = <com.google.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC>;

(67)    goto label52;

     label69:
(68)    $r11_14 = new java.lang.StringBuilder;

     label70:
        specialinvoke $r11_14.<java.lang.StringBuilder: void <init>()>();

(69)    $r11_15 = virtualinvoke $r11_14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10_1);

(70)    $r11_16 = virtualinvoke $r11_15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");

(71)    $r9_7 = virtualinvoke $r11_16.<java.lang.StringBuilder: java.lang.String toString()>();

     label71:
(72)    goto label62;

     label72:
(73)    $r11_6 = new java.lang.StringBuilder;

     label73:
        specialinvoke $r11_6.<java.lang.StringBuilder: void <init>()>();

(74)    $r11_7 = virtualinvoke $r11_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

(75)    $r11_8 = virtualinvoke $r11_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9_3);

(76)    $r9_4 = virtualinvoke $r11_8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r9_4);

     label74:
(77)    $r13_2 = $r14;

     label75:
(78)    $r10_4 = virtualinvoke $r14.<java.util.TimeZone: java.lang.String getID()>();

(79)    $z0_10 = virtualinvoke $r10_4.<java.lang.String: boolean equals(java.lang.Object)>($r9_4);

     label76:
(80)    if $z0_10 != 0 goto label52;

     label77:
(81)    $r10_5 = virtualinvoke $r10_4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", "");

(82)    $z0_11 = virtualinvoke $r10_5.<java.lang.String: boolean equals(java.lang.Object)>($r9_4);

     label78:
(83)    if $z0_11 != 0 goto label52;

        $r7_1 = new java.lang.IndexOutOfBoundsException;

(84)    $r11_9 = new java.lang.StringBuilder;

     label79:
        specialinvoke $r11_9.<java.lang.StringBuilder: void <init>()>();

(85)    $r11_10 = virtualinvoke $r11_9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mismatching time zone indicator: ");

(86)    $r11_11 = virtualinvoke $r11_10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9_4);

(87)    $r11_12 = virtualinvoke $r11_11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" given, resolves to ");

(88)    $r9_5 = virtualinvoke $r14.<java.util.TimeZone: java.lang.String getID()>();

(89)    $r11_13 = virtualinvoke $r11_12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9_5);

(90)    $r9_6 = virtualinvoke $r11_13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7_1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9_6);

     label80:
        throw $r7_1;

     label81:
        $r2 := @caughtexception;

        $r4_4 = Phi($r4 #0, $r4_1 #53);

        $r6_3 = Phi($r6 #0);

        $r10_12 = Phi($r10 #0, $r10_1 #56, $r10_2 #61, $r10_3 #64, $r10_4 #78, $r10_5 #81);

        $c9_6 = Phi($c9 #0, $c9_1 #99, $c9_2 #43, $c9_3 #51);

        $r13_6 = Phi($r13 #0, $r13_1 #53, $r13_2 #77);

        $i3_13 = Phi($i3 #0, $i3_1 #21, $i3_2 #25, $i3_3 #30, $i3_4 #37, $i3_5 #39, $i3_6 #99, $i3_7 #43, $i3_9 #53, $i3_10 #61);

        $i6_7 = Phi($i6 #0, $i6_1 #32, $i6_2 #34, $i6_3 #35, $i6_4 #43);

        $i1_7 = Phi($i1 #0, $i1_2 #4, $i1_3 #5, $i1_4 #14);

        $i0_6 = Phi($i0 #0, $i0_1 #1, $i0_2 #54);

        $i8_15 = Phi($i8 #0, $i8_2 #24, $i8_7 #100, $i8_3 #25, $i8_4 #31, $i8_5 #38, $i8_6 #41, $i8_1 #15, $i8_9 #43, $i8_10 #53, $i8_11 #58, $i8_12 #60);

        $z0_18 = Phi($z0 #0, $z0_1 #6, $z0_2 #11, $z0_3 #18, $z0_4 #23, $z0_5 #35, $z0_6 #43, $z0_7 #53, $z0_8 #62, $z0_9 #65, $z0_10 #79, $z0_11 #82);

        $r11_34 = Phi($r11 #0, $r11_5 #60, $r11_14 #68, $r11_15 #69, $r11_16 #70, $r11_6 #73, $r11_7 #74, $r11_8 #75, $r11_9 #84, $r11_10 #85, $r11_11 #86, $r11_12 #87, $r11_13 #89, $r11_1 #92, $r11_2 #93, $r11_3 #94, $r11_4 #95);

        $i7_9 = Phi($i7 #0, $i7_1 #37, $i7_3 #42, $i7_4 #49, $i7_5 #50, $i7_6 #43);

        $i2_6 = Phi($i2 #0, $i2_2 #9, $i2_3 #10);

        $r9_13 = Phi($r9 #0, $r9_2 #57, $r9_3 #60, $r9_7 #71, $r9_4 #76, $r9_5 #88, $r9_6 #90, $r9_1 #96);

        $r7_5 = Phi($r7 #0, $r7_1 #84);

        $i4_6 = Phi($i4 #0, $i4_1 #16, $i4_2 #17, $i4_3 #43);

        $i5_8 = Phi($i5 #0, $i5_1 #16, $i5_3 #21, $i5_4 #22, $i5_5 #43);

        $r5_4 = Phi($r5 #0, $r5_1 #55);

        $i10_5 = Phi($i10 #0, $i10_1 #40, $i10_2 #43);

        $r8_2 = $r2;

(91)    goto label44;

     label82:
        $r7 = new java.lang.IndexOutOfBoundsException;

(92)    $r11_1 = new java.lang.StringBuilder;

     label83:
        specialinvoke $r11_1.<java.lang.StringBuilder: void <init>()>();

(93)    $r11_2 = virtualinvoke $r11_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time zone indicator \'");

(94)    $r11_3 = virtualinvoke $r11_2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9_3);

(95)    $r11_4 = virtualinvoke $r11_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

(96)    $r9_1 = virtualinvoke $r11_4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9_1);

     label84:
        throw $r7;

     label85:
        $r6_4 := @caughtexception;

        $r4_5 = Phi($r4 #0, $r4_1 #53);

        $r6_5 = Phi($r6 #0);

        $r10_13 = Phi($r10 #0, $r10_1 #56, $r10_2 #61, $r10_3 #64, $r10_4 #78, $r10_5 #81);

        $c9_7 = Phi($c9 #0, $c9_1 #99, $c9_2 #43, $c9_3 #51);

        $r13_7 = Phi($r13 #0, $r13_1 #53, $r13_2 #77);

        $i3_14 = Phi($i3 #0, $i3_1 #21, $i3_2 #25, $i3_3 #30, $i3_4 #37, $i3_5 #39, $i3_6 #99, $i3_7 #43, $i3_9 #53, $i3_10 #61);

        $i6_8 = Phi($i6 #0, $i6_1 #32, $i6_2 #34, $i6_3 #35, $i6_4 #43);

        $i1_8 = Phi($i1 #0, $i1_2 #4, $i1_3 #5, $i1_4 #14);

        $i0_7 = Phi($i0 #0, $i0_1 #1, $i0_2 #54);

        $i8_16 = Phi($i8 #0, $i8_2 #24, $i8_7 #100, $i8_3 #25, $i8_4 #31, $i8_5 #38, $i8_6 #41, $i8_1 #15, $i8_9 #43, $i8_10 #53, $i8_11 #58, $i8_12 #60);

        $z0_19 = Phi($z0 #0, $z0_1 #6, $z0_2 #11, $z0_3 #18, $z0_4 #23, $z0_5 #35, $z0_6 #43, $z0_7 #53, $z0_8 #62, $z0_9 #65, $z0_10 #79, $z0_11 #82);

        $r11_35 = Phi($r11 #0, $r11_5 #60, $r11_14 #68, $r11_15 #69, $r11_16 #70, $r11_6 #73, $r11_7 #74, $r11_8 #75, $r11_9 #84, $r11_10 #85, $r11_11 #86, $r11_12 #87, $r11_13 #89, $r11_1 #92, $r11_2 #93, $r11_3 #94, $r11_4 #95);

        $i7_10 = Phi($i7 #0, $i7_1 #37, $i7_3 #42, $i7_4 #49, $i7_5 #50, $i7_6 #43);

        $i2_7 = Phi($i2 #0, $i2_2 #9, $i2_3 #10);

        $r9_14 = Phi($r9 #0, $r9_2 #57, $r9_3 #60, $r9_7 #71, $r9_4 #76, $r9_5 #88, $r9_6 #90, $r9_1 #96);

        $r7_6 = Phi($r7 #0, $r7_1 #84);

        $i4_7 = Phi($i4 #0, $i4_1 #16, $i4_2 #17, $i4_3 #43);

        $i5_9 = Phi($i5 #0, $i5_1 #16, $i5_3 #21, $i5_4 #22, $i5_5 #43);

        $r5_5 = Phi($r5 #0, $r5_1 #55);

        $i10_6 = Phi($i10 #0, $i10_1 #40, $i10_2 #43);

        $r8_3 = $r6_5;

(97)    goto label44;

     label86:
        $r11_30 = new java.lang.StringBuilder;

        specialinvoke $r11_30.<java.lang.StringBuilder: void <init>()>();

        $r11_31 = virtualinvoke $r11_30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r11_32 = virtualinvoke $r11_31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r11_33 = virtualinvoke $r11_32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3_4 = virtualinvoke $r11_33.<java.lang.StringBuilder: java.lang.String toString()>();

(98)    goto label45;

     label87:
        $c9_1 = Phi($c9 #26, $c9 #27, $c9 #28, $c9 #29);

        $i3_6 = $i8_3;

(99)    goto label39;

     label88:
        $i8_7 = $i3_1;

(100)   goto label25;

        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label43;
        catch java.lang.NumberFormatException from label01 to label02 with label81;
        catch java.lang.IllegalArgumentException from label01 to label02 with label85;
        catch java.lang.IndexOutOfBoundsException from label03 to label04 with label43;
        catch java.lang.NumberFormatException from label03 to label04 with label81;
        catch java.lang.IllegalArgumentException from label03 to label04 with label85;
        catch java.lang.IndexOutOfBoundsException from label06 to label07 with label43;
        catch java.lang.NumberFormatException from label06 to label07 with label81;
        catch java.lang.IllegalArgumentException from label06 to label07 with label85;
        catch java.lang.IndexOutOfBoundsException from label09 to label10 with label43;
        catch java.lang.NumberFormatException from label09 to label10 with label81;
        catch java.lang.IllegalArgumentException from label09 to label10 with label85;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label43;
        catch java.lang.NumberFormatException from label11 to label12 with label81;
        catch java.lang.IllegalArgumentException from label11 to label12 with label85;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label43;
        catch java.lang.NumberFormatException from label13 to label14 with label81;
        catch java.lang.IllegalArgumentException from label13 to label14 with label85;
        catch java.lang.IndexOutOfBoundsException from label15 to label16 with label43;
        catch java.lang.NumberFormatException from label15 to label16 with label81;
        catch java.lang.IllegalArgumentException from label15 to label16 with label85;
        catch java.lang.IndexOutOfBoundsException from label18 to label19 with label43;
        catch java.lang.IndexOutOfBoundsException from label19 to label20 with label43;
        catch java.lang.NumberFormatException from label18 to label19 with label81;
        catch java.lang.NumberFormatException from label19 to label20 with label81;
        catch java.lang.IllegalArgumentException from label18 to label19 with label85;
        catch java.lang.IllegalArgumentException from label19 to label20 with label85;
        catch java.lang.IndexOutOfBoundsException from label22 to label23 with label43;
        catch java.lang.IndexOutOfBoundsException from label23 to label24 with label43;
        catch java.lang.NumberFormatException from label22 to label23 with label81;
        catch java.lang.NumberFormatException from label23 to label24 with label81;
        catch java.lang.IllegalArgumentException from label22 to label23 with label85;
        catch java.lang.IllegalArgumentException from label23 to label24 with label85;
        catch java.lang.IndexOutOfBoundsException from label25 to label26 with label43;
        catch java.lang.NumberFormatException from label25 to label26 with label81;
        catch java.lang.IllegalArgumentException from label25 to label26 with label85;
        catch java.lang.IndexOutOfBoundsException from label27 to label28 with label43;
        catch java.lang.NumberFormatException from label27 to label28 with label81;
        catch java.lang.IllegalArgumentException from label27 to label28 with label85;
        catch java.lang.IndexOutOfBoundsException from label29 to label30 with label43;
        catch java.lang.NumberFormatException from label29 to label30 with label81;
        catch java.lang.IllegalArgumentException from label29 to label30 with label85;
        catch java.lang.IndexOutOfBoundsException from label31 to label32 with label43;
        catch java.lang.NumberFormatException from label31 to label32 with label81;
        catch java.lang.IllegalArgumentException from label31 to label32 with label85;
        catch java.lang.IndexOutOfBoundsException from label33 to label34 with label43;
        catch java.lang.NumberFormatException from label33 to label34 with label81;
        catch java.lang.IllegalArgumentException from label33 to label34 with label85;
        catch java.lang.IndexOutOfBoundsException from label35 to label36 with label43;
        catch java.lang.NumberFormatException from label35 to label36 with label81;
        catch java.lang.IllegalArgumentException from label35 to label36 with label85;
        catch java.lang.IndexOutOfBoundsException from label39 to label40 with label43;
        catch java.lang.NumberFormatException from label39 to label40 with label81;
        catch java.lang.IllegalArgumentException from label39 to label40 with label85;
        catch java.lang.IndexOutOfBoundsException from label41 to label42 with label43;
        catch java.lang.NumberFormatException from label41 to label42 with label81;
        catch java.lang.IllegalArgumentException from label41 to label42 with label85;
        catch java.lang.NumberFormatException from label42 to label43 with label81;
        catch java.lang.IllegalArgumentException from label42 to label43 with label85;
        catch java.lang.IndexOutOfBoundsException from label50 to label51 with label43;
        catch java.lang.NumberFormatException from label50 to label51 with label81;
        catch java.lang.IllegalArgumentException from label50 to label51 with label85;
        catch java.lang.IndexOutOfBoundsException from label53 to label54 with label43;
        catch java.lang.NumberFormatException from label53 to label54 with label81;
        catch java.lang.IllegalArgumentException from label53 to label54 with label85;
        catch java.lang.IndexOutOfBoundsException from label55 to label56 with label43;
        catch java.lang.NumberFormatException from label55 to label56 with label81;
        catch java.lang.IllegalArgumentException from label55 to label56 with label85;
        catch java.lang.IndexOutOfBoundsException from label58 to label59 with label43;
        catch java.lang.NumberFormatException from label58 to label59 with label81;
        catch java.lang.IllegalArgumentException from label58 to label59 with label85;
        catch java.lang.IndexOutOfBoundsException from label60 to label61 with label43;
        catch java.lang.NumberFormatException from label60 to label61 with label81;
        catch java.lang.IllegalArgumentException from label60 to label61 with label85;
        catch java.lang.IndexOutOfBoundsException from label62 to label63 with label43;
        catch java.lang.NumberFormatException from label62 to label63 with label81;
        catch java.lang.IllegalArgumentException from label62 to label63 with label85;
        catch java.lang.IndexOutOfBoundsException from label64 to label65 with label43;
        catch java.lang.NumberFormatException from label64 to label65 with label81;
        catch java.lang.IllegalArgumentException from label64 to label65 with label85;
        catch java.lang.IndexOutOfBoundsException from label66 to label67 with label43;
        catch java.lang.NumberFormatException from label66 to label67 with label81;
        catch java.lang.IllegalArgumentException from label66 to label67 with label85;
        catch java.lang.IndexOutOfBoundsException from label70 to label71 with label43;
        catch java.lang.NumberFormatException from label70 to label71 with label81;
        catch java.lang.IllegalArgumentException from label70 to label71 with label85;
        catch java.lang.IndexOutOfBoundsException from label73 to label74 with label43;
        catch java.lang.NumberFormatException from label73 to label74 with label81;
        catch java.lang.IllegalArgumentException from label73 to label74 with label85;
        catch java.lang.IndexOutOfBoundsException from label75 to label76 with label43;
        catch java.lang.NumberFormatException from label75 to label76 with label81;
        catch java.lang.IllegalArgumentException from label75 to label76 with label85;
        catch java.lang.IndexOutOfBoundsException from label77 to label78 with label43;
        catch java.lang.NumberFormatException from label77 to label78 with label81;
        catch java.lang.IllegalArgumentException from label77 to label78 with label85;
        catch java.lang.IndexOutOfBoundsException from label79 to label80 with label43;
        catch java.lang.NumberFormatException from label79 to label80 with label81;
        catch java.lang.IllegalArgumentException from label79 to label80 with label85;
        catch java.lang.IndexOutOfBoundsException from label80 to label81 with label43;
        catch java.lang.IndexOutOfBoundsException from label83 to label84 with label43;
        catch java.lang.NumberFormatException from label83 to label84 with label81;
        catch java.lang.IllegalArgumentException from label83 to label84 with label85;
        catch java.lang.IndexOutOfBoundsException from label84 to label85 with label43;
    }

    private static int parseInt(java.lang.String, int, int) throws java.lang.NumberFormatException
    {
        int $i0, $i1, $i2, $i3, $i4, $i2_1, $i3_1, $i3_2, $i4_1, $i2_2, $i2_3, $i4_2, $i3_3, $i3_4, $i4_3, $i1_1, $i4_4, $i2_4;
        java.lang.String $r0, $r0_1, $r0_2, $r0_3, $r0_4;
        java.lang.NumberFormatException $r1, $r1_1, $r1_2;
        char $c5, $c5_1, $c5_2;
        java.lang.StringBuilder $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5;

        $r0 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

(0)     if $i1 < 0 goto label1;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

(1)     if $i0 > $i2 goto label1;

(2)     if $i1 <= $i0 goto label2;

     label1:
        $i2_4 = Phi($i2 #0, $i2 #1, $i2 #2);

        $r1_2 = new java.lang.NumberFormatException;

        specialinvoke $r1_2.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0);

        throw $r1_2;

     label2:
        $i3 = 0;

        if $i1 >= $i0 goto label7;

        $i4 = $i1 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i2_1 = staticinvoke <java.lang.Character: int digit(char,int)>($c5, 10);

        if $i2_1 >= 0 goto label3;

        $r1 = new java.lang.NumberFormatException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2_1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number: ");

        $r0_1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        $r2_2 = virtualinvoke $r2_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0_1);

        $r0_2 = virtualinvoke $r2_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0_2);

        throw $r1;

     label3:
(3)     $i3_1 = neg $i2_1;

     label4:
        $i3_2 = Phi($i3_1 #3, $i3_4 #4, $i3 #5);

        $i4_1 = Phi($i4 #3, $i4_3 #4, $i4_4 #5);

        $c5_1 = Phi($c5 #3, $c5_2 #4, $c5 #5);

        $i2_2 = Phi($i2_1 #3, $i2_3 #4, $i2 #5);

        if $i4_1 >= $i0 goto label6;

        $i2_3 = $i4_1 + 1;

        $c5_2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4_1);

        $i4_2 = staticinvoke <java.lang.Character: int digit(char,int)>($c5_2, 10);

        if $i4_2 >= 0 goto label5;

        $r1_1 = new java.lang.NumberFormatException;

        $r2_3 = new java.lang.StringBuilder;

        specialinvoke $r2_3.<java.lang.StringBuilder: void <init>()>();

        $r2_4 = virtualinvoke $r2_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number: ");

        $r0_3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        $r2_5 = virtualinvoke $r2_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0_3);

        $r0_4 = virtualinvoke $r2_5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1_1.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r0_4);

        throw $r1_1;

     label5:
        $i3_3 = $i3_2 * 10;

        $i3_4 = $i3_3 - $i4_2;

        $i4_3 = $i2_3;

(4)     goto label4;

     label6:
        $i1_1 = neg $i3_2;

        return $i1_1;

     label7:
        $i4_4 = $i1;

(5)     goto label4;
    }
}
