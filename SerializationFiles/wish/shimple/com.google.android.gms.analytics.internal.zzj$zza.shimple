class com.google.android.gms.analytics.internal.zzj$zza extends android.database.sqlite.SQLiteOpenHelper
{
    final com.google.android.gms.analytics.internal.zzj zzQW;

    void <init>(com.google.android.gms.analytics.internal.zzj, android.content.Context, java.lang.String)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        com.google.android.gms.analytics.internal.zzj $r1;
        android.content.Context $r2;
        java.lang.String $r3;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: com.google.android.gms.analytics.internal.zzj;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: java.lang.String;

        $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW> = $r1;

        specialinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, $r3, null, 1);

        return;
    }

    private void zza(android.database.sqlite.SQLiteDatabase)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;
        int $i0, $i1, $i1_1, $i1_2;
        boolean $z0, $z1, $z1_1, $z1_2, $z0_1, $z1_3, $z0_2;
        java.util.Set $r3;
        java.lang.String $r4, $r4_1, $r4_2;
        android.database.sqlite.SQLiteException $r5, $r5_1;
        java.lang.StringBuilder $r6, $r6_1, $r6_2;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $z0 = 1;

        $r3 = specialinvoke $r0.<com.google.android.gms.analytics.internal.zzj$zza: java.util.Set zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r1, "hits2");

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "hit_id";

        $r2[1] = "hit_string";

        $r2[2] = "hit_time";

        $r2[3] = "hit_url";

        $i0 = lengthof $r2;

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #1);

        $z1 = Phi($z1 #0, $z1_1 #1);

        $r4 = Phi($r4 #0, $r4_1 #1);

        if $i1_1 >= $i0 goto label3;

        $r4_1 = $r2[$i1_1];

        $z1_1 = interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r4_1);

        if $z1_1 != 0 goto label2;

        $r5 = new android.database.sqlite.SQLiteException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Database hits2 is missing required column: ");

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_1);

        $r4_2 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r4_2);

        throw $r5;

     label2:
        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label3:
        $z1_2 = interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>("hit_app_id");

(2)     if $z1_2 != 0 goto label5;

     label4:
        $z0_1 = Phi($z0 #2, $z0_2 #3);

        $z1_3 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z1_3 != 0 goto label6;

        $r5_1 = new android.database.sqlite.SQLiteException;

        specialinvoke $r5_1.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>("Database hits2 has extra columns");

        throw $r5_1;

     label5:
        $z0_2 = 0;

(3)     goto label4;

     label6:
        if $z0_1 == 0 goto label7;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE hits2 ADD COLUMN hit_app_id INTEGER");

     label7:
        return;
    }

    private boolean zza(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;
        java.lang.String[] $r3, $r4;
        android.database.Cursor $r5, $r6, $r5_1, $r5_2, $r6_1, $r5_3, $r6_2, $r5_4, $r5_5, $r6_3, $r5_6, $r6_4, $r5_7;
        boolean $z0;
        android.database.sqlite.SQLiteException $r7, $r7_1, $r7_2, $r7_3, $r7_4;
        com.google.android.gms.analytics.internal.zzj $r8;
        java.lang.Throwable $r9, $r9_1, $r9_2;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        $r5 = null;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "name";

        $r4 = newarray (java.lang.String)[1];

(0)     $r4[0] = $r2;

     label01:
(1)     $r5_1 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("SQLITE_MASTER", $r3, "name=?", $r4, null, null, null);

     label02:
(2)     $r6 = $r5_1;

     label03:
        $z0 = interfaceinvoke $r5_1.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $r5_1 == null goto label14;

        interfaceinvoke $r5_1.<android.database.Cursor: void close()>();

        return $z0;

     label05:
        $r7_1 := @caughtexception;

        $r5_2 = Phi($r5 #0, $r5_1 #1);

(3)     $r6_1 = null;

     label06:
        $r5_3 = Phi($r5_2 #3, $r5_1 #7);

        $r7_2 = Phi($r7_1 #3, $r7 #7);

        $r6_2 = Phi($r6_1 #3, $r6 #7);

(4)     $r8 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

        virtualinvoke $r8.<com.google.android.gms.analytics.internal.zzj: void zzc(java.lang.String,java.lang.Object,java.lang.Object)>("Error querying for table", $r2, $r7_2);

     label07:
        if $r6_2 == null goto label08;

        interfaceinvoke $r6_2.<android.database.Cursor: void close()>();

     label08:
        return 0;

     label09:
        $r9 := @caughtexception;

(5)     $r5_4 = Phi($r5 #0, $r5_1 #1);

     label10:
        $r5_5 = Phi($r5_4 #5, $r5_7 #6);

        $r7_3 = Phi($r7 #5, $r7_4 #6);

        $r6_3 = Phi($r6 #5, $r6_4 #6);

        $r9_1 = Phi($r9 #5, $r9_2 #6);

        if $r5_5 == null goto label11;

        interfaceinvoke $r5_5.<android.database.Cursor: void close()>();

     label11:
        throw $r9_1;

     label12:
        $r9_2 := @caughtexception;

        $r5_6 = Phi($r5_1 #2, $r5_2 #3, $r5_3 #4);

        $r7_4 = Phi($r7 #2, $r7_1 #3, $r7_2 #4);

        $r6_4 = Phi($r6 #2, $r6_1 #3, $r6_2 #4);

        $r5_7 = $r6_4;

(6)     goto label10;

     label13:
        $r7 := @caughtexception;

(7)     goto label06;

     label14:
        return $z0;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label13;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
    }

    private java.util.Set zzb(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.util.HashSet $r2;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        java.lang.Throwable $r3;
        java.lang.String $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.StringBuilder $r5, $r5_1, $r5_2, $r5_3;
        android.database.Cursor $r6;
        java.lang.String[] $r7;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r4 := @parameter1: java.lang.String;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM ");

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5_3 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIMIT 0");

        $r4_1 = virtualinvoke $r5_3.<java.lang.StringBuilder: java.lang.String toString()>();

(0)     $r6 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r4_1, null);

     label1:
        $r7 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String[] getColumnNames()>();

     label2:
(1)     $i1 = 0;

     label3:
        $i1_1 = Phi($i1 #1, $i1_2 #4);

        $r4_2 = Phi($r4_1 #1, $r4_3 #4);

(2)     $i0 = lengthof $r7;

     label4:
        if $i1_1 >= $i0 goto label7;

     label5:
(3)     $r4_3 = $r7[$i1_1];

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r4_3);

     label6:
        $i1_2 = $i1_1 + 1;

(4)     goto label3;

     label7:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return $r2;

     label8:
        $r3 := @caughtexception;

        $i1_3 = Phi($i1 #0, $i1_2 #4, $i1_1 #2);

        $r4_4 = Phi($r4_1 #0, $r4_2 #2, $r4_3 #3);

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    private void zzb(android.database.sqlite.SQLiteDatabase)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;
        int $i0, $i1, $i1_1, $i1_2;
        java.util.Set $r3;
        java.lang.String $r4, $r4_1, $r4_2;
        boolean $z0, $z0_1, $z0_2;
        android.database.sqlite.SQLiteException $r5, $r5_1;
        java.lang.StringBuilder $r6, $r6_1, $r6_2;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i1 = 0;

        $r3 = specialinvoke $r0.<com.google.android.gms.analytics.internal.zzj$zza: java.util.Set zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r1, "properties");

        $r2 = newarray (java.lang.String)[6];

        $r2[0] = "app_uid";

        $r2[1] = "cid";

        $r2[2] = "tid";

        $r2[3] = "params";

        $r2[4] = "adid";

        $r2[5] = "hits_count";

(0)     $i0 = lengthof $r2;

     label1:
        $z0 = Phi($z0 #0, $z0_1 #1);

        $i1_1 = Phi($i1 #0, $i1_2 #1);

        $r4 = Phi($r4 #0, $r4_1 #1);

        if $i1_1 >= $i0 goto label3;

        $r4_1 = $r2[$i1_1];

        $z0_1 = interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r4_1);

        if $z0_1 != 0 goto label2;

        $r5 = new android.database.sqlite.SQLiteException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Database properties is missing required column: ");

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_1);

        $r4_2 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r4_2);

        throw $r5;

     label2:
        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label3:
        $z0_2 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0_2 != 0 goto label4;

        $r5_1 = new android.database.sqlite.SQLiteException;

        specialinvoke $r5_1.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>("Database properties table has extra columns");

        throw $r5_1;

     label4:
        return;
    }

    public android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteException $r1, $r4, $r4_1;
        com.google.android.gms.analytics.internal.zzj $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7;
        com.google.android.gms.analytics.internal.zzaj $r3, $r3_1, $r3_2, $r3_3;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r5, $r5_1, $r5_2, $r5_3;
        java.lang.String $r6;
        android.content.Context $r7;
        java.io.File $r8;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r2 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

        $r3 = staticinvoke <com.google.android.gms.analytics.internal.zzj: com.google.android.gms.analytics.internal.zzaj zza(com.google.android.gms.analytics.internal.zzj)>($r2);

        $z0 = virtualinvoke $r3.<com.google.android.gms.analytics.internal.zzaj: boolean zzv(long)>(3600000L);

(0)     if $z0 != 0 goto label1;

        $r4 = new android.database.sqlite.SQLiteException;

        specialinvoke $r4.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>("Database open failed");

        throw $r4;

     label1:
        $r5 = specialinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label2:
        return $r5;

     label3:
        $r4_1 := @caughtexception;

        $r5_1 = Phi($r5 #0);

        $r2_1 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

        $r3_1 = staticinvoke <com.google.android.gms.analytics.internal.zzj: com.google.android.gms.analytics.internal.zzaj zza(com.google.android.gms.analytics.internal.zzj)>($r2_1);

        virtualinvoke $r3_1.<com.google.android.gms.analytics.internal.zzaj: void start()>();

        $r2_2 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

        virtualinvoke $r2_2.<com.google.android.gms.analytics.internal.zzj: void zzbh(java.lang.String)>("Opening the database failed, dropping the table and recreating it");

        $r2_3 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

        $r6 = staticinvoke <com.google.android.gms.analytics.internal.zzj: java.lang.String zzb(com.google.android.gms.analytics.internal.zzj)>($r2_3);

        $r2_4 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

        $r7 = virtualinvoke $r2_4.<com.google.android.gms.analytics.internal.zzj: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r6);

(1)     virtualinvoke $r8.<java.io.File: boolean delete()>();

     label4:
(2)     $r5_2 = specialinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label5:
(3)     $r2_5 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

     label6:
(4)     $r3_2 = staticinvoke <com.google.android.gms.analytics.internal.zzj: com.google.android.gms.analytics.internal.zzaj zza(com.google.android.gms.analytics.internal.zzj)>($r2_5);

        virtualinvoke $r3_2.<com.google.android.gms.analytics.internal.zzaj: void clear()>();

     label7:
        return $r5_2;

     label8:
        $r1 := @caughtexception;

        $r2_6 = Phi($r2_4 #1, $r2_5 #3);

        $r3_3 = Phi($r3_1 #1, $r3_2 #4);

        $r5_3 = Phi($r5_1 #1, $r5_2 #2);

        $r2_7 = $r0.<com.google.android.gms.analytics.internal.zzj$zza: com.google.android.gms.analytics.internal.zzj zzQW>;

        virtualinvoke $r2_7.<com.google.android.gms.analytics.internal.zzj: void zze(java.lang.String,java.lang.Object)>("Failed to open freshly created database", $r1);

        throw $r1;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
        catch android.database.sqlite.SQLiteException from label4 to label5 with label8;
        catch android.database.sqlite.SQLiteException from label6 to label7 with label8;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        staticinvoke <com.google.android.gms.analytics.internal.zzx: boolean zzbo(java.lang.String)>($r2);

        return;
    }

    public void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.Throwable $r2;
        android.database.Cursor $r3;
        boolean $z0, $z0_1;
        java.lang.String $r4;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 15 goto label3;

        $r3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("PRAGMA journal_mode=memory", null);

     label1:
        interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label3:
        $z0 = specialinvoke $r0.<com.google.android.gms.analytics.internal.zzj$zza: boolean zza(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r1, "hits2");

        if $z0 != 0 goto label6;

        $r4 = staticinvoke <com.google.android.gms.analytics.internal.zzj: java.lang.String zzjR()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

     label4:
        $z0_1 = specialinvoke $r0.<com.google.android.gms.analytics.internal.zzj$zza: boolean zza(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r1, "properties");

        if $z0_1 != 0 goto label7;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS properties ( app_uid INTEGER NOT NULL, cid TEXT NOT NULL, tid TEXT NOT NULL, params TEXT NOT NULL, adid INTEGER NOT NULL, hits_count INTEGER NOT NULL, PRIMARY KEY (app_uid, cid, tid)) ;");

        return;

     label5:
        $r2 := @caughtexception;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        throw $r2;

     label6:
        specialinvoke $r0.<com.google.android.gms.analytics.internal.zzj$zza: void zza(android.database.sqlite.SQLiteDatabase)>($r1);

        goto label4;

     label7:
        specialinvoke $r0.<com.google.android.gms.analytics.internal.zzj$zza: void zzb(android.database.sqlite.SQLiteDatabase)>($r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.google.android.gms.analytics.internal.zzj$zza $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;

        $r0 := @this: com.google.android.gms.analytics.internal.zzj$zza;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
}
