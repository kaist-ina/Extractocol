public class android.text.TextUtils extends java.lang.Object
{
    public static final int CAP_MODE_CHARACTERS;
    public static final int CAP_MODE_SENTENCES;
    public static final int CAP_MODE_WORDS;
    public static final android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR;

    void <init>()
    {
        android.text.TextUtils r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.text.TextUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void getChars(java.lang.CharSequence, int, int, char[], int)
    {
        java.lang.CharSequence r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: char[];

        i2 := @parameter4: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int indexOf(java.lang.CharSequence, char)
    {
        java.lang.CharSequence r0;
        char c0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int indexOf(java.lang.CharSequence, char, int)
    {
        java.lang.CharSequence r0;
        char c0;
        int i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int indexOf(java.lang.CharSequence, char, int, int)
    {
        java.lang.CharSequence r0;
        char c0;
        int i1, i2;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int lastIndexOf(java.lang.CharSequence, char)
    {
        java.lang.CharSequence r0;
        char c0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int lastIndexOf(java.lang.CharSequence, char, int)
    {
        java.lang.CharSequence r0;
        char c0;
        int i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int lastIndexOf(java.lang.CharSequence, char, int, int)
    {
        java.lang.CharSequence r0;
        char c0;
        int i1, i2;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int indexOf(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int indexOf(java.lang.CharSequence, java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0, r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int indexOf(java.lang.CharSequence, java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0, r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean regionMatches(java.lang.CharSequence, int, java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0, r1;
        int i0, i1, i2;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.String substring(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.String join(java.lang.CharSequence, java.lang.Object[])
    {
        java.lang.CharSequence r0;
        java.lang.Object[] r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.Object[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.String join(java.lang.CharSequence, java.lang.Iterable)
    {
        java.lang.CharSequence r0;
        java.lang.Iterable r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.Iterable;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.String[] split(java.lang.String, java.util.regex.Pattern)
    {
        java.lang.String r0;
        java.util.regex.Pattern r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static boolean isEmpty(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int getTrimmedLength(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static boolean equals(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.lang.CharSequence getReverse(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void writeToParcel(java.lang.CharSequence, android.os.Parcel, int)
    {
        java.lang.CharSequence r0;
        android.os.Parcel r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.os.Parcel;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static void dumpSpans(java.lang.CharSequence, android.util.Printer, java.lang.String)
    {
        java.lang.CharSequence r0;
        android.util.Printer r1;
        java.lang.String r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.util.Printer;

        r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static java.lang.CharSequence replace(java.lang.CharSequence, java.lang.String[], java.lang.CharSequence[])
    {
        java.lang.CharSequence r0;
        java.lang.String[] r1;
        java.lang.CharSequence[] r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.CharSequence[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static transient java.lang.CharSequence expandTemplate(java.lang.CharSequence, java.lang.CharSequence[])
    {
        java.lang.CharSequence r0;
        java.lang.CharSequence[] r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int getOffsetBefore(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int getOffsetAfter(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void copySpansFrom(android.text.Spanned, int, int, java.lang.Class, android.text.Spannable, int)
    {
        android.text.Spanned r0;
        int i0, i1, i2;
        java.lang.Class r1;
        android.text.Spannable r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.text.Spanned;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Class;

        r2 := @parameter4: android.text.Spannable;

        i2 := @parameter5: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static java.lang.CharSequence ellipsize(java.lang.CharSequence, android.text.TextPaint, float, android.text.TextUtils$TruncateAt)
    {
        java.lang.CharSequence r0;
        android.text.TextPaint r1;
        float f0;
        android.text.TextUtils$TruncateAt r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.text.TextPaint;

        f0 := @parameter2: float;

        r2 := @parameter3: android.text.TextUtils$TruncateAt;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static java.lang.CharSequence ellipsize(java.lang.CharSequence, android.text.TextPaint, float, android.text.TextUtils$TruncateAt, boolean, android.text.TextUtils$EllipsizeCallback)
    {
        java.lang.CharSequence r0;
        android.text.TextPaint r1;
        float f0;
        android.text.TextUtils$TruncateAt r2;
        boolean z0;
        android.text.TextUtils$EllipsizeCallback r3;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.text.TextPaint;

        f0 := @parameter2: float;

        r2 := @parameter3: android.text.TextUtils$TruncateAt;

        z0 := @parameter4: boolean;

        r3 := @parameter5: android.text.TextUtils$EllipsizeCallback;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public static java.lang.CharSequence commaEllipsize(java.lang.CharSequence, android.text.TextPaint, float, java.lang.String, java.lang.String)
    {
        java.lang.CharSequence r0;
        android.text.TextPaint r1;
        float f0;
        java.lang.String r2, r3;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.text.TextPaint;

        f0 := @parameter2: float;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public static java.lang.String htmlEncode(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static transient java.lang.CharSequence concat(java.lang.CharSequence[])
    {
        java.lang.CharSequence[] r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence[];

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static boolean isGraphic(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static boolean isGraphic(char)
    {
        char c0;
        java.lang.RuntimeException $r0;

        c0 := @parameter0: char;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static boolean isDigitsOnly(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int getCapsMode(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int getLayoutDirectionFromLocale(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Locale;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    static void <clinit>()
    {
        <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR> = null;

        return;
    }
}
