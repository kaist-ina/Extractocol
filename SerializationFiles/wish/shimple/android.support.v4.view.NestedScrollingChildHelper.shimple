public class android.support.v4.view.NestedScrollingChildHelper extends java.lang.Object
{
    private boolean mIsNestedScrollingEnabled;
    private android.view.ViewParent mNestedScrollingParent;
    private int[] mTempNestedScrollConsumed;
    private final android.view.View mView;

    public void <init>(android.view.View)
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $r1 := @parameter0: android.view.View;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView> = $r1;

        return;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        float $f0, $f1;
        android.view.View $r1;
        boolean $z0, $z1, $z0_1;
        android.view.ViewParent $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

(0)     if $z1 == 0 goto label1;

        $r2 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

(1)     if $r2 == null goto label1;

        $r2_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

        $r1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        $z0_1 = staticinvoke <android.support.v4.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>($r2_1, $r1, $f0, $f1, $z0);

        return $z0_1;

     label1:
        $r2_2 = Phi($r2 #0, $r2 #1);

        return 0;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        float $f0, $f1;
        android.view.View $r1;
        boolean $z0, $z0_1;
        android.view.ViewParent $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 = virtualinvoke $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

(0)     if $z0 == 0 goto label1;

        $r2 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

(1)     if $r2 == null goto label1;

        $r2_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

        $r1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        $z0_1 = staticinvoke <android.support.v4.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>($r2_1, $r1, $f0, $f1);

        return $z0_1;

     label1:
        $r2_2 = Phi($r2 #0, $r2 #1);

        return 0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        int $i0, $i1, $i2, $i3, $i2_1, $i3_1, $i2_2, $i3_2, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5, $i1_6, $i1_7, $i1_8, $i2_3, $i3_3, $i1_9;
        int[] $r1, $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6;
        boolean $z0;
        android.view.ViewParent $r3, $r3_1, $r3_2;
        android.view.View $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r2 := @parameter2: int[];

        $r1 := @parameter3: int[];

        $z0 = virtualinvoke $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

(0)     if $z0 == 0 goto label8;

        $r3 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

(1)     if $r3 == null goto label8;

        if $i1 != 0 goto label1;

        if $i0 == 0 goto label7;

     label1:
        $i2 = 0;

        $i3 = 0;

(2)     if $r1 == null goto label2;

        $r4 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void getLocationInWindow(int[])>($r1);

        $i2_1 = $r1[0];

(3)     $i3_1 = $r1[1];

     label2:
        $i2_2 = Phi($i2 #2, $i2_1 #3);

        $i3_2 = Phi($i3 #2, $i3_1 #3);

        $r4_1 = Phi($r4 #2, $r4 #3);

(4)     if $r2 != null goto label4;

        $r2_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed>;

(5)     if $r2_1 != null goto label3;

        $r2_2 = newarray (int)[2];

(6)     $r0.<android.support.v4.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed> = $r2_2;

     label3:
        $r2_3 = Phi($r2_1 #5, $r2_2 #6);

(7)     $r2_4 = $r0.<android.support.v4.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed>;

     label4:
        $r2_5 = Phi($r2 #4, $r2_4 #7);

        $r2_5[0] = 0;

        $r2_5[1] = 0;

        $r3_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

        $r4_2 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <android.support.v4.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])>($r3_1, $r4_2, $i1, $i0, $r2_5);

(8)     if $r1 == null goto label5;

        $r4_3 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r4_3.<android.view.View: void getLocationInWindow(int[])>($r1);

        $i1_1 = $r1[0];

        $i1_2 = $i1_1 - $i2_2;

        $r1[0] = $i1_2;

        $i1_3 = $r1[1];

        $i1_4 = $i1_3 - $i3_2;

(9)     $r1[1] = $i1_4;

     label5:
        $r4_4 = Phi($r4_2 #8, $r4_3 #9);

        $i1_5 = Phi($i1 #8, $i1_4 #9);

        $i1_6 = $r2_5[0];

(10)    if $i1_6 != 0 goto label6;

        $i1_7 = $r2_5[1];

(11)    if $i1_7 == 0 goto label8;

     label6:
        $i1_8 = Phi($i1_6 #10, $i1_7 #11);

        return 1;

     label7:
(12)    if $r1 == null goto label8;

        $r1[0] = 0;

(13)    $r1[1] = 0;

     label8:
        $i2_3 = Phi($i2 #0, $i2 #1, $i2_2 #11, $i2 #12, $i2 #13);

        $i3_3 = Phi($i3 #0, $i3 #1, $i3_2 #11, $i3 #12, $i3 #13);

        $r4_5 = Phi($r4 #0, $r4 #1, $r4_4 #11, $r4 #12, $r4 #13);

        $r2_6 = Phi($r2 #0, $r2 #1, $r2_5 #11, $r2 #12, $r2 #13);

        $r3_2 = Phi($r3 #0, $r3 #1, $r3_1 #11, $r3 #12, $r3 #13);

        $i1_9 = Phi($i1 #0, $i1 #1, $i1_7 #11, $i1 #12, $i1 #13);

        return 0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i4_1, $i5_1, $i4_2, $i5_2, $i3_1, $i3_2, $i3_3, $i3_4, $i3_5;
        int[] $r1;
        boolean $z0;
        android.view.ViewParent $r2, $r2_1, $r2_2;
        android.view.View $r3, $r3_1, $r3_2, $r3_3, $r3_4;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: int[];

        $z0 = virtualinvoke $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

(0)     if $z0 == 0 goto label5;

        $r2 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

(1)     if $r2 == null goto label5;

        if $i3 != 0 goto label1;

        if $i0 != 0 goto label1;

        if $i1 != 0 goto label1;

        if $i2 == 0 goto label4;

     label1:
        $i4 = 0;

        $i5 = 0;

(2)     if $r1 == null goto label2;

        $r3 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void getLocationInWindow(int[])>($r1);

        $i4_1 = $r1[0];

(3)     $i5_1 = $r1[1];

     label2:
        $i4_2 = Phi($i4 #2, $i4_1 #3);

        $i5_2 = Phi($i5 #2, $i5_1 #3);

        $r3_1 = Phi($r3 #2, $r3 #3);

        $r2_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

        $r3_2 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <android.support.v4.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)>($r2_1, $r3_2, $i3, $i0, $i1, $i2);

(4)     if $r1 == null goto label3;

        $r3_3 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r3_3.<android.view.View: void getLocationInWindow(int[])>($r1);

        $i3_1 = $r1[0];

        $i3_2 = $i3_1 - $i4_2;

        $r1[0] = $i3_2;

        $i3_3 = $r1[1];

        $i3_4 = $i3_3 - $i5_2;

(5)     $r1[1] = $i3_4;

     label3:
        $r3_4 = Phi($r3_2 #4, $r3_3 #5);

        $i3_5 = Phi($i3 #4, $i3_4 #5);

        return 1;

     label4:
(6)     if $r1 == null goto label5;

        $r1[0] = 0;

(7)     $r1[1] = 0;

     label5:
        $r2_2 = Phi($r2 #0, $r2 #1, $r2 #6, $r2 #7);

        return 0;
    }

    public boolean hasNestedScrollingParent()
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        android.view.ViewParent $r1;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $r1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isNestedScrollingEnabled()
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        boolean z0;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        z0 = $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled>;

        return z0;
    }

    public void onDetachedFromWindow()
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $r1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <android.support.v4.view.ViewCompat: void stopNestedScroll(android.view.View)>($r1);

        return;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        android.view.View $r1, $r1_1;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $r1 := @parameter0: android.view.View;

        $r1_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <android.support.v4.view.ViewCompat: void stopNestedScroll(android.view.View)>($r1_1);

        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        boolean $z0, $z1;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled>;

        if $z1 == 0 goto label1;

        $r1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <android.support.v4.view.ViewCompat: void stopNestedScroll(android.view.View)>($r1);

     label1:
        $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled> = $z0;

        return;
    }

    public boolean startNestedScroll(int)
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        int $i0;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        android.view.View $r1, $r3, $r1_1, $r1_2, $r3_1, $r3_2, $r1_3, $r1_4, $r1_5, $r3_3;
        android.view.ViewParent $r2, $r2_1, $r2_2, $r2_3;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0_1 = virtualinvoke $r0.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

(0)     if $z0_1 == 0 goto label5;

        $r1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

(1)     $r1_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

     label2:
        $r2_1 = Phi($r2 #1, $r2_2 #5);

        $r1_2 = Phi($r1_1 #1, $r1_4 #5);

        $z0_2 = Phi($z0_1 #1, $z0_4 #5);

        $r3 = Phi($r3 #1, $r3_1 #5);

(2)     if $r2_1 == null goto label5;

        $r3_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        $z0_3 = staticinvoke <android.support.v4.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)>($r2_1, $r1_2, $r3_1, $i0);

        if $z0_3 == 0 goto label3;

        $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent> = $r2_1;

        $r3_2 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <android.support.v4.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)>($r2_1, $r1_2, $r3_2, $i0);

        return 1;

     label3:
        $z0_4 = $r2_1 instanceof android.view.View;

(3)     if $z0_4 == 0 goto label4;

(4)     $r1_3 = (android.view.View) $r2_1;

     label4:
        $r1_4 = Phi($r1_2 #3, $r1_3 #4);

        $r2_2 = interfaceinvoke $r2_1.<android.view.ViewParent: android.view.ViewParent getParent()>();

(5)     goto label2;

     label5:
        $r2_3 = Phi($r2 #0, $r2_1 #2);

        $r1_5 = Phi($r1 #0, $r1_2 #2);

        $z0_5 = Phi($z0_1 #0, $z0_2 #2);

        $r3_3 = Phi($r3 #0, $r3 #2);

        return 0;
    }

    public void stopNestedScroll()
    {
        android.support.v4.view.NestedScrollingChildHelper $r0;
        android.view.View $r1;
        android.view.ViewParent $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.view.NestedScrollingChildHelper;

        $r2 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

(0)     if $r2 == null goto label1;

        $r2_1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent>;

        $r1 = $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <android.support.v4.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View)>($r2_1, $r1);

(1)     $r0.<android.support.v4.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParent> = null;

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        return;
    }
}
