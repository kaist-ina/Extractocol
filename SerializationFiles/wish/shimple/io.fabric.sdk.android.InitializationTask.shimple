class io.fabric.sdk.android.InitializationTask extends io.fabric.sdk.android.services.concurrency.PriorityAsyncTask
{
    private static final java.lang.String TIMING_METRIC_TAG;
    final io.fabric.sdk.android.Kit kit;

    public void <init>(io.fabric.sdk.android.Kit)
    {
        io.fabric.sdk.android.InitializationTask $r0;
        io.fabric.sdk.android.Kit $r1;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        specialinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: void <init>()>();

        $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit> = $r1;

        return;
    }

    private io.fabric.sdk.android.services.common.TimingMetric createAndStartTimingMetric(java.lang.String)
    {
        io.fabric.sdk.android.InitializationTask $r0;
        io.fabric.sdk.android.services.common.TimingMetric $r1;
        io.fabric.sdk.android.Kit $r2;
        java.lang.String $r3, $r5, $r3_1;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r3 := @parameter0: java.lang.String;

        $r1 = new io.fabric.sdk.android.services.common.TimingMetric;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r5 = virtualinvoke $r2.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3_1 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<io.fabric.sdk.android.services.common.TimingMetric: void <init>(java.lang.String,java.lang.String)>($r3_1, "KitInitialization");

        virtualinvoke $r1.<io.fabric.sdk.android.services.common.TimingMetric: void startMeasuring()>();

        return $r1;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        io.fabric.sdk.android.InitializationTask $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.Void[] $r3;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r1 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r1;

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.InitializationTask: java.lang.Object doInBackground(java.lang.Void[])>($r3);

        return $r2;
    }

    protected transient java.lang.Object doInBackground(java.lang.Void[])
    {
        io.fabric.sdk.android.InitializationTask $r0;
        java.lang.Void[] $r1;
        io.fabric.sdk.android.Kit $r2;
        io.fabric.sdk.android.services.common.TimingMetric $r3;
        java.lang.Object $r4, $r4_1, $r4_2;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r1 := @parameter0: java.lang.Void[];

        $r3 = specialinvoke $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.services.common.TimingMetric createAndStartTimingMetric(java.lang.String)>("doInBackground");

        $r4 = null;

        $z0 = virtualinvoke $r0.<io.fabric.sdk.android.InitializationTask: boolean isCancelled()>();

(0)     if $z0 != 0 goto label1;

        $r2 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

(1)     $r4_1 = virtualinvoke $r2.<io.fabric.sdk.android.Kit: java.lang.Object doInBackground()>();

     label1:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        virtualinvoke $r3.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        return $r4_2;
    }

    public io.fabric.sdk.android.services.concurrency.Priority getPriority()
    {
        io.fabric.sdk.android.InitializationTask $r0;
        io.fabric.sdk.android.services.concurrency.Priority r1;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        r1 = <io.fabric.sdk.android.services.concurrency.Priority: io.fabric.sdk.android.services.concurrency.Priority HIGH>;

        return r1;
    }

    protected void onCancelled(java.lang.Object)
    {
        io.fabric.sdk.android.InitializationTask $r0;
        java.lang.Object $r1;
        io.fabric.sdk.android.InitializationException $r2;
        io.fabric.sdk.android.InitializationCallback $r3;
        io.fabric.sdk.android.Kit $r4, $r4_1, $r4_2;
        java.lang.StringBuilder $r5, $r5_1, $r5_2;
        java.lang.String $r6, $r6_1;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r1 := @parameter0: java.lang.Object;

        $r4 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        virtualinvoke $r4.<io.fabric.sdk.android.Kit: void onCancelled(java.lang.Object)>($r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r6 = virtualinvoke $r4_1.<io.fabric.sdk.android.Kit: java.lang.String getIdentifier()>();

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Initialization was cancelled");

        $r6_1 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new io.fabric.sdk.android.InitializationException;

        specialinvoke $r2.<io.fabric.sdk.android.InitializationException: void <init>(java.lang.String)>($r6_1);

        $r4_2 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r3 = $r4_2.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        interfaceinvoke $r3.<io.fabric.sdk.android.InitializationCallback: void failure(java.lang.Exception)>($r2);

        return;
    }

    protected void onPostExecute(java.lang.Object)
    {
        io.fabric.sdk.android.InitializationTask $r0;
        java.lang.Object $r1;
        io.fabric.sdk.android.InitializationCallback $r2;
        io.fabric.sdk.android.Kit $r3, $r3_1;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        $r1 := @parameter0: java.lang.Object;

        $r3 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        virtualinvoke $r3.<io.fabric.sdk.android.Kit: void onPostExecute(java.lang.Object)>($r1);

        $r3_1 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

        $r2 = $r3_1.<io.fabric.sdk.android.Kit: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        interfaceinvoke $r2.<io.fabric.sdk.android.InitializationCallback: void success(java.lang.Object)>($r1);

        return;
    }

    protected void onPreExecute()
    {
        io.fabric.sdk.android.InitializationTask $r0;
        io.fabric.sdk.android.Kit $r1;
        io.fabric.sdk.android.services.concurrency.UnmetDependencyException $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;
        io.fabric.sdk.android.services.common.TimingMetric $r5;
        boolean $z0;
        io.fabric.sdk.android.Logger $r6;

        $r0 := @this: io.fabric.sdk.android.InitializationTask;

        specialinvoke $r0.<io.fabric.sdk.android.services.concurrency.PriorityAsyncTask: void onPreExecute()>();

        $r5 = specialinvoke $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.services.common.TimingMetric createAndStartTimingMetric(java.lang.String)>("onPreExecute");

        $r1 = $r0.<io.fabric.sdk.android.InitializationTask: io.fabric.sdk.android.Kit kit>;

     label1:
        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.Kit: boolean onPreExecute()>();

     label2:
        virtualinvoke $r5.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        if $z0 != 0 goto label9;

        virtualinvoke $r0.<io.fabric.sdk.android.InitializationTask: boolean cancel(boolean)>(1);

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        throw $r2;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r5.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        virtualinvoke $r0.<io.fabric.sdk.android.InitializationTask: boolean cancel(boolean)>(1);

        throw $r3;

     label6:
        $r4 := @caughtexception;

     label7:
        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failure onPreExecute()", $r4);

     label8:
        virtualinvoke $r5.<io.fabric.sdk.android.services.common.TimingMetric: void stopMeasuring()>();

        virtualinvoke $r0.<io.fabric.sdk.android.InitializationTask: boolean cancel(boolean)>(1);

     label9:
        return;

        catch io.fabric.sdk.android.services.concurrency.UnmetDependencyException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }
}
