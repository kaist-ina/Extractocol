class com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController extends com.crashlytics.android.beta.AbstractCheckForUpdatesController
{
    private final io.fabric.sdk.android.ActivityLifecycleManager$Callbacks callbacks;
    private final java.util.concurrent.ExecutorService executorService;

    public void <init>(io.fabric.sdk.android.ActivityLifecycleManager, java.util.concurrent.ExecutorService)
    {
        com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController $r0;
        io.fabric.sdk.android.ActivityLifecycleManager $r1;
        java.util.concurrent.ExecutorService $r2;
        com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController$1 $r3;
        io.fabric.sdk.android.ActivityLifecycleManager$Callbacks $r4;

        $r0 := @this: com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController;

        $r1 := @parameter0: io.fabric.sdk.android.ActivityLifecycleManager;

        $r2 := @parameter1: java.util.concurrent.ExecutorService;

        specialinvoke $r0.<com.crashlytics.android.beta.AbstractCheckForUpdatesController: void <init>()>();

        $r3 = new com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController$1;

        specialinvoke $r3.<com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController$1: void <init>(com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController)>($r0);

        $r0.<com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks callbacks> = $r3;

        $r0.<com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController: java.util.concurrent.ExecutorService executorService> = $r2;

        $r4 = $r0.<com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController: io.fabric.sdk.android.ActivityLifecycleManager$Callbacks callbacks>;

        virtualinvoke $r1.<io.fabric.sdk.android.ActivityLifecycleManager: boolean registerCallbacks(io.fabric.sdk.android.ActivityLifecycleManager$Callbacks)>($r4);

        return;
    }

    static java.util.concurrent.ExecutorService access$000(com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController)
    {
        com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController $r0;
        java.util.concurrent.ExecutorService r1;

        $r0 := @parameter0: com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController;

        r1 = $r0.<com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController: java.util.concurrent.ExecutorService executorService>;

        return r1;
    }

    public boolean isActivityLifecycleTriggered()
    {
        com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController $r0;

        $r0 := @this: com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController;

        return 1;
    }
}
