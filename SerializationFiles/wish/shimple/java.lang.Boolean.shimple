public final class java.lang.Boolean extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    public static final java.lang.Boolean FALSE;
    public static final java.lang.Boolean TRUE;
    public static final java.lang.Class TYPE;

    public void <init>(java.lang.String)
    {
        java.lang.Boolean r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Boolean;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(boolean)
    {
        java.lang.Boolean r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Boolean;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean booleanValue()
    {
        java.lang.Boolean r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Boolean r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Boolean;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int compareTo(java.lang.Boolean)
    {
        java.lang.Boolean r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Boolean;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int compare(boolean, boolean)
    {
        boolean z0, z1;
        java.lang.RuntimeException $r0;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public int hashCode()
    {
        java.lang.Boolean r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Boolean r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static boolean getBoolean(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static boolean parseBoolean(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.String toString(boolean)
    {
        boolean z0;
        java.lang.RuntimeException $r0;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.lang.Boolean valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.Boolean valueOf(boolean)
    {
        boolean z0;
        java.lang.RuntimeException $r0;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.lang.Boolean r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.lang.Boolean;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        $i0 = virtualinvoke r0.<java.lang.Boolean: int compareTo(java.lang.Boolean)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        <java.lang.Boolean: java.lang.Boolean FALSE> = null;

        <java.lang.Boolean: java.lang.Boolean TRUE> = null;

        <java.lang.Boolean: java.lang.Class TYPE> = null;

        return;
    }
}
