public class io.fabric.sdk.android.services.common.InstallerPackageNameProvider extends java.lang.Object
{
    private static final java.lang.String NO_INSTALLER_PACKAGE_NAME;
    private final io.fabric.sdk.android.services.cache.MemoryValueCache installerPackageNameCache;
    private final io.fabric.sdk.android.services.cache.ValueLoader installerPackageNameLoader;

    public void <init>()
    {
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider $r0;
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1 $r1;
        io.fabric.sdk.android.services.cache.MemoryValueCache $r2;

        $r0 := @this: io.fabric.sdk.android.services.common.InstallerPackageNameProvider;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1;

        specialinvoke $r1.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1: void <init>(io.fabric.sdk.android.services.common.InstallerPackageNameProvider)>($r0);

        $r0.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: io.fabric.sdk.android.services.cache.ValueLoader installerPackageNameLoader> = $r1;

        $r2 = new io.fabric.sdk.android.services.cache.MemoryValueCache;

        specialinvoke $r2.<io.fabric.sdk.android.services.cache.MemoryValueCache: void <init>()>();

        $r0.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: io.fabric.sdk.android.services.cache.MemoryValueCache installerPackageNameCache> = $r2;

        return;
    }

    public java.lang.String getInstallerPackageName(android.content.Context)
    {
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider $r0;
        android.content.Context $r1;
        io.fabric.sdk.android.services.cache.MemoryValueCache $r2;
        io.fabric.sdk.android.services.cache.ValueLoader $r3;
        java.lang.String $r4, $r7;
        java.lang.Exception $r5;
        java.lang.Object $r6;
        boolean $z0;
        io.fabric.sdk.android.Logger $r8;

        $r0 := @this: io.fabric.sdk.android.services.common.InstallerPackageNameProvider;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r2 = $r0.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: io.fabric.sdk.android.services.cache.MemoryValueCache installerPackageNameCache>;

        $r3 = $r0.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: io.fabric.sdk.android.services.cache.ValueLoader installerPackageNameLoader>;

        $r6 = virtualinvoke $r2.<io.fabric.sdk.android.services.cache.MemoryValueCache: java.lang.Object get(android.content.Context,io.fabric.sdk.android.services.cache.ValueLoader)>($r1, $r3);

        $r7 = (java.lang.String) $r6;

     label2:
        $r4 = "";

     label3:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label4:
        if $z0 == 0 goto label6;

        return null;

     label5:
        $r5 := @caughtexception;

        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to determine installer package name", $r5);

        return null;

     label6:
        return $r7;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
