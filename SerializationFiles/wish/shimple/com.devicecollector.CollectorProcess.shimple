public class com.devicecollector.CollectorProcess extends com.devicecollector.AbstractCollectorProcess implements com.devicecollector.collectors.CollectorStatusListener
{
    protected static final int GINGERBREAD_MR1;
    private java.util.ArrayList collectors;
    private com.devicecollector.DataCollection dataCollection;
    private java.lang.Exception errorCause;
    private com.devicecollector.DeviceCollector$ErrorCode errorCode;

    public void <init>(android.app.Activity, com.devicecollector.DeviceCollector$StatusListener, java.util.EnumSet)
    {
        com.devicecollector.CollectorProcess $r0;
        android.app.Activity $r1;
        com.devicecollector.DeviceCollector$StatusListener $r2;
        java.util.EnumSet $r3;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: com.devicecollector.DeviceCollector$StatusListener;

        $r3 := @parameter2: java.util.EnumSet;

        specialinvoke $r0.<com.devicecollector.AbstractCollectorProcess: void <init>(android.app.Activity,com.devicecollector.DeviceCollector$StatusListener,java.util.EnumSet)>($r1, $r2, $r3);

        return;
    }

    private void checkIfDone()
    {
        com.devicecollector.CollectorProcess $r0;
        java.util.ArrayList $r1, $r3, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5, $r1_6, $r1_7, $r1_8, $r1_9, $r1_10;
        java.lang.Object[] $r2, $r2_1, $r2_2;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        java.util.Iterator $r4, $r4_1, $r4_2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3, $r5_4;
        com.devicecollector.collectors.AbstractAsyncCollectorTask $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        com.devicecollector.DataCollection $r7, $r7_1, $r7_2;
        java.lang.String $r8, $r8_1, $r8_2;
        java.lang.StringBuilder $r9, $r9_1, $r9_2;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("checking if we are done...", $r2);

        $r1 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(0)     if $r1 == null goto label4;

        $r1_1 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

        $i0 = virtualinvoke $r1_1.<java.util.ArrayList: int size()>();

(1)     if $i0 <= 0 goto label4;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1_2 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(2)     $r4 = virtualinvoke $r1_2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $r6 = Phi($r6 #2, $r6_1 #3, $r6_1 #4);

        $r5 = Phi($r5 #2, $r5_1 #3, $r5_1 #4);

        $z0 = Phi($z0 #2, $z0_2 #3, $z0_2 #4);

        $z0_1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label2;

        $r5_1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6_1 = (com.devicecollector.collectors.AbstractAsyncCollectorTask) $r5_1;

        $z0_2 = virtualinvoke $r6_1.<com.devicecollector.collectors.AbstractAsyncCollectorTask: boolean isFinished()>();

(3)     if $z0_2 == 0 goto label1;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6_1);

(4)     goto label1;

     label2:
(5)     $r4_1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $r6_2 = Phi($r6 #5, $r6_3 #7);

        $r1_3 = Phi($r1_2 #5, $r1_4 #7);

        $r5_2 = Phi($r5 #5, $r5_3 #7);

        $z0_3 = Phi($z0_1 #5, $z0_4 #7);

        $z0_4 = interfaceinvoke $r4_1.<java.util.Iterator: boolean hasNext()>();

(6)     if $z0_4 == 0 goto label4;

        $r5_3 = interfaceinvoke $r4_1.<java.util.Iterator: java.lang.Object next()>();

        $r6_3 = (com.devicecollector.collectors.AbstractAsyncCollectorTask) $r5_3;

        $r1_4 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

        virtualinvoke $r1_4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r6_3);

(7)     goto label3;

     label4:
        $r6_4 = Phi($r6 #0, $r6 #1, $r6_2 #6);

        $i0_1 = Phi($i0 #0, $i0 #1, $i0 #6);

        $r1_5 = Phi($r1 #0, $r1_1 #1, $r1_3 #6);

        $r5_4 = Phi($r5 #0, $r5 #1, $r5_2 #6);

        $z0_5 = Phi($z0 #0, $z0 #1, $z0_4 #6);

        $r4_2 = Phi($r4 #0, $r4 #1, $r4_1 #6);

        $r7 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

(8)     if $r7 == null goto label6;

        $r7_1 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r8 = virtualinvoke $r7_1.<com.devicecollector.DataCollection: java.lang.String getServerUrl()>();

(9)     if $r8 == null goto label6;

        $r1_6 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(10)    if $r1_6 == null goto label5;

        $r1_7 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

        $i0_2 = virtualinvoke $r1_7.<java.util.ArrayList: int size()>();

(11)    if $i0_2 != 0 goto label6;

     label5:
        $i0_3 = Phi($i0_1 #10, $i0_2 #11);

        $r1_8 = Phi($r1_6 #10, $r1_7 #11);

        $r2_1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("All done, sending data...", $r2_1);

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void sendDataCollection()>();

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void endProcess(com.devicecollector.DeviceCollector$ErrorCode,java.lang.Exception)>(null, null);

        return;

     label6:
        $i0_4 = Phi($i0_1 #8, $i0_1 #9, $i0_2 #11);

        $r1_9 = Phi($r1_5 #8, $r1_5 #9, $r1_7 #11);

        $r7_2 = Phi($r7 #8, $r7_1 #9, $r7_1 #11);

        $r8_1 = Phi($r8 #8, $r8 #9, $r8 #11);

        $r2_2 = newarray (java.lang.Object)[1];

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9_1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1_10 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

        $i0_5 = virtualinvoke $r1_10.<java.util.ArrayList: int size()>();

        $r9_2 = virtualinvoke $r9_1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0_5);

        $r8_2 = virtualinvoke $r9_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2_2[0] = $r8_2;

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("[%s] collectors left", $r2_2);

        return;
    }

    private void endProcess(com.devicecollector.DeviceCollector$ErrorCode, java.lang.Exception)
    {
        com.devicecollector.CollectorProcess $r0;
        java.lang.Throwable $r1;
        com.devicecollector.DeviceCollector$ErrorCode $r2, $r2_1, $r2_2, $r2_3, $r2_4;
        java.lang.Exception $r3, $r3_1, $r3_2, $r3_3;
        com.devicecollector.DeviceCollector$StatusListener $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.Object[] $r5, $r5_1, $r5_2, $r5_3, $r5_4;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r2 := @parameter0: com.devicecollector.DeviceCollector$ErrorCode;

        $r3 := @parameter1: java.lang.Exception;

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished> = 1;

        if $r2 == null goto label1;

        $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DeviceCollector$ErrorCode errorCode> = $r2;

        $r0.<com.devicecollector.CollectorProcess: java.lang.Exception errorCause> = $r3;

     label1:
        $r4 = $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr>;

        if $r4 == null goto label9;

        $r2_1 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DeviceCollector$ErrorCode errorCode>;

        if $r2_1 != null goto label5;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Telling the listener we succeeded...", $r5);

        $r4_1 = $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr>;

(0)     interfaceinvoke $r4_1.<com.devicecollector.DeviceCollector$StatusListener: void onCollectorSuccess()>();

     label2:
        $r4_2 = Phi($r4_1 #0, $r4_3 #2);

        $r5_1 = Phi($r5 #0, $r5_2 #2);

        $r2_2 = Phi($r2_1 #0, $r2_3 #2);

        $r3_1 = Phi($r3 #0, $r3_2 #2);

        entermonitor $r0;

     label3:
        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

(1)     exitmonitor $r0;

     label4:
        $r4_4 = Phi($r4_2 #1, $r4 #3);

        $r5_3 = Phi($r5_1 #1, $r5_4 #3);

        $r2_4 = Phi($r2_2 #1, $r2 #3);

        $r3_3 = Phi($r3_1 #1, $r3 #3);

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished> = 1;

        return;

     label5:
        $r5_2 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Telling the listener we had a bad error...", $r5_2);

        $r4_3 = $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr>;

        $r2_3 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DeviceCollector$ErrorCode errorCode>;

        $r3_2 = $r0.<com.devicecollector.CollectorProcess: java.lang.Exception errorCause>;

        interfaceinvoke $r4_3.<com.devicecollector.DeviceCollector$StatusListener: void onCollectorError(com.devicecollector.DeviceCollector$ErrorCode,java.lang.Exception)>($r2_3, $r3_2);

(2)     goto label2;

     label6:
        $r1 := @caughtexception;

     label7:
        exitmonitor $r0;

     label8:
        throw $r1;

     label9:
        $r5_4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("No listener to notify", $r5_4);

(3)     goto label4;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void removeCollectorFromList(com.devicecollector.collectors.CollectorEnum)
    {
        com.devicecollector.CollectorProcess $r0;
        com.devicecollector.collectors.CollectorEnum $r1, $r7, $r1_1;
        java.util.ArrayList $r2, $r2_1, $r2_2;
        com.devicecollector.collectors.AbstractAsyncCollectorTask $r3, $r6, $r3_1, $r3_2;
        java.util.Iterator $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.Object $r5;
        java.lang.Object[] $r8, $r8_1, $r8_2;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: com.devicecollector.collectors.CollectorEnum;

        $r2 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

        if $r2 == null goto label4;

        $r3 = null;

        $r2_1 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(0)     $r4 = virtualinvoke $r2_1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = Phi($z0 #0, $z0_2 #2);

        $z0_1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

(1)     if $z0_1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.devicecollector.collectors.AbstractAsyncCollectorTask) $r5;

        $r7 = virtualinvoke $r6.<com.devicecollector.collectors.AbstractAsyncCollectorTask: com.devicecollector.collectors.CollectorEnum getCollectorType()>();

        $z0_2 = virtualinvoke $r7.<com.devicecollector.collectors.CollectorEnum: boolean equals(java.lang.Object)>($r1);

(2)     if $z0_2 == 0 goto label1;

(3)     $r3_1 = $r6;

     label2:
        $r3_2 = Phi($r3 #1, $r3_1 #3);

        $z0_3 = Phi($z0_1 #1, $z0_2 #3);

        if $r3_2 == null goto label3;

        $r8 = newarray (java.lang.Object)[1];

        $r1_1 = virtualinvoke $r3_2.<com.devicecollector.collectors.AbstractAsyncCollectorTask: com.devicecollector.collectors.CollectorEnum getCollectorType()>();

        $r8[0] = $r1_1;

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Removing collector [%s]", $r8);

        $r2_2 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

        virtualinvoke $r2_2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3_2);

        return;

     label3:
        $r8_1 = newarray (java.lang.Object)[1];

        $r8_1[0] = $r1;

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Collector not found [%s]", $r8_1);

        return;

     label4:
        $r8_2 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("No collectors being held", $r8_2);

        return;
    }

    private void sendDataCollection()
    {
        com.devicecollector.CollectorProcess $r0;
        com.devicecollector.AsyncTransmissionTask $r1;
        com.devicecollector.DataCollection[] $r2;
        int $i0;
        java.util.concurrent.Executor $r3;
        com.devicecollector.DataCollection $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Object[] $r5, $r5_1, $r5_2;
        java.util.HashMap $r6, $r6_1, $r6_2;
        java.util.Set $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9, $r9_1, $r9_2;
        java.lang.String $r10;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 = new com.devicecollector.AsyncTransmissionTask;

        specialinvoke $r1.<com.devicecollector.AsyncTransmissionTask: void <init>()>();

        $r2 = newarray (com.devicecollector.DataCollection)[1];

        $r4 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r2[0] = $r4;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 10 goto label3;

        $r3 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        virtualinvoke $r1.<com.devicecollector.AsyncTransmissionTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r3, $r2);

     label1:
        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Final Collection:", $r5);

        $r4_1 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r6 = virtualinvoke $r4_1.<com.devicecollector.DataCollection: java.util.HashMap getPostData()>();

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

(0)     $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $r4_2 = Phi($r4_1 #0, $r4_3 #1);

        $r9 = Phi($r9 #0, $r9_2 #1);

        $r6_1 = Phi($r6 #0, $r6_2 #1);

        $r5_1 = Phi($r5 #0, $r5_2 #1);

        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9_1 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r9_1;

        $r5_2 = newarray (java.lang.Object)[2];

        $r5_2[0] = $r10;

        $r4_3 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r6_2 = virtualinvoke $r4_3.<com.devicecollector.DataCollection: java.util.HashMap getPostData()>();

        $r9_2 = virtualinvoke $r6_2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        $r5_2[1] = $r9_2;

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("key:[%s] value:[%s]", $r5_2);

(1)     goto label2;

     label3:
        virtualinvoke $r1.<com.devicecollector.AsyncTransmissionTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        goto label1;

     label4:
        return;
    }

    private boolean skip(com.devicecollector.collectors.CollectorEnum)
    {
        com.devicecollector.CollectorProcess $r0;
        com.devicecollector.collectors.CollectorEnum $r1;
        com.devicecollector.DataCollection $r2;
        com.devicecollector.collectors.SoftErrorCode $r3;
        boolean $z0;
        java.util.EnumSet $r4, $r4_1, $r4_2;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: com.devicecollector.collectors.CollectorEnum;

        $r4 = $r0.<com.devicecollector.AbstractCollectorProcess: java.util.EnumSet skipList>;

(0)     if $r4 == null goto label1;

        $r4_1 = $r0.<com.devicecollector.AbstractCollectorProcess: java.util.EnumSet skipList>;

        $z0 = virtualinvoke $r4_1.<java.util.EnumSet: boolean contains(java.lang.Object)>($r1);

(1)     if $z0 == 0 goto label1;

        $r2 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r3 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode MERCHANT_SKIPPED>;

        virtualinvoke $r2.<com.devicecollector.DataCollection: void addError(com.devicecollector.collectors.CollectorEnum,com.devicecollector.collectors.SoftErrorCode)>($r1, $r3);

        return 1;

     label1:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return 0;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.devicecollector.CollectorProcess $r0;
        java.lang.Object[] $r1;
        java.lang.Void $r2;
        java.lang.String[] $r3;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r1;

        $r2 = virtualinvoke $r0.<com.devicecollector.CollectorProcess: java.lang.Void doInBackground(java.lang.String[])>($r3);

        return $r2;
    }

    protected transient java.lang.Void doInBackground(java.lang.String[])
    {
        com.devicecollector.CollectorProcess $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3, $r11, $r2_1, $r2_2, $r2_3;
        com.devicecollector.collectors.WebCollectorTask $r4;
        com.devicecollector.collectors.CollectorEnum $r5;
        com.devicecollector.collectors.LocationCollectorTask $r6;
        int $i0;
        java.util.concurrent.Executor $r7;
        com.devicecollector.collectors.LocalCollector $r8;
        java.util.ArrayList $r9, $r9_1, $r9_2, $r9_3, $r9_4;
        com.devicecollector.DataCollection $r10, $r10_1, $r10_2, $r10_3, $r10_4;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        long $l1, $l1_1, $l1_2;
        android.app.Activity $r12, $r12_1, $r12_2, $r12_3;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        com.devicecollector.collectors.AbstractAsyncCollectorTask $r15;
        java.lang.StringBuilder $r16, $r16_1, $r16_2, $r16_3;
        java.lang.Class $r17;
        java.lang.Object[] $r18, $r18_1, $r18_2, $r18_3, $r18_4, $r18_5, $r18_6;
        java.lang.Void[] $r19, $r19_1, $r19_2;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: java.lang.String[];

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors> = $r9;

        $r10 = new com.devicecollector.DataCollection;

        $r11 = $r1[0];

        $r2 = $r1[1];

        $r3 = $r1[2];

        specialinvoke $r10.<com.devicecollector.DataCollection: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r11, $r2, $r3);

        $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection> = $r10;

        $z0 = virtualinvoke $r0.<com.devicecollector.CollectorProcess: boolean getTimeoutOverridden()>();

        if $z0 == 0 goto label4;

(0)     $l1 = virtualinvoke $r0.<com.devicecollector.CollectorProcess: long getTimeoutMs()>();

     label1:
        $l1_1 = Phi($l1 #0, $l1_2 #5);

        $r4 = new com.devicecollector.collectors.WebCollectorTask;

        $r12 = $r0.<com.devicecollector.AbstractCollectorProcess: android.app.Activity activity>;

        $r10_1 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        specialinvoke $r4.<com.devicecollector.collectors.WebCollectorTask: void <init>(android.app.Activity,com.devicecollector.collectors.CollectorStatusListener,com.devicecollector.DataCollection,long)>($r12, $r0, $r10_1, $l1_1);

        $r9_1 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

        virtualinvoke $r9_1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r5 = <com.devicecollector.collectors.CollectorEnum: com.devicecollector.collectors.CollectorEnum GEO_LOCATION>;

        $z0_1 = specialinvoke $r0.<com.devicecollector.CollectorProcess: boolean skip(com.devicecollector.collectors.CollectorEnum)>($r5);

(1)     if $z0_1 != 0 goto label2;

        $r6 = new com.devicecollector.collectors.LocationCollectorTask;

        $r12_1 = $r0.<com.devicecollector.AbstractCollectorProcess: android.app.Activity activity>;

        $r10_2 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        specialinvoke $r6.<com.devicecollector.collectors.LocationCollectorTask: void <init>(android.app.Activity,com.devicecollector.collectors.CollectorStatusListener,com.devicecollector.DataCollection,long)>($r12_1, $r0, $r10_2, $l1_1);

        $r9_2 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(2)     virtualinvoke $r9_2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label2:
        $r10_3 = Phi($r10_1 #1, $r10_2 #2);

        $r9_3 = Phi($r9_1 #1, $r9_2 #2);

        $r12_2 = Phi($r12 #1, $r12_1 #2);

        $r9_4 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(3)     $r13 = virtualinvoke $r9_4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $r16 = Phi($r16 #3, $r16_3 #4, $r16_3 #6);

        $r2_1 = Phi($r2 #3, $r2_3 #4, $r2_3 #6);

        $z0_2 = Phi($z0_1 #3, $z0_3 #4, $z0_3 #6);

        $r19 = Phi($r19 #3, $r19_1 #4, $r19_2 #6);

        $r18 = Phi($r18 #3, $r18_1 #4, $r18_1 #6);

        $z0_3 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0_3 == 0 goto label6;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.devicecollector.collectors.AbstractAsyncCollectorTask) $r14;

        $r16_1 = new java.lang.StringBuilder;

        specialinvoke $r16_1.<java.lang.StringBuilder: void <init>()>();

        $r16_2 = virtualinvoke $r16_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting off ");

        $r17 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r2_2 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r16_3 = virtualinvoke $r16_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_2);

        $r2_3 = virtualinvoke $r16_3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18_1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>($r2_3, $r18_1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 10 goto label5;

        $r7 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r19_1 = newarray (java.lang.Void)[0];

        virtualinvoke $r15.<com.devicecollector.collectors.AbstractAsyncCollectorTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r7, $r19_1);

(4)     goto label3;

     label4:
        $l1_2 = 5000L;

(5)     goto label1;

     label5:
        $r19_2 = newarray (java.lang.Void)[0];

        virtualinvoke $r15.<com.devicecollector.collectors.AbstractAsyncCollectorTask: android.os.AsyncTask execute(java.lang.Object[])>($r19_2);

(6)     goto label3;

     label6:
        $r18_2 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Getting the quick data...", $r18_2);

        $r8 = new com.devicecollector.collectors.LocalCollector;

        $r12_3 = $r0.<com.devicecollector.AbstractCollectorProcess: android.app.Activity activity>;

        $r10_4 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        specialinvoke $r8.<com.devicecollector.collectors.LocalCollector: void <init>(android.app.Activity,com.devicecollector.DataCollection)>($r12_3, $r10_4);

        virtualinvoke $r8.<com.devicecollector.collectors.LocalCollector: void collectRequiredInfo()>();

        $r18_3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Got Required Info", $r18_3);

        virtualinvoke $r8.<com.devicecollector.collectors.LocalCollector: void collectOptionalInfo()>();

        $r18_4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Got optional info...", $r18_4);

        virtualinvoke $r8.<com.devicecollector.collectors.LocalCollector: void collectDeviceId()>();

        $r18_5 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Got Device Cookie Info", $r18_5);

        $r18_6 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Done with quick data", $r18_6);

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void checkIfDone()>();

        return null;
    }

    public void onCancelled()
    {
        com.devicecollector.CollectorProcess $r0;
        java.util.ArrayList $r1;
        com.devicecollector.collectors.SoftErrorCode $r2;
        com.devicecollector.DeviceCollector$ErrorCode $r3;
        java.util.concurrent.CancellationException $r4;
        java.lang.Object[] $r5, $r5_1, $r5_2, $r5_3, $r5_4;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        com.devicecollector.DataCollection $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        java.lang.String $r7, $r7_1, $r7_2, $r7_3, $r7_4;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.devicecollector.collectors.AbstractAsyncCollectorTask $r10;
        com.devicecollector.collectors.CollectorEnum $r11, $r11_1, $r11_2, $r11_3;
        java.lang.StringBuilder $r12, $r12_1, $r12_2, $r12_3, $r12_4, $r12_5, $r12_6, $r12_7, $r12_8;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Called cancel..", $r5);

        $z0 = $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished>;

(0)     if $z0 != 0 goto label3;

        $r6 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

(1)     if $r6 == null goto label3;

        $r6_1 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r7 = virtualinvoke $r6_1.<com.devicecollector.DataCollection: java.lang.String getServerUrl()>();

(2)     if $r7 == null goto label3;

        $r5_1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Cancelling each collector", $r5_1);

        $r1 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(3)     $r8 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $r5_2 = Phi($r5_1 #3, $r5_2 #4, $r5_2 #5, $r5_4 #6);

        $r11 = Phi($r11 #3, $r11 #4, $r11 #5, $r11_3 #6);

        $r7_1 = Phi($r7 #3, $r7_1 #4, $r7_1 #5, $r7_3 #6);

        $r6_2 = Phi($r6_1 #3, $r6_2 #4, $r6_2 #5, $r6_3 #6);

        $r12 = Phi($r12 #3, $r12 #4, $r12 #5, $r12_8 #6);

        $z0_1 = Phi($z0 #3, $z0_3 #4, $z0_4 #5, $z0_4 #6);

        $z0_2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0_2 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.devicecollector.collectors.AbstractAsyncCollectorTask) $r9;

        $z0_3 = virtualinvoke $r10.<com.devicecollector.collectors.AbstractAsyncCollectorTask: boolean isFinished()>();

(4)     if $z0_3 != 0 goto label1;

        $z0_4 = virtualinvoke $r10.<com.devicecollector.collectors.AbstractAsyncCollectorTask: boolean isCancelled()>();

(5)     if $z0_4 != 0 goto label1;

        $r6_3 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r11_1 = virtualinvoke $r10.<com.devicecollector.collectors.AbstractAsyncCollectorTask: com.devicecollector.collectors.CollectorEnum getCollectorType()>();

        $r2 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode MERCHANT_CANCELLED>;

        virtualinvoke $r6_3.<com.devicecollector.DataCollection: void addError(com.devicecollector.collectors.CollectorEnum,com.devicecollector.collectors.SoftErrorCode)>($r11_1, $r2);

        $r12_1 = new java.lang.StringBuilder;

        specialinvoke $r12_1.<java.lang.StringBuilder: void <init>()>();

        $r12_2 = virtualinvoke $r12_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancelling [");

        $r11_2 = virtualinvoke $r10.<com.devicecollector.collectors.AbstractAsyncCollectorTask: com.devicecollector.collectors.CollectorEnum getCollectorType()>();

        $r12_3 = virtualinvoke $r12_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11_2);

        $r12_4 = virtualinvoke $r12_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] collector...");

        $r7_2 = virtualinvoke $r12_4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5_3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>($r7_2, $r5_3);

        virtualinvoke $r10.<com.devicecollector.collectors.AbstractAsyncCollectorTask: boolean cancel(boolean)>(1);

        $r12_5 = new java.lang.StringBuilder;

        specialinvoke $r12_5.<java.lang.StringBuilder: void <init>()>();

        $r12_6 = virtualinvoke $r12_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancelled [");

        $r11_3 = virtualinvoke $r10.<com.devicecollector.collectors.AbstractAsyncCollectorTask: com.devicecollector.collectors.CollectorEnum getCollectorType()>();

        $r12_7 = virtualinvoke $r12_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11_3);

        $r12_8 = virtualinvoke $r12_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] collector.");

        $r7_3 = virtualinvoke $r12_8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5_4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>($r7_3, $r5_4);

(6)     goto label1;

     label2:
        specialinvoke $r0.<com.devicecollector.CollectorProcess: void sendDataCollection()>();

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void endProcess(com.devicecollector.DeviceCollector$ErrorCode,java.lang.Exception)>(null, null);

        return;

     label3:
        $r7_4 = Phi($r7 #0, $r7 #1, $r7 #2);

        $r6_4 = Phi($r6 #0, $r6 #1, $r6_1 #2);

        $z0_5 = $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished>;

        if $z0_5 != 0 goto label4;

        $r3 = <com.devicecollector.DeviceCollector$ErrorCode: com.devicecollector.DeviceCollector$ErrorCode MERCHANT_CANCELLED>;

        $r4 = new java.util.concurrent.CancellationException;

        specialinvoke $r4.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>("Merchant Cancelled");

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void endProcess(com.devicecollector.DeviceCollector$ErrorCode,java.lang.Exception)>($r3, $r4);

     label4:
        return;
    }

    public void onCollectorError(com.devicecollector.collectors.CollectorEnum, com.devicecollector.collectors.SoftErrorCode, java.lang.Exception)
    {
        com.devicecollector.CollectorProcess $r0;
        com.devicecollector.collectors.CollectorEnum $r1, $r4;
        com.devicecollector.collectors.SoftErrorCode $r2;
        java.lang.Object[] $r3;
        java.lang.Throwable $r5;
        boolean $z0;
        java.lang.Exception $r6, $r6_1, $r6_2;
        com.devicecollector.DeviceCollector$ErrorCode $r7, $r7_1, $r7_2;
        com.devicecollector.DeviceCollector$StatusListener $r8, $r8_1, $r8_2;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: com.devicecollector.collectors.CollectorEnum;

        $r2 := @parameter1: com.devicecollector.collectors.SoftErrorCode;

        $r6 := @parameter2: java.lang.Exception;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Removing collector[%s] due to error [%s]", $r3);

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void removeCollectorFromList(com.devicecollector.collectors.CollectorEnum)>($r1);

        $r4 = <com.devicecollector.collectors.CollectorEnum: com.devicecollector.collectors.CollectorEnum WEB>;

        $z0 = virtualinvoke $r4.<com.devicecollector.collectors.CollectorEnum: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label6;

        $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished> = 1;

        $r7 = <com.devicecollector.DeviceCollector$ErrorCode: com.devicecollector.DeviceCollector$ErrorCode RUNTIME_FAILURE>;

        $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DeviceCollector$ErrorCode errorCode> = $r7;

        $r0.<com.devicecollector.CollectorProcess: java.lang.Exception errorCause> = $r6;

        $r8 = $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr>;

(0)     if $r8 == null goto label1;

        $r8_1 = $r0.<com.devicecollector.AbstractCollectorProcess: com.devicecollector.DeviceCollector$StatusListener lstnr>;

        $r7_1 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DeviceCollector$ErrorCode errorCode>;

        $r6_1 = $r0.<com.devicecollector.CollectorProcess: java.lang.Exception errorCause>;

(1)     interfaceinvoke $r8_1.<com.devicecollector.DeviceCollector$StatusListener: void onCollectorError(com.devicecollector.DeviceCollector$ErrorCode,java.lang.Exception)>($r7_1, $r6_1);

     label1:
        $r6_2 = Phi($r6 #0, $r6_1 #1);

        $r7_2 = Phi($r7 #0, $r7_1 #1);

        $r8_2 = Phi($r8 #0, $r8_1 #1);

        entermonitor $r0;

     label2:
        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r5;

     label6:
        specialinvoke $r0.<com.devicecollector.CollectorProcess: void checkIfDone()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onCollectorStart(com.devicecollector.collectors.CollectorEnum)
    {
        com.devicecollector.CollectorProcess $r0;
        com.devicecollector.collectors.CollectorEnum $r1;
        java.lang.Object[] $r2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2;
        java.lang.String $r4;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: com.devicecollector.collectors.CollectorEnum;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Long Collector starting:");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>($r4, $r2);

        return;
    }

    public void onCollectorSuccess(com.devicecollector.collectors.CollectorEnum)
    {
        com.devicecollector.CollectorProcess $r0;
        com.devicecollector.collectors.CollectorEnum $r1;
        java.lang.Object[] $r2;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $r1 := @parameter0: com.devicecollector.collectors.CollectorEnum;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Collector success [%s]", $r2);

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void removeCollectorFromList(com.devicecollector.collectors.CollectorEnum)>($r1);

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void checkIfDone()>();

        return;
    }

    public void timeout()
    {
        com.devicecollector.CollectorProcess $r0;
        java.util.ArrayList $r1;
        com.devicecollector.DeviceCollector$ErrorCode $r2;
        java.lang.Exception $r3;
        java.lang.Object[] $r4;
        boolean $z0, $z0_1, $z0_2;
        com.devicecollector.DataCollection $r5, $r5_1, $r5_2;
        java.lang.String $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        com.devicecollector.collectors.AbstractAsyncCollectorTask $r9;

        $r0 := @this: com.devicecollector.CollectorProcess;

        $z0 = $r0.<com.devicecollector.AbstractCollectorProcess: boolean finished>;

(0)     if $z0 != 0 goto label3;

        $r5 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

(1)     if $r5 == null goto label3;

        $r5_1 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DataCollection dataCollection>;

        $r6 = virtualinvoke $r5_1.<com.devicecollector.DataCollection: java.lang.String getServerUrl()>();

(2)     if $r6 == null goto label3;

        $r1 = $r0.<com.devicecollector.CollectorProcess: java.util.ArrayList collectors>;

(3)     $r7 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0_1 = Phi($z0 #3, $z0_2 #4);

        $z0_2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0_2 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.devicecollector.collectors.AbstractAsyncCollectorTask) $r8;

        virtualinvoke $r9.<com.devicecollector.collectors.AbstractAsyncCollectorTask: void timeout()>();

(4)     goto label1;

     label2:
        specialinvoke $r0.<com.devicecollector.CollectorProcess: void sendDataCollection()>();

        $r2 = $r0.<com.devicecollector.CollectorProcess: com.devicecollector.DeviceCollector$ErrorCode errorCode>;

        $r3 = $r0.<com.devicecollector.CollectorProcess: java.lang.Exception errorCause>;

        specialinvoke $r0.<com.devicecollector.CollectorProcess: void endProcess(com.devicecollector.DeviceCollector$ErrorCode,java.lang.Exception)>($r2, $r3);

        return;

     label3:
        $r5_2 = Phi($r5 #0, $r5 #1, $r5_1 #2);

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.devicecollector.CollectorProcess: void debug(java.lang.String,java.lang.Object[])>("Nothing to timeout", $r4);

        return;
    }
}
