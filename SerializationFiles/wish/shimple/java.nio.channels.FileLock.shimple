public abstract class java.nio.channels.FileLock extends java.lang.Object implements java.lang.AutoCloseable
{

    protected void <init>(java.nio.channels.FileChannel, long, long, boolean)
    {
        java.nio.channels.FileLock r0;
        java.nio.channels.FileChannel r1;
        long l0, l1;
        boolean z0;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.FileLock;

        r1 := @parameter0: java.nio.channels.FileChannel;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.nio.channels.FileChannel channel()
    {
        java.nio.channels.FileLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long position()
    {
        java.nio.channels.FileLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long size()
    {
        java.nio.channels.FileLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isShared()
    {
        java.nio.channels.FileLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean overlaps(long, long)
    {
        java.nio.channels.FileLock r0;
        long l0, l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileLock;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract boolean isValid();

    public abstract void release() throws java.io.IOException;

    public final void close() throws java.io.IOException
    {
        java.nio.channels.FileLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.String toString()
    {
        java.nio.channels.FileLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
