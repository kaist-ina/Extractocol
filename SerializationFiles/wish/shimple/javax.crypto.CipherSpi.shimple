public abstract class javax.crypto.CipherSpi extends java.lang.Object
{

    public void <init>()
    {
        javax.crypto.CipherSpi r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.CipherSpi;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected abstract void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException;

    protected abstract void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException;

    protected abstract int engineGetBlockSize();

    protected abstract int engineGetOutputSize(int);

    protected abstract byte[] engineGetIV();

    protected abstract java.security.AlgorithmParameters engineGetParameters();

    protected abstract void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException;

    protected abstract void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;

    protected abstract void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;

    protected abstract byte[] engineUpdate(byte[], int, int);

    protected abstract int engineUpdate(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException;

    protected int engineUpdate(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.crypto.ShortBufferException
    {
        javax.crypto.CipherSpi r0;
        java.nio.ByteBuffer r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.CipherSpi;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    protected void engineUpdateAAD(byte[], int, int)
    {
        javax.crypto.CipherSpi r0;
        byte[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.CipherSpi;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected void engineUpdateAAD(java.nio.ByteBuffer)
    {
        javax.crypto.CipherSpi r0;
        java.nio.ByteBuffer r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.CipherSpi;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected abstract byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;

    protected abstract int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;

    protected int engineDoFinal(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.CipherSpi r0;
        java.nio.ByteBuffer r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.CipherSpi;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    protected byte[] engineWrap(java.security.Key) throws javax.crypto.IllegalBlockSizeException, java.security.InvalidKeyException
    {
        javax.crypto.CipherSpi r0;
        java.security.Key r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.CipherSpi;

        r1 := @parameter0: java.security.Key;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected java.security.Key engineUnwrap(byte[], java.lang.String, int) throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException
    {
        javax.crypto.CipherSpi r0;
        byte[] r1;
        java.lang.String r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.CipherSpi;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    protected int engineGetKeySize(java.security.Key) throws java.security.InvalidKeyException
    {
        javax.crypto.CipherSpi r0;
        java.security.Key r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.CipherSpi;

        r1 := @parameter0: java.security.Key;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }
}
