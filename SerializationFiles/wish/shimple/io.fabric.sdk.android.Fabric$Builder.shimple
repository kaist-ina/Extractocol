public class io.fabric.sdk.android.Fabric$Builder extends java.lang.Object
{
    private java.lang.String appIdentifier;
    private java.lang.String appInstallIdentifier;
    private final android.content.Context context;
    private boolean debuggable;
    private android.os.Handler handler;
    private io.fabric.sdk.android.InitializationCallback initializationCallback;
    private io.fabric.sdk.android.Kit[] kits;
    private io.fabric.sdk.android.Logger logger;
    private io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor;

    public void <init>(android.content.Context)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        java.lang.IllegalArgumentException $r1;
        android.content.Context $r2, $r2_1;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r2 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r2 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null.");

        throw $r1;

     label1:
        $r2_1 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>();

        $r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context> = $r2_1;

        return;
    }

    public io.fabric.sdk.android.Fabric$Builder appIdentifier(java.lang.String)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        java.lang.String $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appIdentifier must not be null.");

        throw $r2;

     label1:
        $r3 = $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("appIdentifier already set.");

        throw $r4;

     label2:
        $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier> = $r1;

        return $r0;
    }

    public io.fabric.sdk.android.Fabric$Builder appInstallIdentifier(java.lang.String)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        java.lang.String $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appInstallIdentifier must not be null.");

        throw $r2;

     label1:
        $r3 = $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appInstallIdentifier>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("appInstallIdentifier already set.");

        throw $r4;

     label2:
        $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appInstallIdentifier> = $r1;

        return $r0;
    }

    public io.fabric.sdk.android.Fabric build()
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        android.os.Handler $r1, $r1_1, $r1_2, $r1_3;
        java.util.HashMap $r2;
        io.fabric.sdk.android.services.common.IdManager $r3;
        io.fabric.sdk.android.Fabric $r4;
        io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor $r5, $r5_1, $r5_2, $r5_3;
        android.os.Looper $r6;
        io.fabric.sdk.android.Logger $r7, $r7_1;
        boolean $z0, $z0_1, $z0_2;
        io.fabric.sdk.android.DefaultLogger $r8, $r8_1, $r8_2;
        java.lang.String $r9, $r14, $r9_1, $r9_2, $r9_3;
        android.content.Context $r10, $r10_1, $r10_2, $r10_3;
        io.fabric.sdk.android.InitializationCallback $r11, $r11_1, $r11_2, $r11_3;
        io.fabric.sdk.android.Kit[] $r12, $r12_1, $r12_2;
        java.util.Map $r13, $r13_1, $r13_2;
        java.util.Collection $r15;
        java.util.List $r16;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r5 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor>;

(0)     if $r5 != null goto label1;

        $r5_1 = staticinvoke <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor create()>();

(1)     $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor> = $r5_1;

     label1:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r1 = $r0.<io.fabric.sdk.android.Fabric$Builder: android.os.Handler handler>;

(2)     if $r1 != null goto label2;

        $r1_1 = new android.os.Handler;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1_1.<android.os.Handler: void <init>(android.os.Looper)>($r6);

(3)     $r0.<io.fabric.sdk.android.Fabric$Builder: android.os.Handler handler> = $r1_1;

     label2:
        $r1_2 = Phi($r1 #2, $r1_1 #3);

        $r7 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger>;

(4)     if $r7 != null goto label3;

        $z0 = $r0.<io.fabric.sdk.android.Fabric$Builder: boolean debuggable>;

        if $z0 == 0 goto label7;

        $r8 = new io.fabric.sdk.android.DefaultLogger;

        specialinvoke $r8.<io.fabric.sdk.android.DefaultLogger: void <init>(int)>(3);

(5)     $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger> = $r8;

     label3:
        $z0_1 = Phi($z0 #4, $z0 #5, $z0 #11);

        $r8_2 = Phi($r8 #4, $r8 #5, $r8_1 #11);

        $r9 = $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier>;

(6)     if $r9 != null goto label4;

        $r10 = $r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context>;

        $r9_1 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

(7)     $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier> = $r9_1;

     label4:
        $r9_2 = Phi($r9 #6, $r9_1 #7);

        $r10_1 = Phi($r10 #6, $r10 #7);

        $r11 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback>;

(8)     if $r11 != null goto label5;

        $r11_1 = <io.fabric.sdk.android.InitializationCallback: io.fabric.sdk.android.InitializationCallback EMPTY>;

(9)     $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback> = $r11_1;

     label5:
        $r11_2 = Phi($r11 #8, $r11_1 #9);

        $r12 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits>;

        if $r12 != null goto label8;

        $r2 = new java.util.HashMap;

        $r13 = $r2;

(10)    specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label6:
        $r12_1 = Phi($r12 #10, $r12_2 #12);

        $r13_1 = Phi($r13 #10, $r13_2 #12);

        $r3 = new io.fabric.sdk.android.services.common.IdManager;

        $r10_2 = $r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context>;

        $r9_3 = $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appIdentifier>;

        $r14 = $r0.<io.fabric.sdk.android.Fabric$Builder: java.lang.String appInstallIdentifier>;

        $r15 = interfaceinvoke $r13_1.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r3.<io.fabric.sdk.android.services.common.IdManager: void <init>(android.content.Context,java.lang.String,java.lang.String,java.util.Collection)>($r10_2, $r9_3, $r14, $r15);

        $r4 = new io.fabric.sdk.android.Fabric;

        $r10_3 = $r0.<io.fabric.sdk.android.Fabric$Builder: android.content.Context context>;

        $r5_3 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor>;

        $r1_3 = $r0.<io.fabric.sdk.android.Fabric$Builder: android.os.Handler handler>;

        $r7_1 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger>;

        $z0_2 = $r0.<io.fabric.sdk.android.Fabric$Builder: boolean debuggable>;

        $r11_3 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        specialinvoke $r4.<io.fabric.sdk.android.Fabric: void <init>(android.content.Context,java.util.Map,io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor,android.os.Handler,io.fabric.sdk.android.Logger,boolean,io.fabric.sdk.android.InitializationCallback,io.fabric.sdk.android.services.common.IdManager)>($r10_3, $r13_1, $r5_3, $r1_3, $r7_1, $z0_2, $r11_3, $r3);

        return $r4;

     label7:
        $r8_1 = new io.fabric.sdk.android.DefaultLogger;

        specialinvoke $r8_1.<io.fabric.sdk.android.DefaultLogger: void <init>()>();

        $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger> = $r8_1;

(11)    goto label3;

     label8:
        $r12_2 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits>;

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12_2);

        $r13_2 = staticinvoke <io.fabric.sdk.android.Fabric: java.util.Map access$000(java.util.Collection)>($r16);

(12)    goto label6;
    }

    public io.fabric.sdk.android.Fabric$Builder debuggable(boolean)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $z0 := @parameter0: boolean;

        $r0.<io.fabric.sdk.android.Fabric$Builder: boolean debuggable> = $z0;

        return $r0;
    }

    public io.fabric.sdk.android.Fabric$Builder executorService(java.util.concurrent.ExecutorService)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        java.util.concurrent.ExecutorService $r1;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: java.util.concurrent.ExecutorService;

        return $r0;
    }

    public io.fabric.sdk.android.Fabric$Builder handler(android.os.Handler)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        android.os.Handler $r1;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: android.os.Handler;

        return $r0;
    }

    public io.fabric.sdk.android.Fabric$Builder initializationCallback(io.fabric.sdk.android.InitializationCallback)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        io.fabric.sdk.android.InitializationCallback $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: io.fabric.sdk.android.InitializationCallback;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("initializationCallback must not be null.");

        throw $r2;

     label1:
        $r3 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("initializationCallback already set.");

        throw $r4;

     label2:
        $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.InitializationCallback initializationCallback> = $r1;

        return $r0;
    }

    public transient io.fabric.sdk.android.Fabric$Builder kits(io.fabric.sdk.android.Kit[])
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        io.fabric.sdk.android.Kit[] $r1, $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: io.fabric.sdk.android.Kit[];

        $r2 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Kits already set.");

        throw $r3;

     label1:
        $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Kit[] kits> = $r1;

        return $r0;
    }

    public io.fabric.sdk.android.Fabric$Builder logger(io.fabric.sdk.android.Logger)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        io.fabric.sdk.android.Logger $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: io.fabric.sdk.android.Logger;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Logger must not be null.");

        throw $r2;

     label1:
        $r3 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Logger already set.");

        throw $r4;

     label2:
        $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Logger logger> = $r1;

        return $r0;
    }

    public io.fabric.sdk.android.Fabric$Builder threadPoolExecutor(io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor)
    {
        io.fabric.sdk.android.Fabric$Builder $r0;
        io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r4;

        $r0 := @this: io.fabric.sdk.android.Fabric$Builder;

        $r1 := @parameter0: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PriorityThreadPoolExecutor must not be null.");

        throw $r2;

     label1:
        $r3 = $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PriorityThreadPoolExecutor already set.");

        throw $r4;

     label2:
        $r0.<io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor threadPoolExecutor> = $r1;

        return $r0;
    }
}
