class com.facebook.internal.WorkQueue$WorkNode extends java.lang.Object implements com.facebook.internal.WorkQueue$WorkItem
{
    static final boolean $assertionsDisabled;
    private final java.lang.Runnable callback;
    private boolean isRunning;
    private com.facebook.internal.WorkQueue$WorkNode next;
    private com.facebook.internal.WorkQueue$WorkNode prev;
    final com.facebook.internal.WorkQueue this$0;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 = class "com/facebook/internal/WorkQueue";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

(0)     $z0_1 = 1;

     label1:
        $z0_2 = Phi($z0_1 #0, $z0_3 #1);

        <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled> = $z0_2;

        return;

     label2:
        $z0_3 = 0;

(1)     goto label1;
    }

    void <init>(com.facebook.internal.WorkQueue, java.lang.Runnable)
    {
        com.facebook.internal.WorkQueue$WorkNode $r0;
        com.facebook.internal.WorkQueue $r1;
        java.lang.Runnable $r2;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $r1 := @parameter0: com.facebook.internal.WorkQueue;

        $r2 := @parameter1: java.lang.Runnable;

        $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.facebook.internal.WorkQueue$WorkNode: java.lang.Runnable callback> = $r2;

        return;
    }

    com.facebook.internal.WorkQueue$WorkNode addToList(com.facebook.internal.WorkQueue$WorkNode, boolean)
    {
        com.facebook.internal.WorkQueue$WorkNode $r0, $r1, $r2, $r4, $r1_1, $r1_2, $r1_3, $r2_1, $r1_4, $r2_2, $r1_5, $r1_6;
        boolean $z0, $z1, $z1_1;
        java.lang.AssertionError $r3, $r3_1;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $r2 := @parameter0: com.facebook.internal.WorkQueue$WorkNode;

        $z0 := @parameter1: boolean;

        $z1 = <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled>;

(0)     if $z1 != 0 goto label1;

        $r1 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

(1)     if $r1 == null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1_1 = Phi($r1 #0, $r1 #1);

        $z1_1 = <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled>;

(2)     if $z1_1 != 0 goto label2;

        $r1_2 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

(3)     if $r1_2 == null goto label2;

        $r3_1 = new java.lang.AssertionError;

        specialinvoke $r3_1.<java.lang.AssertionError: void <init>()>();

        throw $r3_1;

     label2:
        $r1_3 = Phi($r1_1 #2, $r1_2 #3);

        if $r2 != null goto label4;

        $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev> = $r0;

        $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next> = $r0;

(4)     $r2_1 = $r0;

     label3:
        $r1_4 = Phi($r1_3 #4, $r1_6 #5);

        $r2_2 = Phi($r2_1 #4, $r2 #5);

        if $z0 == 0 goto label5;

        return $r0;

     label4:
        $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next> = $r2;

        $r1_5 = $r2.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

        $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev> = $r1_5;

        $r1_6 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

        $r4 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

        $r4.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next> = $r0;

        $r1_6.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev> = $r0;

(5)     goto label3;

     label5:
        return $r2_2;
    }

    public boolean cancel()
    {
        com.facebook.internal.WorkQueue $r0, $r4, $r0_1, $r0_2;
        java.lang.Throwable $r1;
        com.facebook.internal.WorkQueue$WorkNode $r2, $r5, $r2_1, $r2_2;
        java.lang.Object $r3;
        boolean $z0;

        $r2 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $r0 = $r2.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

        $r3 = staticinvoke <com.facebook.internal.WorkQueue: java.lang.Object access$100(com.facebook.internal.WorkQueue)>($r0);

(0)     entermonitor $r3;

     label1:
        $z0 = virtualinvoke $r2.<com.facebook.internal.WorkQueue$WorkNode: boolean isRunning()>();

        if $z0 != 0 goto label3;

        $r4 = $r2.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

(1)     $r0_1 = $r2.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

        $r5 = staticinvoke <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkNode access$200(com.facebook.internal.WorkQueue)>($r0_1);

(2)     $r2_1 = virtualinvoke $r2.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode removeFromList(com.facebook.internal.WorkQueue$WorkNode)>($r5);

        staticinvoke <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkNode access$202(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode)>($r4, $r2_1);

        exitmonitor $r3;

     label2:
        return 1;

     label3:
        exitmonitor $r3;

     label4:
        return 0;

     label5:
        $r1 := @caughtexception;

        $r0_2 = Phi($r0 #0, $r0_1 #1, $r0_2 #3);

(3)     $r2_2 = Phi($r2 #0, $r2_1 #2, $r2_2 #3);

        exitmonitor $r3;

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    java.lang.Runnable getCallback()
    {
        com.facebook.internal.WorkQueue$WorkNode $r0;
        java.lang.Runnable r1;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        r1 = $r0.<com.facebook.internal.WorkQueue$WorkNode: java.lang.Runnable callback>;

        return r1;
    }

    com.facebook.internal.WorkQueue$WorkNode getNext()
    {
        com.facebook.internal.WorkQueue$WorkNode $r0, $r0_1;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $r0_1 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

        return $r0_1;
    }

    public boolean isRunning()
    {
        com.facebook.internal.WorkQueue$WorkNode $r0;
        boolean z0;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        z0 = $r0.<com.facebook.internal.WorkQueue$WorkNode: boolean isRunning>;

        return z0;
    }

    public void moveToFront()
    {
        java.lang.Throwable $r0;
        com.facebook.internal.WorkQueue$WorkNode $r1, $r5, $r5_1, $r5_2, $r1_1, $r1_2, $r5_3, $r1_3, $r5_4;
        com.facebook.internal.WorkQueue $r2, $r4, $r2_1, $r2_2, $r4_1, $r4_2, $r2_3, $r4_3, $r2_4;
        java.lang.Object $r3;
        boolean $z0;

        $r1 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $r2 = $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

        $r3 = staticinvoke <com.facebook.internal.WorkQueue: java.lang.Object access$100(com.facebook.internal.WorkQueue)>($r2);

(0)     entermonitor $r3;

     label1:
        $z0 = virtualinvoke $r1.<com.facebook.internal.WorkQueue$WorkNode: boolean isRunning()>();

(1)     if $z0 != 0 goto label2;

(2)     $r2_1 = $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

        $r4 = $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

        $r5 = staticinvoke <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkNode access$200(com.facebook.internal.WorkQueue)>($r4);

(3)     $r5_1 = virtualinvoke $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode removeFromList(com.facebook.internal.WorkQueue$WorkNode)>($r5);

        staticinvoke <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkNode access$202(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode)>($r2_1, $r5_1);

(4)     $r2_2 = $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

(5)     $r4_1 = $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue this$0>;

(6)     $r5_2 = staticinvoke <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkNode access$200(com.facebook.internal.WorkQueue)>($r4_1);

(7)     $r1_1 = virtualinvoke $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode addToList(com.facebook.internal.WorkQueue$WorkNode,boolean)>($r5_2, 1);

(8)     staticinvoke <com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkNode access$202(com.facebook.internal.WorkQueue,com.facebook.internal.WorkQueue$WorkNode)>($r2_2, $r1_1);

     label2:
        $r4_2 = Phi($r4 #1, $r4_1 #8);

        $r1_2 = Phi($r1 #1, $r1_1 #8);

        $r2_3 = Phi($r2 #1, $r2_2 #8);

        $r5_3 = Phi($r5 #1, $r5_2 #8);

(9)     exitmonitor $r3;

     label3:
        return;

     label4:
        $r0 := @caughtexception;

        $r4_3 = Phi($r4 #0, $r4_1 #5, $r4_2 #9, $r4_3 #10);

        $r1_3 = Phi($r1 #0, $r1_1 #7, $r1_2 #9, $r1_3 #10);

        $r2_4 = Phi($r2 #0, $r2_1 #2, $r2_2 #4, $r2_3 #9, $r2_4 #10);

(10)    $r5_4 = Phi($r5 #0, $r5_1 #3, $r5_2 #6, $r5_3 #9, $r5_4 #10);

        exitmonitor $r3;

     label5:
        throw $r0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    com.facebook.internal.WorkQueue$WorkNode removeFromList(com.facebook.internal.WorkQueue$WorkNode)
    {
        com.facebook.internal.WorkQueue$WorkNode $r0, $r1, $r2, $r4, $r2_1, $r2_2, $r2_3, $r1_1, $r1_2, $r1_3, $r1_4, $r2_4, $r2_5, $r4_1;
        boolean $z0, $z0_1;
        java.lang.AssertionError $r3, $r3_1;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $r1 := @parameter0: com.facebook.internal.WorkQueue$WorkNode;

        $z0 = <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled>;

(0)     if $z0 != 0 goto label1;

        $r2 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

(1)     if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2_1 = Phi($r2 #0, $r2 #1);

        $z0_1 = <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled>;

(2)     if $z0_1 != 0 goto label2;

        $r2_2 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

(3)     if $r2_2 != null goto label2;

        $r3_1 = new java.lang.AssertionError;

        specialinvoke $r3_1.<java.lang.AssertionError: void <init>()>();

        throw $r3_1;

     label2:
        $r2_3 = Phi($r2_1 #2, $r2_2 #3);

(4)     if $r1 != $r0 goto label3;

        $r1_1 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

        if $r1_1 != $r0 goto label4;

(5)     $r1_2 = null;

     label3:
        $r1_4 = Phi($r1 #4, $r1_2 #5, $r1_3 #6);

        $r2_4 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

        $r4 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

        $r2_4.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev> = $r4;

        $r2_5 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

        $r4_1 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

        $r2_5.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next> = $r4_1;

        $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev> = null;

        $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next> = null;

        return $r1_4;

     label4:
        $r1_3 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

(6)     goto label3;
    }

    void setIsRunning(boolean)
    {
        com.facebook.internal.WorkQueue$WorkNode $r0;
        boolean $z0;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $z0 := @parameter0: boolean;

        $r0.<com.facebook.internal.WorkQueue$WorkNode: boolean isRunning> = $z0;

        return;
    }

    void verify(boolean)
    {
        com.facebook.internal.WorkQueue$WorkNode $r0, $r1, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5;
        boolean $z0, $z1, $z1_1, $z1_2, $z1_3, $z1_4;
        java.lang.AssertionError $r2, $r2_1, $r2_2;

        $r0 := @this: com.facebook.internal.WorkQueue$WorkNode;

        $z0 := @parameter0: boolean;

        $z1 = <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled>;

(0)     if $z1 != 0 goto label1;

        $r1 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

        $r1_1 = $r1.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

(1)     if $r1_1 == $r0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $z1_1 = <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled>;

(2)     if $z1_1 != 0 goto label2;

        $r1_3 = $r0.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode next>;

        $r1_4 = $r1_3.<com.facebook.internal.WorkQueue$WorkNode: com.facebook.internal.WorkQueue$WorkNode prev>;

(3)     if $r1_4 == $r0 goto label2;

        $r2_1 = new java.lang.AssertionError;

        specialinvoke $r2_1.<java.lang.AssertionError: void <init>()>();

        throw $r2_1;

     label2:
        $r1_5 = Phi($r1_2 #2, $r1_4 #3);

        $z1_2 = <com.facebook.internal.WorkQueue$WorkNode: boolean $assertionsDisabled>;

(4)     if $z1_2 != 0 goto label3;

        $z1_3 = virtualinvoke $r0.<com.facebook.internal.WorkQueue$WorkNode: boolean isRunning()>();

(5)     if $z1_3 == $z0 goto label3;

        $r2_2 = new java.lang.AssertionError;

        specialinvoke $r2_2.<java.lang.AssertionError: void <init>()>();

        throw $r2_2;

     label3:
        $z1_4 = Phi($z1_2 #4, $z1_3 #5);

        return;
    }
}
