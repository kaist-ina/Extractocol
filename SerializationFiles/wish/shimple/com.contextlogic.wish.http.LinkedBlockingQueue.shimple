public class com.contextlogic.wish.http.LinkedBlockingQueue extends java.util.AbstractQueue implements java.io.Serializable, java.util.concurrent.BlockingQueue
{
    private static final long serialVersionUID;
    private final int capacity;
    private transient int count;
    private transient com.contextlogic.wish.http.LinkedBlockingQueue$Node first;
    private transient com.contextlogic.wish.http.LinkedBlockingQueue$Node last;
    private final java.util.concurrent.locks.ReentrantLock lock;
    private final java.util.concurrent.locks.Condition notEmpty;
    private final java.util.concurrent.locks.Condition notFull;

    public void <init>()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void <init>(int)>(2147483647);

        return;
    }

    public void <init>(int)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.util.concurrent.locks.ReentrantLock $r2, $r2_1, $r2_2;
        java.util.concurrent.locks.Condition $r3, $r3_1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.util.AbstractQueue: void <init>()>();

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock> = $r2;

        $r2_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        $r3 = virtualinvoke $r2_1.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notEmpty> = $r3;

        $r2_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        $r3_1 = virtualinvoke $r2_2.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull> = $r3_1;

        if $i0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int capacity> = $i0;

        return;
    }

    public void <init>(java.util.Collection)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.Collection $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.util.Collection;

        specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void <init>(int)>(2147483647);

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    static java.util.concurrent.locks.ReentrantLock access$200(com.contextlogic.wish.http.LinkedBlockingQueue)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.concurrent.locks.ReentrantLock r1;

        $r0 := @parameter0: com.contextlogic.wish.http.LinkedBlockingQueue;

        r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        return r1;
    }

    static com.contextlogic.wish.http.LinkedBlockingQueue$Node access$300(com.contextlogic.wish.http.LinkedBlockingQueue)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node r1;

        $r0 := @parameter0: com.contextlogic.wish.http.LinkedBlockingQueue;

        r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

        return r1;
    }

    static com.contextlogic.wish.http.LinkedBlockingQueue$Node access$400(com.contextlogic.wish.http.LinkedBlockingQueue)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node r1;

        $r0 := @parameter0: com.contextlogic.wish.http.LinkedBlockingQueue;

        r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last>;

        return r1;
    }

    private boolean linkFirst(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i0_1, $i0_2;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r2, $r3, $r4;
        java.util.concurrent.locks.Condition $r5;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $i1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int capacity>;

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        $i0_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $i0_2 = $i0_1 + 1;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = $i0_2;

        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

        $r3 = new com.contextlogic.wish.http.LinkedBlockingQueue$Node;

        specialinvoke $r3.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: void <init>(java.lang.Object,com.contextlogic.wish.http.LinkedBlockingQueue$Node,com.contextlogic.wish.http.LinkedBlockingQueue$Node)>($r1, null, $r2);

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = $r3;

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last>;

        if $r4 != null goto label3;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = $r3;

     label2:
        $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notEmpty>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();

        return 1;

     label3:
        $r2.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev> = $r3;

        goto label2;
    }

    private boolean linkLast(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i0_1, $i0_2;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r2, $r3, $r4;
        java.util.concurrent.locks.Condition $r5;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $i1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int capacity>;

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        $i0_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $i0_2 = $i0_1 + 1;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = $i0_2;

        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last>;

        $r3 = new com.contextlogic.wish.http.LinkedBlockingQueue$Node;

        specialinvoke $r3.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: void <init>(java.lang.Object,com.contextlogic.wish.http.LinkedBlockingQueue$Node,com.contextlogic.wish.http.LinkedBlockingQueue$Node)>($r1, $r2, null);

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = $r3;

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

        if $r4 != null goto label3;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = $r3;

     label2:
        $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notEmpty>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>();

        return 1;

     label3:
        $r2.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next> = $r3;

        goto label2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.io.ObjectInputStream $r1;
        java.lang.Object $r2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = 0;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = null;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = null;

     label1:
        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        if $r2 != null goto label2;

        return;

     label2:
        virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean add(java.lang.Object)>($r2);

        goto label1;
    }

    private void unlink(com.contextlogic.wish.http.LinkedBlockingQueue$Node)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r1, $r3, $r3_1;
        java.util.concurrent.locks.Condition $r2;
        int $i0, $i0_1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r3 := @parameter0: com.contextlogic.wish.http.LinkedBlockingQueue$Node;

        $r1 = $r3.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev>;

        $r3_1 = $r3.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

        if $r1 != null goto label3;

        if $r3_1 != null goto label2;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = null;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = null;

     label1:
        $i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $i0_1 = $i0 + -1;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = $i0_1;

        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Condition: void signalAll()>();

        return;

     label2:
        $r3_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev> = null;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = $r3_1;

        goto label1;

     label3:
        if $r3_1 != null goto label4;

        $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next> = null;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = $r1;

        goto label1;

     label4:
        $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next> = $r3_1;

        $r3_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev> = $r1;

        goto label1;
    }

    private java.lang.Object unlinkFirst()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r1, $r2;
        java.util.concurrent.locks.Condition $r3;
        int $i0, $i0_1;
        java.lang.Object r4;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = $r2;

        if $r2 != null goto label3;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = null;

     label2:
        $i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $i0_1 = $i0 + -1;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = $i0_1;

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        r4 = $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        return r4;

     label3:
        $r2.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev> = null;

        goto label2;
    }

    private java.lang.Object unlinkLast()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r1, $r2;
        java.util.concurrent.locks.Condition $r3;
        int $i0, $i0_1;
        java.lang.Object r4;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev>;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = $r2;

        if $r2 != null goto label3;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = null;

     label2:
        $i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $i0_1 = $i0 + -1;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = $i0_1;

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        r4 = $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        return r4;

     label3:
        $r2.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next> = null;

        goto label2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.io.ObjectOutputStream $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

(1)     $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label2:
        $r5_1 = Phi($r5 #1, $r5_2 #4);

(2)     if $r5_1 == null goto label5;

     label3:
        $r2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

(3)     $r5_2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

     label4:
(4)     goto label2;

     label5:
        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);

     label6:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label7:
        $r3 := @caughtexception;

        $r5_3 = Phi($r5 #0, $r5_1 #2, $r5_2 #3);

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean add(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void addLast(java.lang.Object)>($r1);

        return 1;
    }

    public void addFirst(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean offerFirst(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Deque full");

        throw $r2;

     label1:
        return;
    }

    public void addLast(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean offerLast(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Deque full");

        throw $r2;

     label1:
        return;
    }

    public void clear()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.concurrent.locks.Condition $r1;
        java.lang.Throwable $r2;
        java.util.concurrent.locks.ReentrantLock $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = null;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = null;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = 0;

        $r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void signalAll()>();

     label2:
        $r3_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label3:
        $r2 := @caughtexception;

        $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean contains(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2, $r4_3;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
(1)     $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label3:
        $r5_1 = Phi($r5 #1, $r5_2 #4);

(2)     if $r5_1 == null goto label8;

     label4:
        $r2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

     label5:
        if $z0 == 0 goto label6;

        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label6:
(3)     $r5_2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

     label7:
(4)     goto label3;

     label8:
        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label9:
        $r3 := @caughtexception;

        $r5_3 = Phi($r5 #0, $r5_1 #2, $r5_2 #3);

        $r4_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public java.util.Iterator descendingIterator()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$DescendingItr $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = new com.contextlogic.wish.http.LinkedBlockingQueue$DescendingItr;

        specialinvoke $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$DescendingItr: void <init>(com.contextlogic.wish.http.LinkedBlockingQueue,com.contextlogic.wish.http.LinkedBlockingQueue$1)>($r0, null);

        return $r1;
    }

    public int drainTo(java.util.Collection)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.Collection $r1;
        java.lang.NullPointerException $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r4;
        java.util.concurrent.locks.Condition $r5;
        java.lang.Throwable $r6;
        java.util.concurrent.locks.ReentrantLock $r7, $r7_1, $r7_2;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r8, $r8_1, $r8_2, $r8_3;
        int i0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.util.Collection;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        if $r1 != $r0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r7 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label3:
(1)     $r8 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label4:
        $r8_1 = Phi($r8 #1, $r8_2 #4);

(2)     if $r8_1 == null goto label7;

     label5:
        $r4 = $r8_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

(3)     $r8_2 = $r8_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

     label6:
(4)     goto label4;

     label7:
        i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = 0;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = null;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = null;

        $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signalAll()>();

     label8:
        $r7_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return i0;

     label9:
        $r6 := @caughtexception;

        $r8_3 = Phi($r8 #0, $r8_1 #2, $r8_2 #3);

        $r7_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public int drainTo(java.util.Collection, int)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.Collection $r1;
        int $i0, $i1, $i2, $i1_1, $i2_1, $i2_2, $i1_2, $i2_3;
        java.lang.NullPointerException $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r4;
        java.util.concurrent.locks.Condition $r5;
        java.lang.Throwable $r6;
        java.util.concurrent.locks.ReentrantLock $r7, $r7_1, $r7_2;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6, $r8_7, $r8_8;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.util.Collection;

        $i0 := @parameter1: int;

        if $r1 != null goto label01;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label01:
        if $r1 != $r0 goto label02;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label02:
        $r7 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void lock()>();

(0)     $i1 = 0;

     label03:
        $r8 = Phi($r8 #0, $r8_5 #10);

        $i2 = Phi($i2 #0, $i2_2 #10);

        $i1_1 = Phi($i1 #0, $i1_2 #10);

(1)     if $i1_1 >= $i0 goto label10;

     label04:
(2)     $r8_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label05:
(3)     if $r8_1 == null goto label10;

     label06:
(4)     $r8_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

        $r4 = $r8_2.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

(5)     $r8_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

        $r8_3.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev> = null;

(6)     $r8_4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

(7)     $r8_5 = $r8_4.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first> = $r8_5;

(8)     $i2_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

     label07:
(9)     $i2_2 = $i2_1 + -1;

     label08:
        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count> = $i2_2;

     label09:
        $i1_2 = $i1_1 + 1;

(10)    goto label03;

     label10:
        $r8_6 = Phi($r8 #1, $r8_1 #3);

(11)    $r8_7 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label11:
        if $r8_7 != null goto label13;

     label12:
        $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last> = null;

     label13:
        $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signalAll()>();

     label14:
        $r7_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $i1_1;

     label15:
        $r6 := @caughtexception;

        $r8_8 = Phi($r8 #1, $r8_1 #2, $r8_2 #4, $r8_3 #5, $r8_4 #6, $r8_5 #7, $r8_7 #11);

        $i2_3 = Phi($i2 #1, $i2_1 #8, $i2_2 #9);

        $r7_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label14 with label15;
    }

    public java.lang.Object element()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object getFirst()>();

        return $r1;
    }

    public java.lang.Object getFirst()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.NoSuchElementException $r1;
        java.lang.Object $r2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object peekFirst()>();

        if $r2 != null goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return $r2;
    }

    public java.lang.Object getLast()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.NoSuchElementException $r1;
        java.lang.Object $r2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object peekLast()>();

        if $r2 != null goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return $r2;
    }

    public java.util.Iterator iterator()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$Itr $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = new com.contextlogic.wish.http.LinkedBlockingQueue$Itr;

        specialinvoke $r1.<com.contextlogic.wish.http.LinkedBlockingQueue$Itr: void <init>(com.contextlogic.wish.http.LinkedBlockingQueue,com.contextlogic.wish.http.LinkedBlockingQueue$1)>($r0, null);

        return $r1;
    }

    public boolean offer(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean offerLast(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        long $l0;
        java.util.concurrent.TimeUnit $r2;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)>($r1, $l0, $r2);

        return $z0;
    }

    public boolean offerFirst(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.lang.NullPointerException $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        $z0 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean linkFirst(java.lang.Object)>($r1);

     label3:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z0;

     label4:
        $r3 := @caughtexception;

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean offerFirst(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.util.concurrent.TimeUnit $r2;
        java.lang.NullPointerException $r3;
        byte $b0;
        java.util.concurrent.locks.Condition $r4;
        java.lang.Throwable $r5;
        long $l1, $l1_1, $l1_2, $l1_3, $l1_4;
        java.util.concurrent.locks.ReentrantLock $r6, $r6_1, $r6_2, $r6_3;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $l1 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $l1_1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r6 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>();

     label2:
        $l1_2 = Phi($l1_1 #0, $l1_3 #3);

(1)     $z0 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean linkFirst(java.lang.Object)>($r1);

     label3:
        if $z0 == 0 goto label4;

        $r6_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label4:
        $b0 = $l1_2 cmp 0L;

        if $b0 > 0 goto label5;

        $r6_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label5:
        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

(2)     $l1_3 = interfaceinvoke $r4.<java.util.concurrent.locks.Condition: long awaitNanos(long)>($l1_2);

     label6:
(3)     goto label2;

     label7:
        $r5 := @caughtexception;

        $l1_4 = Phi($l1_1 #0, $l1_2 #1, $l1_3 #2);

        $r6_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean offerLast(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.lang.NullPointerException $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        $z0 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean linkLast(java.lang.Object)>($r1);

     label3:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z0;

     label4:
        $r3 := @caughtexception;

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean offerLast(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.util.concurrent.TimeUnit $r2;
        java.lang.NullPointerException $r3;
        byte $b0;
        java.util.concurrent.locks.Condition $r4;
        java.lang.Throwable $r5;
        long $l1, $l1_1, $l1_2, $l1_3, $l1_4;
        java.util.concurrent.locks.ReentrantLock $r6, $r6_1, $r6_2, $r6_3;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $l1 := @parameter1: long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $l1_1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r6 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>();

     label2:
        $l1_2 = Phi($l1_1 #0, $l1_3 #3);

(1)     $z0 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean linkLast(java.lang.Object)>($r1);

     label3:
        if $z0 == 0 goto label4;

        $r6_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label4:
        $b0 = $l1_2 cmp 0L;

        if $b0 > 0 goto label5;

        $r6_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label5:
        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

(2)     $l1_3 = interfaceinvoke $r4.<java.util.concurrent.locks.Condition: long awaitNanos(long)>($l1_2);

     label6:
(3)     goto label2;

     label7:
        $r5 := @caughtexception;

        $l1_4 = Phi($l1_1 #0, $l1_2 #1, $l1_3 #2);

        $r6_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public java.lang.Object peek()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object peekFirst()>();

        return $r1;
    }

    public java.lang.Object peekFirst()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Throwable $r1;
        java.util.concurrent.locks.ReentrantLock $r2, $r2_1, $r2_2;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r3, $r3_1, $r3_2, $r3_3;
        java.lang.Object $r4, $r4_1, $r4_2, $r4_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label2:
        if $r3 != null goto label4;

(1)     $r4 = null;

     label3:
        $r3_1 = Phi($r3 #1, $r3_2 #4);

        $r4_1 = Phi($r4 #1, $r4_2 #4);

        $r2_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r4_1;

     label4:
(2)     $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

(3)     $r4_2 = $r3_2.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

     label5:
(4)     goto label3;

     label6:
        $r1 := @caughtexception;

        $r3_3 = Phi($r3 #0, $r3_2 #2);

        $r4_3 = Phi($r4 #0, $r4_2 #3);

        $r2_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public java.lang.Object peekLast()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Throwable $r1;
        java.util.concurrent.locks.ReentrantLock $r2, $r2_1, $r2_2;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r3, $r3_1, $r3_2, $r3_3;
        java.lang.Object $r4, $r4_1, $r4_2, $r4_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last>;

     label2:
        if $r3 != null goto label4;

(1)     $r4 = null;

     label3:
        $r3_1 = Phi($r3 #1, $r3_2 #4);

        $r4_1 = Phi($r4 #1, $r4_2 #4);

        $r2_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r4_1;

     label4:
(2)     $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last>;

(3)     $r4_2 = $r3_2.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

     label5:
(4)     goto label3;

     label6:
        $r1 := @caughtexception;

        $r3_3 = Phi($r3 #0, $r3_2 #2);

        $r4_3 = Phi($r4 #0, $r4_2 #3);

        $r2_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public java.lang.Object poll()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object pollFirst()>();

        return $r1;
    }

    public java.lang.Object poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.lang.Object $r2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $r2;
    }

    public java.lang.Object pollFirst()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;
        java.util.concurrent.locks.ReentrantLock $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object unlinkFirst()>();

     label2:
        $r3_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r2;

     label3:
        $r1 := @caughtexception;

        $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object pollFirst(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.concurrent.TimeUnit $r1;
        byte $b0;
        java.util.concurrent.locks.Condition $r2;
        java.lang.Throwable $r3;
        long $l1, $l1_1, $l1_2, $l1_3, $l1_4;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Object $r5;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $l1 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $l1_1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>();

     label1:
        $l1_2 = Phi($l1_1 #0, $l1_3 #3);

(1)     $r5 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object unlinkFirst()>();

     label2:
        if $r5 == null goto label3;

        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r5;

     label3:
        $b0 = $l1_2 cmp 0L;

        if $b0 > 0 goto label4;

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return null;

     label4:
        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notEmpty>;

(2)     $l1_3 = interfaceinvoke $r2.<java.util.concurrent.locks.Condition: long awaitNanos(long)>($l1_2);

     label5:
(3)     goto label1;

     label6:
        $r3 := @caughtexception;

        $l1_4 = Phi($l1_1 #0, $l1_2 #1, $l1_3 #2);

        $r4_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public java.lang.Object pollLast()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;
        java.util.concurrent.locks.ReentrantLock $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object unlinkLast()>();

     label2:
        $r3_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r2;

     label3:
        $r1 := @caughtexception;

        $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object pollLast(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.concurrent.TimeUnit $r1;
        byte $b0;
        java.util.concurrent.locks.Condition $r2;
        java.lang.Throwable $r3;
        long $l1, $l1_1, $l1_2, $l1_3, $l1_4;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Object $r5;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $l1 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $l1_1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l1);

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>();

     label1:
        $l1_2 = Phi($l1_1 #0, $l1_3 #3);

(1)     $r5 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object unlinkLast()>();

     label2:
        if $r5 == null goto label3;

        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r5;

     label3:
        $b0 = $l1_2 cmp 0L;

        if $b0 > 0 goto label4;

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return null;

     label4:
        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notEmpty>;

(2)     $l1_3 = interfaceinvoke $r2.<java.util.concurrent.locks.Condition: long awaitNanos(long)>($l1_2);

     label5:
(3)     goto label1;

     label6:
        $r3 := @caughtexception;

        $l1_4 = Phi($l1_1 #0, $l1_2 #1, $l1_3 #2);

        $r4_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public java.lang.Object pop()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object removeFirst()>();

        return $r1;
    }

    public void push(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void addFirst(java.lang.Object)>($r1);

        return;
    }

    public void put(java.lang.Object) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void putLast(java.lang.Object)>($r1);

        return;
    }

    public void putFirst(java.lang.Object) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.lang.NullPointerException $r2;
        java.util.concurrent.locks.Condition $r3;
        java.lang.Throwable $r4;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r5, $r5_1, $r5_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        $z0 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean linkFirst(java.lang.Object)>($r1);

     label3:
        if $z0 != 0 goto label7;

     label4:
        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void await()>();

     label5:
        goto label2;

     label6:
        $r4 := @caughtexception;

        $r5_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r5_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

     label7:
        $r5_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r5_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void putLast(java.lang.Object) throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        java.lang.NullPointerException $r2;
        java.util.concurrent.locks.Condition $r3;
        java.lang.Throwable $r4;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r5, $r5_1, $r5_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        $z0 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean linkLast(java.lang.Object)>($r1);

     label3:
        if $z0 != 0 goto label7;

     label4:
        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notFull>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void await()>();

     label5:
        goto label2;

     label6:
        $r4 := @caughtexception;

        $r5_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r5_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

     label7:
        $r5_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r5_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int remainingCapacity()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        int $i0, $i1, $i0_1, $i0_2;
        java.lang.Throwable $r1;
        java.util.concurrent.locks.ReentrantLock $r2, $r2_1, $r2_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $i1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int capacity>;

        $i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

     label2:
        $i0_1 = $i1 - $i0;

        $r2_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $i0_1;

     label3:
        $r1 := @caughtexception;

        $i0_2 = Phi($i0 #0);

        $r2_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object remove()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object removeFirst()>();

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: boolean removeFirstOccurrence(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.Object removeFirst()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.NoSuchElementException $r1;
        java.lang.Object $r2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object pollFirst()>();

        if $r2 != null goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return $r2;
    }

    public boolean removeFirstOccurrence(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2, $r4_3;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
(1)     $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label03:
        $r5_1 = Phi($r5 #1, $r5_2 #4);

(2)     if $r5_1 == null goto label10;

     label04:
        $r2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

     label05:
        if $z0 == 0 goto label08;

     label06:
        specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void unlink(com.contextlogic.wish.http.LinkedBlockingQueue$Node)>($r5_1);

     label07:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label08:
(3)     $r5_2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

     label09:
(4)     goto label03;

     label10:
        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label11:
        $r3 := @caughtexception;

        $r5_3 = Phi($r5 #0, $r5_1 #2, $r5_2 #3);

        $r4_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
    }

    public java.lang.Object removeLast()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.NoSuchElementException $r1;
        java.lang.Object $r2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object pollLast()>();

        if $r2 != null goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return $r2;
    }

    public boolean removeLastOccurrence(java.lang.Object)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1, $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2, $r4_3;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
(1)     $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node last>;

     label03:
        $r5_1 = Phi($r5 #1, $r5_2 #4);

(2)     if $r5_1 == null goto label10;

     label04:
        $r2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

     label05:
        if $z0 == 0 goto label08;

     label06:
        specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void unlink(com.contextlogic.wish.http.LinkedBlockingQueue$Node)>($r5_1);

     label07:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label08:
(3)     $r5_2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node prev>;

     label09:
(4)     goto label03;

     label10:
        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label11:
        $r3 := @caughtexception;

        $r5_3 = Phi($r5 #0, $r5_1 #2, $r5_2 #3);

        $r4_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
    }

    boolean removeNode(com.contextlogic.wish.http.LinkedBlockingQueue$Node)
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r1, $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Throwable $r2;
        java.util.concurrent.locks.ReentrantLock $r3, $r3_1, $r3_2, $r3_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 := @parameter0: com.contextlogic.wish.http.LinkedBlockingQueue$Node;

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
(1)     $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label2:
        $r4_1 = Phi($r4 #1, $r4_2 #4);

        if $r4_1 == null goto label7;

(2)     if $r4_1 != $r1 goto label5;

     label3:
        specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: void unlink(com.contextlogic.wish.http.LinkedBlockingQueue$Node)>($r4_1);

     label4:
        $r3_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label5:
(3)     $r4_2 = $r4_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

     label6:
(4)     goto label2;

     label7:
        $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label8:
        $r2 := @caughtexception;

        $r4_3 = Phi($r4 #0, $r4_1 #2, $r4_2 #3);

        $r3_3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int size()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Throwable $r1;
        java.util.concurrent.locks.ReentrantLock $r2, $r2_1, $r2_2;
        int i0;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

     label2:
        $r2_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return i0;

     label3:
        $r1 := @caughtexception;

        $r2_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object take() throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object $r1;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object takeFirst()>();

        return $r1;
    }

    public java.lang.Object takeFirst() throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.concurrent.locks.Condition $r1;
        java.lang.Throwable $r2;
        java.lang.Object $r3;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object unlinkFirst()>();

     label2:
        if $r3 != null goto label6;

     label3:
        $r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notEmpty>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>();

     label4:
        goto label1;

     label5:
        $r2 := @caughtexception;

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r2;

     label6:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.Object takeLast() throws java.lang.InterruptedException
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.util.concurrent.locks.Condition $r1;
        java.lang.Throwable $r2;
        java.lang.Object $r3;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = specialinvoke $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.lang.Object unlinkLast()>();

     label2:
        if $r3 != null goto label6;

     label3:
        $r1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.Condition notEmpty>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>();

     label4:
        goto label1;

     label5:
        $r2 := @caughtexception;

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r2;

     label6:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.Object[] toArray()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        java.util.concurrent.locks.ReentrantLock $r4, $r4_1, $r4_2;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r4 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $i0 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $r1 = newarray (java.lang.Object)[$i0];

        $r5 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label2:
(1)     $i0_1 = 0;

     label3:
        $r5_1 = Phi($r5 #1, $r5_2 #4);

        $i0_2 = Phi($i0_1 #1, $i0_3 #4);

(2)     if $r5_1 == null goto label6;

     label4:
        $r2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        $r1[$i0_2] = $r2;

(3)     $r5_2 = $r5_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

     label5:
        $i0_3 = $i0_2 + 1;

(4)     goto label3;

     label6:
        $r4_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r1;

     label7:
        $r3 := @caughtexception;

        $r5_3 = Phi($r5 #0, $r5_1 #2, $r5_2 #3);

        $i0_4 = Phi($i0 #0, $i0_2 #2);

        $r4_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Throwable $r1;
        java.lang.Object[] $r2, $r2_1, $r2_2, $r2_3;
        java.util.concurrent.locks.ReentrantLock $r3, $r3_1, $r3_2;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i1_1, $i1_2, $i0_6;
        java.lang.Class $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3, $r5_4;
        com.contextlogic.wish.http.LinkedBlockingQueue$Node $r6, $r6_1, $r6_2, $r6_3;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

(0)     virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $i0 = lengthof $r2;

        $i1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

     label02:
(1)     if $i0 >= $i1 goto label04;

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

(2)     $r4_1 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getComponentType()>();

(3)     $i0_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: int count>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4_1, $i0_1);

(4)     $r2_1 = (java.lang.Object[]) $r5;

     label04:
        $r2_2 = Phi($r2 #1, $r2_1 #4);

        $r5_1 = Phi($r5 #1, $r5 #4);

        $r4_2 = Phi($r4 #1, $r4_1 #4);

        $i0_2 = Phi($i0 #1, $i0_1 #4);

(5)     $r6 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: com.contextlogic.wish.http.LinkedBlockingQueue$Node first>;

     label05:
(6)     $i0_3 = 0;

     label06:
        $r5_2 = Phi($r5_1 #6, $r5_3 #10);

        $i0_4 = Phi($i0_3 #6, $i0_5 #10);

        $r6_1 = Phi($r6 #6, $r6_2 #10);

(7)     if $r6_1 == null goto label09;

     label07:
(8)     $r5_3 = $r6_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: java.lang.Object item>;

        $r2_2[$i0_4] = $r5_3;

(9)     $r6_2 = $r6_1.<com.contextlogic.wish.http.LinkedBlockingQueue$Node: com.contextlogic.wish.http.LinkedBlockingQueue$Node next>;

     label08:
        $i0_5 = $i0_4 + 1;

(10)    goto label06;

     label09:
(11)    $i1_1 = lengthof $r2_2;

     label10:
        if $i1_1 <= $i0_4 goto label12;

     label11:
        $r2_2[$i0_4] = null;

     label12:
        $r3_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r2_2;

     label13:
        $r1 := @caughtexception;

        $r2_3 = Phi($r2 #0, $r2_1 #4, $r2_2 #5);

        $r5_4 = Phi($r5 #0, $r5_1 #5, $r5_2 #7, $r5_3 #8);

        $r4_3 = Phi($r4 #0, $r4_1 #2, $r4_2 #5);

        $i1_2 = Phi($i1 #0, $i1_1 #11);

        $i0_6 = Phi($i0 #0, $i0_1 #3, $i0_2 #5, $i0_4 #7);

        $r6_3 = Phi($r6 #0, $r6_1 #7, $r6_2 #9);

        $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public java.lang.String toString()
    {
        com.contextlogic.wish.http.LinkedBlockingQueue $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        java.util.concurrent.locks.ReentrantLock $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.http.LinkedBlockingQueue;

        $r3 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = specialinvoke $r0.<java.util.AbstractQueue: java.lang.String toString()>();

     label2:
        $r3_1 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r2;

     label3:
        $r1 := @caughtexception;

        $r3_2 = $r0.<com.contextlogic.wish.http.LinkedBlockingQueue: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3_2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
