public abstract class android.support.v4.app.SharedElementCallback extends java.lang.Object
{
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP;
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX;
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE;
    private static int MAX_IMAGE_SIZE;
    private android.graphics.Matrix mTempMatrix;

    static void <clinit>()
    {
        <android.support.v4.app.SharedElementCallback: int MAX_IMAGE_SIZE> = 1048576;

        return;
    }

    public void <init>()
    {
        android.support.v4.app.SharedElementCallback $r0;

        $r0 := @this: android.support.v4.app.SharedElementCallback;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;
        byte $b0;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Canvas $r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i3_1, $i1_1, $i2_1, $i3_2;
        float $f0, $f1, $f0_1, $f0_2, $f1_1, $f1_2, $f1_3, $f0_3;
        android.graphics.drawable.BitmapDrawable $r3;
        android.graphics.Bitmap $r4, $r4_1;
        android.graphics.Rect $r5;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if $i1 <= 0 goto label1;

        if $i2 > 0 goto label2;

     label1:
        return null;

     label2:
        $i3 = <android.support.v4.app.SharedElementCallback: int MAX_IMAGE_SIZE>;

        $f0 = (float) $i3;

        $i3_1 = $i1 * $i2;

        $f1 = (float) $i3_1;

        $f0_1 = $f0 / $f1;

        $f0_2 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0_1);

        $z0 = $r0 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label3;

        $b0 = $f0_2 cmpl 1.0F;

        if $b0 != 0 goto label3;

        $r3 = (android.graphics.drawable.BitmapDrawable) $r0;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        return $r4;

     label3:
        $f1_1 = (float) $i1;

        $f1_2 = $f1_1 * $f0_2;

        $i1_1 = (int) $f1_2;

        $f1_3 = (float) $i2;

        $f0_3 = $f1_3 * $f0_2;

        $i2_1 = (int) $f0_3;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4_1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1_1, $i2_1, $r1);

        $r2 = new android.graphics.Canvas;

        specialinvoke $r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r4_1);

        $r5 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i3_2 = $r5.<android.graphics.Rect: int left>;

        $i4 = $r5.<android.graphics.Rect: int top>;

        $i5 = $r5.<android.graphics.Rect: int right>;

        $i6 = $r5.<android.graphics.Rect: int bottom>;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1_1, $i2_1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r2);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3_2, $i4, $i5, $i6);

        return $r4_1;
    }

    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF)
    {
        android.support.v4.app.SharedElementCallback $r0;
        android.view.View $r1;
        android.graphics.RectF $r2;
        boolean $z0;
        android.os.Bundle $r3;
        android.widget.ImageView$ScaleType $r4, $r14, $r4_1;
        float[] $r5;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Canvas $r7;
        android.graphics.Matrix $r8, $r15, $r8_1, $r15_1, $r15_2, $r15_3, $r8_2, $r8_3, $r8_4;
        android.widget.ImageView $r9;
        android.graphics.drawable.Drawable $r10, $r11;
        android.graphics.Bitmap $r12, $r12_1, $r12_2;
        java.lang.String $r13;
        float $f0, $f1, $f2, $f0_1, $f0_2, $f0_3, $f0_4, $f1_1, $f1_2, $f1_3, $f1_4, $f1_5, $f1_6, $f2_1;
        int $i0, $i1, $i2, $i2_1, $i0_1, $i1_1;

        $r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: android.view.View;

        $r8 := @parameter1: android.graphics.Matrix;

        $r2 := @parameter2: android.graphics.RectF;

        $z0 = $r1 instanceof android.widget.ImageView;

(0)     if $z0 == 0 goto label1;

        $r9 = (android.widget.ImageView) $r1;

        $r10 = virtualinvoke $r9.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r11 = virtualinvoke $r9.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

(1)     if $r10 == null goto label1;

(2)     if $r11 != null goto label1;

        $r12 = staticinvoke <android.support.v4.app.SharedElementCallback: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)>($r10);

(3)     if $r12 == null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        virtualinvoke $r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("sharedElement:snapshot:bitmap", $r12);

        $r4 = virtualinvoke $r9.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r13 = virtualinvoke $r4.<android.widget.ImageView$ScaleType: java.lang.String toString()>();

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sharedElement:snapshot:imageScaleType", $r13);

        $r14 = virtualinvoke $r9.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r4_1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r14 != $r4_1 goto label3;

        $r8_1 = virtualinvoke $r9.<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>();

        $r5 = newarray (float)[9];

        virtualinvoke $r8_1.<android.graphics.Matrix: void getValues(float[])>($r5);

        virtualinvoke $r3.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>("sharedElement:snapshot:imageMatrix", $r5);

        return $r3;

     label1:
        $r12_1 = Phi($r12 #0, $r12 #1, $r12 #2, $r12 #3);

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0_1 = virtualinvoke $r2.<android.graphics.RectF: float height()>();

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0_1);

        if $i0 <= 0 goto label4;

        if $i1 <= 0 goto label4;

        $i2 = <android.support.v4.app.SharedElementCallback: int MAX_IMAGE_SIZE>;

        $f0_2 = (float) $i2;

        $i2_1 = $i0 * $i1;

        $f1 = (float) $i2_1;

        $f0_3 = $f0_2 / $f1;

        $f0_4 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0_3);

        $f1_1 = (float) $i0;

        $f1_2 = $f1_1 * $f0_4;

        $i0_1 = (int) $f1_2;

        $f1_3 = (float) $i1;

        $f1_4 = $f1_3 * $f0_4;

        $i1_1 = (int) $f1_4;

        $r15 = $r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

(4)     if $r15 != null goto label2;

        $r15_1 = new android.graphics.Matrix;

        specialinvoke $r15_1.<android.graphics.Matrix: void <init>()>();

(5)     $r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix> = $r15_1;

     label2:
        $r15_2 = Phi($r15 #4, $r15_1 #5);

        $r15_3 = $r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r15_3.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r8);

        $r8_2 = $r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        $f1_5 = $r2.<android.graphics.RectF: float left>;

        $f1_6 = neg $f1_5;

        $f2 = $r2.<android.graphics.RectF: float top>;

        $f2_1 = neg $f2;

        virtualinvoke $r8_2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1_6, $f2_1);

        $r8_3 = $r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r8_3.<android.graphics.Matrix: boolean postScale(float,float)>($f0_4, $f0_4);

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r12_2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0_1, $i1_1, $r6);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r12_2);

        $r8_4 = $r0.<android.support.v4.app.SharedElementCallback: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r7.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r8_4);

        virtualinvoke $r1.<android.view.View: void draw(android.graphics.Canvas)>($r7);

        return $r12_2;

     label3:
        return $r3;

     label4:
        return null;
    }

    public android.view.View onCreateSnapshotView(android.content.Context, android.os.Parcelable)
    {
        android.support.v4.app.SharedElementCallback $r0;
        android.content.Context $r1;
        android.widget.ImageView $r2, $r2_1, $r2_2;
        android.graphics.Matrix $r3;
        android.os.Parcelable $r4, $r4_1, $r4_2;
        boolean $z0, $z0_1, $z0_2;
        android.os.Bundle $r5;
        android.graphics.Bitmap $r6, $r6_1, $r6_2;
        java.lang.String $r7;
        android.widget.ImageView$ScaleType $r8, $r9, $r8_1, $r8_2;
        float[] $r10;

        $r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: android.content.Context;

        $r4 := @parameter1: android.os.Parcelable;

        $z0 = $r4 instanceof android.os.Bundle;

        if $z0 == 0 goto label2;

        $r5 = (android.os.Bundle) $r4;

        $r4_1 = virtualinvoke $r5.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("sharedElement:snapshot:bitmap");

        $r6 = (android.graphics.Bitmap) $r4_1;

        if $r6 != null goto label1;

        return null;

     label1:
        $r2 = new android.widget.ImageView;

        specialinvoke $r2.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        virtualinvoke $r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r6);

        $r7 = virtualinvoke $r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sharedElement:snapshot:imageScaleType");

        $r8 = staticinvoke <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType valueOf(java.lang.String)>($r7);

        virtualinvoke $r2.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r8);

        $r8_1 = virtualinvoke $r2.<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>();

        $r9 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

(0)     if $r8_1 != $r9 goto label3;

        $r10 = virtualinvoke $r5.<android.os.Bundle: float[] getFloatArray(java.lang.String)>("sharedElement:snapshot:imageMatrix");

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r3.<android.graphics.Matrix: void setValues(float[])>($r10);

        virtualinvoke $r2.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>($r3);

        return $r2;

     label2:
        $z0_1 = $r4 instanceof android.graphics.Bitmap;

        if $z0_1 == 0 goto label4;

        $r6_1 = (android.graphics.Bitmap) $r4;

        $r2_1 = new android.widget.ImageView;

        specialinvoke $r2_1.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

(1)     virtualinvoke $r2_1.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r6_1);

     label3:
        $r6_2 = Phi($r6 #0, $r6_1 #1);

        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r4_2 = Phi($r4_1 #0, $r4 #1);

        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r8_2 = Phi($r8_1 #0, $r8 #1);

        return $r2_2;

     label4:
        return null;
    }

    public void onMapSharedElements(java.util.List, java.util.Map)
    {
        android.support.v4.app.SharedElementCallback $r0;
        java.util.List $r1;
        java.util.Map $r2;

        $r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.Map;

        return;
    }

    public void onRejectSharedElements(java.util.List)
    {
        android.support.v4.app.SharedElementCallback $r0;
        java.util.List $r1;

        $r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: java.util.List;

        return;
    }

    public void onSharedElementEnd(java.util.List, java.util.List, java.util.List)
    {
        android.support.v4.app.SharedElementCallback $r0;
        java.util.List $r1, $r2, $r3;

        $r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.List;

        return;
    }

    public void onSharedElementStart(java.util.List, java.util.List, java.util.List)
    {
        android.support.v4.app.SharedElementCallback $r0;
        java.util.List $r1, $r2, $r3;

        $r0 := @this: android.support.v4.app.SharedElementCallback;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.util.List;

        return;
    }
}
