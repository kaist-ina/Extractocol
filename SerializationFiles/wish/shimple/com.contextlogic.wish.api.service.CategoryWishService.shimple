public class com.contextlogic.wish.api.service.CategoryWishService extends com.contextlogic.wish.api.service.ApiService
{
    private java.util.concurrent.ConcurrentHashMap apiRequestMap;

    public void <init>()
    {
        com.contextlogic.wish.api.service.CategoryWishService $r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        $r0 := @this: com.contextlogic.wish.api.service.CategoryWishService;

        specialinvoke $r0.<com.contextlogic.wish.api.service.ApiService: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<com.contextlogic.wish.api.service.CategoryWishService: java.util.concurrent.ConcurrentHashMap apiRequestMap> = $r1;

        return;
    }

    static java.util.concurrent.ConcurrentHashMap access$000(com.contextlogic.wish.api.service.CategoryWishService)
    {
        com.contextlogic.wish.api.service.CategoryWishService $r0;
        java.util.concurrent.ConcurrentHashMap r1;

        $r0 := @parameter0: com.contextlogic.wish.api.service.CategoryWishService;

        r1 = $r0.<com.contextlogic.wish.api.service.CategoryWishService: java.util.concurrent.ConcurrentHashMap apiRequestMap>;

        return r1;
    }

    public void cancelAllRequests()
    {
        com.contextlogic.wish.api.service.CategoryWishService $r0;
        java.util.concurrent.ConcurrentHashMap $r1, $r1_1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r4_1, $r4_2;
        java.util.Map$Entry $r5;
        com.contextlogic.wish.api.core.WishApiRequest $r6;

        $r0 := @this: com.contextlogic.wish.api.service.CategoryWishService;

        $r1 = $r0.<com.contextlogic.wish.api.service.CategoryWishService: java.util.concurrent.ConcurrentHashMap apiRequestMap>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

(0)     $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r4 = Phi($r4 #0, $r4_2 #1);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4_1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4_1;

        $r4_2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (com.contextlogic.wish.api.core.WishApiRequest) $r4_2;

        virtualinvoke $r6.<com.contextlogic.wish.api.core.WishApiRequest: void cancel()>();

(1)     goto label1;

     label2:
        $r1_1 = $r0.<com.contextlogic.wish.api.service.CategoryWishService: java.util.concurrent.ConcurrentHashMap apiRequestMap>;

        virtualinvoke $r1_1.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        return;
    }

    public boolean isPending(java.lang.String)
    {
        com.contextlogic.wish.api.service.CategoryWishService $r0;
        java.lang.String $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.api.service.CategoryWishService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.contextlogic.wish.api.service.CategoryWishService: java.util.concurrent.ConcurrentHashMap apiRequestMap>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public void requestService(java.lang.String, boolean, com.contextlogic.wish.api.service.CategoryWishService$SuccessCallback, com.contextlogic.wish.api.service.CategoryWishService$FailureCallback)
    {
        com.contextlogic.wish.api.service.CategoryWishService $r0;
        java.lang.String $r1;
        boolean $z0;
        com.contextlogic.wish.api.service.CategoryWishService$SuccessCallback $r2;
        com.contextlogic.wish.api.service.CategoryWishService$FailureCallback $r3;
        com.contextlogic.wish.api.service.CategoryWishService$1 $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        com.contextlogic.wish.api.core.WishApi $r6;
        com.contextlogic.wish.api.core.WishApiRequest $r7;

        $r0 := @this: com.contextlogic.wish.api.service.CategoryWishService;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: com.contextlogic.wish.api.service.CategoryWishService$SuccessCallback;

        $r3 := @parameter3: com.contextlogic.wish.api.service.CategoryWishService$FailureCallback;

        $r6 = staticinvoke <com.contextlogic.wish.api.core.WishApi: com.contextlogic.wish.api.core.WishApi getInstance()>();

        $r4 = new com.contextlogic.wish.api.service.CategoryWishService$1;

        specialinvoke $r4.<com.contextlogic.wish.api.service.CategoryWishService$1: void <init>(com.contextlogic.wish.api.service.CategoryWishService,java.lang.String,com.contextlogic.wish.api.service.CategoryWishService$FailureCallback,com.contextlogic.wish.api.service.CategoryWishService$SuccessCallback)>($r0, $r1, $r3, $r2);

        $r7 = virtualinvoke $r6.<com.contextlogic.wish.api.core.WishApi: com.contextlogic.wish.api.core.WishApiRequest wishForCategory(java.lang.String,boolean,com.contextlogic.wish.api.core.WishApiCallback)>($r1, $z0, $r4);

        $r5 = $r0.<com.contextlogic.wish.api.service.CategoryWishService: java.util.concurrent.ConcurrentHashMap apiRequestMap>;

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

        return;
    }
}
