public final class ch.boye.httpclientandroidlib.util.EncodingUtils extends java.lang.Object
{

    private void <init>()
    {
        ch.boye.httpclientandroidlib.util.EncodingUtils $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.util.EncodingUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] getAsciiBytes(java.lang.String)
    {
        java.lang.String $r0, $r5;
        java.lang.IllegalArgumentException $r1;
        java.nio.charset.Charset $r2;
        java.io.UnsupportedEncodingException $r3;
        java.lang.Error $r4;
        byte[] $r6;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r1;

     label1:
        $r2 = <ch.boye.httpclientandroidlib.Consts: java.nio.charset.Charset ASCII>;

     label2:
        $r5 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);

     label3:
        return $r6;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>("HttpClient requires ASCII support");

        throw $r4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static java.lang.String getAsciiString(byte[])
    {
        byte[] $r0;
        java.lang.IllegalArgumentException $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r1;

     label1:
        $i0 = lengthof $r0;

        $r2 = staticinvoke <ch.boye.httpclientandroidlib.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)>($r0, 0, $i0);

        return $r2;
    }

    public static java.lang.String getAsciiString(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, $r6;
        java.nio.charset.Charset $r3;
        java.io.UnsupportedEncodingException $r4;
        java.lang.Error $r5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r1;

     label1:
        $r2 = new java.lang.String;

        $r3 = <ch.boye.httpclientandroidlib.Consts: java.nio.charset.Charset ASCII>;

     label2:
        $r6 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, $i0, $i1, $r6);

     label3:
        return $r2;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.Error;

        specialinvoke $r5.<java.lang.Error: void <init>(java.lang.String)>("HttpClient requires ASCII support");

        throw $r5;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static byte[] getBytes(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.UnsupportedEncodingException $r2;
        java.lang.IllegalArgumentException $r3, $r3_1;
        int $i0;
        byte[] $r4, $r4_1, $r4_2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data may not be null");

        throw $r3;

     label1:
        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

(0)     if $i0 != 0 goto label3;

     label2:
        $r3_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r3_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("charset may not be null or empty");

        throw $r3_1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r1);

     label4:
        return $r4;

     label5:
        $r2 := @caughtexception;

        $r4_1 = Phi($r4 #0);

        $r4_2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        return $r4_2;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public static java.lang.String getString(byte[], int, int, java.lang.String)
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3, $r3_1;
        java.io.UnsupportedEncodingException $r2;
        java.lang.IllegalArgumentException $r4, $r4_1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 := @parameter3: java.lang.String;

        if $r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r4;

     label1:
        if $r3 == null goto label2;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

     label2:
        $r4_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r4_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("charset may not be null or empty");

        throw $r4_1;

     label3:
        $r1 = new java.lang.String;

     label4:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, $i0, $i1, $r3);

     label5:
        return $r1;

     label6:
        $r2 := @caughtexception;

        $r3_1 = new java.lang.String;

        specialinvoke $r3_1.<java.lang.String: void <init>(byte[],int,int)>($r0, $i0, $i1);

        return $r3_1;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public static java.lang.String getString(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.IllegalArgumentException $r1;
        int $i0;
        java.lang.String $r2, $r2_1;

        $r0 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r1;

     label1:
        $i0 = lengthof $r0;

        $r2_1 = staticinvoke <ch.boye.httpclientandroidlib.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)>($r0, 0, $i0, $r2);

        return $r2_1;
    }
}
