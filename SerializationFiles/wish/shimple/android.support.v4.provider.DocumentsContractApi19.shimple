class android.support.v4.provider.DocumentsContractApi19 extends java.lang.Object
{
    private static final java.lang.String TAG;

    void <init>()
    {
        android.support.v4.provider.DocumentsContractApi19 $r0;

        $r0 := @this: android.support.v4.provider.DocumentsContractApi19;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean canRead(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>($r1, 1);

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static boolean canWrite(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1, $i0_1, $i1_1, $i1_2, $i0_2, $i1_3, $i0_3;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>($r1, 2);

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $i0_1 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>($r0, $r1, "flags", 0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

(0)     if $z0 != 0 goto label4;

        $i1 = $i0_1 & 4;

        if $i1 == 0 goto label2;

        return 1;

     label2:
        $r2 = "vnd.android.document/directory";

        $z0_1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

(1)     if $z0_1 == 0 goto label3;

        $i1_1 = $i0_1 & 8;

(2)     if $i1_1 == 0 goto label3;

        return 1;

     label3:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

        $z0_2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

(3)     if $z0_2 != 0 goto label4;

        $i0_2 = $i0_1 & 2;

(4)     if $i0_2 == 0 goto label4;

        return 1;

     label4:
        $i1_3 = Phi($i1 #0, $i1_2 #3, $i1_2 #4);

        $i0_3 = Phi($i0_1 #0, $i0_1 #3, $i0_2 #4);

        $z0_3 = Phi($z0 #0, $z0_2 #3, $z0_2 #4);

        return 0;
    }

    private static void closeQuietly(java.lang.AutoCloseable)
    {
        java.lang.AutoCloseable $r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.lang.AutoCloseable;

        if $r0 == null goto label5;

     label1:
        interfaceinvoke $r0.<java.lang.AutoCloseable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static boolean delete(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        android.content.ContentResolver $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $z0 = staticinvoke <android.provider.DocumentsContract: boolean deleteDocument(android.content.ContentResolver,android.net.Uri)>($r2, $r1);

        return $z0;
    }

    public static boolean exists(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4;
        android.content.ContentResolver $r5;
        android.database.Cursor $r6, $r7, $r6_1, $r6_2, $r6_3;
        int $i0;
        boolean $z0, $z0_1, $z0_2;
        java.lang.StringBuilder $r8, $r8_1, $r8_2, $r8_3;
        java.lang.String $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

(0)     $r6 = null;

     label01:
        $r2 = newarray (java.lang.String)[1];

     label02:
        $r2[0] = "document_id";

     label03:
        $r7 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, null, null, null);

     label04:
(1)     $r6_1 = $r7;

     label05:
        $i0 = interfaceinvoke $r7.<android.database.Cursor: int getCount()>();

     label06:
        if $i0 <= 0 goto label08;

(2)     $z0 = 1;

     label07:
        $z0_1 = Phi($z0 #2, $z0_2 #3);

        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r7);

        return $z0_1;

     label08:
        $z0_2 = 0;

(3)     goto label07;

     label09:
        $r3 := @caughtexception;

(4)     $r6_2 = Phi($r6 #0, $r6_1 #1);

     label10:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

(5)     $r8_1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

(6)     $r8_2 = virtualinvoke $r8_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8_2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r9);

     label11:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6_2);

        return 0;

     label12:
        $r4 := @caughtexception;

        $r6_3 = Phi($r6 #0, $r6_1 #1, $r6_2 #4);

        $r8_3 = Phi($r8 #0, $r8_1 #5, $r8_2 #6);

        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6_3);

        throw $r4;

        catch java.lang.Exception from label01 to label04 with label09;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public static java.lang.String getName(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r1, "_display_name", null);

        return $r2;
    }

    private static java.lang.String getRawType(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r1, "mime_type", null);

        return $r2;
    }

    public static java.lang.String getType(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r3 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $r2 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        return $r3;
    }

    public static boolean isDirectory(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = "vnd.android.document/directory";

        $r3 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public static boolean isDocumentUri(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $z0 = staticinvoke <android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>($r0, $r1);

        return $z0;
    }

    public static boolean isFile(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r3 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $r2 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

(0)     if $z0 != 0 goto label1;

        $z0_1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

(1)     if $z0_1 == 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return 0;

     label2:
        return 1;
    }

    public static long lastModified(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, "last_modified", 0L);

        return $l0;
    }

    public static long length(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, "_size", 0L);

        return $l0;
    }

    private static int queryForInt(android.content.Context, android.net.Uri, java.lang.String, int)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        long $l0, $l0_1;
        int $i1, $i1_1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $l0 = (long) $i1;

        $l0_1 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, $r2, $l0);

        $i1_1 = (int) $l0_1;

        return $i1_1;
    }

    private static long queryForLong(android.content.Context, android.net.Uri, java.lang.String, long)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r5_1, $r5_2;
        long $l0, $l0_1, $l0_2, $l0_3;
        android.content.ContentResolver $r6;
        android.database.Cursor $r7, $r8, $r7_1, $r7_2, $r7_3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.lang.StringBuilder $r9, $r9_1, $r9_2, $r9_3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r5 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

(0)     $r7 = null;

     label01:
        $r2 = newarray (java.lang.String)[1];

     label02:
        $r2[0] = $r5;

     label03:
        $r8 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, null, null, null);

     label04:
(1)     $r7_1 = $r8;

     label05:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

     label06:
(2)     if $z0 == 0 goto label11;

     label07:
(3)     $z0_1 = interfaceinvoke $r8.<android.database.Cursor: boolean isNull(int)>(0);

     label08:
(4)     if $z0_1 != 0 goto label11;

     label09:
(5)     $l0_1 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>(0);

     label10:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r8);

        return $l0_1;

     label11:
        $z0_2 = Phi($z0 #2, $z0_1 #4);

        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r8);

        return $l0;

     label12:
        $r3 := @caughtexception;

        $r7_2 = Phi($r7 #0, $r7_1 #1);

        $z0_3 = Phi($z0 #0, $z0_1 #3);

(6)     $l0_2 = Phi($l0 #0, $l0_1 #5);

     label13:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

(7)     $r9_1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

(8)     $r9_2 = virtualinvoke $r9_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

(9)     $r5_1 = virtualinvoke $r9_2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r5_1);

     label14:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r7_2);

        return $l0_2;

     label15:
        $r4 := @caughtexception;

        $r7_3 = Phi($r7 #0, $r7_1 #1, $r7_2 #6);

        $r9_3 = Phi($r9 #0, $r9_1 #7, $r9_2 #8);

        $z0_4 = Phi($z0 #0, $z0_1 #3, $z0_3 #6);

        $l0_3 = Phi($l0 #0, $l0_1 #5, $l0_2 #6);

        $r5_2 = Phi($r5 #0, $r5_1 #9);

        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r7_3);

        throw $r4;

        catch java.lang.Exception from label01 to label04 with label12;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    private static java.lang.String queryForString(android.content.Context, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        java.lang.String[] $r3;
        java.lang.Exception $r4;
        java.lang.Throwable $r5;
        android.content.ContentResolver $r7;
        android.database.Cursor $r8, $r9, $r8_1, $r8_2, $r8_3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.lang.StringBuilder $r10, $r10_1, $r10_2, $r10_3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r6 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r7 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

(0)     $r8 = null;

     label01:
        $r3 = newarray (java.lang.String)[1];

     label02:
        $r3[0] = $r6;

     label03:
        $r9 = virtualinvoke $r7.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r3, null, null, null);

     label04:
(1)     $r8_1 = $r9;

     label05:
        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToFirst()>();

     label06:
(2)     if $z0 == 0 goto label11;

     label07:
(3)     $z0_1 = interfaceinvoke $r9.<android.database.Cursor: boolean isNull(int)>(0);

     label08:
(4)     if $z0_1 != 0 goto label11;

     label09:
(5)     $r6_1 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>(0);

     label10:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r9);

        return $r6_1;

     label11:
        $z0_2 = Phi($z0 #2, $z0_1 #4);

        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r9);

        return $r2;

     label12:
        $r4 := @caughtexception;

        $r8_2 = Phi($r8 #0, $r8_1 #1);

        $z0_3 = Phi($z0 #0, $z0_1 #3);

(6)     $r6_2 = Phi($r6 #0, $r6_1 #5);

     label13:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

(7)     $r10_1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

(8)     $r10_2 = virtualinvoke $r10_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

(9)     $r6_3 = virtualinvoke $r10_2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r6_3);

     label14:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r8_2);

        return $r2;

     label15:
        $r5 := @caughtexception;

        $r8_3 = Phi($r8 #0, $r8_1 #1, $r8_2 #6);

        $r10_3 = Phi($r10 #0, $r10_1 #7, $r10_2 #8);

        $z0_4 = Phi($z0 #0, $z0_1 #3, $z0_3 #6);

        $r6_4 = Phi($r6 #0, $r6_1 #5, $r6_2 #6, $r6_3 #9);

        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r8_3);

        throw $r5;

        catch java.lang.Exception from label01 to label04 with label12;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }
}
