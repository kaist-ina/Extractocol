public final enum class com.seatgeek.placesautocomplete.async.BackgroundExecutorService extends java.lang.Enum
{
    private static final com.seatgeek.placesautocomplete.async.BackgroundExecutorService[] $VALUES;
    public static final enum com.seatgeek.placesautocomplete.async.BackgroundExecutorService INSTANCE;
    private final java.util.concurrent.Executor executor;
    private final android.os.Handler mHandler;

    static void <clinit>()
    {
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService[] $r0;
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService $r1, $r1_1;

        $r1 = new com.seatgeek.placesautocomplete.async.BackgroundExecutorService;

        specialinvoke $r1.<com.seatgeek.placesautocomplete.async.BackgroundExecutorService: void <init>(java.lang.String,int)>("INSTANCE", 0);

        <com.seatgeek.placesautocomplete.async.BackgroundExecutorService: com.seatgeek.placesautocomplete.async.BackgroundExecutorService INSTANCE> = $r1;

        $r0 = newarray (com.seatgeek.placesautocomplete.async.BackgroundExecutorService)[1];

        $r1_1 = <com.seatgeek.placesautocomplete.async.BackgroundExecutorService: com.seatgeek.placesautocomplete.async.BackgroundExecutorService INSTANCE>;

        $r0[0] = $r1_1;

        <com.seatgeek.placesautocomplete.async.BackgroundExecutorService: com.seatgeek.placesautocomplete.async.BackgroundExecutorService[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService $r0;
        java.lang.String $r1;
        int $i0;
        java.util.concurrent.ThreadPoolExecutor $r2;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.LinkedBlockingQueue $r4;
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService$1 $r5;
        android.os.Handler $r6;
        android.os.Looper $r7;

        $r0 := @this: com.seatgeek.placesautocomplete.async.BackgroundExecutorService;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r2 = new java.util.concurrent.ThreadPoolExecutor;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r4 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r4.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        $r5 = new com.seatgeek.placesautocomplete.async.BackgroundExecutorService$1;

        specialinvoke $r5.<com.seatgeek.placesautocomplete.async.BackgroundExecutorService$1: void <init>(com.seatgeek.placesautocomplete.async.BackgroundExecutorService)>($r0);

        specialinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(1, 1, 5L, $r3, $r4, $r5);

        virtualinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1);

        $r0.<com.seatgeek.placesautocomplete.async.BackgroundExecutorService: java.util.concurrent.Executor executor> = $r2;

        $r6 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        $r0.<com.seatgeek.placesautocomplete.async.BackgroundExecutorService: android.os.Handler mHandler> = $r6;

        return;
    }

    static android.os.Handler access$000(com.seatgeek.placesautocomplete.async.BackgroundExecutorService)
    {
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.seatgeek.placesautocomplete.async.BackgroundExecutorService;

        r1 = $r0.<com.seatgeek.placesautocomplete.async.BackgroundExecutorService: android.os.Handler mHandler>;

        return r1;
    }

    public static com.seatgeek.placesautocomplete.async.BackgroundExecutorService valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/seatgeek/placesautocomplete/async/BackgroundExecutorService", $r0);

        $r2 = (com.seatgeek.placesautocomplete.async.BackgroundExecutorService) $r1;

        return $r2;
    }

    public static com.seatgeek.placesautocomplete.async.BackgroundExecutorService[] values()
    {
        java.lang.Object $r0;
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService[] $r1, $r1_1;

        $r1 = <com.seatgeek.placesautocomplete.async.BackgroundExecutorService: com.seatgeek.placesautocomplete.async.BackgroundExecutorService[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1_1 = (com.seatgeek.placesautocomplete.async.BackgroundExecutorService[]) $r0;

        return $r1_1;
    }

    public void enqueue(com.seatgeek.placesautocomplete.async.BackgroundJob)
    {
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService $r0;
        com.seatgeek.placesautocomplete.async.BackgroundJob $r1;
        java.util.concurrent.Executor $r2;
        com.seatgeek.placesautocomplete.async.BackgroundExecutorService$2 $r3;

        $r0 := @this: com.seatgeek.placesautocomplete.async.BackgroundExecutorService;

        $r1 := @parameter0: com.seatgeek.placesautocomplete.async.BackgroundJob;

        $r2 = $r0.<com.seatgeek.placesautocomplete.async.BackgroundExecutorService: java.util.concurrent.Executor executor>;

        $r3 = new com.seatgeek.placesautocomplete.async.BackgroundExecutorService$2;

        specialinvoke $r3.<com.seatgeek.placesautocomplete.async.BackgroundExecutorService$2: void <init>(com.seatgeek.placesautocomplete.async.BackgroundExecutorService,com.seatgeek.placesautocomplete.async.BackgroundJob)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }
}
