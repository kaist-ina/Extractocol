public class com.contextlogic.wish.api.service.GetUserStatusService extends com.contextlogic.wish.api.service.ApiService
{
    private com.contextlogic.wish.api.core.WishApiRequest apiRequest;

    public void <init>()
    {
        com.contextlogic.wish.api.service.GetUserStatusService $r0;

        $r0 := @this: com.contextlogic.wish.api.service.GetUserStatusService;

        specialinvoke $r0.<com.contextlogic.wish.api.service.ApiService: void <init>()>();

        return;
    }

    static com.contextlogic.wish.api.core.WishApiRequest access$002(com.contextlogic.wish.api.service.GetUserStatusService, com.contextlogic.wish.api.core.WishApiRequest)
    {
        com.contextlogic.wish.api.service.GetUserStatusService $r0;
        com.contextlogic.wish.api.core.WishApiRequest $r1;

        $r0 := @parameter0: com.contextlogic.wish.api.service.GetUserStatusService;

        $r1 := @parameter1: com.contextlogic.wish.api.core.WishApiRequest;

        $r0.<com.contextlogic.wish.api.service.GetUserStatusService: com.contextlogic.wish.api.core.WishApiRequest apiRequest> = $r1;

        return $r1;
    }

    public void cancelAllRequests()
    {
        com.contextlogic.wish.api.service.GetUserStatusService $r0;
        com.contextlogic.wish.api.core.WishApiRequest $r1, $r1_1, $r1_2;

        $r0 := @this: com.contextlogic.wish.api.service.GetUserStatusService;

        $r1 = $r0.<com.contextlogic.wish.api.service.GetUserStatusService: com.contextlogic.wish.api.core.WishApiRequest apiRequest>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.api.service.GetUserStatusService: com.contextlogic.wish.api.core.WishApiRequest apiRequest>;

        virtualinvoke $r1_1.<com.contextlogic.wish.api.core.WishApiRequest: void cancel()>();

(1)     $r0.<com.contextlogic.wish.api.service.GetUserStatusService: com.contextlogic.wish.api.core.WishApiRequest apiRequest> = null;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        return;
    }

    public boolean isPending()
    {
        com.contextlogic.wish.api.service.GetUserStatusService $r0;
        com.contextlogic.wish.api.core.WishApiRequest $r1;

        $r0 := @this: com.contextlogic.wish.api.service.GetUserStatusService;

        $r1 = $r0.<com.contextlogic.wish.api.service.GetUserStatusService: com.contextlogic.wish.api.core.WishApiRequest apiRequest>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void requestService(boolean, com.contextlogic.wish.api.service.GetUserStatusService$SuccessCallback, com.contextlogic.wish.api.service.ApiService$FailureCallback)
    {
        com.contextlogic.wish.api.service.GetUserStatusService $r0;
        boolean $z0, $z1, $z1_1, $z1_2, $z1_3, $z1_4, $z1_5;
        com.contextlogic.wish.api.service.GetUserStatusService$SuccessCallback $r1;
        com.contextlogic.wish.api.service.ApiService$FailureCallback $r2;
        com.contextlogic.wish.api.service.GetUserStatusService$1 $r3;
        com.contextlogic.wish.user.UserStatusManager $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.util.HashMap $r5, $r5_1, $r5_2, $r5_3;
        com.contextlogic.wish.api.core.WishApi $r6;
        com.contextlogic.wish.api.core.WishApiRequest $r7;

        $r0 := @this: com.contextlogic.wish.api.service.GetUserStatusService;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: com.contextlogic.wish.api.service.GetUserStatusService$SuccessCallback;

        $r2 := @parameter2: com.contextlogic.wish.api.service.ApiService$FailureCallback;

        virtualinvoke $r0.<com.contextlogic.wish.api.service.GetUserStatusService: void cancelAllRequests()>();

        $r4 = staticinvoke <com.contextlogic.wish.user.UserStatusManager: com.contextlogic.wish.user.UserStatusManager getInstance()>();

        $z1 = virtualinvoke $r4.<com.contextlogic.wish.user.UserStatusManager: boolean isShippingDataFetched()>();

(0)     if $z1 == 0 goto label1;

        $r4_1 = staticinvoke <com.contextlogic.wish.user.UserStatusManager: com.contextlogic.wish.user.UserStatusManager getInstance()>();

        $r5 = virtualinvoke $r4_1.<com.contextlogic.wish.user.UserStatusManager: java.util.HashMap getShippingLocations()>();

(1)     if $r5 == null goto label1;

        $r4_2 = staticinvoke <com.contextlogic.wish.user.UserStatusManager: com.contextlogic.wish.user.UserStatusManager getInstance()>();

        $r5_1 = virtualinvoke $r4_2.<com.contextlogic.wish.user.UserStatusManager: java.util.HashMap getShippingLocations()>();

        $z1_1 = virtualinvoke $r5_1.<java.util.HashMap: boolean isEmpty()>();

(2)     if $z1_1 == 0 goto label3;

     label1:
        $r5_2 = Phi($r5 #0, $r5 #1, $r5_1 #2);

        $r4_3 = Phi($r4 #0, $r4_1 #1, $r4_2 #2);

        $z1_3 = Phi($z1 #0, $z1 #1, $z1_1 #2);

(3)     $z1_4 = 1;

     label2:
        $r5_3 = Phi($r5_2 #3, $r5_1 #4);

        $r4_4 = Phi($r4_3 #3, $r4_2 #4);

        $z1_5 = Phi($z1_4 #3, $z1_2 #4);

        $r6 = staticinvoke <com.contextlogic.wish.api.core.WishApi: com.contextlogic.wish.api.core.WishApi getInstance()>();

        $r3 = new com.contextlogic.wish.api.service.GetUserStatusService$1;

        specialinvoke $r3.<com.contextlogic.wish.api.service.GetUserStatusService$1: void <init>(com.contextlogic.wish.api.service.GetUserStatusService,com.contextlogic.wish.api.service.ApiService$FailureCallback,com.contextlogic.wish.api.service.GetUserStatusService$SuccessCallback)>($r0, $r2, $r1);

        $r7 = virtualinvoke $r6.<com.contextlogic.wish.api.core.WishApi: com.contextlogic.wish.api.core.WishApiRequest getUserStatus(boolean,boolean,com.contextlogic.wish.api.core.WishApiCallback)>($z1_5, $z0, $r3);

        $r0.<com.contextlogic.wish.api.service.GetUserStatusService: com.contextlogic.wish.api.core.WishApiRequest apiRequest> = $r7;

        return;

     label3:
        $z1_2 = 0;

(4)     goto label2;
    }
}
