public final class com.facebook.Settings extends java.lang.Object
{
    private static final java.lang.String ANALYTICS_EVENT;
    public static final java.lang.String APPLICATION_ID_PROPERTY;
    private static final java.lang.String APP_EVENT_PREFERENCES;
    private static final java.lang.String ATTRIBUTION_ID_COLUMN_NAME;
    private static final android.net.Uri ATTRIBUTION_ID_CONTENT_URI;
    private static final java.lang.String ATTRIBUTION_PREFERENCES;
    private static final java.lang.String AUTO_PUBLISH;
    public static final java.lang.String CLIENT_TOKEN_PROPERTY;
    private static final int DEFAULT_CORE_POOL_SIZE;
    private static final int DEFAULT_KEEP_ALIVE;
    private static final int DEFAULT_MAXIMUM_POOL_SIZE;
    private static final java.util.concurrent.ThreadFactory DEFAULT_THREAD_FACTORY;
    private static final java.util.concurrent.BlockingQueue DEFAULT_WORK_QUEUE;
    private static final java.lang.String FACEBOOK_COM;
    private static final java.lang.Object LOCK;
    private static final java.lang.String MOBILE_INSTALL_EVENT;
    private static final java.lang.String PUBLISH_ACTIVITY_PATH;
    private static final java.lang.String TAG;
    private static volatile java.lang.String appClientToken;
    private static volatile java.lang.String appVersion;
    private static volatile java.lang.String applicationId;
    private static volatile boolean defaultsLoaded;
    private static volatile java.util.concurrent.Executor executor;
    private static volatile java.lang.String facebookDomain;
    private static volatile boolean isDebugEnabled;
    private static final java.util.HashSet loggingBehaviors;
    private static java.util.concurrent.atomic.AtomicLong onProgressThreshold;
    private static volatile boolean platformCompatibilityEnabled;
    private static java.lang.Boolean sdkInitialized;
    private static volatile boolean shouldAutoPublishInstall;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.util.HashSet $r1;
        com.facebook.LoggingBehavior[] $r2;
        com.facebook.LoggingBehavior $r3;
        java.util.concurrent.atomic.AtomicLong $r4;
        java.lang.Object $r5;
        java.util.concurrent.LinkedBlockingQueue $r6;
        com.facebook.Settings$1 $r7;
        java.lang.String $r8;
        java.util.List $r9;
        android.net.Uri $r10;
        java.lang.Boolean $r11;

        $r0 = class "com/facebook/Settings";

        $r8 = virtualinvoke $r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        <com.facebook.Settings: java.lang.String TAG> = $r8;

        $r1 = new java.util.HashSet;

        $r2 = newarray (com.facebook.LoggingBehavior)[1];

        $r3 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior DEVELOPER_ERRORS>;

        $r2[0] = $r3;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        <com.facebook.Settings: java.util.HashSet loggingBehaviors> = $r1;

        <com.facebook.Settings: boolean defaultsLoaded> = 0;

        <com.facebook.Settings: java.lang.String facebookDomain> = "facebook.com";

        $r4 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(65536L);

        <com.facebook.Settings: java.util.concurrent.atomic.AtomicLong onProgressThreshold> = $r4;

        <com.facebook.Settings: boolean isDebugEnabled> = 0;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        <com.facebook.Settings: java.lang.Object LOCK> = $r5;

        $r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.facebook.katana.provider.AttributionIdProvider");

        <com.facebook.Settings: android.net.Uri ATTRIBUTION_ID_CONTENT_URI> = $r10;

        $r6 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r6.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(10);

        <com.facebook.Settings: java.util.concurrent.BlockingQueue DEFAULT_WORK_QUEUE> = $r6;

        $r7 = new com.facebook.Settings$1;

        specialinvoke $r7.<com.facebook.Settings$1: void <init>()>();

        <com.facebook.Settings: java.util.concurrent.ThreadFactory DEFAULT_THREAD_FACTORY> = $r7;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        <com.facebook.Settings: java.lang.Boolean sdkInitialized> = $r11;

        return;
    }

    public void <init>()
    {
        com.facebook.Settings $r0;

        $r0 := @this: com.facebook.Settings;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void addLoggingBehavior(com.facebook.LoggingBehavior)
    {
        com.facebook.LoggingBehavior $r0;
        java.util.HashSet $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: com.facebook.LoggingBehavior;

        $r1 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        entermonitor $r1;

     label1:
        $r2 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final void clearLoggingBehaviors()
    {
        java.util.HashSet $r0, $r1;
        java.lang.Throwable $r2;

        $r0 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        entermonitor $r0;

     label1:
        $r1 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        virtualinvoke $r1.<java.util.HashSet: void clear()>();

        exitmonitor $r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.String getAppVersion()
    {
        java.lang.String r0;

        r0 = <com.facebook.Settings: java.lang.String appVersion>;

        return r0;
    }

    public static java.lang.String getApplicationId()
    {
        java.lang.String r0;

        r0 = <com.facebook.Settings: java.lang.String applicationId>;

        return r0;
    }

    public static java.lang.String getApplicationSignature(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        android.content.pm.Signature $r1;
        android.content.pm.PackageManager$NameNotFoundException $r2;
        java.security.NoSuchAlgorithmException $r3;
        android.content.pm.PackageManager $r4;
        java.lang.String $r5, $r5_1, $r5_2;
        android.content.pm.PackageInfo $r6;
        android.content.pm.Signature[] $r7, $r7_1, $r7_2;
        java.security.MessageDigest $r8;
        byte[] $r9, $r9_1;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

(0)     if $r4 == null goto label8;

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

     label2:
        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r5, 64);

     label3:
        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

(1)     if $r7 == null goto label8;

        $i0 = lengthof $r7;

(2)     if $i0 == 0 goto label8;

     label4:
        $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label5:
        $r7_1 = $r6.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r1 = $r7_1[0];

        $r9 = virtualinvoke $r1.<android.content.pm.Signature: byte[] toByteArray()>();

        virtualinvoke $r8.<java.security.MessageDigest: void update(byte[])>($r9);

        $r9_1 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>();

        $r5_1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r9_1, 9);

        return $r5_1;

     label6:
        $r2 := @caughtexception;

        return null;

     label7:
(3)     $r3 := @caughtexception;

     label8:
        $r7_2 = Phi($r7 #0, $r7 #1, $r7 #2, $r7 #3);

        $r5_2 = Phi($r5 #0, $r5 #1, $r5 #2, $r5 #3);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label6;
        catch java.security.NoSuchAlgorithmException from label4 to label5 with label7;
    }

    private static java.util.concurrent.Executor getAsyncTaskExecutor()
    {
        java.lang.Class $r0;
        java.lang.NoSuchFieldException $r1;
        java.lang.IllegalAccessException $r2;
        boolean $z0;
        java.lang.reflect.Field $r3;
        java.lang.Object $r4;
        java.util.concurrent.Executor $r5;

        $r0 = class "android/os/AsyncTask";

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("THREAD_POOL_EXECUTOR");

     label2:
        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label3:
        if $r4 != null goto label6;

        return null;

     label4:
        $r1 := @caughtexception;

        return null;

     label5:
        $r2 := @caughtexception;

        return null;

     label6:
        $z0 = $r4 instanceof java.util.concurrent.Executor;

        if $z0 != 0 goto label7;

        return null;

     label7:
        $r5 = (java.util.concurrent.Executor) $r4;

        return $r5;

        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label2 to label3 with label5;
    }

    public static java.lang.String getAttributionId(android.content.ContentResolver)
    {
        android.content.ContentResolver $r0;
        java.lang.String[] $r1;
        android.net.Uri $r2;
        java.lang.Exception $r3;
        android.database.Cursor $r4;
        boolean $z0;
        int $i0;
        java.lang.String $r5, $r7, $r5_1, $r5_2, $r7_1;
        java.lang.StringBuilder $r6, $r6_1, $r6_2;

(0)     $r0 := @parameter0: android.content.ContentResolver;

     label01:
        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "aid";

     label02:
        $r2 = <com.facebook.Settings: android.net.Uri ATTRIBUTION_ID_CONTENT_URI>;

     label03:
        $r4 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r1, null, null, null);

     label04:
        if $r4 == null goto label07;

     label05:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label06:
        if $z0 != 0 goto label08;

     label07:
        return null;

     label08:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("aid");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label09:
        return $r5;

     label10:
        $r3 := @caughtexception;

        $r5_1 = Phi($r5 #0);

        $r5_2 = <com.facebook.Settings: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught unexpected exception in getAttributionId(): ");

        $r7 = virtualinvoke $r3.<java.lang.Exception: java.lang.String toString()>();

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7_1 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5_2, $r7_1);

        return null;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public static java.lang.String getClientToken()
    {
        java.lang.String r0;

        r0 = <com.facebook.Settings: java.lang.String appClientToken>;

        return r0;
    }

    public static java.util.concurrent.Executor getExecutor()
    {
        java.lang.Object $r0;
        java.util.concurrent.ThreadPoolExecutor $r1;
        java.util.concurrent.TimeUnit $r2;
        java.util.concurrent.BlockingQueue $r3;
        java.util.concurrent.ThreadFactory $r4;
        java.lang.Throwable $r5;
        java.util.concurrent.Executor $r6, $r7, $r6_1, $r7_1, $r7_2, $r6_2, $r7_3, $r6_3, $r6_4, $r7_4;

        $r0 = <com.facebook.Settings: java.lang.Object LOCK>;

(0)     entermonitor $r0;

     label1:
        $r6 = <com.facebook.Settings: java.util.concurrent.Executor executor>;

(1)     if $r6 != null goto label3;

(2)     $r6_1 = staticinvoke <com.facebook.Settings: java.util.concurrent.Executor getAsyncTaskExecutor()>();

        $r7 = $r6_1;

(3)     if $r6_1 != null goto label2;

        $r1 = new java.util.concurrent.ThreadPoolExecutor;

(4)     $r7_1 = $r1;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r3 = <com.facebook.Settings: java.util.concurrent.BlockingQueue DEFAULT_WORK_QUEUE>;

        $r4 = <com.facebook.Settings: java.util.concurrent.ThreadFactory DEFAULT_THREAD_FACTORY>;

(5)     specialinvoke $r1.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(5, 128, 1L, $r2, $r3, $r4);

     label2:
        $r7_2 = Phi($r7 #3, $r7_1 #5);

(6)     <com.facebook.Settings: java.util.concurrent.Executor executor> = $r7_2;

     label3:
        $r6_2 = Phi($r6 #1, $r6_1 #6);

        $r7_3 = Phi($r7 #1, $r7_2 #6);

(7)     exitmonitor $r0;

     label4:
        $r6_3 = <com.facebook.Settings: java.util.concurrent.Executor executor>;

        return $r6_3;

     label5:
        $r5 := @caughtexception;

        $r6_4 = Phi($r6 #0, $r6_1 #2, $r6_2 #7, $r6_4 #8);

(8)     $r7_4 = Phi($r7 #0, $r7_1 #4, $r7_2 #6, $r7_3 #7, $r7_4 #8);

     label6:
        exitmonitor $r0;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static java.lang.String getFacebookDomain()
    {
        java.lang.String r0;

        r0 = <com.facebook.Settings: java.lang.String facebookDomain>;

        return r0;
    }

    public static boolean getLimitEventAndDataUsage(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.facebook.sdk.appEventPreferences", 0);

        $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("limitEventUsage", 0);

        return $z0;
    }

    public static final java.util.Set getLoggingBehaviors()
    {
        java.util.HashSet $r0, $r1, $r2;
        java.lang.Throwable $r3;
        java.util.Set $r4;

        $r0 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        entermonitor $r0;

     label1:
        $r1 = new java.util.HashSet;

        $r2 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        exitmonitor $r0;

     label2:
        return $r4;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long getOnProgressThreshold()
    {
        java.util.concurrent.atomic.AtomicLong $r0;
        long $l0;

        $r0 = <com.facebook.Settings: java.util.concurrent.atomic.AtomicLong onProgressThreshold>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public static boolean getPlatformCompatibilityEnabled()
    {
        boolean z0;

        z0 = <com.facebook.Settings: boolean platformCompatibilityEnabled>;

        return z0;
    }

    public static java.lang.String getSdkVersion()
    {
        return "3.20.0";
    }

    public static boolean getShouldAutoPublishInstall()
    {
        boolean z0;

        z0 = <com.facebook.Settings: boolean shouldAutoPublishInstall>;

        return z0;
    }

    public static final boolean isDebugEnabled()
    {
        boolean z0;

        z0 = <com.facebook.Settings: boolean isDebugEnabled>;

        return z0;
    }

    public static final boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior)
    {
        com.facebook.LoggingBehavior $r0;
        java.util.HashSet $r1, $r2;
        java.lang.Throwable $r3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6;

        $r0 := @parameter0: com.facebook.LoggingBehavior;

        $r1 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

(0)     entermonitor $r1;

     label1:
        $z0 = staticinvoke <com.facebook.Settings: boolean isDebugEnabled()>();

(1)     if $z0 == 0 goto label4;

        $r2 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

(2)     $z0_1 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>($r0);

(3)     if $z0_1 == 0 goto label4;

(4)     $z0_2 = 1;

     label2:
        $z0_3 = Phi($z0_2 #4, $z0_5 #7);

(5)     exitmonitor $r1;

     label3:
        return $z0_3;

     label4:
        $z0_4 = Phi($z0 #1, $z0_1 #3);

(6)     $z0_5 = 0;

(7)     goto label2;

     label5:
        $r3 := @caughtexception;

(8)     $z0_6 = Phi($z0 #0, $z0_1 #2, $z0_2 #4, $z0_3 #5, $z0_5 #6, $z0_6 #8);

        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public static final boolean isLoggingEnabled()
    {
        boolean $z0;

        $z0 = staticinvoke <com.facebook.Settings: boolean isDebugEnabled()>();

        return $z0;
    }

    public static void loadDefaultsFromMetadata(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager$NameNotFoundException $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5, $r5_1, $r5_2, $r5_3, $r5_4;

        $r0 := @parameter0: android.content.Context;

        <com.facebook.Settings: boolean defaultsLoaded> = 1;

(0)     if $r0 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label2:
(1)     if $r4 == null goto label5;

        $r5 = $r4.<android.content.pm.PackageItemInfo: android.os.Bundle metaData>;

(2)     if $r5 == null goto label5;

        $r3_1 = <com.facebook.Settings: java.lang.String applicationId>;

(3)     if $r3_1 != null goto label3;

        $r5_1 = $r4.<android.content.pm.PackageItemInfo: android.os.Bundle metaData>;

        $r3_2 = virtualinvoke $r5_1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.facebook.sdk.ApplicationId");

(4)     <com.facebook.Settings: java.lang.String applicationId> = $r3_2;

     label3:
        $r3_3 = Phi($r3_1 #3, $r3_2 #4);

        $r5_2 = Phi($r5 #3, $r5_1 #4);

        $r3_4 = <com.facebook.Settings: java.lang.String appClientToken>;

(5)     if $r3_4 != null goto label5;

        $r5_3 = $r4.<android.content.pm.PackageItemInfo: android.os.Bundle metaData>;

        $r3_5 = virtualinvoke $r5_3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.facebook.sdk.ClientToken");

        <com.facebook.Settings: java.lang.String appClientToken> = $r3_5;

        return;

     label4:
        $r1 := @caughtexception;

(6)     $r3_6 = Phi($r3 #0);

     label5:
        $r3_7 = Phi($r3 #1, $r3 #2, $r3_4 #5, $r3_6 #6);

        $r5_4 = Phi($r5 #1, $r5 #2, $r5_2 #5, $r5 #6);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    static void loadDefaultsFromMetadataIfNeeded(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = <com.facebook.Settings: boolean defaultsLoaded>;

        if $z0 != 0 goto label1;

        staticinvoke <com.facebook.Settings: void loadDefaultsFromMetadata(android.content.Context)>($r0);

     label1:
        return;
    }

    static com.facebook.Response publishInstallAndWaitForResponse(android.content.Context, java.lang.String, boolean)
    {
        android.content.Context $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Exception $r2;
        com.facebook.FacebookRequestError $r3;
        byte $b0;
        com.facebook.RequestBatch $r4;
        org.json.JSONException $r5;
        java.lang.String $r6, $r11, $r12, $r13, $r15, $r15_1, $r15_2, $r13_1, $r13_2, $r13_3, $r6_1, $r6_2, $r13_4, $r15_3, $r6_3, $r13_5;
        boolean $z0, $z1, $z0_1, $z0_2;
        com.facebook.Response $r7, $r7_1, $r7_2, $r7_3, $r7_4;
        com.facebook.internal.AttributionIdentifiers $r8;
        android.content.SharedPreferences $r9;
        java.lang.StringBuilder $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5, $r10_6;
        long $l1, $l1_1, $l1_2;
        com.facebook.model.GraphObject $r14, $r14_1, $r14_2, $r14_3, $r14_4, $r14_5, $r14_6, $r14_7, $r14_8, $r14_9;
        java.lang.Boolean $r16;
        java.lang.Object[] $r17;
        com.facebook.Request $r18;
        org.json.JSONObject $r19, $r19_1, $r19_2, $r19_3, $r19_4, $r19_5;
        com.facebook.Request[] $r20;
        java.util.List $r21;
        java.lang.Object $r22;
        com.facebook.FacebookException $r23, $r23_1, $r23_2;
        com.facebook.internal.Utility$FetchedAppSettings $r24;
        android.content.SharedPreferences$Editor $r25;

        $r0 := @parameter0: android.content.Context;

        $r6 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        if $r0 == null goto label01;

(0)     if $r6 != null goto label04;

     label01:
(1)     $r1 = new java.lang.IllegalArgumentException;

     label02:
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Both context and applicationId must be non-null");

        throw $r1;

     label03:
        $r2 := @caughtexception;

        $r15_3 = Phi($r15 #1, $r15 #0, $r15_1 #7, $r15_2 #8);

        $r6_3 = Phi($r6 #1, $r6 #0, $r6_1 #31, $r6_2 #33);

        $r13_5 = Phi($r13 #1, $r13 #0, $r13_1 #15, $r13_2 #17, $r13_4 #19, $r13_3 #20);

        $l1_2 = Phi($l1 #1, $l1 #0, $l1_1 #23);

        $r19_5 = Phi($r19 #1, $r19 #0, $r19_1 #12, $r19_1 #13, $r19_2 #27, $r19_3 #30, $r19_4 #33);

        $r14_9 = Phi($r14 #1, $r14 #0, $r14_1 #10, $r14_2 #11, $r14_4 #12, $r14_4 #13, $r14_5 #24, $r14_6 #26, $r14_7 #29, $r14_8 #33);

        $r7_3 = Phi($r7 #1, $r7 #0, $r7_1 #13, $r7_2 #22);

        $z0_2 = Phi($z0 #1, $z0 #0, $z0_1 #21);

        $r23_2 = Phi($r23 #1, $r23 #0, $r23_1 #19);

        $r10_6 = Phi($r10 #1, $r10 #0, $r10_1 #2, $r10_2 #3, $r10_3 #4, $r10_4 #5, $r10_5 #6);

        staticinvoke <com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)>("Facebook-publish", $r2);

        $r7_4 = new com.facebook.Response;

        $r3 = new com.facebook.FacebookRequestError;

        specialinvoke $r3.<com.facebook.FacebookRequestError: void <init>(java.net.HttpURLConnection,java.lang.Exception)>(null, $r2);

        specialinvoke $r7_4.<com.facebook.Response: void <init>(com.facebook.Request,java.net.HttpURLConnection,com.facebook.FacebookRequestError)>(null, null, $r3);

        return $r7_4;

     label04:
        $r8 = staticinvoke <com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAttributionIdentifiers(android.content.Context)>($r0);

        $r9 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.facebook.sdk.attributionTracking", 0);

     label05:
        $r10 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

(2)     $r10_1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

(3)     $r10_2 = virtualinvoke $r10_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ping");

        $r11 = virtualinvoke $r10_2.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
(4)     $r10_3 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r10_3.<java.lang.StringBuilder: void <init>()>();

(5)     $r10_4 = virtualinvoke $r10_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

(6)     $r10_5 = virtualinvoke $r10_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("json");

        $r12 = virtualinvoke $r10_5.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = interfaceinvoke $r9.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r11, 0L);

        $r13 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r12, null);

     label09:
        if $z0 != 0 goto label11;

     label10:
        staticinvoke <com.facebook.Settings: void setShouldAutoPublishInstall(boolean)>(0);

     label11:
        $r14 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject create()>();

        interfaceinvoke $r14.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("event", "MOBILE_APP_INSTALL");

        $r15 = staticinvoke <com.facebook.internal.Utility: java.lang.String getHashedDeviceAndAppID(android.content.Context,java.lang.String)>($r0, $r6);

        $z1 = staticinvoke <com.facebook.Settings: boolean getLimitEventAndDataUsage(android.content.Context)>($r0);

        staticinvoke <com.facebook.internal.Utility: void setAppEventAttributionParameters(com.facebook.model.GraphObject,com.facebook.internal.AttributionIdentifiers,java.lang.String,boolean)>($r14, $r8, $r15, $z1);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r14.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("auto_publish", $r16);

(7)     $r15_1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r14.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("application_package_name", $r15_1);

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = $r6;

(8)     $r15_2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/activities", $r17);

        $r18 = staticinvoke <com.facebook.Request: com.facebook.Request newPostRequest(com.facebook.Session,java.lang.String,com.facebook.model.GraphObject,com.facebook.Request$Callback)>(null, $r15_2, $r14, null);

     label12:
        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label20;

        $r14_1 = null;

(9)     if $r13 == null goto label14;

(10)    $r19 = new org.json.JSONObject;

     label13:
        specialinvoke $r19.<org.json.JSONObject: void <init>(java.lang.String)>($r13);

(11)    $r14_2 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject create(org.json.JSONObject)>($r19);

     label14:
        $r19_1 = Phi($r19 #9, $r19 #11, $r19 #34);

        $r14_4 = Phi($r14_1 #9, $r14_2 #11, $r14_3 #34);

        if $r14_4 != null goto label17;

(12)    $r4 = new com.facebook.RequestBatch;

     label15:
        $r20 = newarray (com.facebook.Request)[1];

        $r20[0] = $r18;

        specialinvoke $r4.<com.facebook.RequestBatch: void <init>(com.facebook.Request[])>($r20);

        $r21 = staticinvoke <com.facebook.Response: java.util.List createResponsesFromString(java.lang.String,java.net.HttpURLConnection,com.facebook.RequestBatch,boolean)>("true", null, $r4, 1);

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (com.facebook.Response) $r22;

     label16:
        return $r7;

     label17:
(13)    $r7_1 = new com.facebook.Response;

     label18:
        specialinvoke $r7_1.<com.facebook.Response: void <init>(com.facebook.Request,java.net.HttpURLConnection,java.lang.String,com.facebook.model.GraphObject,boolean)>(null, null, null, $r14_4, 1);

     label19:
        return $r7_1;

     label20:
(14)    if $r8 == null goto label25;

     label21:
(15)    $r13_1 = virtualinvoke $r8.<com.facebook.internal.AttributionIdentifiers: java.lang.String getAndroidAdvertiserId()>();

     label22:
(16)    if $r13_1 != null goto label27;

     label23:
(17)    $r13_2 = virtualinvoke $r8.<com.facebook.internal.AttributionIdentifiers: java.lang.String getAttributionId()>();

     label24:
(18)    if $r13_2 != null goto label27;

     label25:
        $r13_4 = Phi($r13 #14, $r13_2 #18);

(19)    $r23_1 = new com.facebook.FacebookException;

     label26:
        specialinvoke $r23_1.<com.facebook.FacebookException: void <init>(java.lang.String)>("No attribution id available to send to server.");

        throw $r23_1;

     label27:
        $r13_3 = Phi($r13_1 #16, $r13_2 #18);

(20)    $r24 = staticinvoke <com.facebook.internal.Utility: com.facebook.internal.Utility$FetchedAppSettings queryAppSettings(java.lang.String,boolean)>($r6, 0);

(21)    $z0_1 = virtualinvoke $r24.<com.facebook.internal.Utility$FetchedAppSettings: boolean supportsAttribution()>();

     label28:
        if $z0_1 != 0 goto label30;

        $r23 = new com.facebook.FacebookException;

     label29:
        specialinvoke $r23.<com.facebook.FacebookException: void <init>(java.lang.String)>("Install attribution has been disabled on the server.");

        throw $r23;

     label30:
(22)    $r7_2 = virtualinvoke $r18.<com.facebook.Request: com.facebook.Response executeAndWait()>();

        $r25 = interfaceinvoke $r9.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

(23)    $l1_1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke $r25.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r11, $l1_1);

(24)    $r14_5 = virtualinvoke $r7_2.<com.facebook.Response: com.facebook.model.GraphObject getGraphObject()>();

     label31:
(25)    if $r14_5 == null goto label35;

     label32:
(26)    $r14_6 = virtualinvoke $r7_2.<com.facebook.Response: com.facebook.model.GraphObject getGraphObject()>();

(27)    $r19_2 = interfaceinvoke $r14_6.<com.facebook.model.GraphObject: org.json.JSONObject getInnerJSONObject()>();

     label33:
(28)    if $r19_2 == null goto label35;

     label34:
(29)    $r14_7 = virtualinvoke $r7_2.<com.facebook.Response: com.facebook.model.GraphObject getGraphObject()>();

(30)    $r19_3 = interfaceinvoke $r14_7.<com.facebook.model.GraphObject: org.json.JSONObject getInnerJSONObject()>();

(31)    $r6_1 = virtualinvoke $r19_3.<org.json.JSONObject: java.lang.String toString()>();

(32)    interfaceinvoke $r25.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r12, $r6_1);

     label35:
        $r6_2 = Phi($r6 #25, $r6 #28, $r6_1 #32);

        $r19_4 = Phi($r19 #25, $r19_2 #28, $r19_3 #32);

        $r14_8 = Phi($r14_5 #25, $r14_6 #28, $r14_7 #32);

(33)    interfaceinvoke $r25.<android.content.SharedPreferences$Editor: void apply()>();

     label36:
        return $r7_2;

     label37:
        $r5 := @caughtexception;

        $r14_3 = Phi($r14_1 #10, $r14_2 #11);

(34)    goto label14;

        catch java.lang.Exception from label02 to label03 with label03;
        catch java.lang.Exception from label04 to label05 with label03;
        catch java.lang.Exception from label06 to label07 with label03;
        catch java.lang.Exception from label08 to label09 with label03;
        catch java.lang.Exception from label10 to label12 with label03;
        catch org.json.JSONException from label13 to label14 with label37;
        catch java.lang.Exception from label13 to label14 with label03;
        catch java.lang.Exception from label15 to label16 with label03;
        catch java.lang.Exception from label18 to label19 with label03;
        catch java.lang.Exception from label21 to label22 with label03;
        catch java.lang.Exception from label23 to label24 with label03;
        catch java.lang.Exception from label26 to label28 with label03;
        catch java.lang.Exception from label29 to label31 with label03;
        catch java.lang.Exception from label32 to label33 with label03;
        catch java.lang.Exception from label34 to label36 with label03;
    }

    static void publishInstallAsync(android.content.Context, java.lang.String, com.facebook.Request$Callback)
    {
        java.lang.String $r0;
        com.facebook.Request$Callback $r1;
        com.facebook.Settings$2 $r2;
        android.content.Context $r3, $r3_1;
        java.util.concurrent.Executor $r4;

        $r3 := @parameter0: android.content.Context;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: com.facebook.Request$Callback;

        $r3_1 = virtualinvoke $r3.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = staticinvoke <com.facebook.Settings: java.util.concurrent.Executor getExecutor()>();

        $r2 = new com.facebook.Settings$2;

        specialinvoke $r2.<com.facebook.Settings$2: void <init>(android.content.Context,java.lang.String,com.facebook.Request$Callback)>($r3_1, $r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public static final void removeLoggingBehavior(com.facebook.LoggingBehavior)
    {
        com.facebook.LoggingBehavior $r0;
        java.util.HashSet $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: com.facebook.LoggingBehavior;

        $r1 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        entermonitor $r1;

     label1:
        $r2 = <com.facebook.Settings: java.util.HashSet loggingBehaviors>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r0);

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void sdkInitialize(android.content.Context)
    {
        java.lang.Throwable $r0;
        android.content.Context $r1, $r1_1, $r1_2, $r1_3;
        java.lang.Boolean $r2, $r2_1, $r2_2, $r2_3;
        boolean $z0;
        java.lang.String $r3;

        $r1 := @parameter0: android.content.Context;

(0)     entermonitor class "com/facebook/Settings";

     label1:
        $r2 = <com.facebook.Settings: java.lang.Boolean sdkInitialized>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

     label2:
(1)     if $z0 != 1 goto label4;

     label3:
        $r2_1 = Phi($r2 #1, $r2_2 #4);

        $r1_1 = Phi($r1 #1, $r1_2 #4);

        exitmonitor class "com/facebook/Settings";

        return;

     label4:
        staticinvoke <com.facebook.Settings: void loadDefaultsFromMetadataIfNeeded(android.content.Context)>($r1);

        $r3 = staticinvoke <com.facebook.Settings: java.lang.String getApplicationId()>();

        staticinvoke <com.facebook.internal.Utility: void loadAppSettingsAsync(android.content.Context,java.lang.String)>($r1, $r3);

(2)     $r1_2 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        staticinvoke <com.facebook.BoltsMeasurementEventListener: com.facebook.BoltsMeasurementEventListener getInstance(android.content.Context)>($r1_2);

(3)     $r2_2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        <com.facebook.Settings: java.lang.Boolean sdkInitialized> = $r2_2;

     label5:
(4)     goto label3;

     label6:
        $r0 := @caughtexception;

        $r2_3 = Phi($r2 #0, $r2_2 #3);

        $r1_3 = Phi($r1 #0, $r1_2 #2);

        exitmonitor class "com/facebook/Settings";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void setAppVersion(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.facebook.Settings: java.lang.String appVersion> = $r0;

        return;
    }

    public static void setApplicationId(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.facebook.Settings: java.lang.String applicationId> = $r0;

        return;
    }

    public static void setClientToken(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.facebook.Settings: java.lang.String appClientToken> = $r0;

        return;
    }

    public static void setExecutor(java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: java.util.concurrent.Executor;

        staticinvoke <com.facebook.internal.Validate: void notNull(java.lang.Object,java.lang.String)>($r0, "executor");

        $r1 = <com.facebook.Settings: java.lang.Object LOCK>;

        entermonitor $r1;

     label1:
        <com.facebook.Settings: java.util.concurrent.Executor executor> = $r0;

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void setFacebookDomain(java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.facebook.Settings: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "WARNING: Calling setFacebookDomain from non-DEBUG code.");

        <com.facebook.Settings: java.lang.String facebookDomain> = $r0;

        return;
    }

    public static final void setIsDebugEnabled(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.facebook.Settings: boolean isDebugEnabled> = $z0;

        return;
    }

    public static final void setIsLoggingEnabled(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        staticinvoke <com.facebook.Settings: void setIsDebugEnabled(boolean)>($z0);

        return;
    }

    public static void setLimitEventAndDataUsage(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r2_1;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.facebook.sdk.appEventPreferences", 0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r2_1 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("limitEventUsage", $z0);

        interfaceinvoke $r2_1.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public static void setOnProgressThreshold(long)
    {
        long $l0;
        java.util.concurrent.atomic.AtomicLong $r0;

        $l0 := @parameter0: long;

        $r0 = <com.facebook.Settings: java.util.concurrent.atomic.AtomicLong onProgressThreshold>;

        virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l0);

        return;
    }

    public static void setPlatformCompatibilityEnabled(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.facebook.Settings: boolean platformCompatibilityEnabled> = $z0;

        return;
    }

    public static void setShouldAutoPublishInstall(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.facebook.Settings: boolean shouldAutoPublishInstall> = $z0;

        return;
    }
}
