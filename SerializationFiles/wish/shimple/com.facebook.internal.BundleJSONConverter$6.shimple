final class com.facebook.internal.BundleJSONConverter$6 extends java.lang.Object implements com.facebook.internal.BundleJSONConverter$Setter
{

    void <init>()
    {
        com.facebook.internal.BundleJSONConverter$6 $r0;

        $r0 := @this: com.facebook.internal.BundleJSONConverter$6;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setOnBundle(android.os.Bundle, java.lang.String, java.lang.Object) throws org.json.JSONException
    {
        com.facebook.internal.BundleJSONConverter$6 $r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @this: com.facebook.internal.BundleJSONConverter$6;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unexpected type from JSON");

        throw $r4;
    }

    public void setOnJSON(org.json.JSONObject, java.lang.String, java.lang.Object) throws org.json.JSONException
    {
        com.facebook.internal.BundleJSONConverter$6 $r0;
        org.json.JSONObject $r1;
        java.lang.String $r2, $r5;
        java.lang.Object $r3;
        org.json.JSONArray $r4;
        int $i0, $i1, $i1_1, $i1_2;
        java.lang.String[] $r6;

        $r0 := @this: com.facebook.internal.BundleJSONConverter$6;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object;

        $r4 = new org.json.JSONArray;

        specialinvoke $r4.<org.json.JSONArray: void <init>()>();

        $r6 = (java.lang.String[]) $r3;

        $i0 = lengthof $r6;

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #1);

        if $i1_1 >= $i0 goto label2;

        $r5 = $r6[$i1_1];

        virtualinvoke $r4.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r5);

        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label2:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r2, $r4);

        return;
    }
}
