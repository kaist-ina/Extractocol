public class android.view.KeyEvent extends android.view.InputEvent implements android.os.Parcelable
{
    public static final int ACTION_DOWN;
    public static final int ACTION_MULTIPLE;
    public static final int ACTION_UP;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int FLAG_CANCELED;
    public static final int FLAG_CANCELED_LONG_PRESS;
    public static final int FLAG_EDITOR_ACTION;
    public static final int FLAG_FALLBACK;
    public static final int FLAG_FROM_SYSTEM;
    public static final int FLAG_KEEP_TOUCH_MODE;
    public static final int FLAG_LONG_PRESS;
    public static final int FLAG_SOFT_KEYBOARD;
    public static final int FLAG_TRACKING;
    public static final int FLAG_VIRTUAL_HARD_KEY;
    public static final int FLAG_WOKE_HERE;
    public static final int KEYCODE_0;
    public static final int KEYCODE_1;
    public static final int KEYCODE_11;
    public static final int KEYCODE_12;
    public static final int KEYCODE_2;
    public static final int KEYCODE_3;
    public static final int KEYCODE_3D_MODE;
    public static final int KEYCODE_4;
    public static final int KEYCODE_5;
    public static final int KEYCODE_6;
    public static final int KEYCODE_7;
    public static final int KEYCODE_8;
    public static final int KEYCODE_9;
    public static final int KEYCODE_A;
    public static final int KEYCODE_ALT_LEFT;
    public static final int KEYCODE_ALT_RIGHT;
    public static final int KEYCODE_APOSTROPHE;
    public static final int KEYCODE_APP_SWITCH;
    public static final int KEYCODE_ASSIST;
    public static final int KEYCODE_AT;
    public static final int KEYCODE_AVR_INPUT;
    public static final int KEYCODE_AVR_POWER;
    public static final int KEYCODE_B;
    public static final int KEYCODE_BACK;
    public static final int KEYCODE_BACKSLASH;
    public static final int KEYCODE_BOOKMARK;
    public static final int KEYCODE_BREAK;
    public static final int KEYCODE_BRIGHTNESS_DOWN;
    public static final int KEYCODE_BRIGHTNESS_UP;
    public static final int KEYCODE_BUTTON_1;
    public static final int KEYCODE_BUTTON_10;
    public static final int KEYCODE_BUTTON_11;
    public static final int KEYCODE_BUTTON_12;
    public static final int KEYCODE_BUTTON_13;
    public static final int KEYCODE_BUTTON_14;
    public static final int KEYCODE_BUTTON_15;
    public static final int KEYCODE_BUTTON_16;
    public static final int KEYCODE_BUTTON_2;
    public static final int KEYCODE_BUTTON_3;
    public static final int KEYCODE_BUTTON_4;
    public static final int KEYCODE_BUTTON_5;
    public static final int KEYCODE_BUTTON_6;
    public static final int KEYCODE_BUTTON_7;
    public static final int KEYCODE_BUTTON_8;
    public static final int KEYCODE_BUTTON_9;
    public static final int KEYCODE_BUTTON_A;
    public static final int KEYCODE_BUTTON_B;
    public static final int KEYCODE_BUTTON_C;
    public static final int KEYCODE_BUTTON_L1;
    public static final int KEYCODE_BUTTON_L2;
    public static final int KEYCODE_BUTTON_MODE;
    public static final int KEYCODE_BUTTON_R1;
    public static final int KEYCODE_BUTTON_R2;
    public static final int KEYCODE_BUTTON_SELECT;
    public static final int KEYCODE_BUTTON_START;
    public static final int KEYCODE_BUTTON_THUMBL;
    public static final int KEYCODE_BUTTON_THUMBR;
    public static final int KEYCODE_BUTTON_X;
    public static final int KEYCODE_BUTTON_Y;
    public static final int KEYCODE_BUTTON_Z;
    public static final int KEYCODE_C;
    public static final int KEYCODE_CALCULATOR;
    public static final int KEYCODE_CALENDAR;
    public static final int KEYCODE_CALL;
    public static final int KEYCODE_CAMERA;
    public static final int KEYCODE_CAPS_LOCK;
    public static final int KEYCODE_CAPTIONS;
    public static final int KEYCODE_CHANNEL_DOWN;
    public static final int KEYCODE_CHANNEL_UP;
    public static final int KEYCODE_CLEAR;
    public static final int KEYCODE_COMMA;
    public static final int KEYCODE_CONTACTS;
    public static final int KEYCODE_CTRL_LEFT;
    public static final int KEYCODE_CTRL_RIGHT;
    public static final int KEYCODE_D;
    public static final int KEYCODE_DEL;
    public static final int KEYCODE_DPAD_CENTER;
    public static final int KEYCODE_DPAD_DOWN;
    public static final int KEYCODE_DPAD_LEFT;
    public static final int KEYCODE_DPAD_RIGHT;
    public static final int KEYCODE_DPAD_UP;
    public static final int KEYCODE_DVR;
    public static final int KEYCODE_E;
    public static final int KEYCODE_EISU;
    public static final int KEYCODE_ENDCALL;
    public static final int KEYCODE_ENTER;
    public static final int KEYCODE_ENVELOPE;
    public static final int KEYCODE_EQUALS;
    public static final int KEYCODE_ESCAPE;
    public static final int KEYCODE_EXPLORER;
    public static final int KEYCODE_F;
    public static final int KEYCODE_F1;
    public static final int KEYCODE_F10;
    public static final int KEYCODE_F11;
    public static final int KEYCODE_F12;
    public static final int KEYCODE_F2;
    public static final int KEYCODE_F3;
    public static final int KEYCODE_F4;
    public static final int KEYCODE_F5;
    public static final int KEYCODE_F6;
    public static final int KEYCODE_F7;
    public static final int KEYCODE_F8;
    public static final int KEYCODE_F9;
    public static final int KEYCODE_FOCUS;
    public static final int KEYCODE_FORWARD;
    public static final int KEYCODE_FORWARD_DEL;
    public static final int KEYCODE_FUNCTION;
    public static final int KEYCODE_G;
    public static final int KEYCODE_GRAVE;
    public static final int KEYCODE_GUIDE;
    public static final int KEYCODE_H;
    public static final int KEYCODE_HEADSETHOOK;
    public static final int KEYCODE_HELP;
    public static final int KEYCODE_HENKAN;
    public static final int KEYCODE_HOME;
    public static final int KEYCODE_I;
    public static final int KEYCODE_INFO;
    public static final int KEYCODE_INSERT;
    public static final int KEYCODE_J;
    public static final int KEYCODE_K;
    public static final int KEYCODE_KANA;
    public static final int KEYCODE_KATAKANA_HIRAGANA;
    public static final int KEYCODE_L;
    public static final int KEYCODE_LANGUAGE_SWITCH;
    public static final int KEYCODE_LAST_CHANNEL;
    public static final int KEYCODE_LEFT_BRACKET;
    public static final int KEYCODE_M;
    public static final int KEYCODE_MANNER_MODE;
    public static final int KEYCODE_MEDIA_AUDIO_TRACK;
    public static final int KEYCODE_MEDIA_CLOSE;
    public static final int KEYCODE_MEDIA_EJECT;
    public static final int KEYCODE_MEDIA_FAST_FORWARD;
    public static final int KEYCODE_MEDIA_NEXT;
    public static final int KEYCODE_MEDIA_PAUSE;
    public static final int KEYCODE_MEDIA_PLAY;
    public static final int KEYCODE_MEDIA_PLAY_PAUSE;
    public static final int KEYCODE_MEDIA_PREVIOUS;
    public static final int KEYCODE_MEDIA_RECORD;
    public static final int KEYCODE_MEDIA_REWIND;
    public static final int KEYCODE_MEDIA_STOP;
    public static final int KEYCODE_MEDIA_TOP_MENU;
    public static final int KEYCODE_MENU;
    public static final int KEYCODE_META_LEFT;
    public static final int KEYCODE_META_RIGHT;
    public static final int KEYCODE_MINUS;
    public static final int KEYCODE_MOVE_END;
    public static final int KEYCODE_MOVE_HOME;
    public static final int KEYCODE_MUHENKAN;
    public static final int KEYCODE_MUSIC;
    public static final int KEYCODE_MUTE;
    public static final int KEYCODE_N;
    public static final int KEYCODE_NOTIFICATION;
    public static final int KEYCODE_NUM;
    public static final int KEYCODE_NUMPAD_0;
    public static final int KEYCODE_NUMPAD_1;
    public static final int KEYCODE_NUMPAD_2;
    public static final int KEYCODE_NUMPAD_3;
    public static final int KEYCODE_NUMPAD_4;
    public static final int KEYCODE_NUMPAD_5;
    public static final int KEYCODE_NUMPAD_6;
    public static final int KEYCODE_NUMPAD_7;
    public static final int KEYCODE_NUMPAD_8;
    public static final int KEYCODE_NUMPAD_9;
    public static final int KEYCODE_NUMPAD_ADD;
    public static final int KEYCODE_NUMPAD_COMMA;
    public static final int KEYCODE_NUMPAD_DIVIDE;
    public static final int KEYCODE_NUMPAD_DOT;
    public static final int KEYCODE_NUMPAD_ENTER;
    public static final int KEYCODE_NUMPAD_EQUALS;
    public static final int KEYCODE_NUMPAD_LEFT_PAREN;
    public static final int KEYCODE_NUMPAD_MULTIPLY;
    public static final int KEYCODE_NUMPAD_RIGHT_PAREN;
    public static final int KEYCODE_NUMPAD_SUBTRACT;
    public static final int KEYCODE_NUM_LOCK;
    public static final int KEYCODE_O;
    public static final int KEYCODE_P;
    public static final int KEYCODE_PAGE_DOWN;
    public static final int KEYCODE_PAGE_UP;
    public static final int KEYCODE_PAIRING;
    public static final int KEYCODE_PERIOD;
    public static final int KEYCODE_PICTSYMBOLS;
    public static final int KEYCODE_PLUS;
    public static final int KEYCODE_POUND;
    public static final int KEYCODE_POWER;
    public static final int KEYCODE_PROG_BLUE;
    public static final int KEYCODE_PROG_GREEN;
    public static final int KEYCODE_PROG_RED;
    public static final int KEYCODE_PROG_YELLOW;
    public static final int KEYCODE_Q;
    public static final int KEYCODE_R;
    public static final int KEYCODE_RIGHT_BRACKET;
    public static final int KEYCODE_RO;
    public static final int KEYCODE_S;
    public static final int KEYCODE_SCROLL_LOCK;
    public static final int KEYCODE_SEARCH;
    public static final int KEYCODE_SEMICOLON;
    public static final int KEYCODE_SETTINGS;
    public static final int KEYCODE_SHIFT_LEFT;
    public static final int KEYCODE_SHIFT_RIGHT;
    public static final int KEYCODE_SLASH;
    public static final int KEYCODE_SLEEP;
    public static final int KEYCODE_SOFT_LEFT;
    public static final int KEYCODE_SOFT_RIGHT;
    public static final int KEYCODE_SPACE;
    public static final int KEYCODE_STAR;
    public static final int KEYCODE_STB_INPUT;
    public static final int KEYCODE_STB_POWER;
    public static final int KEYCODE_SWITCH_CHARSET;
    public static final int KEYCODE_SYM;
    public static final int KEYCODE_SYSRQ;
    public static final int KEYCODE_T;
    public static final int KEYCODE_TAB;
    public static final int KEYCODE_TV;
    public static final int KEYCODE_TV_ANTENNA_CABLE;
    public static final int KEYCODE_TV_AUDIO_DESCRIPTION;
    public static final int KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN;
    public static final int KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP;
    public static final int KEYCODE_TV_CONTENTS_MENU;
    public static final int KEYCODE_TV_DATA_SERVICE;
    public static final int KEYCODE_TV_INPUT;
    public static final int KEYCODE_TV_INPUT_COMPONENT_1;
    public static final int KEYCODE_TV_INPUT_COMPONENT_2;
    public static final int KEYCODE_TV_INPUT_COMPOSITE_1;
    public static final int KEYCODE_TV_INPUT_COMPOSITE_2;
    public static final int KEYCODE_TV_INPUT_HDMI_1;
    public static final int KEYCODE_TV_INPUT_HDMI_2;
    public static final int KEYCODE_TV_INPUT_HDMI_3;
    public static final int KEYCODE_TV_INPUT_HDMI_4;
    public static final int KEYCODE_TV_INPUT_VGA_1;
    public static final int KEYCODE_TV_MEDIA_CONTEXT_MENU;
    public static final int KEYCODE_TV_NETWORK;
    public static final int KEYCODE_TV_NUMBER_ENTRY;
    public static final int KEYCODE_TV_POWER;
    public static final int KEYCODE_TV_RADIO_SERVICE;
    public static final int KEYCODE_TV_SATELLITE;
    public static final int KEYCODE_TV_SATELLITE_BS;
    public static final int KEYCODE_TV_SATELLITE_CS;
    public static final int KEYCODE_TV_SATELLITE_SERVICE;
    public static final int KEYCODE_TV_TELETEXT;
    public static final int KEYCODE_TV_TERRESTRIAL_ANALOG;
    public static final int KEYCODE_TV_TERRESTRIAL_DIGITAL;
    public static final int KEYCODE_TV_TIMER_PROGRAMMING;
    public static final int KEYCODE_TV_ZOOM_MODE;
    public static final int KEYCODE_U;
    public static final int KEYCODE_UNKNOWN;
    public static final int KEYCODE_V;
    public static final int KEYCODE_VOICE_ASSIST;
    public static final int KEYCODE_VOLUME_DOWN;
    public static final int KEYCODE_VOLUME_MUTE;
    public static final int KEYCODE_VOLUME_UP;
    public static final int KEYCODE_W;
    public static final int KEYCODE_WAKEUP;
    public static final int KEYCODE_WINDOW;
    public static final int KEYCODE_X;
    public static final int KEYCODE_Y;
    public static final int KEYCODE_YEN;
    public static final int KEYCODE_Z;
    public static final int KEYCODE_ZENKAKU_HANKAKU;
    public static final int KEYCODE_ZOOM_IN;
    public static final int KEYCODE_ZOOM_OUT;
    public static final int MAX_KEYCODE;
    public static final int META_ALT_LEFT_ON;
    public static final int META_ALT_MASK;
    public static final int META_ALT_ON;
    public static final int META_ALT_RIGHT_ON;
    public static final int META_CAPS_LOCK_ON;
    public static final int META_CTRL_LEFT_ON;
    public static final int META_CTRL_MASK;
    public static final int META_CTRL_ON;
    public static final int META_CTRL_RIGHT_ON;
    public static final int META_FUNCTION_ON;
    public static final int META_META_LEFT_ON;
    public static final int META_META_MASK;
    public static final int META_META_ON;
    public static final int META_META_RIGHT_ON;
    public static final int META_NUM_LOCK_ON;
    public static final int META_SCROLL_LOCK_ON;
    public static final int META_SHIFT_LEFT_ON;
    public static final int META_SHIFT_MASK;
    public static final int META_SHIFT_ON;
    public static final int META_SHIFT_RIGHT_ON;
    public static final int META_SYM_ON;

    public void <init>(int, int)
    {
        android.view.KeyEvent r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(long, long, int, int, int)
    {
        android.view.KeyEvent r0;
        long l0, l1;
        int i2, i3, i4;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(long, long, int, int, int, int)
    {
        android.view.KeyEvent r0;
        long l0, l1;
        int i2, i3, i4, i5;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(long, long, int, int, int, int, int, int)
    {
        android.view.KeyEvent r0;
        long l0, l1;
        int i2, i3, i4, i5, i6, i7;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(long, long, int, int, int, int, int, int, int)
    {
        android.view.KeyEvent r0;
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(long, long, int, int, int, int, int, int, int, int)
    {
        android.view.KeyEvent r0;
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, i9;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(long, java.lang.String, int, int)
    {
        android.view.KeyEvent r0;
        long l0;
        java.lang.String r1;
        int i1, i2;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(android.view.KeyEvent)
    {
        android.view.KeyEvent r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: android.view.KeyEvent;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(android.view.KeyEvent, long, int)
    {
        android.view.KeyEvent r0, r1;
        long l0;
        int i1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: android.view.KeyEvent;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int getMaxKeyCode()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int getDeadChar(int, int)
    {
        int i0, i1;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent, long, int)
    {
        android.view.KeyEvent r0;
        long l0;
        int i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.view.KeyEvent;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent, long, int, int)
    {
        android.view.KeyEvent r0;
        long l0;
        int i1, i2;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.view.KeyEvent;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static android.view.KeyEvent changeAction(android.view.KeyEvent, int)
    {
        android.view.KeyEvent r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static android.view.KeyEvent changeFlags(android.view.KeyEvent, int)
    {
        android.view.KeyEvent r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isSystem()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static final boolean isGamepadButton(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public final int getDeviceId()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getSource()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void setSource(int)
    {
        android.view.KeyEvent r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getMetaState()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getModifiers()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getFlags()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int getModifierMetaStateMask()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static boolean isModifierKey(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int normalizeMetaState(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static boolean metaStateHasNoModifiers(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static boolean metaStateHasModifiers(int, int)
    {
        int i0, i1;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public final boolean hasNoModifiers()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean hasModifiers(int)
    {
        android.view.KeyEvent r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isAltPressed()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isShiftPressed()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isSymPressed()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isCtrlPressed()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isMetaPressed()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isFunctionPressed()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isCapsLockOn()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isNumLockOn()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isScrollLockOn()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getAction()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isCanceled()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void startTracking()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isTracking()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isLongPress()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getKeyCode()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.String getCharacters()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getScanCode()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getRepeatCount()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getDownTime()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getEventTime()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final android.view.KeyCharacterMap getKeyCharacterMap()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public char getDisplayLabel()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getUnicodeChar()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getUnicodeChar(int)
    {
        android.view.KeyEvent r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean getKeyData(android.view.KeyCharacterMap$KeyData)
    {
        android.view.KeyEvent r0;
        android.view.KeyCharacterMap$KeyData r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: android.view.KeyCharacterMap$KeyData;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public char getMatch(char[])
    {
        android.view.KeyEvent r0;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: char[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public char getMatch(char[], int)
    {
        android.view.KeyEvent r0;
        char[] r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public char getNumber()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isPrintingKey()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean dispatch(android.view.KeyEvent$Callback)
    {
        android.view.KeyEvent r0;
        android.view.KeyEvent$Callback r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: android.view.KeyEvent$Callback;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final boolean dispatch(android.view.KeyEvent$Callback, android.view.KeyEvent$DispatcherState, java.lang.Object)
    {
        android.view.KeyEvent r0;
        android.view.KeyEvent$Callback r1;
        android.view.KeyEvent$DispatcherState r2;
        java.lang.Object r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: android.view.KeyEvent$Callback;

        r2 := @parameter1: android.view.KeyEvent$DispatcherState;

        r3 := @parameter2: java.lang.Object;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public java.lang.String toString()
    {
        android.view.KeyEvent r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.KeyEvent;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.String keyCodeToString(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int keyCodeFromString(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.KeyEvent r0;
        android.os.Parcel r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: android.view.KeyEvent;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    static void <clinit>()
    {
        <android.view.KeyEvent: android.os.Parcelable$Creator CREATOR> = null;

        return;
    }
}
