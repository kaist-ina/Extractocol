public abstract class java.util.EnumSet extends java.util.AbstractSet implements java.lang.Cloneable, java.io.Serializable
{

    void <init>()
    {
        java.util.EnumSet r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.EnumSet;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.EnumSet noneOf(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.EnumSet allOf(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.EnumSet copyOf(java.util.EnumSet)
    {
        java.util.EnumSet r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.EnumSet;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.EnumSet copyOf(java.util.Collection)
    {
        java.util.Collection r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.EnumSet complementOf(java.util.EnumSet)
    {
        java.util.EnumSet r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.util.EnumSet;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.EnumSet of(java.lang.Enum)
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.util.EnumSet of(java.lang.Enum, java.lang.Enum)
    {
        java.lang.Enum r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Enum;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.EnumSet of(java.lang.Enum, java.lang.Enum, java.lang.Enum)
    {
        java.lang.Enum r0, r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Enum;

        r2 := @parameter2: java.lang.Enum;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static java.util.EnumSet of(java.lang.Enum, java.lang.Enum, java.lang.Enum, java.lang.Enum)
    {
        java.lang.Enum r0, r1, r2, r3;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Enum;

        r2 := @parameter2: java.lang.Enum;

        r3 := @parameter3: java.lang.Enum;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public static java.util.EnumSet of(java.lang.Enum, java.lang.Enum, java.lang.Enum, java.lang.Enum, java.lang.Enum)
    {
        java.lang.Enum r0, r1, r2, r3, r4;
        java.lang.RuntimeException $r5;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Enum;

        r2 := @parameter2: java.lang.Enum;

        r3 := @parameter3: java.lang.Enum;

        r4 := @parameter4: java.lang.Enum;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r5;
    }

    public static transient java.util.EnumSet of(java.lang.Enum, java.lang.Enum[])
    {
        java.lang.Enum r0;
        java.lang.Enum[] r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Enum[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.util.EnumSet range(java.lang.Enum, java.lang.Enum)
    {
        java.lang.Enum r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Enum;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.util.EnumSet clone()
    {
        java.util.EnumSet r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.EnumSet;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.util.EnumSet r0, $r1;

        r0 := @this: java.util.EnumSet;

        $r1 = virtualinvoke r0.<java.util.EnumSet: java.util.EnumSet clone()>();

        return $r1;
    }
}
