public abstract class java.nio.channels.SocketChannel extends java.nio.channels.spi.AbstractSelectableChannel implements java.nio.channels.ByteChannel, java.nio.channels.ScatteringByteChannel, java.nio.channels.GatheringByteChannel
{

    protected void <init>(java.nio.channels.spi.SelectorProvider)
    {
        java.nio.channels.SocketChannel r0;
        java.nio.channels.spi.SelectorProvider r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: java.nio.channels.SocketChannel;

        r1 := @parameter0: java.nio.channels.spi.SelectorProvider;

        $r2 = (java.nio.channels.spi.SelectorProvider) null;

        specialinvoke r0.<java.nio.channels.spi.AbstractSelectableChannel: void <init>(java.nio.channels.spi.SelectorProvider)>($r2);

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static java.nio.channels.SocketChannel open() throws java.io.IOException
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.nio.channels.SocketChannel open(java.net.SocketAddress) throws java.io.IOException
    {
        java.net.SocketAddress r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.net.SocketAddress;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int validOps()
    {
        java.nio.channels.SocketChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.SocketChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.net.Socket socket();

    public abstract boolean isConnected();

    public abstract boolean isConnectionPending();

    public abstract boolean connect(java.net.SocketAddress) throws java.io.IOException;

    public abstract boolean finishConnect() throws java.io.IOException;

    public abstract int read(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;

    public final synchronized long read(java.nio.ByteBuffer[]) throws java.io.IOException
    {
        java.nio.channels.SocketChannel r0;
        java.nio.ByteBuffer[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.SocketChannel;

        r1 := @parameter0: java.nio.ByteBuffer[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract int write(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;

    public final synchronized long write(java.nio.ByteBuffer[]) throws java.io.IOException
    {
        java.nio.channels.SocketChannel r0;
        java.nio.ByteBuffer[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.SocketChannel;

        r1 := @parameter0: java.nio.ByteBuffer[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }
}
