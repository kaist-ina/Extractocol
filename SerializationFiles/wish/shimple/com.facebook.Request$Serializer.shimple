class com.facebook.Request$Serializer extends java.lang.Object implements com.facebook.Request$KeyValueSerializer
{
    private boolean firstWrite;
    private final com.facebook.internal.Logger logger;
    private final java.io.OutputStream outputStream;

    public void <init>(java.io.OutputStream, com.facebook.internal.Logger)
    {
        com.facebook.Request$Serializer $r0;
        java.io.OutputStream $r1;
        com.facebook.internal.Logger $r2;

        $r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: com.facebook.internal.Logger;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.facebook.Request$Serializer: boolean firstWrite> = 1;

        $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream> = $r1;

        $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger> = $r2;

        return;
    }

    public transient void write(java.lang.String, java.lang.Object[]) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        java.lang.Object[] $r1;
        boolean $z0;
        java.lang.String $r2, $r4, $r4_1, $r4_2, $r4_3, $r2_1;
        java.io.OutputStream $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        byte[] $r5, $r5_1, $r5_2, $r5_3, $r5_4;

        $r0 := @this: com.facebook.Request$Serializer;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $z0 = $r0.<com.facebook.Request$Serializer: boolean firstWrite>;

(0)     if $z0 == 0 goto label1;

        $r3 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $r4 = "--";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r5);

        $r3_1 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $r4_1 = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";

        $r5_1 = virtualinvoke $r4_1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3_1.<java.io.OutputStream: void write(byte[])>($r5_1);

        $r3_2 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $r4_2 = "\r\n";

        $r5_2 = virtualinvoke $r4_2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3_2.<java.io.OutputStream: void write(byte[])>($r5_2);

(1)     $r0.<com.facebook.Request$Serializer: boolean firstWrite> = 0;

     label1:
        $r5_3 = Phi($r5 #0, $r5_2 #1);

        $r4_3 = Phi($r4 #0, $r4_2 #1);

        $r3_3 = Phi($r3 #0, $r3_2 #1);

        $r3_4 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $r2_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r1);

        $r5_4 = virtualinvoke $r2_1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3_4.<java.io.OutputStream: void write(byte[])>($r5_4);

        return;
    }

    public void writeBitmap(java.lang.String, android.graphics.Bitmap) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        android.graphics.Bitmap $r1;
        android.graphics.Bitmap$CompressFormat $r2;
        java.io.OutputStream $r3;
        java.lang.Object[] $r4;
        java.lang.String $r5, $r5_1, $r5_2;
        com.facebook.internal.Logger $r6, $r6_1, $r6_2;
        java.lang.StringBuilder $r7, $r7_1, $r7_2, $r7_3;

        $r0 := @this: com.facebook.Request$Serializer;

        $r5 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.graphics.Bitmap;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r5, $r5, "image/png");

        $r2 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        $r3 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r2, 100, $r3);

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r4);

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r6 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

(0)     if $r6 == null goto label1;

        $r6_1 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7_1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r7_2 = virtualinvoke $r7_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5_1 = virtualinvoke $r7_2.<java.lang.StringBuilder: java.lang.String toString()>();

(1)     virtualinvoke $r6_1.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r5_1, "<Image>");

     label1:
        $r7_3 = Phi($r7 #0, $r7_2 #1);

        $r6_2 = Phi($r6 #0, $r6_1 #1);

        $r5_2 = Phi($r5 #0, $r5_1 #1);

        return;
    }

    public void writeBytes(java.lang.String, byte[]) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        byte[] $r1;
        java.io.OutputStream $r2;
        int $i0;
        java.lang.String $r3, $r8, $r3_1, $r3_2;
        java.lang.Object[] $r4, $r4_1, $r4_2;
        com.facebook.internal.Logger $r5, $r5_1, $r5_2;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3;
        java.lang.Integer $r7;

        $r0 := @this: com.facebook.Request$Serializer;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r3, $r3, "content/unknown");

        $r2 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r4);

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r5 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

(0)     if $r5 == null goto label1;

        $r5_1 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3_1 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4_1 = newarray (java.lang.Object)[1];

        $i0 = lengthof $r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4_1[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<Data: %d>", $r4_1);

(1)     virtualinvoke $r5_1.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r3_1, $r8);

     label1:
        $r6_3 = Phi($r6 #0, $r6_2 #1);

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        return;
    }

    public void writeContentDisposition(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Object[] $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6;

        $r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"", $r4);

(0)     if $r2 == null goto label1;

        $r4_1 = newarray (java.lang.Object)[1];

        $r4_1[0] = $r2;

(1)     virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("; filename=\"%s\"", $r4_1);

     label1:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r4_3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r4_3);

(2)     if $r3 == null goto label2;

        $r4_4 = newarray (java.lang.Object)[2];

        $r4_4[0] = "Content-Type";

        $r4_4[1] = $r3;

(3)     virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("%s: %s", $r4_4);

     label2:
        $r4_5 = Phi($r4_3 #2, $r4_4 #3);

        $r4_6 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r4_6);

        return;
    }

    public void writeFile(java.lang.String, android.os.ParcelFileDescriptor, java.lang.String) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        android.os.ParcelFileDescriptor $r1;
        boolean $z0;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r2, $r12, $r12_1, $r12_2, $r12_3, $r12_4;
        java.io.BufferedInputStream $r3, $r13, $r13_1, $r13_2, $r13_3;
        java.lang.String $r4, $r5, $r5_1, $r5_2, $r4_1, $r5_3;
        int $i0, $i2, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        java.io.OutputStream $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6;
        com.facebook.ProgressNoopOutputStream $r7;
        long $l1;
        java.lang.Object[] $r8, $r8_1;
        com.facebook.internal.Logger $r9, $r9_1;
        java.lang.StringBuilder $r10, $r10_1, $r10_2;
        java.lang.Integer $r11;
        byte[] $r14;
        java.lang.Throwable $r15, $r15_1, $r15_2, $r15_3;

        $r0 := @this: com.facebook.Request$Serializer;

        $r4 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.os.ParcelFileDescriptor;

        $r5 := @parameter2: java.lang.String;

(0)     if $r5 != null goto label01;

(1)     $r5_1 = "content/unknown";

     label01:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r4, $r4, $r5_2);

        $i0 = 0;

        $r6 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $z0 = $r6 instanceof com.facebook.ProgressNoopOutputStream;

        if $z0 == 0 goto label03;

        $r6_1 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $r7 = (com.facebook.ProgressNoopOutputStream) $r6_1;

        $l1 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: long getStatSize()>();

(2)     virtualinvoke $r7.<com.facebook.ProgressNoopOutputStream: void addProgress(long)>($l1);

     label02:
        $i0_1 = Phi($i0 #2, $i0_2 #8, $i0_2 #9);

        $r6_2 = Phi($r6_1 #2, $r6_3 #8, $r6_3 #9);

        $r13 = Phi($r13 #2, $r13_1 #8, $r13_1 #9);

        $r12 = Phi($r12 #2, $r12_1 #8, $r12_1 #9);

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r8);

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r9 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        if $r9 == null goto label19;

        $r9_1 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10_1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r10_2 = virtualinvoke $r10_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4_1 = virtualinvoke $r10_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8_1 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0_1);

        $r8_1[0] = $r11;

        $r5_3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<Data: %d>", $r8_1);

        virtualinvoke $r9_1.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r4_1, $r5_3);

        return;

     label03:
        $r12_1 = null;

        $r13_1 = null;

     label04:
        $r2 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        specialinvoke $r2.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r1);

     label05:
        $r3 = new java.io.BufferedInputStream;

(3)     specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

     label06:
(4)     $r14 = newarray (byte)[8192];

     label07:
        $i0_2 = Phi($i0 #4, $i0_3 #7);

        $r6_3 = Phi($r6 #4, $r6_4 #7);

(5)     $i2 = virtualinvoke $r3.<java.io.BufferedInputStream: int read(byte[])>($r14);

     label08:
        if $i2 == -1 goto label11;

     label09:
(6)     $r6_4 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        virtualinvoke $r6_4.<java.io.OutputStream: void write(byte[],int,int)>($r14, 0, $i2);

     label10:
        $i0_3 = $i0_2 + $i2;

(7)     goto label07;

     label11:
        if $r3 == null goto label12;

        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

     label12:
(8)     if $r2 == null goto label02;

        virtualinvoke $r2.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>();

(9)     goto label02;

     label13:
(10)    $r15_2 := @caughtexception;

     label14:
        $i0_5 = Phi($i0 #10, $i0 #11, $i0_4 #12);

        $r6_6 = Phi($r6 #10, $r6 #11, $r6_5 #12);

        $r15_3 = Phi($r15_2 #10, $r15_1 #11, $r15 #12);

        $r13_3 = Phi($r13_1 #10, $r13_1 #11, $r13_2 #12);

        $r12_4 = Phi($r12_1 #10, $r12_3 #11, $r12_2 #12);

        if $r13_3 == null goto label15;

        virtualinvoke $r13_3.<java.io.BufferedInputStream: void close()>();

     label15:
        if $r12_4 == null goto label16;

        virtualinvoke $r12_4.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>();

     label16:
        throw $r15_3;

     label17:
        $r15_1 := @caughtexception;

        $r12_3 = $r2;

(11)    goto label14;

     label18:
        $r15 := @caughtexception;

        $i0_4 = Phi($i0 #3, $i0_3 #7, $i0_2 #5);

        $r6_5 = Phi($r6 #3, $r6_3 #5, $r6_4 #6);

        $r13_2 = $r3;

        $r12_2 = $r2;

(12)    goto label14;

     label19:
        return;

        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
    }

    public void writeFile(java.lang.String, com.facebook.Request$ParcelFileDescriptorWithMimeType) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        java.lang.String $r1, $r4;
        com.facebook.Request$ParcelFileDescriptorWithMimeType $r2;
        android.os.ParcelFileDescriptor $r3;

        $r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.facebook.Request$ParcelFileDescriptorWithMimeType;

        $r3 = virtualinvoke $r2.<com.facebook.Request$ParcelFileDescriptorWithMimeType: android.os.ParcelFileDescriptor getFileDescriptor()>();

        $r4 = virtualinvoke $r2.<com.facebook.Request$ParcelFileDescriptorWithMimeType: java.lang.String getMimeType()>();

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String)>($r1, $r3, $r4);

        return;
    }

    public transient void writeLine(java.lang.String, java.lang.Object[]) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2, $r2_1;

        $r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>($r1, $r2);

        $r2_1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("\r\n", $r2_1);

        return;
    }

    public void writeObject(java.lang.String, java.lang.Object, com.facebook.Request) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        java.lang.String $r1, $r7;
        java.lang.Object $r2;
        com.facebook.Request $r3;
        java.lang.IllegalArgumentException $r4;
        java.io.OutputStream $r5, $r5_1, $r5_2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        com.facebook.RequestOutputStream $r6;
        android.graphics.Bitmap $r8;
        byte[] $r9;
        android.os.ParcelFileDescriptor $r10;
        com.facebook.Request$ParcelFileDescriptorWithMimeType $r11;

        $r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: com.facebook.Request;

        $r5 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $z0 = $r5 instanceof com.facebook.RequestOutputStream;

(0)     if $z0 == 0 goto label1;

        $r5_1 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $r6 = (com.facebook.RequestOutputStream) $r5_1;

(1)     interfaceinvoke $r6.<com.facebook.RequestOutputStream: void setCurrentRequest(com.facebook.Request)>($r3);

     label1:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $z0_1 = staticinvoke <com.facebook.Request: boolean access$100(java.lang.Object)>($r2);

        if $z0_1 == 0 goto label2;

        $r7 = staticinvoke <com.facebook.Request: java.lang.String access$200(java.lang.Object)>($r2);

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeString(java.lang.String,java.lang.String)>($r1, $r7);

        return;

     label2:
        $z0_2 = $r2 instanceof android.graphics.Bitmap;

        if $z0_2 == 0 goto label3;

        $r8 = (android.graphics.Bitmap) $r2;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeBitmap(java.lang.String,android.graphics.Bitmap)>($r1, $r8);

        return;

     label3:
        $z0_3 = $r2 instanceof byte[];

        if $z0_3 == 0 goto label4;

        $r9 = (byte[]) $r2;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeBytes(java.lang.String,byte[])>($r1, $r9);

        return;

     label4:
        $z0_4 = $r2 instanceof android.os.ParcelFileDescriptor;

        if $z0_4 == 0 goto label5;

        $r10 = (android.os.ParcelFileDescriptor) $r2;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String)>($r1, $r10, null);

        return;

     label5:
        $z0_5 = $r2 instanceof com.facebook.Request$ParcelFileDescriptorWithMimeType;

        if $z0_5 == 0 goto label6;

        $r11 = (com.facebook.Request$ParcelFileDescriptorWithMimeType) $r2;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeFile(java.lang.String,com.facebook.Request$ParcelFileDescriptorWithMimeType)>($r1, $r11);

        return;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value is not a supported type: String, Bitmap, byte[]");

        throw $r4;
    }

    public void writeRecordBoundary() throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        java.lang.Object[] $r1;

        $r0 := @this: com.facebook.Request$Serializer;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("--%s", $r1);

        return;
    }

    public void writeRequestsAsJson(java.lang.String, org.json.JSONArray, java.util.Collection) throws java.io.IOException, org.json.JSONException
    {
        com.facebook.Request$Serializer $r0;
        org.json.JSONArray $r1;
        java.util.Collection $r2;
        java.lang.String $r3, $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r3_1, $r5_5, $r5_6, $r3_2;
        java.io.OutputStream $r4, $r4_1;
        boolean $z0, $z0_1, $z0_2;
        com.facebook.RequestOutputStream $r6;
        java.lang.Object[] $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5;
        int $i0, $i0_1, $i0_2;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.facebook.Request $r10;
        org.json.JSONObject $r11;
        com.facebook.internal.Logger $r12, $r12_1, $r12_2;
        java.lang.StringBuilder $r13, $r13_1, $r13_2, $r13_3;

        $r0 := @this: com.facebook.Request$Serializer;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONArray;

        $r2 := @parameter2: java.util.Collection;

        $r4 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $z0 = $r4 instanceof com.facebook.RequestOutputStream;

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String toString()>();

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeString(java.lang.String,java.lang.String)>($r3, $r5);

        return;

     label1:
        $r4_1 = $r0.<com.facebook.Request$Serializer: java.io.OutputStream outputStream>;

        $r6 = (com.facebook.RequestOutputStream) $r4_1;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r3, null, null);

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("[", $r7);

        $i0 = 0;

(0)     $r8 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0_1 = Phi($z0 #0, $z0_2 #2);

        $i0_1 = Phi($i0 #0, $i0_2 #2);

        $r5_1 = Phi($r5 #0, $r5_3 #2);

        $r7_1 = Phi($r7 #0, $r7_3 #2);

        $z0_2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0_2 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.facebook.Request) $r9;

        $r11 = virtualinvoke $r1.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0_1);

        interfaceinvoke $r6.<com.facebook.RequestOutputStream: void setCurrentRequest(com.facebook.Request)>($r10);

        if $i0_1 <= 0 goto label4;

        $r7_2 = newarray (java.lang.Object)[1];

        $r5_2 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String toString()>();

        $r7_2[0] = $r5_2;

(1)     virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>(",%s", $r7_2);

     label3:
        $r5_3 = Phi($r5_2 #1, $r5_4 #3);

        $r7_3 = Phi($r7_2 #1, $r7_4 #3);

        $i0_2 = $i0_1 + 1;

(2)     goto label2;

     label4:
        $r7_4 = newarray (java.lang.Object)[1];

        $r5_4 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String toString()>();

        $r7_4[0] = $r5_4;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("%s", $r7_4);

(3)     goto label3;

     label5:
        $r7_5 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("]", $r7_5);

        $r12 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

(4)     if $r12 == null goto label6;

        $r12_1 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13_1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r13_2 = virtualinvoke $r13_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3_1 = virtualinvoke $r13_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5_5 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String toString()>();

(5)     virtualinvoke $r12_1.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r3_1, $r5_5);

     label6:
        $r5_6 = Phi($r5_1 #4, $r5_5 #5);

        $r13_3 = Phi($r13 #4, $r13_2 #5);

        $r3_2 = Phi($r3 #4, $r3_1 #5);

        $r12_2 = Phi($r12 #4, $r12_1 #5);

        return;
    }

    public void writeString(java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.facebook.Request$Serializer $r0;
        java.lang.String $r1, $r3, $r3_1, $r3_2;
        java.lang.Object[] $r2;
        com.facebook.internal.Logger $r4, $r4_1, $r4_2;
        java.lang.StringBuilder $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @this: com.facebook.Request$Serializer;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r3, null, null);

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("%s", $r2);

        virtualinvoke $r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r4 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

(0)     if $r4 == null goto label1;

        $r4_1 = $r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3_1 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.String toString()>();

(1)     virtualinvoke $r4_1.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r3_1, $r1);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r5_3 = Phi($r5 #0, $r5_2 #1);

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return;
    }
}
