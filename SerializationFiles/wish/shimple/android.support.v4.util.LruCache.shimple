public class android.support.v4.util.LruCache extends java.lang.Object
{
    private int createCount;
    private int evictionCount;
    private int hitCount;
    private final java.util.LinkedHashMap map;
    private int maxSize;
    private int missCount;
    private int putCount;
    private int size;

    public void <init>(int)
    {
        android.support.v4.util.LruCache $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.util.LinkedHashMap $r2;

        $r0 := @this: android.support.v4.util.LruCache;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r1;

     label1:
        $r0.<android.support.v4.util.LruCache: int maxSize> = $i0;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);

        $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map> = $r2;

        return;
    }

    private int safeSizeOf(java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Object $r1, $r2;
        java.lang.IllegalStateException $r3;
        int $i0;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.String $r5;

        $r0 := @this: android.support.v4.util.LruCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke $r0.<android.support.v4.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative size: ");

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r4_4 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4_4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        return $i0;
    }

    protected java.lang.Object create(java.lang.Object)
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Object $r1;

        $r0 := @this: android.support.v4.util.LruCache;

        $r1 := @parameter0: java.lang.Object;

        return null;
    }

    public final int createCount()
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.support.v4.util.LruCache: int createCount>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache $r0;
        boolean $z0;
        java.lang.Object $r1, $r2, $r3;

        $r0 := @this: android.support.v4.util.LruCache;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        return;
    }

    public final void evictAll()
    {
        android.support.v4.util.LruCache $r0;

        $r0 := @this: android.support.v4.util.LruCache;

        virtualinvoke $r0.<android.support.v4.util.LruCache: void trimToSize(int)>(-1);

        return;
    }

    public final int evictionCount()
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.support.v4.util.LruCache: int evictionCount>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object get(java.lang.Object)
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Object $r1, $r6, $r7, $r6_1, $r6_2;
        java.lang.NullPointerException $r2;
        java.lang.Throwable $r3, $r4;
        java.util.LinkedHashMap $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10, $i0_11;

        $r0 := @this: android.support.v4.util.LruCache;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r2;

     label01:
(0)     entermonitor $r0;

     label02:
        $r5 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);

        if $r6 == null goto label04;

        $i0 = $r0.<android.support.v4.util.LruCache: int hitCount>;

(1)     $i0_1 = $i0 + 1;

        $r0.<android.support.v4.util.LruCache: int hitCount> = $i0_1;

        exitmonitor $r0;

     label03:
        return $r6;

     label04:
(2)     $i0_2 = $r0.<android.support.v4.util.LruCache: int missCount>;

(3)     $i0_3 = $i0_2 + 1;

        $r0.<android.support.v4.util.LruCache: int missCount> = $i0_3;

        exitmonitor $r0;

     label05:
        $r6_1 = virtualinvoke $r0.<android.support.v4.util.LruCache: java.lang.Object create(java.lang.Object)>($r1);

        if $r6_1 != null goto label09;

        return null;

     label06:
        $r3 := @caughtexception;

        $i0_11 = Phi($i0 #0, $i0_1 #1, $i0_2 #2, $i0_3 #3, $i0_11 #4);

        $r5_5 = Phi($r5 #0, $r5_5 #4);

(4)     $r6_2 = Phi($r6 #0, $r6_2 #4);

     label07:
        exitmonitor $r0;

     label08:
        throw $r3;

     label09:
(5)     entermonitor $r0;

     label10:
(6)     $i0_4 = $r0.<android.support.v4.util.LruCache: int createCount>;

(7)     $i0_5 = $i0_4 + 1;

        $r0.<android.support.v4.util.LruCache: int createCount> = $i0_5;

(8)     $r5_1 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $r7 = virtualinvoke $r5_1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6_1);

        if $r7 == null goto label13;

(9)     $r5_2 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

(10)    virtualinvoke $r5_2.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label11:
        $i0_6 = Phi($i0_5 #10, $i0_9 #14);

        $r5_3 = Phi($r5_2 #10, $r5_1 #14);

(11)    exitmonitor $r0;

     label12:
        if $r7 == null goto label16;

        virtualinvoke $r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, $r1, $r6_1, $r7);

        return $r7;

     label13:
(12)    $i0_8 = $r0.<android.support.v4.util.LruCache: int size>;

        $i1 = specialinvoke $r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>($r1, $r6_1);

(13)    $i0_9 = $i0_8 + $i1;

        $r0.<android.support.v4.util.LruCache: int size> = $i0_9;

(14)    goto label11;

     label14:
        $r4 := @caughtexception;

        $i0_10 = Phi($i0_3 #5, $i0_4 #6, $i0_5 #7, $i0_6 #11, $i0_8 #12, $i0_9 #13, $i0_10 #15);

(15)    $r5_4 = Phi($r5 #5, $r5_1 #8, $r5_2 #9, $r5_3 #11, $r5_4 #15);

        exitmonitor $r0;

     label15:
        throw $r4;

     label16:
        $i0_7 = $r0.<android.support.v4.util.LruCache: int maxSize>;

        virtualinvoke $r0.<android.support.v4.util.LruCache: void trimToSize(int)>($i0_7);

        return $r6_1;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label12 with label14;
        catch java.lang.Throwable from label13 to label15 with label14;
    }

    public final int hitCount()
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.support.v4.util.LruCache: int hitCount>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int maxSize()
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.support.v4.util.LruCache: int maxSize>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int missCount()
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.support.v4.util.LruCache: int missCount>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Object $r1, $r2, $r6;
        java.lang.NullPointerException $r3;
        java.util.LinkedHashMap $r4;
        java.lang.Throwable $r5;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i1_1, $i0_5, $i0_6, $i1_2, $i0_7, $i0_8, $i1_3;

        $r0 := @this: android.support.v4.util.LruCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null || value == null");

        throw $r3;

     label2:
(0)     entermonitor $r0;

     label3:
        $i0 = $r0.<android.support.v4.util.LruCache: int putCount>;

(1)     $i0_1 = $i0 + 1;

        $r0.<android.support.v4.util.LruCache: int putCount> = $i0_1;

(2)     $i0_2 = $r0.<android.support.v4.util.LruCache: int size>;

        $i1 = specialinvoke $r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>($r1, $r2);

(3)     $i0_3 = $i0_2 + $i1;

        $r0.<android.support.v4.util.LruCache: int size> = $i0_3;

        $r4 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $r6 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

(4)     if $r6 == null goto label4;

(5)     $i0_4 = $r0.<android.support.v4.util.LruCache: int size>;

(6)     $i1_1 = specialinvoke $r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>($r1, $r6);

(7)     $i0_5 = $i0_4 - $i1_1;

(8)     $r0.<android.support.v4.util.LruCache: int size> = $i0_5;

     label4:
        $i0_6 = Phi($i0_3 #4, $i0_5 #8);

        $i1_2 = Phi($i1 #4, $i1_1 #8);

(9)     exitmonitor $r0;

     label5:
        if $r6 == null goto label6;

        virtualinvoke $r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, $r1, $r6, $r2);

     label6:
        $i0_7 = $r0.<android.support.v4.util.LruCache: int maxSize>;

        virtualinvoke $r0.<android.support.v4.util.LruCache: void trimToSize(int)>($i0_7);

        return $r6;

     label7:
        $r5 := @caughtexception;

        $i0_8 = Phi($i0 #0, $i0_1 #1, $i0_2 #2, $i0_3 #3, $i0_4 #5, $i0_5 #7, $i0_6 #9, $i0_8 #10);

(10)    $i1_3 = Phi($i1 #0, $i1_1 #6, $i1_2 #9, $i1_3 #10);

     label8:
        exitmonitor $r0;

     label9:
        throw $r5;

        catch java.lang.Throwable from label3 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public final int putCount()
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.support.v4.util.LruCache: int putCount>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Object $r1, $r5;
        java.lang.NullPointerException $r2;
        java.util.LinkedHashMap $r3;
        java.lang.Throwable $r4;
        int $i0, $i1, $i0_1, $i0_2, $i0_3;

        $r0 := @this: android.support.v4.util.LruCache;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r2;

     label1:
(0)     entermonitor $r0;

     label2:
        $r3 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $r5 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r1);

(1)     if $r5 == null goto label3;

        $i0 = $r0.<android.support.v4.util.LruCache: int size>;

        $i1 = specialinvoke $r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>($r1, $r5);

(2)     $i0_1 = $i0 - $i1;

(3)     $r0.<android.support.v4.util.LruCache: int size> = $i0_1;

     label3:
        $i0_2 = Phi($i0 #1, $i0_1 #3);

(4)     exitmonitor $r0;

     label4:
        if $r5 == null goto label8;

        virtualinvoke $r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, $r1, $r5, null);

        return $r5;

     label5:
        $r4 := @caughtexception;

(5)     $i0_3 = Phi($i0 #0, $i0_1 #2, $i0_2 #4, $i0_3 #5);

     label6:
        exitmonitor $r0;

     label7:
        throw $r4;

     label8:
        return $r5;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void resize(int)
    {
        android.support.v4.util.LruCache $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Throwable $r2;

        $r0 := @this: android.support.v4.util.LruCache;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r1;

     label1:
        entermonitor $r0;

     label2:
        $r0.<android.support.v4.util.LruCache: int maxSize> = $i0;

        exitmonitor $r0;

     label3:
        virtualinvoke $r0.<android.support.v4.util.LruCache: void trimToSize(int)>($i0);

        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor $r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final int size()
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Throwable $r1;
        int i0;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        i0 = $r0.<android.support.v4.util.LruCache: int size>;

     label2:
        exitmonitor $r0;

        return i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected int sizeOf(java.lang.Object, java.lang.Object)
    {
        android.support.v4.util.LruCache $r0;
        java.lang.Object $r1, $r2;

        $r0 := @this: android.support.v4.util.LruCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        return 1;
    }

    public final java.util.Map snapshot()
    {
        android.support.v4.util.LruCache $r0;
        java.util.LinkedHashMap $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: android.support.v4.util.LruCache;

        entermonitor $r0;

     label1:
        $r1 = new java.util.LinkedHashMap;

        $r2 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r2);

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.String toString()
    {
        android.support.v4.util.LruCache $r0;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i1_2, $i1_3, $i1_4, $i0_2, $i0_3, $i0_4, $i0_5, $i1_5;
        java.lang.Object[] $r1;
        java.lang.Throwable $r2;
        java.lang.Integer $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.String $r4;

        $r0 := @this: android.support.v4.util.LruCache;

        $i1 = 0;

(0)     entermonitor $r0;

     label1:
        $i2 = $r0.<android.support.v4.util.LruCache: int hitCount>;

        $i0 = $r0.<android.support.v4.util.LruCache: int missCount>;

(1)     $i0_1 = $i2 + $i0;

(2)     if $i0_1 == 0 goto label2;

(3)     $i1_1 = $r0.<android.support.v4.util.LruCache: int hitCount>;

(4)     $i1_2 = $i1_1 * 100;

(5)     $i1_3 = $i1_2 / $i0_1;

     label2:
        $i1_4 = Phi($i1 #2, $i1_3 #5);

(6)     $r1 = newarray (java.lang.Object)[4];

(7)     $i0_2 = $r0.<android.support.v4.util.LruCache: int maxSize>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0_2);

        $r1[0] = $r3;

(8)     $i0_3 = $r0.<android.support.v4.util.LruCache: int hitCount>;

(9)     $r3_1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0_3);

        $r1[1] = $r3_1;

(10)    $i0_4 = $r0.<android.support.v4.util.LruCache: int missCount>;

(11)    $r3_2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0_4);

        $r1[2] = $r3_2;

(12)    $r3_3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1_4);

        $r1[3] = $r3_3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]", $r1);

     label3:
        exitmonitor $r0;

        return $r4;

     label4:
        $r2 := @caughtexception;

        $i0_5 = Phi($i0 #0, $i0_1 #1, $i0_2 #7, $i0_3 #8, $i0_4 #10);

        $i1_5 = Phi($i1 #0, $i1_1 #3, $i1_2 #4, $i1_3 #5, $i1_4 #6);

        $r3_4 = Phi($r3 #0, $r3_1 #9, $r3_2 #11, $r3_3 #12);

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void trimToSize(int)
    {
        android.support.v4.util.LruCache $r0;
        int $i0, $i1, $i2, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5, $i1_6, $i1_7, $i1_8, $i1_9, $i1_10;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r2;
        java.util.LinkedHashMap $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3;
        java.lang.Class $r5;
        java.lang.String $r6, $r6_1, $r6_2;
        java.util.Set $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9, $r11, $r9_1, $r9_2, $r9_3;
        java.util.Map$Entry $r10;

        $r0 := @this: android.support.v4.util.LruCache;

(0)     $i0 := @parameter0: int;

     label01:
        $i1 = Phi($i1 #0, $i1_8 #28);

        $z0 = Phi($z0 #0, $z0_2 #28);

        $r9 = Phi($r9 #0, $r9_2 #28);

        $r3 = Phi($r3 #0, $r3_4 #28);

(1)     entermonitor $r0;

     label02:
(2)     $i1_1 = $r0.<android.support.v4.util.LruCache: int size>;

(3)     if $i1_1 < 0 goto label03;

(4)     $r3_1 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

(5)     $z0_1 = virtualinvoke $r3_1.<java.util.LinkedHashMap: boolean isEmpty()>();

(6)     if $z0_1 == 0 goto label06;

(7)     $i1_2 = $r0.<android.support.v4.util.LruCache: int size>;

(8)     if $i1_2 == 0 goto label06;

     label03:
        $i1_9 = Phi($i1_1 #3, $i1_2 #8);

        $z0_4 = Phi($z0 #3, $z0_1 #8);

        $r3_6 = Phi($r3 #3, $r3_1 #8);

(9)     $r1 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

(10)    $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

(11)    $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".sizeOf() is reporting inconsistent results!");

(12)    $r6_1 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6_1);

        throw $r1;

     label04:
        $r2 := @caughtexception;

        $i1_10 = Phi($i1 #1, $i1_1 #2, $i1_2 #7, $i1_9 #9, $i1_10 #13, $i1_4 #14, $i1_5 #24, $i1_6 #25, $i1_7 #26, $i1_8 #27);

        $z0_5 = Phi($z0 #1, $z0_1 #5, $z0_4 #9, $z0_5 #13, $z0_2 #17, $z0_3 #19);

        $r9_3 = Phi($r9 #1, $r9_3 #13, $r9_1 #21, $r9_2 #22);

        $r6_2 = Phi($r6 #1, $r6_1 #12, $r6_2 #13);

        $r3_7 = Phi($r3 #1, $r3_1 #4, $r3_6 #9, $r3_7 #13, $r3_2 #16, $r3_5 #19, $r3_3 #20, $r3_4 #23);

(13)    $r4_3 = Phi($r4 #1, $r4_1 #10, $r4_2 #11, $r4_3 #13);

        exitmonitor $r0;

     label05:
        throw $r2;

     label06:
        $i1_3 = Phi($i1_1 #6, $i1_2 #8);

(14)    $i1_4 = $r0.<android.support.v4.util.LruCache: int size>;

(15)    if $i1_4 <= $i0 goto label07;

(16)    $r3_2 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

(17)    $z0_2 = virtualinvoke $r3_2.<java.util.LinkedHashMap: boolean isEmpty()>();

(18)    if $z0_2 == 0 goto label09;

     label07:
        $z0_3 = Phi($z0_1 #15, $z0_2 #18);

        $r3_5 = Phi($r3_1 #15, $r3_2 #18);

(19)    exitmonitor $r0;

     label08:
        return;

     label09:
(20)    $r3_3 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        $r7 = virtualinvoke $r3_3.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

(21)    $r9_1 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.util.Map$Entry) $r9_1;

(22)    $r9_2 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

(23)    $r3_4 = $r0.<android.support.v4.util.LruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r3_4.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r9_2);

(24)    $i1_5 = $r0.<android.support.v4.util.LruCache: int size>;

        $i2 = specialinvoke $r0.<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>($r9_2, $r11);

(25)    $i1_6 = $i1_5 - $i2;

        $r0.<android.support.v4.util.LruCache: int size> = $i1_6;

(26)    $i1_7 = $r0.<android.support.v4.util.LruCache: int evictionCount>;

(27)    $i1_8 = $i1_7 + 1;

        $r0.<android.support.v4.util.LruCache: int evictionCount> = $i1_8;

        exitmonitor $r0;

     label10:
        virtualinvoke $r0.<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(1, $r9_2, $r11, null);

(28)    goto label01;

        catch java.lang.Throwable from label02 to label05 with label04;
        catch java.lang.Throwable from label06 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }
}
