public abstract class java.lang.ref.Reference extends java.lang.Object
{

    void <init>()
    {
        java.lang.ref.Reference r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.ref.Reference;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void clear()
    {
        java.lang.ref.Reference r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.ref.Reference;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean enqueue()
    {
        java.lang.ref.Reference r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.ref.Reference;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object get()
    {
        java.lang.ref.Reference r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.ref.Reference;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isEnqueued()
    {
        java.lang.ref.Reference r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.ref.Reference;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
