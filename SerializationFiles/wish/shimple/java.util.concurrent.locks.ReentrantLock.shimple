public class java.util.concurrent.locks.ReentrantLock extends java.lang.Object implements java.util.concurrent.locks.Lock, java.io.Serializable
{

    public void <init>()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(boolean)
    {
        java.util.concurrent.locks.ReentrantLock r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void lock()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void lockInterruptibly() throws java.lang.InterruptedException
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean tryLock()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean tryLock(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.locks.ReentrantLock r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void unlock()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.concurrent.locks.Condition newCondition()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getHoldCount()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isHeldByCurrentThread()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isLocked()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean isFair()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected java.lang.Thread getOwner()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean hasQueuedThreads()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean hasQueuedThread(java.lang.Thread)
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.Thread r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        r1 := @parameter0: java.lang.Thread;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final int getQueueLength()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected java.util.Collection getQueuedThreads()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean hasWaiters(java.util.concurrent.locks.Condition)
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.util.concurrent.locks.Condition r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        r1 := @parameter0: java.util.concurrent.locks.Condition;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int getWaitQueueLength(java.util.concurrent.locks.Condition)
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.util.concurrent.locks.Condition r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        r1 := @parameter0: java.util.concurrent.locks.Condition;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.util.concurrent.locks.Condition r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        r1 := @parameter0: java.util.concurrent.locks.Condition;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String toString()
    {
        java.util.concurrent.locks.ReentrantLock r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.locks.ReentrantLock;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
