final class io.fabric.sdk.android.services.common.ExecutorUtils$1 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    final java.util.concurrent.atomic.AtomicLong val$count;
    final java.lang.String val$threadNameTemplate;

    void <init>(java.lang.String, java.util.concurrent.atomic.AtomicLong)
    {
        io.fabric.sdk.android.services.common.ExecutorUtils$1 $r0;
        java.lang.String $r1;
        java.util.concurrent.atomic.AtomicLong $r2;

        $r0 := @this: io.fabric.sdk.android.services.common.ExecutorUtils$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.concurrent.atomic.AtomicLong;

        $r0.<io.fabric.sdk.android.services.common.ExecutorUtils$1: java.lang.String val$threadNameTemplate> = $r1;

        $r0.<io.fabric.sdk.android.services.common.ExecutorUtils$1: java.util.concurrent.atomic.AtomicLong val$count> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        io.fabric.sdk.android.services.common.ExecutorUtils$1 $r0;
        java.lang.Runnable $r1;
        io.fabric.sdk.android.services.common.ExecutorUtils$1$1 $r2;
        java.util.concurrent.atomic.AtomicLong $r3;
        java.util.concurrent.ThreadFactory $r4;
        java.lang.Thread $r5;
        java.lang.StringBuilder $r6, $r6_1, $r6_2;
        java.lang.String $r7, $r7_1;
        long $l0;

        $r0 := @this: io.fabric.sdk.android.services.common.ExecutorUtils$1;

        $r1 := @parameter0: java.lang.Runnable;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        $r2 = new io.fabric.sdk.android.services.common.ExecutorUtils$1$1;

        specialinvoke $r2.<io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void <init>(io.fabric.sdk.android.services.common.ExecutorUtils$1,java.lang.Runnable)>($r0, $r1);

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r2);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = $r0.<io.fabric.sdk.android.services.common.ExecutorUtils$1: java.lang.String val$threadNameTemplate>;

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r3 = $r0.<io.fabric.sdk.android.services.common.ExecutorUtils$1: java.util.concurrent.atomic.AtomicLong val$count>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7_1 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.Thread: void setName(java.lang.String)>($r7_1);

        return $r5;
    }
}
