public class ch.boye.httpclientandroidlib.impl.client.DefaultConnectionKeepAliveStrategy extends java.lang.Object implements ch.boye.httpclientandroidlib.conn.ConnectionKeepAliveStrategy
{

    public void <init>()
    {
        ch.boye.httpclientandroidlib.impl.client.DefaultConnectionKeepAliveStrategy $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.DefaultConnectionKeepAliveStrategy;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long getKeepAliveDuration(ch.boye.httpclientandroidlib.HttpResponse, ch.boye.httpclientandroidlib.protocol.HttpContext)
    {
        ch.boye.httpclientandroidlib.impl.client.DefaultConnectionKeepAliveStrategy $r0;
        ch.boye.httpclientandroidlib.HttpResponse $r1;
        ch.boye.httpclientandroidlib.protocol.HttpContext $r2;
        java.lang.IllegalArgumentException $r3;
        ch.boye.httpclientandroidlib.message.BasicHeaderElementIterator $r4;
        java.lang.NumberFormatException $r5;
        ch.boye.httpclientandroidlib.HeaderIterator $r6;
        boolean $z0, $z0_1, $z0_2;
        ch.boye.httpclientandroidlib.HeaderElement $r7;
        java.lang.String $r8, $r9;
        long $l0, $l0_1, $l0_2, $l0_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.DefaultConnectionKeepAliveStrategy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpResponse;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.protocol.HttpContext;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r3;

     label1:
        $r4 = new ch.boye.httpclientandroidlib.message.BasicHeaderElementIterator;

        $r6 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.HeaderIterator headerIterator(java.lang.String)>("Keep-Alive");

(0)     specialinvoke $r4.<ch.boye.httpclientandroidlib.message.BasicHeaderElementIterator: void <init>(ch.boye.httpclientandroidlib.HeaderIterator)>($r6);

     label2:
        $l0 = Phi($l0 #0, $l0 #1, $l0 #2, $l0_3 #4);

        $z0 = Phi($z0 #0, $z0_1 #1, $z0_2 #2, $z0_2 #4);

        $z0_1 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElementIterator: boolean hasNext()>();

        if $z0_1 == 0 goto label5;

        $r7 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElementIterator: ch.boye.httpclientandroidlib.HeaderElement nextElement()>();

        $r8 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $r9 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getValue()>();

(1)     if $r9 == null goto label2;

        $z0_2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("timeout");

(2)     if $z0_2 == 0 goto label2;

     label3:
(3)     $l0_1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

     label4:
        $l0_2 = $l0_1 * 1000L;

        return $l0_2;

     label5:
        return -1L;

     label6:
        $r5 := @caughtexception;

        $l0_3 = Phi($l0 #2, $l0_1 #3);

(4)     goto label2;

        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }
}
