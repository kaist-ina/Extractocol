public class com.android.volley.toolbox.DiskBasedCache extends java.lang.Object implements com.android.volley.Cache
{
    private static final int CACHE_MAGIC;
    private static final int DEFAULT_DISK_USAGE_BYTES;
    private static final float HYSTERESIS_FACTOR;
    private final java.util.Map mEntries;
    private final int mMaxCacheSizeInBytes;
    private final java.io.File mRootDirectory;
    private long mTotalSize;

    public void <init>(java.io.File)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.io.File $r1;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.io.File;

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void <init>(java.io.File,int)>($r1, 5242880);

        return;
    }

    public void <init>(java.io.File, int)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.io.File $r1;
        int $i0;
        java.util.LinkedHashMap $r2;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(16, 0.75F, 1);

        $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries> = $r2;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = 0L;

        $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory> = $r1;

        $r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes> = $i0;

        return;
    }

    private java.lang.String getFilenameForKey(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1, $r2, $r2_1, $r1_1, $r1_2, $r1_3;
        int $i0, $i1, $i0_1, $i0_2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0_1 = $i0 / 2;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0_1);

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $r2_1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_1);

        $r1_1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0_1);

        $i0_2 = virtualinvoke $r1_1.<java.lang.String: int hashCode()>();

        $r1_2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0_2);

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1_2);

        $r1_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1_3;
    }

    private void pruneIfNeeded(int)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        int $i0, $i3, $i7, $i3_1, $i3_2, $i3_3, $i3_4;
        java.util.Map $r1;
        long $l1, $l2, $l5, $l6, $l1_1, $l2_1, $l2_2, $l1_2, $l5_1, $l6_1, $l5_2, $l5_3, $l6_2, $l5_4, $l6_3, $l5_5, $l5_6, $l6_4, $l5_7, $l2_3, $l2_4, $l1_3;
        byte $b4, $b4_1, $b4_2, $b4_3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.Object[] $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3;
        java.util.Map$Entry $r6;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r7;
        java.lang.String $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6;
        java.io.File $r9;
        float $f0, $f1, $f1_1, $f1_2, $f1_3;
        java.lang.Integer $r10;
        java.lang.Long $r11, $r11_1;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $i0 := @parameter0: int;

        $l1 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l2 = (long) $i0;

        $l1_1 = $l1 + $l2;

        $i3 = $r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes>;

        $l2_1 = (long) $i3;

        $b4 = $l1_1 cmp $l2_1;

        if $b4 >= 0 goto label1;

        return;

     label1:
        $z0 = <com.android.volley.VolleyLog: boolean DEBUG>;

(0)     if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.Object)[0];

(1)     staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>("Pruning old cache entries.", $r2);

     label2:
        $r2_1 = Phi($r2 #0, $r2 #1);

        $l2_2 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $i3_1 = 0;

        $l1_2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

(2)     $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $l5 = Phi($l5 #2, $l5_5 #5);

        $r8 = Phi($r8 #2, $r8_2 #5);

        $b4_1 = Phi($b4 #2, $b4_2 #5);

        $i3_2 = Phi($i3_1 #2, $i3_3 #5);

        $l6 = Phi($l6 #2, $l6_3 #5);

        $z0_1 = Phi($z0 #2, $z0_3 #5);

        $r5 = Phi($r5 #2, $r5_2 #5);

        $f1 = Phi($f1 #2, $f1_2 #5);

        $r2_2 = Phi($r2_1 #2, $r2_3 #5);

        $z0_2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

(3)     if $z0_2 == 0 goto label5;

        $r5_1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5_1;

        $r5_2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r5_2;

        $r8_1 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r9 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r8_1);

        $z0_3 = virtualinvoke $r9.<java.io.File: boolean delete()>();

        if $z0_3 == 0 goto label6;

        $l5_1 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l6_1 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l5_2 = $l5_1 - $l6_1;

(4)     $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l5_2;

     label4:
        $l5_3 = Phi($l5_2 #4, $l5 #6);

        $r8_2 = Phi($r8_1 #4, $r8_5 #6);

        $l6_2 = Phi($l6_1 #4, $l6 #6);

        $r2_3 = Phi($r2_2 #4, $r2_4 #6);

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $i3_3 = $i3_2 + 1;

        $l5_4 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l6_3 = (long) $i0;

        $l5_5 = $l5_4 + $l6_3;

        $f0 = (float) $l5_5;

        $i7 = $r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes>;

        $f1_1 = (float) $i7;

        $f1_2 = $f1_1 * 0.9F;

        $b4_2 = $f0 cmpg $f1_2;

(5)     if $b4_2 >= 0 goto label3;

     label5:
        $l5_6 = Phi($l5 #3, $l5_5 #5);

        $r8_6 = Phi($r8 #3, $r8_2 #5);

        $b4_3 = Phi($b4_1 #3, $b4_2 #5);

        $i3_4 = Phi($i3_2 #3, $i3_3 #5);

        $l6_4 = Phi($l6 #3, $l6_3 #5);

        $z0_4 = Phi($z0_2 #3, $z0_3 #5);

        $r5_3 = Phi($r5 #3, $r5_2 #5);

        $f1_3 = Phi($f1 #3, $f1_2 #5);

        $r2_5 = Phi($r2_2 #3, $r2_3 #5);

        $z0_5 = <com.android.volley.VolleyLog: boolean DEBUG>;

        if $z0_5 == 0 goto label7;

        $r2_6 = newarray (java.lang.Object)[3];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3_4);

        $r2_6[0] = $r10;

        $l5_7 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l2_3 = $l5_7 - $l2_2;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2_3);

        $r2_6[1] = $r11;

        $l2_4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1_3 = $l2_4 - $l1_2;

        $r11_1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1_3);

        $r2_6[2] = $r11_1;

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>("pruned %d files, %d bytes, %d ms", $r2_6);

        return;

     label6:
        $r2_4 = newarray (java.lang.Object)[2];

        $r8_3 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r2_4[0] = $r8_3;

        $r8_4 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r8_5 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r8_4);

        $r2_4[1] = $r8_5;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Could not delete cache entry for key=%s, filename=%s", $r2_4);

(6)     goto label4;

     label7:
        return;
    }

    private void putEntry(java.lang.String, com.android.volley.toolbox.DiskBasedCache$CacheHeader)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r2, $r5;
        long $l0, $l1, $l2, $l1_1, $l1_2, $l0_1, $l1_3, $l0_2, $l0_3, $l1_4;
        java.util.Map $r3, $r3_1, $r3_2, $r3_3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.android.volley.toolbox.DiskBasedCache$CacheHeader;

        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $l1 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l0 = $r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l1_1 = $l1 + $l0;

(0)     $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l1_1;

     label1:
        $l1_2 = Phi($l1_1 #0, $l1_4 #1);

        $l0_1 = Phi($l0 #0, $l0_3 #1);

        $r3_1 = Phi($r3 #0, $r3_3 #1);

        $r3_2 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r3_2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;

     label2:
        $r3_3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r4 = interfaceinvoke $r3_3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r4;

        $l1_3 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l0_2 = $r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l2 = $r5.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l0_3 = $l0_2 - $l2;

        $l1_4 = $l1_3 + $l0_3;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l1_4;

(1)     goto label1;
    }

    private static int read(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.EOFException $r1;
        int $i0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        if $i0 != -1 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        return $i0;
    }

    static int readInt(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2, $i1_3, $i0_3, $i1_4, $i1_5, $i0_4;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i0_1 = $i0 << 0;

        $i1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i1_1 = $i1 << 8;

        $i0_2 = $i0_1 | $i1_1;

        $i1_2 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i1_3 = $i1_2 << 16;

        $i0_3 = $i0_2 | $i1_3;

        $i1_4 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i1_5 = $i1_4 << 24;

        $i0_4 = $i0_3 | $i1_5;

        return $i0_4;
    }

    static long readLong(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7;
        long $l1, $l2, $l1_1, $l1_2, $l1_3, $l2_1, $l2_2, $l1_4, $l2_3, $l2_4, $l2_5, $l1_5, $l2_6, $l2_7, $l2_8, $l1_6, $l2_9, $l2_10, $l2_11, $l1_7, $l2_12, $l2_13, $l2_14, $l1_8, $l2_15, $l2_16, $l2_17, $l1_9, $l2_18, $l2_19, $l2_20, $l1_10;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l1 = (long) $i0;

        $l1_1 = $l1 & 255L;

        $l1_2 = $l1_1 << 0;

        $l1_3 = 0L | $l1_2;

        $i0_1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0_1;

        $l2_1 = $l2 & 255L;

        $l2_2 = $l2_1 << 8;

        $l1_4 = $l1_3 | $l2_2;

        $i0_2 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2_3 = (long) $i0_2;

        $l2_4 = $l2_3 & 255L;

        $l2_5 = $l2_4 << 16;

        $l1_5 = $l1_4 | $l2_5;

        $i0_3 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2_6 = (long) $i0_3;

        $l2_7 = $l2_6 & 255L;

        $l2_8 = $l2_7 << 24;

        $l1_6 = $l1_5 | $l2_8;

        $i0_4 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2_9 = (long) $i0_4;

        $l2_10 = $l2_9 & 255L;

        $l2_11 = $l2_10 << 32;

        $l1_7 = $l1_6 | $l2_11;

        $i0_5 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2_12 = (long) $i0_5;

        $l2_13 = $l2_12 & 255L;

        $l2_14 = $l2_13 << 40;

        $l1_8 = $l1_7 | $l2_14;

        $i0_6 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2_15 = (long) $i0_6;

        $l2_16 = $l2_15 & 255L;

        $l2_17 = $l2_16 << 48;

        $l1_9 = $l1_8 | $l2_17;

        $i0_7 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2_18 = (long) $i0_7;

        $l2_19 = $l2_18 & 255L;

        $l2_20 = $l2_19 << 56;

        $l1_10 = $l1_9 | $l2_20;

        return $l1_10;
    }

    static java.lang.String readString(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0;
        java.lang.String $r1;
        long $l1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $l1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: long readLong(java.io.InputStream)>($r0);

        $i0 = (int) $l1;

        $r2 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: byte[] streamToBytes(java.io.InputStream,int)>($r0, $i0);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

        return $r1;
    }

    static java.util.Map readStringStringMap(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.util.HashMap $r1;
        int $i0, $i1, $i1_1, $i1_2;
        java.util.Map $r2, $r2_1, $r2_2;
        java.lang.String $r3, $r4, $r3_1, $r3_2, $r4_1, $r4_2;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int readInt(java.io.InputStream)>($r0);

        if $i0 != 0 goto label3;

(0)     $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label1:
        $r2_1 = Phi($r2 #0, $r2_2 #3);

(1)     $i1 = 0;

     label2:
        $r4 = Phi($r4 #1, $r4_2 #2);

        $r3 = Phi($r3 #1, $r3_2 #2);

        $i1_1 = Phi($i1 #1, $i1_2 #2);

        if $i1_1 >= $i0 goto label4;

        $r3_1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: java.lang.String readString(java.io.InputStream)>($r0);

        $r3_2 = virtualinvoke $r3_1.<java.lang.String: java.lang.String intern()>();

        $r4_1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: java.lang.String readString(java.io.InputStream)>($r0);

        $r4_2 = virtualinvoke $r4_1.<java.lang.String: java.lang.String intern()>();

        interfaceinvoke $r2_1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3_2, $r4_2);

        $i1_2 = $i1_1 + 1;

(2)     goto label2;

     label3:
        $r1 = new java.util.HashMap;

        $r2_2 = $r1;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i0);

(3)     goto label1;

     label4:
        return $r2_1;
    }

    private void removeEntry(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        long $l0, $l1, $l0_1, $l0_2;
        java.lang.Object $r2;
        java.util.Map $r3, $r3_1, $r3_2;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r4;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r2;

(0)     if $r4 == null goto label1;

        $l0 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l1 = $r4.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l0_1 = $l0 - $l1;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l0_1;

        $r3_1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

(1)     interfaceinvoke $r3_1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        $l0_2 = Phi($l0 #0, $l0_1 #1);

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        return;
    }

    private static byte[] streamToBytes(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0, $i1, $i2, $i1_1, $i2_1, $i2_2, $i1_2, $i2_3;
        byte[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;
        java.lang.String $r4;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r1 = newarray (byte)[$i0];

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #3);

        $i2 = Phi($i2 #0, $i2_2 #3);

(1)     if $i1_1 >= $i0 goto label2;

        $i2_1 = $i0 - $i1_1;

        $i2_2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1_1, $i2_1);

(2)     if $i2_2 == -1 goto label2;

        $i1_2 = $i1_1 + $i2_2;

(3)     goto label1;

     label2:
        $i2_3 = Phi($i2 #1, $i2_2 #2);

        if $i1_1 == $i0 goto label3;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, read ");

        $r3_4 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1_1);

        $r3_5 = virtualinvoke $r3_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r4 = virtualinvoke $r3_5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label3:
        return $r1;
    }

    static void writeInt(java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5, $i0_1, $i0_2;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $i1 = $i0 >> 0;

        $i1_1 = $i1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1_1);

        $i1_2 = $i0 >> 8;

        $i1_3 = $i1_2 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1_3);

        $i1_4 = $i0 >> 16;

        $i1_5 = $i1_4 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1_5);

        $i0_1 = $i0 >> 24;

        $i0_2 = $i0_1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0_2);

        return;
    }

    static void writeLong(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        long $l0, $l1, $l1_1, $l1_2, $l1_3, $l1_4, $l1_5, $l1_6, $l0_1;
        int $i2, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6, $i2_7;
        byte $b3, $b3_1, $b3_2, $b3_3, $b3_4, $b3_5, $b3_6, $b3_7;

        $r0 := @parameter0: java.io.OutputStream;

        $l0 := @parameter1: long;

        $l1 = $l0 >>> 0;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l1_1 = $l0 >>> 8;

        $i2_1 = (int) $l1_1;

        $b3_1 = (byte) $i2_1;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3_1);

        $l1_2 = $l0 >>> 16;

        $i2_2 = (int) $l1_2;

        $b3_2 = (byte) $i2_2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3_2);

        $l1_3 = $l0 >>> 24;

        $i2_3 = (int) $l1_3;

        $b3_3 = (byte) $i2_3;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3_3);

        $l1_4 = $l0 >>> 32;

        $i2_4 = (int) $l1_4;

        $b3_4 = (byte) $i2_4;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3_4);

        $l1_5 = $l0 >>> 40;

        $i2_5 = (int) $l1_5;

        $b3_5 = (byte) $i2_5;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3_5);

        $l1_6 = $l0 >>> 48;

        $i2_6 = (int) $l1_6;

        $b3_6 = (byte) $i2_6;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3_6);

        $l0_1 = $l0 >>> 56;

        $i2_7 = (int) $l0_1;

        $b3_7 = (byte) $i2_7;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3_7);

        return;
    }

    static void writeString(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        java.lang.String $r1;
        long $l0;
        byte[] $r2;
        int $i1, $i1_1;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i1 = lengthof $r2;

        $l0 = (long) $i1;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeLong(java.io.OutputStream,long)>($r0, $l0);

        $i1_1 = lengthof $r2;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1_1);

        return;
    }

    static void writeStringStringMap(java.util.Map, java.io.OutputStream) throws java.io.IOException
    {
        java.util.Map $r0;
        java.io.OutputStream $r1;
        int $i0;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.util.Map$Entry $r5;
        java.lang.String $r6, $r6_1, $r6_2, $r6_3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.io.OutputStream;

        if $r0 == null goto label2;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeInt(java.io.OutputStream,int)>($r1, $i0);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

(0)     $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r4 = Phi($r4 #0, $r4_3 #2);

        $r6 = Phi($r6 #0, $r6_2 #2);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

(1)     if $z0 == 0 goto label3;

        $r4_1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4_1;

        $r4_2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6_1 = (java.lang.String) $r4_2;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeString(java.io.OutputStream,java.lang.String)>($r1, $r6_1);

        $r4_3 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6_2 = (java.lang.String) $r4_3;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeString(java.io.OutputStream,java.lang.String)>($r1, $r6_2);

(2)     goto label1;

     label2:
(3)     staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeInt(java.io.OutputStream,int)>($r1, 0);

     label3:
        $r4_4 = Phi($r4 #1, $r4 #3);

        $r6_3 = Phi($r6 #1, $r6 #3);

        return;
    }

    public void clear()
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4;
        java.util.Map $r1;
        java.lang.Object[] $r2;
        java.lang.Throwable $r3;
        java.io.File[] $r4;
        java.io.File $r5, $r5_1, $r5_2, $r5_3, $r5_4;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

(0)     entermonitor $r0;

     label1:
        $r5 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r4 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

(1)     if $r4 == null goto label3;

        $i0 = lengthof $r4;

(2)     $i1 = 0;

     label2:
        $i1_1 = Phi($i1 #2, $i1_2 #6);

        $r5_1 = Phi($r5 #2, $r5_2 #6);

(3)     if $i1_1 >= $i0 goto label3;

(4)     $r5_2 = $r4[$i1_1];

        virtualinvoke $r5_2.<java.io.File: boolean delete()>();

(5)     $i1_2 = $i1_1 + 1;

(6)     goto label2;

     label3:
        $i1_3 = Phi($i1 #1, $i1_1 #3);

        $r5_3 = Phi($r5 #1, $r5_1 #3);

(7)     $r1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = 0L;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Cache cleared.", $r2);

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r3 := @caughtexception;

        $i1_4 = Phi($i1 #0, $i1_1 #3, $i1_2 #5, $i1_3 #7);

        $r5_4 = Phi($r5 #0, $r5_1 #3, $r5_2 #4, $r5_3 #7);

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public com.android.volley.Cache$Entry get(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1, $r18, $r18_1, $r18_2, $r18_3, $r18_4, $r18_5;
        java.util.Map $r2;
        com.android.volley.toolbox.DiskBasedCache$CountingInputStream $r3, $r13, $r13_1, $r13_2, $r13_3, $r13_4, $r13_5, $r13_6, $r13_7;
        java.io.FileInputStream $r4;
        java.io.IOException $r5, $r6, $r8, $r16, $r16_1, $r16_2, $r16_3, $r16_4, $r16_5, $r16_6;
        java.lang.Throwable $r7, $r19, $r19_1, $r19_2, $r19_3, $r19_4;
        com.android.volley.Cache$Entry $r9, $r15, $r9_1, $r9_2;
        java.lang.Object $r10;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r11;
        java.io.File $r12;
        long $l0, $l2, $l0_1, $l0_2, $l0_3, $l0_4, $l0_5, $l0_6, $l0_7, $l0_8;
        int $i1, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5, $i1_6, $i1_7, $i1_8;
        byte[] $r14;
        java.lang.Object[] $r17;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $r9 = null;

(0)     entermonitor $r0;

     label01:
        $r2 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r10 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r11 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r10;

     label02:
(1)     if $r11 != null goto label04;

     label03:
        $i1 = Phi($i1 #1, $i1_2 #8, $i1_2 #9, $i1_5 #14, $i1_5 #15, $i1_5 #16, $i1_7 #19);

        $r9_1 = Phi($r9 #1, $r9_2 #8, $r9 #9, $r9 #14, $r9 #15, $r9 #16, $r9 #19);

        $r18 = Phi($r18 #1, $r18 #8, $r18 #9, $r18_2 #14, $r18_2 #15, $r18_2 #16, $r18_4 #19);

        $r16 = Phi($r16 #1, $r16 #8, $r16 #9, $r16_3 #14, $r16_3 #15, $r16_3 #16, $r16_5 #19);

        $l0 = Phi($l0 #1, $l0_2 #8, $l0_2 #9, $l0_5 #14, $l0_5 #15, $l0_5 #16, $l0_7 #19);

        $r13 = Phi($r13 #1, $r13_1 #8, $r13_1 #9, $r13_4 #14, $r13_4 #15, $r13_4 #16, $r13_6 #19);

        $r19 = Phi($r19 #1, $r19 #8, $r19 #9, $r19 #14, $r19 #15, $r19 #16, $r19_3 #19);

        exitmonitor $r0;

        return $r9_1;

     label04:
        $r12 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r1);

     label05:
        $r13_1 = null;

        $r3 = new com.android.volley.toolbox.DiskBasedCache$CountingInputStream;

(2)     $r4 = new java.io.FileInputStream;

     label06:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r12);

(3)     specialinvoke $r3.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void <init>(java.io.InputStream,com.android.volley.toolbox.DiskBasedCache$1)>($r4, null);

     label07:
        staticinvoke <com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream)>($r3);

(4)     $l0_1 = virtualinvoke $r12.<java.io.File: long length()>();

(5)     $i1_1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache$CountingInputStream: int access$100(com.android.volley.toolbox.DiskBasedCache$CountingInputStream)>($r3);

     label08:
        $l2 = (long) $i1_1;

        $l0_2 = $l0_1 - $l2;

(6)     $i1_2 = (int) $l0_2;

     label09:
        $r14 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: byte[] streamToBytes(java.io.InputStream,int)>($r3, $i1_2);

        $r15 = virtualinvoke $r11.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.Cache$Entry toCacheEntry(byte[])>($r14);

     label10:
(7)     if $r3 == null goto label12;

     label11:
        virtualinvoke $r3.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label12:
        $r9_2 = $r15;

(8)     goto label03;

     label13:
        $r5 := @caughtexception;

(9)     goto label03;

     label14:
(10)    $r16_2 := @caughtexception;

     label15:
        $i1_5 = Phi($i1 #10, $i1_4 #21);

        $r16_3 = Phi($r16_2 #10, $r16_1 #21);

        $l0_5 = Phi($l0 #10, $l0_4 #21);

        $r13_4 = Phi($r13_1 #10, $r13_3 #21);

(11)    $r17 = newarray (java.lang.Object)[2];

(12)    $r18_1 = virtualinvoke $r12.<java.io.File: java.lang.String getAbsolutePath()>();

        $r17[0] = $r18_1;

(13)    $r18_2 = virtualinvoke $r16_3.<java.io.IOException: java.lang.String toString()>();

        $r17[1] = $r18_2;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("%s: %s", $r17);

        virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void remove(java.lang.String)>($r1);

     label16:
(14)    if $r13_4 == null goto label03;

     label17:
        virtualinvoke $r13_4.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label18:
(15)    goto label03;

     label19:
        $r6 := @caughtexception;

(16)    goto label03;

     label20:
        $r19_2 := @caughtexception;

        $i1_6 = Phi($i1 #2, $i1_4 #21, $i1_5 #11);

        $r18_3 = Phi($r18 #2, $r18_1 #12, $r18_2 #13);

        $r16_4 = Phi($r16 #2, $r16_2 #10, $r16_1 #21, $r16_3 #11);

        $l0_6 = Phi($l0 #2, $l0_4 #21, $l0_5 #11);

(17)    $r13_5 = Phi($r13_1 #2, $r13_3 #21, $r13_4 #11);

     label21:
        $i1_7 = Phi($i1_6 #17, $i1_3 #20);

        $r18_4 = Phi($r18_3 #17, $r18 #20);

        $r16_5 = Phi($r16_4 #17, $r16 #20);

        $l0_7 = Phi($l0_6 #17, $l0_3 #20);

        $r13_6 = Phi($r13_5 #17, $r13_2 #20);

        $r19_3 = Phi($r19_2 #17, $r19_1 #20);

(18)    if $r13_6 == null goto label23;

     label22:
        virtualinvoke $r13_6.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label23:
        throw $r19_3;

     label24:
        $r7 := @caughtexception;

        $i1_8 = Phi($i1 #0, $i1_2 #7, $i1_5 #14, $i1_7 #18);

        $r18_5 = Phi($r18 #0, $r18_2 #14, $r18_4 #18);

        $r16_6 = Phi($r16 #0, $r16_3 #14, $r16_5 #18);

        $l0_8 = Phi($l0 #0, $l0_2 #7, $l0_5 #14, $l0_7 #18);

        $r13_7 = Phi($r13 #0, $r13_1 #7, $r13_4 #14, $r13_6 #18);

        $r19_4 = Phi($r19 #0, $r19_3 #18);

        exitmonitor $r0;

        throw $r7;

     label25:
        $r8 := @caughtexception;

(19)    goto label03;

     label26:
        $r19_1 := @caughtexception;

        $i1_3 = Phi($i1 #3, $i1_1 #5, $i1_2 #6);

        $l0_3 = Phi($l0 #3, $l0_1 #4, $l0_2 #6);

        $r13_2 = $r3;

(20)    goto label21;

     label27:
        $r16_1 := @caughtexception;

        $i1_4 = Phi($i1 #3, $i1_1 #5, $i1_2 #6);

        $l0_4 = Phi($l0 #3, $l0_1 #4, $l0_2 #6);

        $r13_3 = $r3;

(21)    goto label15;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.io.IOException from label07 to label08 with label27;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.io.IOException from label09 to label10 with label27;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.io.IOException from label22 to label23 with label25;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
    }

    public java.io.File getFileForKey(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.io.File $r1, $r2;
        java.lang.String $r3, $r3_1;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r3 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r3_1 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r3);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3_1);

        return $r1;
    }

    public void initialize()
    {
        java.lang.Object[] $r0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4;
        java.io.FileInputStream $r1, $r12, $r12_1, $r12_2, $r12_3, $r12_4, $r12_5, $r12_6, $r12_7, $r12_8, $r12_9;
        java.io.IOException $r2, $r3, $r4, $r6, $r7;
        java.lang.Throwable $r5, $r14, $r14_1, $r14_2, $r14_3;
        com.android.volley.toolbox.DiskBasedCache $r8;
        java.io.File $r9, $r9_1, $r9_2, $r9_3, $r9_4, $r9_5, $r9_6, $r9_7;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.String $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5, $r10_6, $r10_7, $r10_8, $r10_9, $r10_10;
        java.io.File[] $r11;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r13;
        long $l2;

        $r8 := @this: com.android.volley.toolbox.DiskBasedCache;

(0)     entermonitor $r8;

     label01:
        $r9 = $r8.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

(1)     $r9_1 = $r8.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

(2)     $z0_1 = virtualinvoke $r9_1.<java.io.File: boolean mkdirs()>();

(3)     if $z0_1 != 0 goto label02;

        $r0 = newarray (java.lang.Object)[1];

(4)     $r9_2 = $r8.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r10 = virtualinvoke $r9_2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r0[0] = $r10;

(5)     staticinvoke <com.android.volley.VolleyLog: void e(java.lang.String,java.lang.Object[])>("Unable to create cache dir %s", $r0);

     label02:
        $r9_3 = Phi($r9_1 #3, $r9_2 #5, $r9_4 #7, $r9_5 #9);

        $r12 = Phi($r12 #3, $r12 #5, $r12 #7, $r12_1 #9);

        $z0_2 = Phi($z0_1 #3, $z0_1 #5, $z0 #7, $z0 #9);

        $r10_1 = Phi($r10 #3, $r10 #5, $r10 #7, $r10_2 #9);

        $i1 = Phi($i1 #3, $i1 #5, $i1 #7, $i1_2 #9);

        exitmonitor $r8;

        return;

     label03:
(6)     $r9_4 = $r8.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r11 = virtualinvoke $r9_4.<java.io.File: java.io.File[] listFiles()>();

(7)     if $r11 == null goto label02;

        $i0 = lengthof $r11;

(8)     $i1_1 = 0;

     label04:
        $r9_5 = Phi($r9_4 #8, $r9_6 #16);

        $r12_1 = Phi($r12 #8, $r12_5 #16);

        $r10_2 = Phi($r10 #8, $r10_6 #16);

        $i1_2 = Phi($i1_1 #8, $i1_3 #16);

(9)     if $i1_2 >= $i0 goto label02;

(10)    $r9_6 = $r11[$i1_2];

     label05:
        $r12_2 = null;

(11)    $r1 = new java.io.FileInputStream;

     label06:
(12)    specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r9_6);

     label07:
        $r13 = staticinvoke <com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream)>($r1);

        $l2 = virtualinvoke $r9_6.<java.io.File: long length()>();

     label08:
        $r13.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size> = $l2;

(13)    $r10_3 = $r13.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

     label09:
        specialinvoke $r8.<com.android.volley.toolbox.DiskBasedCache: void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader)>($r10_3, $r13);

     label10:
(14)    if $r1 == null goto label12;

     label11:
(15)    virtualinvoke $r1.<java.io.FileInputStream: void close()>();

     label12:
        $r12_5 = Phi($r12_2 #14, $r12_2 #15, $r12_2 #17, $r12_6 #20, $r12_6 #21, $r12_6 #22);

        $r10_6 = Phi($r10_3 #14, $r10_3 #15, $r10_3 #17, $r10_7 #20, $r10_7 #21, $r10_7 #22);

        $i1_3 = $i1_2 + 1;

(16)    goto label04;

     label13:
        $r2 := @caughtexception;

(17)    goto label12;

     label14:
(18)    $r3 := @caughtexception;

     label15:
        $r12_6 = Phi($r12_2 #18, $r12_4 #26);

        $r10_7 = Phi($r10_2 #18, $r10_5 #26);

(19)    if $r9_6 == null goto label17;

     label16:
        virtualinvoke $r9_6.<java.io.File: boolean delete()>();

     label17:
(20)    if $r12_6 == null goto label12;

     label18:
        virtualinvoke $r12_6.<java.io.FileInputStream: void close()>();

     label19:
(21)    goto label12;

     label20:
        $r4 := @caughtexception;

(22)    goto label12;

     label21:
        $r14_1 := @caughtexception;

        $r12_7 = Phi($r12_2 #11, $r12_6 #19);

(23)    $r10_8 = Phi($r10_2 #11, $r10_7 #19);

     label22:
        $r12_8 = Phi($r12_7 #23, $r12_3 #25);

        $r10_9 = Phi($r10_8 #23, $r10_4 #25);

        $r14_2 = Phi($r14_1 #23, $r14 #25);

(24)    if $r12_8 == null goto label24;

     label23:
        virtualinvoke $r12_8.<java.io.FileInputStream: void close()>();

     label24:
        throw $r14_2;

     label25:
        $r5 := @caughtexception;

        $r9_7 = Phi($r9 #0, $r9_1 #1, $r9_2 #4, $r9_4 #6, $r9_5 #9, $r9_6 #10);

        $r12_9 = Phi($r12 #0, $r12_5 #16, $r12_1 #9, $r12_2 #14, $r12_6 #20, $r12_8 #24);

        $z0_3 = Phi($z0 #0, $z0_1 #2);

        $r10_10 = Phi($r10 #0, $r10_6 #16, $r10_2 #9, $r10_3 #14, $r10_7 #20, $r10_9 #24);

        $i1_4 = Phi($i1 #0, $i1_1 #8, $i1_3 #16, $i1_2 #9);

        $r14_3 = Phi($r14 #0, $r14_2 #24);

        exitmonitor $r8;

        throw $r5;

     label26:
        $r6 := @caughtexception;

        goto label24;

     label27:
        $r14 := @caughtexception;

        $r10_4 = Phi($r10_2 #12, $r10_3 #13);

        $r12_3 = $r1;

(25)    goto label22;

     label28:
        $r7 := @caughtexception;

        $r10_5 = Phi($r10_2 #12, $r10_3 #13);

        $r12_4 = $r1;

(26)    goto label15;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label05 with label25;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.io.IOException from label07 to label08 with label28;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.io.IOException from label09 to label10 with label28;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.io.IOException from label23 to label24 with label26;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label24 to label25 with label25;
    }

    public void invalidate(java.lang.String, boolean)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.android.volley.Cache$Entry $r3;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label1:
        $r3 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: com.android.volley.Cache$Entry get(java.lang.String)>($r1);

        if $r3 == null goto label3;

        $r3.<com.android.volley.Cache$Entry: long softTtl> = 0L;

        if $z0 == 0 goto label2;

        $r3.<com.android.volley.Cache$Entry: long ttl> = 0L;

     label2:
        virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void put(java.lang.String,com.android.volley.Cache$Entry)>($r1, $r3);

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void put(java.lang.String, com.android.volley.Cache$Entry)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        com.android.volley.Cache$Entry $r1;
        int $i0;
        java.io.FileOutputStream $r2;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r3;
        java.io.IOException $r4;
        java.lang.Object[] $r5;
        java.lang.Throwable $r6;
        java.lang.String $r7, $r7_1, $r7_2, $r7_3;
        byte[] $r8, $r8_1, $r8_2, $r8_3, $r8_4;
        java.io.File $r9;
        boolean $z0;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r7 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.android.volley.Cache$Entry;

(0)     entermonitor $r0;

     label01:
        $r8 = $r1.<com.android.volley.Cache$Entry: byte[] data>;

        $i0 = lengthof $r8;

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void pruneIfNeeded(int)>($i0);

        $r9 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r7);

(1)     $r2 = new java.io.FileOutputStream;

     label02:
        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r9);

     label03:
        $r3 = new com.android.volley.toolbox.DiskBasedCache$CacheHeader;

     label04:
        specialinvoke $r3.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: void <init>(java.lang.String,com.android.volley.Cache$Entry)>($r7, $r1);

        virtualinvoke $r3.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: boolean writeHeader(java.io.OutputStream)>($r2);

     label05:
(2)     $r8_1 = $r1.<com.android.volley.Cache$Entry: byte[] data>;

     label06:
        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r8_1);

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

(3)     specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader)>($r7, $r3);

     label07:
        $r8_2 = Phi($r8_1 #3, $r8_3 #5, $r8_3 #7);

        $r7_1 = Phi($r7 #3, $r7 #5, $r7_2 #7);

        exitmonitor $r0;

        return;

     label08:
        $r4 := @caughtexception;

(4)     $r8_3 = Phi($r8 #1, $r8_1 #2);

     label09:
        $z0 = virtualinvoke $r9.<java.io.File: boolean delete()>();

(5)     if $z0 != 0 goto label07;

        $r5 = newarray (java.lang.Object)[1];

(6)     $r7_2 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5[0] = $r7_2;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Could not clean up file %s", $r5);

     label10:
(7)     goto label07;

     label11:
        $r6 := @caughtexception;

        $r8_4 = Phi($r8 #0, $r8_1 #2, $r8_3 #4);

        $r7_3 = Phi($r7 #0, $r7_2 #6);

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.io.IOException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void remove(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.Object[] $r1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3;
        java.io.File $r4;
        boolean $z0;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r3 := @parameter0: java.lang.String;

(0)     entermonitor $r0;

     label1:
        $r4 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r3);

        $z0 = virtualinvoke $r4.<java.io.File: boolean delete()>();

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void removeEntry(java.lang.String)>($r3);

(1)     if $z0 != 0 goto label2;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = $r3;

(2)     $r3_1 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r3);

        $r1[1] = $r3_1;

(3)     staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Could not delete cache entry for key=%s, filename=%s", $r1);

     label2:
        $r3_2 = Phi($r3 #1, $r3_1 #3);

        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        $r3_3 = Phi($r3 #0, $r3_1 #2);

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
