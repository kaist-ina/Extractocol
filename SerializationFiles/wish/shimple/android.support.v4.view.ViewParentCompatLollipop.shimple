class android.support.v4.view.ViewParentCompatLollipop extends java.lang.Object
{
    private static final java.lang.String TAG;

    void <init>()
    {
        android.support.v4.view.ViewParentCompatLollipop $r0;

        $r0 := @this: android.support.v4.view.ViewParentCompatLollipop;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean onNestedFling(android.view.ViewParent, android.view.View, float, float, boolean)
    {
        android.view.ViewParent $r0;
        android.view.View $r1;
        float $f0, $f1;
        java.lang.AbstractMethodError $r2;
        boolean $z0, $z0_1, $z0_2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.String $r4;

        $r0 := @parameter0: android.view.ViewParent;

        $r1 := @parameter1: android.view.View;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

(0)     $z0 := @parameter4: boolean;

     label1:
(1)     $z0_1 = interfaceinvoke $r0.<android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>($r1, $f0, $f1, $z0);

     label2:
        return $z0_1;

     label3:
        $r2 := @caughtexception;

        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewParent ");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement interface ");

        $r3_4 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method onNestedFling");

        $r4 = virtualinvoke $r3_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewParentCompat", $r4, $r2);

        return 0;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public static boolean onNestedPreFling(android.view.ViewParent, android.view.View, float, float)
    {
        android.view.ViewParent $r0;
        android.view.View $r1;
        float $f0, $f1;
        java.lang.AbstractMethodError $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.String $r4;

        $r0 := @parameter0: android.view.ViewParent;

        $r1 := @parameter1: android.view.View;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

     label1:
        $z0 = interfaceinvoke $r0.<android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>($r1, $f0, $f1);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewParent ");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement interface ");

        $r3_4 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method onNestedPreFling");

        $r4 = virtualinvoke $r3_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewParentCompat", $r4, $r2);

        return 0;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public static void onNestedPreScroll(android.view.ViewParent, android.view.View, int, int, int[])
    {
        android.view.ViewParent $r0;
        android.view.View $r1;
        int $i0, $i1;
        int[] $r2;
        java.lang.AbstractMethodError $r3;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.String $r5;

        $r0 := @parameter0: android.view.ViewParent;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 := @parameter4: int[];

     label1:
        interfaceinvoke $r0.<android.view.ViewParent: void onNestedPreScroll(android.view.View,int,int,int[])>($r1, $i0, $i1, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewParent ");

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement interface ");

        $r4_4 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method onNestedPreScroll");

        $r5 = virtualinvoke $r4_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewParentCompat", $r5, $r3);

        return;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public static void onNestedScroll(android.view.ViewParent, android.view.View, int, int, int, int)
    {
        android.view.ViewParent $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.AbstractMethodError $r2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.String $r4;

        $r0 := @parameter0: android.view.ViewParent;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

     label1:
        interfaceinvoke $r0.<android.view.ViewParent: void onNestedScroll(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewParent ");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement interface ");

        $r3_4 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method onNestedScroll");

        $r4 = virtualinvoke $r3_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewParentCompat", $r4, $r2);

        return;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public static void onNestedScrollAccepted(android.view.ViewParent, android.view.View, android.view.View, int)
    {
        android.view.ViewParent $r0;
        android.view.View $r1, $r2;
        int $i0;
        java.lang.AbstractMethodError $r3;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.String $r5;

        $r0 := @parameter0: android.view.ViewParent;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

     label1:
        interfaceinvoke $r0.<android.view.ViewParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)>($r1, $r2, $i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewParent ");

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement interface ");

        $r4_4 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method onNestedScrollAccepted");

        $r5 = virtualinvoke $r4_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewParentCompat", $r5, $r3);

        return;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public static boolean onStartNestedScroll(android.view.ViewParent, android.view.View, android.view.View, int)
    {
        android.view.ViewParent $r0;
        android.view.View $r1, $r2;
        int $i0;
        java.lang.AbstractMethodError $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.lang.String $r5;

        $r0 := @parameter0: android.view.ViewParent;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.View;

        $i0 := @parameter3: int;

     label1:
        $z0 = interfaceinvoke $r0.<android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>($r1, $r2, $i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewParent ");

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement interface ");

        $r4_4 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method onStartNestedScroll");

        $r5 = virtualinvoke $r4_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewParentCompat", $r5, $r3);

        return 0;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public static void onStopNestedScroll(android.view.ViewParent, android.view.View)
    {
        android.view.ViewParent $r0;
        android.view.View $r1;
        java.lang.AbstractMethodError $r2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.String $r4;

        $r0 := @parameter0: android.view.ViewParent;

        $r1 := @parameter1: android.view.View;

     label1:
        interfaceinvoke $r0.<android.view.ViewParent: void onStopNestedScroll(android.view.View)>($r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewParent ");

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement interface ");

        $r3_4 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method onStopNestedScroll");

        $r4 = virtualinvoke $r3_4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewParentCompat", $r4, $r2);

        return;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }
}
