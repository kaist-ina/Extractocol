public final class org.apache.http.protocol.BasicHttpProcessor extends java.lang.Object implements org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpRequestInterceptorList, org.apache.http.protocol.HttpResponseInterceptorList, java.lang.Cloneable
{
    protected java.util.List requestInterceptors;
    protected java.util.List responseInterceptors;

    public void <init>()
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void addRequestInterceptor(org.apache.http.HttpRequestInterceptor)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpRequestInterceptor r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpRequestInterceptor;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void addRequestInterceptor(org.apache.http.HttpRequestInterceptor, int)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpRequestInterceptor r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpRequestInterceptor;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void addResponseInterceptor(org.apache.http.HttpResponseInterceptor, int)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpResponseInterceptor r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpResponseInterceptor;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void removeRequestInterceptorByClass(java.lang.Class)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void removeResponseInterceptorByClass(java.lang.Class)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.Class r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void addInterceptor(org.apache.http.HttpRequestInterceptor)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpRequestInterceptor r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpRequestInterceptor;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void addInterceptor(org.apache.http.HttpRequestInterceptor, int)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpRequestInterceptor r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpRequestInterceptor;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int getRequestInterceptorCount()
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void clearRequestInterceptors()
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void addResponseInterceptor(org.apache.http.HttpResponseInterceptor)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpResponseInterceptor r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpResponseInterceptor;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void addInterceptor(org.apache.http.HttpResponseInterceptor)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpResponseInterceptor r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpResponseInterceptor;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void addInterceptor(org.apache.http.HttpResponseInterceptor, int)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpResponseInterceptor r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpResponseInterceptor;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int getResponseInterceptorCount()
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void clearResponseInterceptors()
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setInterceptors(java.util.List)
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.util.List r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: java.util.List;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void clearInterceptors()
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws java.io.IOException, org.apache.http.HttpException
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpRequest r1;
        org.apache.http.protocol.HttpContext r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpRequest;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws java.io.IOException, org.apache.http.HttpException
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        org.apache.http.HttpResponse r1;
        org.apache.http.protocol.HttpContext r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    protected void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor)
    {
        org.apache.http.protocol.BasicHttpProcessor r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        r1 := @parameter0: org.apache.http.protocol.BasicHttpProcessor;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public org.apache.http.protocol.BasicHttpProcessor copy()
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.protocol.BasicHttpProcessor r0;
        java.lang.RuntimeException $r1;

        r0 := @this: org.apache.http.protocol.BasicHttpProcessor;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
