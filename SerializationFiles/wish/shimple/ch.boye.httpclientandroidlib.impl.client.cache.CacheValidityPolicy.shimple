class ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy extends java.lang.Object
{
    public static final long MAX_AGE;

    void <init>()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private boolean mayReturnStaleIfError(ch.boye.httpclientandroidlib.Header[], long)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.Header[] $r1;
        long $l0, $l3;
        int $i1, $i2, $i5, $i6, $i7, $i5_1, $i6_1, $i6_2, $i6_3, $i5_2;
        ch.boye.httpclientandroidlib.Header $r2;
        ch.boye.httpclientandroidlib.HeaderElement $r3;
        byte $b4;
        java.lang.NumberFormatException $r4;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3;
        ch.boye.httpclientandroidlib.HeaderElement[] $r5;
        java.lang.String $r6, $r7, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.Header[];

        $l0 := @parameter1: long;

        $z0 = 0;

        $i1 = lengthof $r1;

(0)     $i5 = 0;

     label1:
        $i6 = Phi($i6 #0, $i6_2 #7);

        $i5_1 = Phi($i5 #0, $i5_2 #7);

        $z0_1 = Phi($z0 #0, $z0_3 #7);

        $r6 = Phi($r6 #0, $r6_6 #7);

        if $i5_1 >= $i1 goto label8;

        $r2 = $r1[$i5_1];

        $r5 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.Header: ch.boye.httpclientandroidlib.HeaderElement[] getElements()>();

        $i2 = lengthof $r5;

(1)     $i6_1 = 0;

     label2:
        $i6_2 = Phi($i6_1 #1, $i6_3 #9);

        $r6_1 = Phi($r6 #1, $r6_5 #9);

(2)     if $i6_2 >= $i2 goto label5;

        $r3 = $r5[$i6_2];

        $r6_2 = "stale-if-error";

        $r7 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $z1 = virtualinvoke $r6_2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

(3)     if $z1 == 0 goto label7;

     label3:
(4)     $r6_3 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getValue()>();

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6_3);

     label4:
        $l3 = (long) $i7;

        $b4 = $l0 cmp $l3;

(5)     if $b4 > 0 goto label7;

(6)     $z0_2 = 1;

     label5:
        $z0_3 = Phi($z0_1 #2, $z0_2 #6);

        $r6_6 = Phi($r6_1 #2, $r6_3 #6);

        $i5_2 = $i5_1 + 1;

(7)     goto label1;

     label6:
        $r4 := @caughtexception;

(8)     $r6_4 = Phi($r6_2 #3, $r6_3 #4);

     label7:
        $r6_5 = Phi($r6_2 #3, $r6_3 #5, $r6_4 #8);

        $i6_3 = $i6_2 + 1;

(9)     goto label2;

     label8:
        return $z0_1;

        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }

    protected boolean contentLengthHeaderMatchesActualLength(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        byte $b0;
        boolean $z0;
        long $l1, $l2;
        ch.boye.httpclientandroidlib.client.cache.Resource $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $z0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: boolean hasContentLengthHeader(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        if $z0 == 0 goto label1;

        $l1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getContentLengthValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $r2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.client.cache.Resource getResource()>();

        $l2 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.client.cache.Resource: long length()>();

        $b0 = $l1 cmp $l2;

        if $b0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected long getAgeValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        int $i0, $i2, $i2_1, $i2_2;
        ch.boye.httpclientandroidlib.Header $r2;
        java.lang.NumberFormatException $r3;
        long $l1, $l3, $l4, $l1_1, $l4_1, $l4_2, $l4_3, $l1_2, $l1_3, $l4_4;
        ch.boye.httpclientandroidlib.Header[] $r4;
        java.lang.String $r5;
        byte $b5, $b5_1, $b5_2, $b5_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $l1 = 0L;

        $r4 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Age");

        $i0 = lengthof $r4;

(0)     $i2 = 0;

     label1:
        $l1_1 = Phi($l1 #0, $l1_3 #5);

        $l4 = Phi($l4 #0, $l4_3 #5);

        $i2_1 = Phi($i2 #0, $i2_2 #5);

        $b5 = Phi($b5 #0, $b5_3 #5);

        if $i2_1 >= $i0 goto label7;

        $r2 = $r4[$i2_1];

     label2:
        $r5 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

     label3:
        $l4_1 = $l3;

        $b5_1 = $l3 cmp 0L;

(1)     if $b5_1 >= 0 goto label4;

(2)     $l4_2 = 2147483648L;

     label4:
        $l4_3 = Phi($l4_1 #1, $l4_2 #2, $l4_4 #6);

        $b5_2 = Phi($b5_1 #1, $b5_1 #2, $b5 #6);

        $b5_3 = $l4_3 cmp $l1_1;

(3)     if $b5_3 <= 0 goto label5;

(4)     $l1_2 = $l4_3;

     label5:
        $l1_3 = Phi($l1_1 #3, $l1_2 #4);

        $i2_2 = $i2_1 + 1;

(5)     goto label1;

     label6:
        $r3 := @caughtexception;

        $l4_4 = 2147483648L;

(6)     goto label4;

     label7:
        return $l1_1;

        catch java.lang.NumberFormatException from label2 to label3 with label6;
    }

    protected long getApparentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        byte $b0;
        java.util.Date $r2, $r3;
        long $l1, $l2, $l1_1, $l1_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: java.util.Date getDateValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        if $r2 != null goto label1;

        return 2147483648L;

     label1:
        $r3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: java.util.Date getResponseDate()>();

        $l1 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $l2 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l1_1 = $l1 - $l2;

        $b0 = $l1_1 cmp 0L;

        if $b0 < 0 goto label2;

        $l1_2 = $l1_1 / 1000L;

        return $l1_2;

     label2:
        return 0L;
    }

    protected long getContentLengthValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.lang.NumberFormatException $r2;
        ch.boye.httpclientandroidlib.Header $r3;
        java.lang.String $r4;
        long $l0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Content-Length");

        if $r3 != null goto label1;

        return -1L;

     label1:
        $r4 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected long getCorrectedInitialAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        long $l0, $l1, $l0_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $l0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getCorrectedReceivedAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $l1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getResponseDelaySecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $l0_1 = $l0 + $l1;

        return $l0_1;
    }

    protected long getCorrectedReceivedAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        byte $b0;
        long $l1, $l2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $l1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getApparentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $l2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getAgeValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $b0 = $l1 cmp $l2;

        if $b0 <= 0 goto label1;

        return $l1;

     label1:
        return $l2;
    }

    public long getCurrentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.util.Date $r2;
        long $l0, $l1, $l0_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: java.util.Date;

        $l0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getCorrectedInitialAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $l1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getResidentTimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date)>($r1, $r2);

        $l0_1 = $l0 + $l1;

        return $l0_1;
    }

    protected java.util.Date getDateValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.impl.cookie.DateParseException $r2;
        ch.boye.httpclientandroidlib.Header $r3;
        java.lang.String $r4;
        java.util.Date $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Date");

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r5 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>($r4);

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        return null;

        catch ch.boye.httpclientandroidlib.impl.cookie.DateParseException from label1 to label2 with label3;
    }

    protected java.util.Date getExpirationDate(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.impl.cookie.DateParseException $r2;
        ch.boye.httpclientandroidlib.Header $r3;
        java.lang.String $r4;
        java.util.Date $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Expires");

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r5 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>($r4);

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        return null;

        catch ch.boye.httpclientandroidlib.impl.cookie.DateParseException from label1 to label2 with label3;
    }

    public long getFreshnessLifetimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        byte $b0;
        long $l1, $l2, $l1_1, $l1_2, $l1_3;
        java.util.Date $r2, $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $l1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getMaxAge(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $b0 = $l1 cmp -1L;

        if $b0 <= 0 goto label1;

        return $l1;

     label1:
        $r2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: java.util.Date getDateValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        if $r2 != null goto label2;

        return 0L;

     label2:
        $r3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: java.util.Date getExpirationDate(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        if $r3 != null goto label3;

        return 0L;

     label3:
        $l1_1 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $l2 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l1_2 = $l1_1 - $l2;

        $l1_3 = $l1_2 / 1000L;

        return $l1_3;
    }

    public long getHeuristicFreshnessLifetimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, float, long)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        byte $b0;
        float $f0, $f1, $f1_1, $f1_2;
        long $l1, $l2, $l1_1, $l1_2, $l1_3, $l1_4, $l1_5;
        java.util.Date $r2, $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $f1 := @parameter1: float;

        $l1 := @parameter2: long;

        $r2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: java.util.Date getDateValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $r3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: java.util.Date getLastModifiedValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

(0)     if $r2 == null goto label2;

(1)     if $r3 == null goto label2;

        $l1_1 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l2 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $l1_2 = $l1_1 - $l2;

        $b0 = $l1_2 cmp 0L;

        if $b0 >= 0 goto label1;

        return 0L;

     label1:
        $l1_3 = $l1_2 / 1000L;

        $f0 = (float) $l1_3;

        $f1_1 = $f0 * $f1;

(2)     $l1_4 = (long) $f1_1;

     label2:
        $f1_2 = Phi($f1 #0, $f1 #1, $f1_1 #2);

        $l1_5 = Phi($l1 #0, $l1 #1, $l1_4 #2);

        return $l1_5;
    }

    protected java.util.Date getLastModifiedValue(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.impl.cookie.DateParseException $r2;
        ch.boye.httpclientandroidlib.Header $r3;
        java.lang.String $r4;
        java.util.Date $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Last-Modified");

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r5 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>($r4);

     label2:
        return $r5;

     label3:
        $r2 := @caughtexception;

        return null;

        catch ch.boye.httpclientandroidlib.impl.cookie.DateParseException from label1 to label2 with label3;
    }

    protected long getMaxAge(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        int $i0, $i1, $i3, $i4, $i3_1, $i4_1, $i4_2, $i4_3, $i3_2;
        ch.boye.httpclientandroidlib.Header $r2;
        ch.boye.httpclientandroidlib.HeaderElement $r3;
        java.lang.NumberFormatException $r4;
        long $l2, $l5, $l2_1, $l2_2, $l2_3, $l2_4, $l2_5;
        ch.boye.httpclientandroidlib.Header[] $r5;
        ch.boye.httpclientandroidlib.HeaderElement[] $r6;
        java.lang.String $r7, $r8, $r7_1, $r8_1, $r7_2, $r8_2, $r7_3, $r8_3, $r7_4, $r8_4, $r7_5, $r7_6, $r8_5, $r7_7, $r8_6;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6;
        byte $b6, $b6_1, $b6_2, $b6_3, $b6_4, $b6_5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $l2 = -1L;

        $r5 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Cache-Control");

        $i0 = lengthof $r5;

(0)     $i3 = 0;

     label1:
        $b6 = Phi($b6 #0, $b6_1 #10);

        $i3_1 = Phi($i3 #0, $i3_2 #10);

        $r7 = Phi($r7 #0, $r7_1 #10);

        $z0 = Phi($z0 #0, $z0_1 #10);

        $i4 = Phi($i4 #0, $i4_2 #10);

        $l2_1 = Phi($l2 #0, $l2_2 #10);

        $r8 = Phi($r8 #0, $r8_1 #10);

        if $i3_1 >= $i0 goto label9;

        $r2 = $r5[$i3_1];

        $r6 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.Header: ch.boye.httpclientandroidlib.HeaderElement[] getElements()>();

        $i1 = lengthof $r6;

(1)     $i4_1 = 0;

     label2:
        $b6_1 = Phi($b6 #1, $b6_5 #8);

        $r7_1 = Phi($r7 #1, $r7_6 #8);

        $z0_1 = Phi($z0 #1, $z0_5 #8);

        $i4_2 = Phi($i4_1 #1, $i4_3 #8);

        $l2_2 = Phi($l2_1 #1, $l2_4 #8);

        $r8_1 = Phi($r8 #1, $r8_5 #8);

        if $i4_2 >= $i1 goto label8;

        $r3 = $r6[$i4_2];

        $r7_2 = "max-age";

        $r8_2 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $z0_2 = virtualinvoke $r7_2.<java.lang.String: boolean equals(java.lang.Object)>($r8_2);

(2)     if $z0_2 != 0 goto label3;

        $r7_3 = "s-maxage";

        $r8_3 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $z0_3 = virtualinvoke $r7_3.<java.lang.String: boolean equals(java.lang.Object)>($r8_3);

(3)     if $z0_3 == 0 goto label6;

     label3:
        $r7_4 = Phi($r7_2 #2, $r7_3 #3);

        $z0_4 = Phi($z0_2 #2, $z0_3 #3);

        $r8_4 = Phi($r8_2 #2, $r8_3 #3);

(4)     $r7_5 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getValue()>();

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7_5);

     label4:
        $b6_2 = $l2_2 cmp -1L;

(5)     if $b6_2 == 0 goto label5;

        $b6_3 = $l5 cmp $l2_2;

(6)     if $b6_3 >= 0 goto label6;

     label5:
        $b6_4 = Phi($b6_2 #5, $b6_3 #6);

(7)     $l2_3 = $l5;

     label6:
        $b6_5 = Phi($b6_1 #3, $b6_3 #6, $b6_4 #7, $b6_1 #9);

        $r7_6 = Phi($r7_3 #3, $r7_5 #6, $r7_5 #7, $r7_7 #9);

        $z0_5 = Phi($z0_3 #3, $z0_4 #6, $z0_4 #7, $z0_6 #9);

        $l2_4 = Phi($l2_2 #3, $l2_2 #6, $l2_3 #7, $l2_5 #9);

        $r8_5 = Phi($r8_3 #3, $r8_4 #6, $r8_4 #7, $r8_6 #9);

        $i4_3 = $i4_2 + 1;

(8)     goto label2;

     label7:
        $r4 := @caughtexception;

        $r7_7 = Phi($r7_2 #2, $r7_3 #3, $r7_5 #4);

        $z0_6 = Phi($z0_2 #2, $z0_3 #3, $z0_4 #4);

        $r8_6 = Phi($r8_2 #2, $r8_3 #3, $r8_4 #4);

        $l2_5 = 0L;

(9)     goto label6;

     label8:
        $i3_2 = $i3_1 + 1;

(10)    goto label1;

     label9:
        return $l2_1;

        catch java.lang.NumberFormatException from label3 to label4 with label7;
    }

    protected long getResidentTimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.util.Date $r2, $r2_1;
        long $l0, $l1, $l0_1, $l0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: java.util.Date;

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $r2_1 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: java.util.Date getResponseDate()>();

        $l1 = virtualinvoke $r2_1.<java.util.Date: long getTime()>();

        $l0_1 = $l0 - $l1;

        $l0_2 = $l0_1 / 1000L;

        return $l0_2;
    }

    protected long getResponseDelaySecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.util.Date $r2, $r2_1;
        long $l0, $l1, $l0_1, $l0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: java.util.Date getResponseDate()>();

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $r2_1 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: java.util.Date getRequestDate()>();

        $l1 = virtualinvoke $r2_1.<java.util.Date: long getTime()>();

        $l0_1 = $l0 - $l1;

        $l0_2 = $l0_1 / 1000L;

        return $l0_2;
    }

    public long getStalenessSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.util.Date $r2;
        byte $b0;
        long $l1, $l2, $l1_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: java.util.Date;

        $l1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getCurrentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date)>($r1, $r2);

        $l2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getFreshnessLifetimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $b0 = $l1 cmp $l2;

        if $b0 > 0 goto label1;

        return 0L;

     label1:
        $l1_1 = $l1 - $l2;

        return $l1_1;
    }

    public boolean hasCacheControlDirective(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.lang.String)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.lang.String $r2, $r7;
        int $i0, $i1, $i2, $i3, $i2_1, $i3_1, $i3_2, $i3_3, $i2_2;
        ch.boye.httpclientandroidlib.Header $r3;
        ch.boye.httpclientandroidlib.HeaderElement $r4;
        ch.boye.httpclientandroidlib.Header[] $r5;
        ch.boye.httpclientandroidlib.HeaderElement[] $r6;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: java.lang.String;

        $r5 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Cache-Control");

        $i0 = lengthof $r5;

(0)     $i2 = 0;

     label1:
        $i3 = Phi($i3 #0, $i3_2 #3);

        $i2_1 = Phi($i2 #0, $i2_2 #3);

        if $i2_1 >= $i0 goto label5;

        $r3 = $r5[$i2_1];

        $r6 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: ch.boye.httpclientandroidlib.HeaderElement[] getElements()>();

        $i1 = lengthof $r6;

(1)     $i3_1 = 0;

     label2:
        $i3_2 = Phi($i3_1 #1, $i3_3 #2);

        if $i3_2 >= $i1 goto label4;

        $r4 = $r6[$i3_2];

        $r7 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i3_3 = $i3_2 + 1;

(2)     goto label2;

     label4:
        $i2_2 = $i2_1 + 1;

(3)     goto label1;

     label5:
        return 0;
    }

    protected boolean hasContentLengthHeader(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.Header $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Content-Length");

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isResponseFresh(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.util.Date $r2;
        byte $b0;
        long $l1, $l2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: java.util.Date;

        $l1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getCurrentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date)>($r1, $r2);

        $l2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getFreshnessLifetimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r1);

        $b0 = $l1 cmp $l2;

        if $b0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isResponseHeuristicallyFresh(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date, float, long)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.util.Date $r2;
        float $f0;
        byte $b0;
        long $l1, $l2, $l1_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: java.util.Date;

        $f0 := @parameter2: float;

        $l1 := @parameter3: long;

        $l2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getCurrentAgeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date)>($r1, $r2);

        $l1_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getHeuristicFreshnessLifetimeSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,float,long)>($r1, $f0, $l1);

        $b0 = $l2 cmp $l1_1;

        if $b0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRevalidatable(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.Header $r2, $r2_1, $r2_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("ETag");

(0)     if $r2 != null goto label1;

        $r2_1 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Last-Modified");

(1)     if $r2_1 == null goto label2;

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        return 1;

     label2:
        return 0;
    }

    public boolean mayReturnStaleIfError(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r2;
        java.util.Date $r3;
        long $l0;
        ch.boye.httpclientandroidlib.Header[] $r4, $r4_1, $r4_2;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r3 := @parameter2: java.util.Date;

        $l0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getStalenessSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date)>($r2, $r3);

        $r4 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Cache-Control");

        $z0 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: boolean mayReturnStaleIfError(ch.boye.httpclientandroidlib.Header[],long)>($r4, $l0);

(0)     if $z0 != 0 goto label1;

        $r4_1 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Cache-Control");

        $z0_1 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: boolean mayReturnStaleIfError(ch.boye.httpclientandroidlib.Header[],long)>($r4_1, $l0);

(1)     if $z0_1 == 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return 1;

     label2:
        return 0;
    }

    public boolean mayReturnStaleWhileRevalidating(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        java.util.Date $r2;
        int $i0, $i1, $i3, $i4, $i5, $i3_1, $i4_1, $i4_2, $i4_3, $i3_2;
        ch.boye.httpclientandroidlib.Header $r3;
        ch.boye.httpclientandroidlib.HeaderElement $r4;
        byte $b2;
        java.lang.NumberFormatException $r5;
        ch.boye.httpclientandroidlib.Header[] $r6;
        ch.boye.httpclientandroidlib.HeaderElement[] $r7;
        java.lang.String $r8, $r9, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5;
        boolean $z0;
        long $l6, $l7;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: java.util.Date;

        $r6 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Cache-Control");

        $i0 = lengthof $r6;

(0)     $i3 = 0;

     label1:
        $i4 = Phi($i4 #0, $i4_2 #7);

        $r8 = Phi($r8 #0, $r8_1 #7);

        $i3_1 = Phi($i3 #0, $i3_2 #7);

        if $i3_1 >= $i0 goto label8;

        $r3 = $r6[$i3_1];

        $r7 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: ch.boye.httpclientandroidlib.HeaderElement[] getElements()>();

        $i1 = lengthof $r7;

(1)     $i4_1 = 0;

     label2:
        $i4_2 = Phi($i4_1 #1, $i4_3 #6);

        $r8_1 = Phi($r8 #1, $r8_5 #6);

        if $i4_2 >= $i1 goto label7;

        $r4 = $r7[$i4_2];

        $r8_2 = "stale-while-revalidate";

        $r9 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $z0 = virtualinvoke $r8_2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

(2)     if $z0 == 0 goto label6;

     label3:
(3)     $r8_3 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getValue()>();

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8_3);

        $l6 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: long getStalenessSecs(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.util.Date)>($r1, $r2);

     label4:
        $l7 = (long) $i5;

        $b2 = $l6 cmp $l7;

(4)     if $b2 > 0 goto label6;

        return 1;

     label5:
        $r5 := @caughtexception;

(5)     $r8_4 = Phi($r8_2 #2, $r8_3 #3);

     label6:
        $r8_5 = Phi($r8_2 #2, $r8_3 #4, $r8_4 #5);

        $i4_3 = $i4_2 + 1;

(6)     goto label2;

     label7:
        $i3_2 = $i3_1 + 1;

(7)     goto label1;

     label8:
        return 0;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public boolean mustRevalidate(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $z0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: boolean hasCacheControlDirective(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.lang.String)>($r1, "must-revalidate");

        return $z0;
    }

    public boolean proxyRevalidate(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $z0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheValidityPolicy: boolean hasCacheControlDirective(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,java.lang.String)>($r1, "proxy-revalidate");

        return $z0;
    }
}
