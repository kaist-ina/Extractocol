public class ch.boye.httpclientandroidlib.entity.StringEntity extends ch.boye.httpclientandroidlib.entity.AbstractHttpEntity implements java.lang.Cloneable
{
    protected final byte[] content;

    public void <init>(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        java.lang.String $r1;
        ch.boye.httpclientandroidlib.entity.ContentType $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 = <ch.boye.httpclientandroidlib.entity.ContentType: ch.boye.httpclientandroidlib.entity.ContentType DEFAULT_TEXT>;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: void <init>(java.lang.String,ch.boye.httpclientandroidlib.entity.ContentType)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.String, ch.boye.httpclientandroidlib.entity.ContentType)
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        ch.boye.httpclientandroidlib.entity.ContentType $r1;
        java.lang.IllegalArgumentException $r2;
        java.io.UnsupportedEncodingException $r3;
        java.nio.charset.UnsupportedCharsetException $r4;
        java.lang.String $r5, $r7, $r5_1, $r5_2;
        java.nio.charset.Charset $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5;
        byte[] $r8;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r5 := @parameter0: java.lang.String;

        $r1 := @parameter1: ch.boye.httpclientandroidlib.entity.ContentType;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.entity.AbstractHttpEntity: void <init>()>();

        if $r5 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source string may not be null");

        throw $r2;

     label1:
        if $r1 == null goto label5;

(0)     $r6 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.entity.ContentType: java.nio.charset.Charset getCharset()>();

     label2:
        $r6_1 = Phi($r6 #0, $r6_5 #4);

(1)     if $r6_1 != null goto label3;

(2)     $r6_2 = <ch.boye.httpclientandroidlib.protocol.HTTP: java.nio.charset.Charset DEF_CONTENT_CHARSET>;

     label3:
        $r6_3 = Phi($r6_1 #1, $r6_2 #2);

(3)     $r7 = virtualinvoke $r6_3.<java.nio.charset.Charset: java.lang.String name()>();

        $r8 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>($r7);

     label4:
        $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: byte[] content> = $r8;

        if $r1 == null goto label7;

        $r5_1 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.entity.ContentType: java.lang.String toString()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: void setContentType(java.lang.String)>($r5_1);

        return;

     label5:
        $r6_5 = null;

(4)     goto label2;

     label6:
        $r3 := @caughtexception;

        $r6_4 = Phi($r6_1 #1, $r6_2 #2, $r6_3 #3);

        $r4 = new java.nio.charset.UnsupportedCharsetException;

        $r5_2 = virtualinvoke $r6_4.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r4.<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>($r5_2);

        throw $r4;

     label7:
        return;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        java.lang.String $r1, $r2, $r4;
        ch.boye.httpclientandroidlib.entity.ContentType $r3, $r3_1;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = <ch.boye.httpclientandroidlib.entity.ContentType: ch.boye.httpclientandroidlib.entity.ContentType TEXT_PLAIN>;

        $r4 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.entity.ContentType: java.lang.String getMimeType()>();

        $r3_1 = staticinvoke <ch.boye.httpclientandroidlib.entity.ContentType: ch.boye.httpclientandroidlib.entity.ContentType create(java.lang.String,java.lang.String)>($r4, $r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: void <init>(java.lang.String,ch.boye.httpclientandroidlib.entity.ContentType)>($r1, $r3_1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, $r3, $r4, $r3_1, $r3_2, $r4_1, $r4_2, $r2_1;
        byte[] $r5;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.lang.String;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.entity.AbstractHttpEntity: void <init>()>();

        if $r2 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source string may not be null");

        throw $r1;

     label1:
(0)     if $r3 != null goto label2;

(1)     $r3_1 = "text/plain";

     label2:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

(2)     if $r4 != null goto label3;

(3)     $r4_1 = "ISO-8859-1";

     label3:
        $r4_2 = Phi($r4 #2, $r4_1 #3);

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r4_2);

        $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: byte[] content> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3_2);

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=");

        $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_2);

        $r2_1 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: void setContentType(java.lang.String)>($r2_1);

        return;
    }

    public void <init>(java.lang.String, java.nio.charset.Charset)
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        java.lang.String $r1, $r4;
        java.nio.charset.Charset $r2;
        ch.boye.httpclientandroidlib.entity.ContentType $r3, $r3_1;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        $r3 = <ch.boye.httpclientandroidlib.entity.ContentType: ch.boye.httpclientandroidlib.entity.ContentType TEXT_PLAIN>;

        $r4 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.entity.ContentType: java.lang.String getMimeType()>();

        $r3_1 = staticinvoke <ch.boye.httpclientandroidlib.entity.ContentType: ch.boye.httpclientandroidlib.entity.ContentType create(java.lang.String,java.nio.charset.Charset)>($r4, $r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: void <init>(java.lang.String,ch.boye.httpclientandroidlib.entity.ContentType)>($r1, $r3_1);

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        java.lang.Object $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public java.io.InputStream getContent() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: byte[] content>;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r1;
    }

    public long getContentLength()
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        byte[] $r1;
        int $i0;
        long $l1;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r1 = $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: byte[] content>;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        return $l1;
    }

    public boolean isRepeatable()
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        return 1;
    }

    public boolean isStreaming()
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        return 0;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.entity.StringEntity $r0;
        java.io.OutputStream $r1;
        java.lang.IllegalArgumentException $r2;
        byte[] $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.entity.StringEntity;

        $r1 := @parameter0: java.io.OutputStream;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        throw $r2;

     label1:
        $r3 = $r0.<ch.boye.httpclientandroidlib.entity.StringEntity: byte[] content>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r3);

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }
}
