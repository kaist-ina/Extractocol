public abstract class com.stripe.net.APIResource extends com.stripe.model.StripeObject
{
    public static final java.lang.String CHARSET;
    private static final java.lang.String CUSTOM_URL_STREAM_HANDLER_PROPERTY_NAME;
    private static final java.lang.String DNS_CACHE_TTL_PROPERTY_NAME;
    public static final com.google.gson.Gson gson;

    static void <clinit>()
    {
        com.google.gson.FieldNamingPolicy $r0;
        com.stripe.model.EventDataDeserializer $r1;
        com.google.gson.GsonBuilder $r2, $r2_1, $r2_2;
        com.google.gson.Gson $r3;

        $r2 = new com.google.gson.GsonBuilder;

        specialinvoke $r2.<com.google.gson.GsonBuilder: void <init>()>();

        $r0 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES>;

        $r2_1 = virtualinvoke $r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)>($r0);

        $r1 = new com.stripe.model.EventDataDeserializer;

        specialinvoke $r1.<com.stripe.model.EventDataDeserializer: void <init>()>();

        $r2_2 = virtualinvoke $r2_1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>(class "com/stripe/model/EventData", $r1);

        $r3 = virtualinvoke $r2_2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>();

        <com.stripe.net.APIResource: com.google.gson.Gson gson> = $r3;

        return;
    }

    public void <init>()
    {
        com.stripe.net.APIResource $r0;

        $r0 := @this: com.stripe.net.APIResource;

        specialinvoke $r0.<com.stripe.model.StripeObject: void <init>()>();

        return;
    }

    protected static java.lang.Object _request(com.stripe.net.APIResource$RequestMethod, java.lang.String, java.util.Map, java.lang.Class, java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        com.stripe.net.APIResource$RequestMethod $r0;
        java.util.Map $r1;
        java.lang.Class $r2;
        com.stripe.exception.AuthenticationException $r3;
        com.google.gson.Gson $r4;
        java.io.UnsupportedEncodingException $r5;
        com.stripe.exception.InvalidRequestException $r6;
        java.lang.ClassCastException $r7;
        java.lang.String $r8, $r9, $r10, $r13, $r10_1, $r10_2, $r10_3, $r9_1, $r9_2, $r10_4, $r8_1, $r9_3, $r10_5;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        com.stripe.net.StripeResponse $r11, $r11_1, $r11_2, $r11_3;
        java.lang.Object $r12;

        $r0 := @parameter0: com.stripe.net.APIResource$RequestMethod;

        $r8 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.util.Map;

        $r2 := @parameter3: java.lang.Class;

        $r9 := @parameter4: java.lang.String;

        $r10 = <com.stripe.Stripe: java.lang.String apiKey>;

(0)     if $r10 == null goto label01;

        $r10_1 = <com.stripe.Stripe: java.lang.String apiKey>;

        $i0 = virtualinvoke $r10_1.<java.lang.String: int length()>();

(1)     if $i0 != 0 goto label03;

     label01:
        $i0_1 = Phi($i0 #0, $i0 #1);

        $r10_2 = Phi($r10 #0, $r10_1 #1);

(2)     if $r9 == null goto label02;

        $i0_2 = virtualinvoke $r9.<java.lang.String: int length()>();

(3)     if $i0_2 != 0 goto label03;

     label02:
        $i0_3 = Phi($i0_1 #2, $i0_2 #3);

        $r3 = new com.stripe.exception.AuthenticationException;

        specialinvoke $r3.<com.stripe.exception.AuthenticationException: void <init>(java.lang.String)>("No API key provided. (HINT: set your API key using \'Stripe.apiKey = <API-KEY>\'. You can generate API keys from the Stripe web interface. See https://stripe.com/api for details or email support@stripe.com if you have questions.");

        throw $r3;

     label03:
        $i0_4 = Phi($i0 #1, $i0_2 #3);

        $r10_3 = Phi($r10_1 #1, $r10_2 #3);

(4)     if $r9 != null goto label04;

(5)     $r9_1 = <com.stripe.Stripe: java.lang.String apiKey>;

     label04:
        $r9_2 = Phi($r9 #4, $r9_1 #5);

(6)     $r10_4 = staticinvoke <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)>($r1);

     label05:
(7)     $r11 = staticinvoke <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String,java.lang.String)>($r0, $r8, $r10_4, $r9_2);

     label06:
        $r11_1 = Phi($r11 #7, $r11_3 #8);

        $i0_5 = $r11_1.<com.stripe.net.StripeResponse: int responseCode>;

        $r8_1 = $r11_1.<com.stripe.net.StripeResponse: java.lang.String responseBody>;

        if $i0_5 < 200 goto label07;

        if $i0_5 < 300 goto label08;

     label07:
        staticinvoke <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)>($r8_1, $i0_5);

     label08:
        $r4 = <com.stripe.net.APIResource: com.google.gson.Gson gson>;

        $r12 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>($r8_1, $r2);

        return $r12;

     label09:
        $r5 := @caughtexception;

        $r9_3 = Phi($r9 #4, $r9_1 #5, $r9_2 #6);

        $r10_5 = Phi($r10_3 #4, $r10_4 #6);

        $r6 = new com.stripe.exception.InvalidRequestException;

        specialinvoke $r6.<com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>("Unable to encode parameters to UTF-8. Please contact support@stripe.com for assistance.", null, $r5);

        throw $r6;

     label10:
        $r7 := @caughtexception;

        $r11_2 = Phi($r11 #6);

        $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("com.google.appengine.runtime.environment", null);

        if $r13 == null goto label11;

        $r11_3 = staticinvoke <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String,java.lang.String)>($r0, $r8, $r10_4, $r9_2);

(8)     goto label06;

     label11:
        throw $r7;

        catch java.io.UnsupportedEncodingException from label04 to label05 with label09;
        catch java.lang.ClassCastException from label05 to label06 with label10;
    }

    private static java.lang.String className(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r1_1, $r1_2;

        $r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $r1_1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r1_2 = virtualinvoke $r1_1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("$", "");

        return $r1_2;
    }

    protected static java.lang.String classURL(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r2_1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <com.stripe.net.APIResource: java.lang.String singleClassURL(java.lang.Class)>($r0);

        $r1[0] = $r2;

        $r2_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%ss", $r1);

        return $r2_1;
    }

    private static javax.net.ssl.HttpsURLConnection createDeleteConnection(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1, $r3, $r3_1;
        java.lang.Object[] $r2;
        javax.net.ssl.HttpsURLConnection $r4;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r3;

        $r2[1] = $r0;

        $r3_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?%s", $r2);

        $r4 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String,java.lang.String)>($r3_1, $r1);

        virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>("DELETE");

        return $r4;
    }

    private static javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1, $r3, $r3_1;
        java.lang.Object[] $r2;
        javax.net.ssl.HttpsURLConnection $r4;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r3;

        $r2[1] = $r0;

        $r3_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?%s", $r2);

        $r4 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String,java.lang.String)>($r3_1, $r1);

        virtualinvoke $r4.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>("GET");

        return $r4;
    }

    private static javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1, $r4, $r4_1;
        java.lang.Object[] $r2;
        java.lang.Throwable $r3;
        javax.net.ssl.HttpsURLConnection $r5;
        java.io.OutputStream $r6, $r7, $r6_1, $r6_2;
        byte[] $r8;

        $r4 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r5 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String,java.lang.String)>($r4, $r1);

        virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "UTF-8";

        $r4_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("application/x-www-form-urlencoded;charset=%s", $r2);

        virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r4_1);

(0)     $r6 = null;

     label1:
        $r7 = virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>();

     label2:
(1)     $r6_1 = $r7;

     label3:
        $r8 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r8);

     label4:
        if $r7 == null goto label7;

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

        return $r5;

     label5:
        $r3 := @caughtexception;

        $r6_2 = Phi($r6 #0, $r6_1 #1);

        if $r6_2 == null goto label6;

        virtualinvoke $r6_2.<java.io.OutputStream: void close()>();

     label6:
        throw $r3;

     label7:
        return $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static java.lang.String createQuery(java.util.Map) throws java.io.UnsupportedEncodingException
    {
        java.lang.StringBuffer $r0;
        java.util.Map $r1, $r1_1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r4_1, $r4_2, $r4_3;
        java.util.Map$Entry $r5;
        java.lang.String $r6, $r7, $r6_1, $r6_2, $r6_3;
        int $i0;

        $r1 := @parameter0: java.util.Map;

        $r1_1 = staticinvoke <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>($r1);

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke $r1_1.<java.util.Map: java.util.Set entrySet()>();

(0)     $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r6 = Phi($r6 #0, $r6_2 #1);

        $r4 = Phi($r4 #0, $r4_3 #1);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4_1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4_1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        $r4_2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6_1 = (java.lang.String) $r4_2;

        $r4_3 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r4_3;

        $r6_2 = staticinvoke <com.stripe.net.APIResource: java.lang.String urlEncodePair(java.lang.String,java.lang.String)>($r6_1, $r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6_2);

(1)     goto label1;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(0);

     label3:
        $r6_3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6_3;
    }

    private static javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.Class[] $r0;
        java.lang.Object[] $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.SecurityException $r3;
        java.lang.NoSuchMethodException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.InstantiationException $r6;
        java.lang.IllegalAccessException $r7;
        java.lang.reflect.InvocationTargetException $r8;
        java.lang.String $r9, $r10, $r11, $r10_1, $r9_1, $r9_2, $r10_2;
        java.lang.Class $r12;
        java.lang.reflect.Constructor $r13;
        java.lang.Object $r14, $r14_1, $r14_2, $r14_3, $r14_4, $r14_5, $r14_6, $r14_7, $r14_8, $r14_9, $r14_10, $r14_11, $r14_12;
        java.net.URLStreamHandler $r15;
        java.net.URL $r16, $r16_1, $r16_2, $r16_3, $r16_4, $r16_5, $r16_6, $r16_7, $r16_8, $r16_9;
        java.net.URLConnection $r17;
        javax.net.ssl.HttpsURLConnection $r18;
        java.util.Map $r19;
        java.util.Set $r20;
        java.util.Iterator $r21;
        boolean $z0;
        java.util.Map$Entry $r22;
        java.io.IOException $r23, $r23_1, $r23_2, $r23_3, $r23_4, $r23_5, $r23_6;

        $r9 := @parameter0: java.lang.String;

        $r10 := @parameter1: java.lang.String;

        $r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("com.stripe.net.customURLStreamHandler", null);

(0)     if $r11 == null goto label17;

     label01:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r11);

     label02:
        $r0 = newarray (java.lang.Class)[0];

     label03:
        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r0);

     label04:
        $r1 = newarray (java.lang.Object)[0];

     label05:
        $r14 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r1);

     label06:
        $r15 = (java.net.URLStreamHandler) $r14;

        $r16 = new java.net.URL;

     label07:
(1)     specialinvoke $r16.<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>(null, $r9, $r15);

     label08:
        $r16_1 = Phi($r16 #1, $r16_9 #4);

        $r14_1 = Phi($r14 #1, $r14 #4);

        $r17 = virtualinvoke $r16_1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r18 = (javax.net.ssl.HttpsURLConnection) $r17;

        virtualinvoke $r18.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>(30000);

        virtualinvoke $r18.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>(80000);

        virtualinvoke $r18.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>(0);

        $r19 = staticinvoke <com.stripe.net.APIResource: java.util.Map getHeaders(java.lang.String)>($r10);

        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>();

(2)     $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $r10_1 = Phi($r10 #2, $r10_2 #3);

        $r14_2 = Phi($r14_1 #2, $r14_5 #3);

        $r9_1 = Phi($r9 #2, $r9_2 #3);

        $z0 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r14_3 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (java.util.Map$Entry) $r14_3;

        $r14_4 = interfaceinvoke $r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9_2 = (java.lang.String) $r14_4;

        $r14_5 = interfaceinvoke $r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10_2 = (java.lang.String) $r14_5;

        virtualinvoke $r18.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r9_2, $r10_2);

(3)     goto label09;

     label10:
        $r2 := @caughtexception;

        $r16_2 = Phi($r16 #0);

        $r14_6 = Phi($r14 #0);

        $r23 = new java.io.IOException;

        specialinvoke $r23.<java.io.IOException: void <init>(java.lang.Throwable)>($r2);

        throw $r23;

     label11:
        $r3 := @caughtexception;

        $r16_3 = Phi($r16 #0);

        $r14_7 = Phi($r14 #0);

        $r23_1 = new java.io.IOException;

        specialinvoke $r23_1.<java.io.IOException: void <init>(java.lang.Throwable)>($r3);

        throw $r23_1;

     label12:
        $r4 := @caughtexception;

        $r16_4 = Phi($r16 #0);

        $r14_8 = Phi($r14 #0);

        $r23_2 = new java.io.IOException;

        specialinvoke $r23_2.<java.io.IOException: void <init>(java.lang.Throwable)>($r4);

        throw $r23_2;

     label13:
        $r5 := @caughtexception;

        $r16_5 = Phi($r16 #0);

        $r14_9 = Phi($r14 #0);

        $r23_3 = new java.io.IOException;

        specialinvoke $r23_3.<java.io.IOException: void <init>(java.lang.Throwable)>($r5);

        throw $r23_3;

     label14:
        $r6 := @caughtexception;

        $r16_6 = Phi($r16 #0);

        $r14_10 = Phi($r14 #0);

        $r23_4 = new java.io.IOException;

        specialinvoke $r23_4.<java.io.IOException: void <init>(java.lang.Throwable)>($r6);

        throw $r23_4;

     label15:
        $r7 := @caughtexception;

        $r16_7 = Phi($r16 #0);

        $r14_11 = Phi($r14 #0);

        $r23_5 = new java.io.IOException;

        specialinvoke $r23_5.<java.io.IOException: void <init>(java.lang.Throwable)>($r7);

        throw $r23_5;

     label16:
        $r8 := @caughtexception;

        $r16_8 = Phi($r16 #0);

        $r14_12 = Phi($r14 #0);

        $r23_6 = new java.io.IOException;

        specialinvoke $r23_6.<java.io.IOException: void <init>(java.lang.Throwable)>($r8);

        throw $r23_6;

     label17:
        $r16_9 = new java.net.URL;

        specialinvoke $r16_9.<java.net.URL: void <init>(java.lang.String)>($r9);

(4)     goto label08;

     label18:
        return $r18;

        catch java.lang.ClassNotFoundException from label01 to label02 with label10;
        catch java.lang.SecurityException from label01 to label02 with label11;
        catch java.lang.NoSuchMethodException from label01 to label02 with label12;
        catch java.lang.IllegalArgumentException from label01 to label02 with label13;
        catch java.lang.InstantiationException from label01 to label02 with label14;
        catch java.lang.IllegalAccessException from label01 to label02 with label15;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label16;
        catch java.lang.ClassNotFoundException from label03 to label04 with label10;
        catch java.lang.SecurityException from label03 to label04 with label11;
        catch java.lang.NoSuchMethodException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label03 to label04 with label13;
        catch java.lang.InstantiationException from label03 to label04 with label14;
        catch java.lang.IllegalAccessException from label03 to label04 with label15;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label16;
        catch java.lang.ClassNotFoundException from label05 to label06 with label10;
        catch java.lang.SecurityException from label05 to label06 with label11;
        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.IllegalArgumentException from label05 to label06 with label13;
        catch java.lang.InstantiationException from label05 to label06 with label14;
        catch java.lang.IllegalAccessException from label05 to label06 with label15;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label16;
        catch java.lang.ClassNotFoundException from label07 to label08 with label10;
        catch java.lang.SecurityException from label07 to label08 with label11;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
        catch java.lang.IllegalArgumentException from label07 to label08 with label13;
        catch java.lang.InstantiationException from label07 to label08 with label14;
        catch java.lang.IllegalAccessException from label07 to label08 with label15;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label16;
    }

    private static java.util.Map flattenParams(java.util.Map)
    {
        java.util.HashMap $r0, $r8, $r0_1;
        java.lang.Object[] $r1;
        java.util.Map $r2, $r2_1, $r2_2, $r2_3;
        java.util.Set $r3, $r3_1, $r3_2;
        java.util.Iterator $r4, $r9;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7;
        java.util.Map$Entry $r6, $r6_1, $r6_2, $r6_3;
        java.lang.String $r7, $r10, $r10_1, $r10_2, $r10_3;

        $r2 := @parameter0: java.util.Map;

        if $r2 != null goto label1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return $r0;

     label1:
        $r0_1 = new java.util.HashMap;

        specialinvoke $r0_1.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

(0)     $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $r5 = Phi($r5 #0, $r5_4 #3, $r5_3 #4, $r5_3 #5);

        $r2_1 = Phi($r2 #0, $r2_3 #3, $r2_1 #4, $r2_1 #5);

        $z0 = Phi($z0 #0, $z0_4 #3, $z0_2 #4, $z0_2 #5);

        $r6 = Phi($r6 #0, $r6_2 #3, $r6_1 #4, $r6_1 #5);

        $r10 = Phi($r10 #0, $r10_1 #3, $r10 #4, $r10_3 #5);

        $r3_1 = Phi($r3 #0, $r3_2 #3, $r3_1 #4, $r3_1 #5);

        $z0_1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label6;

        $r5_1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6_1 = (java.util.Map$Entry) $r5_1;

        $r5_2 = interfaceinvoke $r6_1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5_2;

        $r5_3 = interfaceinvoke $r6_1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0_2 = $r5_3 instanceof java.util.Map;

        if $z0_2 == 0 goto label5;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r2_2 = (java.util.Map) $r5_3;

        $r3_2 = interfaceinvoke $r2_2.<java.util.Map: java.util.Set entrySet()>();

(1)     $r9 = interfaceinvoke $r3_2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $r5_4 = Phi($r5_3 #1, $r5_7 #2);

        $z0_3 = Phi($z0_2 #1, $z0_4 #2);

        $r6_2 = Phi($r6_1 #1, $r6_3 #2);

        $r10_1 = Phi($r10 #1, $r10_2 #2);

        $z0_4 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0_4 == 0 goto label4;

        $r5_5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r6_3 = (java.util.Map$Entry) $r5_5;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = $r7;

        $r5_6 = interfaceinvoke $r6_3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1[1] = $r5_6;

        $r10_2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s[%s]", $r1);

        $r5_7 = interfaceinvoke $r6_3.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10_2, $r5_7);

(2)     goto label3;

     label4:
        $r2_3 = staticinvoke <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>($r8);

        interfaceinvoke $r0_1.<java.util.Map: void putAll(java.util.Map)>($r2_3);

(3)     goto label2;

     label5:
(4)     if $r5_3 == null goto label2;

        $r10_3 = virtualinvoke $r5_3.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r0_1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10_3);

(5)     goto label2;

     label6:
        return $r0_1;
    }

    static java.util.Map getHeaders(java.lang.String)
    {
        java.util.HashMap $r0, $r2;
        java.lang.String[] $r1;
        int $i0, $i1, $i1_1, $i1_2;
        com.google.gson.Gson $r3;
        java.lang.String $r4, $r6, $r4_1, $r4_2, $r4_3, $r6_1, $r4_4, $r4_5, $r6_2, $r4_6, $r4_7, $r4_8, $r4_9;
        java.lang.Object[] $r5, $r5_1;

        $r4 := @parameter0: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Charset", "UTF-8");

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "1.1.15";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Stripe/v1 JavaBindings/%s", $r5);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("User-Agent", $r6);

(0)     if $r4 != null goto label1;

(1)     $r4_1 = <com.stripe.Stripe: java.lang.String apiKey>;

     label1:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r5_1 = newarray (java.lang.Object)[1];

        $r5_1[0] = $r4_2;

        $r4_3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Bearer %s", $r5_1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Authorization", $r4_3);

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = "os.name";

        $r1[1] = "os.version";

        $r1[2] = "os.arch";

        $r1[3] = "java.version";

        $r1[4] = "java.vendor";

        $r1[5] = "java.vm.version";

        $r1[6] = "java.vm.vendor";

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $i0 = lengthof $r1;

(2)     $i1 = 0;

     label2:
        $r6_1 = Phi($r6 #2, $r6_2 #3);

        $i1_1 = Phi($i1 #2, $i1_2 #3);

        $r4_4 = Phi($r4_3 #2, $r4_5 #3);

        if $i1_1 >= $i0 goto label3;

        $r4_5 = $r1[$i1_1];

        $r6_2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r4_5);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4_5, $r6_2);

        $i1_2 = $i1_1 + 1;

(3)     goto label2;

     label3:
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bindings.version", "1.1.15");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lang", "Java");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("publisher", "Stripe");

        $r3 = <com.stripe.net.APIResource: com.google.gson.Gson gson>;

        $r4_6 = virtualinvoke $r3.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r2);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Stripe-Client-User-Agent", $r4_6);

        $r4_7 = <com.stripe.Stripe: java.lang.String apiVersion>;

(4)     if $r4_7 == null goto label4;

        $r4_8 = <com.stripe.Stripe: java.lang.String apiVersion>;

(5)     interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Stripe-Version", $r4_8);

     label4:
        $r4_9 = Phi($r4_7 #4, $r4_8 #5);

        return $r0;
    }

    private static java.lang.String getResponseBody(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.util.Scanner $r1, $r1_1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new java.util.Scanner;

        specialinvoke $r1.<java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>($r0, "UTF-8");

        $r1_1 = virtualinvoke $r1.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("\\A");

        $r2 = virtualinvoke $r1_1.<java.util.Scanner: java.lang.String next()>();

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return $r2;
    }

    private static void handleAPIError(java.lang.String, int) throws com.stripe.exception.InvalidRequestException, com.stripe.exception.AuthenticationException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        int $i0;
        com.google.gson.Gson $r0;
        com.stripe.exception.APIException $r1;
        com.stripe.exception.AuthenticationException $r2;
        com.stripe.exception.CardException $r3;
        java.lang.String $r4, $r9, $r10, $r4_1, $r4_2, $r4_3, $r9_1, $r4_4, $r9_2, $r4_5;
        java.lang.Object $r5;
        com.stripe.net.APIResource$ErrorContainer $r6;
        com.stripe.net.APIResource$Error $r7;
        com.stripe.exception.InvalidRequestException $r8, $r8_1;

        $r4 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r0 = <com.stripe.net.APIResource: com.google.gson.Gson gson>;

        $r5 = virtualinvoke $r0.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>($r4, class "com/stripe/net/APIResource$ErrorContainer");

        $r6 = (com.stripe.net.APIResource$ErrorContainer) $r5;

        $r7 = staticinvoke <com.stripe.net.APIResource$ErrorContainer: com.stripe.net.APIResource$Error access$000(com.stripe.net.APIResource$ErrorContainer)>($r6);

        lookupswitch($i0)
        {
            case 400: goto label3;
            case 401: goto label5;
            case 402: goto label6;
            case 403: goto label2;
            case 404: goto label4;
            default: goto label1;
        };

     label1:
        goto label2;

     label2:
        $r1 = new com.stripe.exception.APIException;

        $r4_1 = $r7.<com.stripe.net.APIResource$Error: java.lang.String message>;

        specialinvoke $r1.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>($r4_1, null);

        throw $r1;

     label3:
        $r8 = new com.stripe.exception.InvalidRequestException;

        $r4_2 = $r7.<com.stripe.net.APIResource$Error: java.lang.String message>;

        $r9 = $r7.<com.stripe.net.APIResource$Error: java.lang.String param>;

        specialinvoke $r8.<com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r4_2, $r9, null);

        throw $r8;

     label4:
        $r8_1 = new com.stripe.exception.InvalidRequestException;

        $r4_3 = $r7.<com.stripe.net.APIResource$Error: java.lang.String message>;

        $r9_1 = $r7.<com.stripe.net.APIResource$Error: java.lang.String param>;

        specialinvoke $r8_1.<com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r4_3, $r9_1, null);

        throw $r8_1;

     label5:
        $r2 = new com.stripe.exception.AuthenticationException;

        $r4_4 = $r7.<com.stripe.net.APIResource$Error: java.lang.String message>;

        specialinvoke $r2.<com.stripe.exception.AuthenticationException: void <init>(java.lang.String)>($r4_4);

        throw $r2;

     label6:
        $r3 = new com.stripe.exception.CardException;

        $r9_2 = $r7.<com.stripe.net.APIResource$Error: java.lang.String message>;

        $r4_5 = $r7.<com.stripe.net.APIResource$Error: java.lang.String code>;

        $r10 = $r7.<com.stripe.net.APIResource$Error: java.lang.String param>;

        specialinvoke $r3.<com.stripe.exception.CardException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r9_2, $r4_5, $r10, null);

        throw $r3;
    }

    protected static java.lang.String instanceURL(java.lang.Class, java.lang.String)
    {
        java.lang.Class $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r2_1;

        $r0 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>($r0);

        $r1[0] = $r3;

        $r1[1] = $r2;

        $r2_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s", $r1);

        return $r2_1;
    }

    private static com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod, java.lang.String, java.lang.String, java.lang.String) throws com.stripe.exception.APIException
    {
        com.stripe.net.APIResource$RequestMethod $r0, $r19, $r19_1, $r19_2, $r19_3, $r19_4, $r19_5, $r19_6, $r19_7, $r19_8, $r19_9, $r19_10, $r19_11, $r19_12, $r19_13, $r19_14;
        java.lang.String $r1, $r2, $r18, $r18_1, $r18_2, $r18_3, $r18_4, $r18_5, $r18_6, $r18_7, $r18_8, $r18_9, $r18_10, $r18_11, $r18_12, $r18_13, $r18_14;
        java.net.URL $r3;
        java.lang.Double $r4;
        java.lang.reflect.InvocationTargetException $r5;
        java.lang.NoSuchMethodException $r6, $r12;
        java.io.PrintStream $r7;
        com.stripe.net.StripeResponse $r8;
        java.net.MalformedURLException $r9;
        java.lang.NoSuchFieldException $r10;
        java.lang.SecurityException $r11;
        java.lang.ClassNotFoundException $r13;
        java.lang.IllegalArgumentException $r14;
        java.lang.IllegalAccessException $r15;
        java.lang.InstantiationException $r16;
        java.io.UnsupportedEncodingException $r17;
        java.lang.Object[] $r20, $r20_1, $r20_2, $r20_3, $r20_4, $r20_5, $r20_6, $r20_7, $r20_8, $r20_9, $r20_10, $r20_11, $r20_12, $r20_13, $r20_14, $r20_15, $r20_16, $r20_17, $r20_18, $r20_19, $r20_20, $r20_21, $r20_22, $r20_23, $r20_24, $r20_25, $r20_26;
        java.lang.Class $r21, $r24, $r28, $r24_1, $r21_1, $r21_2, $r21_3, $r21_4, $r24_2, $r24_3, $r24_4, $r21_5, $r24_5, $r21_6, $r24_6, $r21_7, $r24_7, $r21_8, $r24_8, $r21_9, $r24_9, $r21_10, $r24_10, $r21_11, $r24_11, $r21_12, $r24_12, $r21_13, $r24_13, $r21_14;
        java.lang.reflect.Field $r22;
        java.lang.Object $r23, $r27, $r27_1, $r23_1, $r27_2, $r27_3, $r27_4, $r27_5, $r27_6, $r27_7, $r23_2, $r27_8, $r23_3, $r27_9, $r27_10, $r27_11, $r23_4, $r27_12, $r23_5, $r27_13, $r23_6, $r27_14, $r23_7, $r27_15, $r23_8, $r27_16, $r23_9, $r27_17, $r23_10, $r27_18, $r23_11, $r27_19, $r23_12, $r27_20, $r23_13;
        java.lang.Class[] $r25, $r25_1, $r25_2, $r25_3, $r25_4, $r25_5, $r25_6, $r25_7, $r25_8, $r25_9, $r25_10, $r25_11, $r25_12, $r25_13, $r25_14, $r25_15, $r25_16, $r25_17, $r25_18, $r25_19, $r25_20, $r25_21, $r25_22, $r25_23;
        java.lang.reflect.Method $r26, $r26_1, $r26_2, $r26_3, $r26_4, $r26_5, $r26_6, $r26_7, $r26_8, $r26_9, $r26_10, $r26_11, $r26_12, $r26_13, $r26_14, $r26_15, $r26_16, $r26_17, $r26_18, $r26_19, $r26_20, $r26_21, $r26_22;
        java.lang.reflect.Constructor $r29, $r29_1, $r29_2, $r29_3, $r29_4, $r29_5, $r29_6, $r29_7, $r29_8, $r29_9, $r29_10, $r29_11, $r29_12;
        byte[] $r30, $r30_1, $r30_2, $r30_3, $r30_4, $r30_5, $r30_6, $r30_7, $r30_8, $r30_9, $r30_10, $r30_11, $r30_12;
        java.util.Map $r31;
        java.util.Set $r32;
        java.util.Iterator $r33;
        boolean $z0;
        java.util.Map$Entry $r34;
        com.stripe.exception.APIException $r35, $r35_1, $r35_2, $r35_3, $r35_4, $r35_5, $r35_6, $r35_7, $r35_8, $r35_9;
        java.lang.Integer $r36;
        int $i0;

        $r0 := @parameter0: com.stripe.net.APIResource$RequestMethod;

        $r18 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r19 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET>;

(0)     if $r0 == $r19 goto label01;

        $r19_1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE>;

(1)     if $r0 != $r19_1 goto label03;

     label01:
        $r19_2 = Phi($r19 #0, $r19_1 #1);

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = $r18;

(2)     $r20[1] = $r1;

     label02:
(3)     $r18_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?%s", $r20);

     label03:
        $r20_1 = Phi($r20 #1, $r20 #3);

        $r19_3 = Phi($r19_1 #1, $r19_2 #3);

        $r18_2 = Phi($r18 #1, $r18_1 #3);

(4)     $r3 = new java.net.URL;

     label04:
        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r18_2);

        $r21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.HTTPMethod");

(5)     $r18_3 = virtualinvoke $r0.<com.stripe.net.APIResource$RequestMethod: java.lang.String name()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r18_3);

        $r23 = virtualinvoke $r22.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r24 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.FetchOptions$Builder");

     label05:
(6)     $r25 = newarray (java.lang.Class)[0];

     label06:
        $r26 = virtualinvoke $r24.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("validateCertificate", $r25);

     label07:
(7)     $r20_2 = newarray (java.lang.Object)[0];

     label08:
(8)     $r27 = virtualinvoke $r26.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r20_2);

     label09:
        $r26_1 = Phi($r26 #8, $r26_12 #42);

        $r27_1 = Phi($r27 #8, $r27_10 #42);

        $r25_1 = Phi($r25 #8, $r25_13 #42);

        $r20_3 = Phi($r20_2 #8, $r20_16 #42);

(9)     $r28 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.FetchOptions");

     label10:
        $r25_2 = newarray (java.lang.Class)[1];

(10)    $r25_2[0] = class "java/lang/Double";

     label11:
(11)    $r26_2 = virtualinvoke $r28.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setDeadline", $r25_2);

     label12:
        $r20_4 = newarray (java.lang.Object)[1];

(12)    $r4 = new java.lang.Double;

     label13:
        specialinvoke $r4.<java.lang.Double: void <init>(double)>(55.0);

     label14:
        $r20_4[0] = $r4;

     label15:
        virtualinvoke $r26_2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r27_1, $r20_4);

(13)    $r24_1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.HTTPRequest");

     label16:
        $r25_3 = newarray (java.lang.Class)[3];

        $r25_3[0] = class "java/net/URL";

        $r25_3[1] = $r21;

(14)    $r25_3[2] = $r28;

     label17:
        $r29 = virtualinvoke $r24_1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r25_3);

     label18:
        $r20_5 = newarray (java.lang.Object)[3];

        $r20_5[0] = $r3;

        $r20_5[1] = $r23;

(15)    $r20_5[2] = $r27_1;

     label19:
(16)    $r23_1 = virtualinvoke $r29.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r20_5);

     label20:
        $r19_4 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST>;

(17)    if $r0 != $r19_4 goto label26;

        $r25_4 = newarray (java.lang.Class)[1];

(18)    $r25_4[0] = class "[B";

     label21:
(19)    $r26_3 = virtualinvoke $r24_1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setPayload", $r25_4);

     label22:
(20)    $r20_6 = newarray (java.lang.Object)[1];

     label23:
        $r30 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

     label24:
        $r20_6[0] = $r30;

     label25:
(21)    virtualinvoke $r26_3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r23_1, $r20_6);

     label26:
        $r26_4 = Phi($r26_2 #17, $r26_3 #21);

        $r30_1 = Phi($r30 #17, $r30 #21);

        $r25_5 = Phi($r25_3 #17, $r25_4 #21);

        $r20_7 = Phi($r20_5 #17, $r20_6 #21);

(22)    $r31 = staticinvoke <com.stripe.net.APIResource: java.util.Map getHeaders(java.lang.String)>($r2);

        $r32 = interfaceinvoke $r31.<java.util.Map: java.util.Set entrySet()>();

(23)    $r33 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $r26_5 = Phi($r26_4 #23, $r26_6 #36);

        $r29_1 = Phi($r29 #23, $r29_2 #36);

        $r27_2 = Phi($r27_1 #23, $r27_6 #36);

        $r25_6 = Phi($r25_5 #23, $r25_8 #36);

        $r20_8 = Phi($r20_7 #23, $r20_10 #36);

        $r21_1 = Phi($r21 #23, $r21_2 #36);

(24)    $z0 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

     label28:
        if $z0 == 0 goto label53;

     label29:
(25)    $r27_3 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

     label30:
        $r34 = (java.util.Map$Entry) $r27_3;

     label31:
(26)    $r21_2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.HTTPHeader");

     label32:
        $r25_7 = newarray (java.lang.Class)[2];

        $r25_7[0] = class "java/lang/String";

(27)    $r25_7[1] = class "java/lang/String";

     label33:
(28)    $r29_2 = virtualinvoke $r21_2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r25_7);

     label34:
(29)    $r20_9 = newarray (java.lang.Object)[2];

     label35:
(30)    $r27_4 = interfaceinvoke $r34.<java.util.Map$Entry: java.lang.Object getKey()>();

     label36:
        $r20_9[0] = $r27_4;

     label37:
(31)    $r27_5 = interfaceinvoke $r34.<java.util.Map$Entry: java.lang.Object getValue()>();

     label38:
        $r20_9[1] = $r27_5;

     label39:
(32)    $r27_6 = virtualinvoke $r29_2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r20_9);

     label40:
        $r25_8 = newarray (java.lang.Class)[1];

(33)    $r25_8[0] = $r21_2;

     label41:
(34)    $r26_6 = virtualinvoke $r24_1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setHeader", $r25_8);

     label42:
        $r20_10 = newarray (java.lang.Object)[1];

(35)    $r20_10[0] = $r27_6;

     label43:
        virtualinvoke $r26_6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r23_1, $r20_10);

     label44:
(36)    goto label27;

     label45:
        $r5 := @caughtexception;

        $r24_4 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_13 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_3 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_3 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_11 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_14 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_17 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_5 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_4 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_5 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_5 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35 = new com.stripe.exception.APIException;

        specialinvoke $r35.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r5);

        throw $r35;

     label46:
        $r6 := @caughtexception;

        $r26_11 = Phi($r26 #6);

        $r27_9 = Phi($r27 #6);

        $r20_15 = Phi($r20_1 #6, $r20_2 #7);

(37)    $r7 = <java.lang.System: java.io.PrintStream err>;

     label47:
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Warning: this App Engine SDK version does not allow verification of SSL certificates;this exposes you to a MITM attack. Please upgrade your App Engine SDK to >=1.5.0. If you have questions, contact support@stripe.com.");

     label48:
(38)    $r25_13 = newarray (java.lang.Class)[0];

     label49:
(39)    $r26_12 = virtualinvoke $r24.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("withDefaults", $r25_13);

     label50:
(40)    $r20_16 = newarray (java.lang.Object)[0];

     label51:
(41)    $r27_10 = virtualinvoke $r26_12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r20_16);

     label52:
(42)    goto label09;

     label53:
(43)    $r21_3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.URLFetchServiceFactory");

     label54:
(44)    $r25_9 = newarray (java.lang.Class)[0];

     label55:
(45)    $r26_7 = virtualinvoke $r21_3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getURLFetchService", $r25_9);

     label56:
(46)    $r20_11 = newarray (java.lang.Object)[0];

     label57:
(47)    $r27_7 = virtualinvoke $r26_7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r20_11);

(48)    $r21_4 = virtualinvoke $r27_7.<java.lang.Object: java.lang.Class getClass()>();

     label58:
        $r25_10 = newarray (java.lang.Class)[1];

(49)    $r25_10[0] = $r24_1;

     label59:
(50)    $r26_8 = virtualinvoke $r21_4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("fetch", $r25_10);

        virtualinvoke $r26_8.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label60:
        $r20_12 = newarray (java.lang.Object)[1];

(51)    $r20_12[0] = $r23_1;

     label61:
(52)    $r23_2 = virtualinvoke $r26_8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r27_7, $r20_12);

(53)    $r24_2 = virtualinvoke $r23_2.<java.lang.Object: java.lang.Class getClass()>();

     label62:
(54)    $r25_11 = newarray (java.lang.Class)[0];

     label63:
(55)    $r26_9 = virtualinvoke $r24_2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getResponseCode", $r25_11);

     label64:
(56)    $r20_13 = newarray (java.lang.Object)[0];

     label65:
(57)    $r27_8 = virtualinvoke $r26_9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r23_2, $r20_13);

     label66:
        $r36 = (java.lang.Integer) $r27_8;

     label67:
        $i0 = virtualinvoke $r36.<java.lang.Integer: int intValue()>();

     label68:
(58)    $r18_4 = new java.lang.String;

     label69:
(59)    $r24_3 = virtualinvoke $r23_2.<java.lang.Object: java.lang.Class getClass()>();

     label70:
(60)    $r25_12 = newarray (java.lang.Class)[0];

     label71:
(61)    $r26_10 = virtualinvoke $r24_3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getContent", $r25_12);

     label72:
(62)    $r20_14 = newarray (java.lang.Object)[0];

     label73:
(63)    $r23_3 = virtualinvoke $r26_10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r23_2, $r20_14);

     label74:
(64)    $r30_2 = (byte[]) $r23_3;

     label75:
        specialinvoke $r18_4.<java.lang.String: void <init>(byte[],java.lang.String)>($r30_2, "UTF-8");

     label76:
        $r8 = new com.stripe.net.StripeResponse;

     label77:
        specialinvoke $r8.<com.stripe.net.StripeResponse: void <init>(int,java.lang.String)>($i0, $r18_4);

     label78:
        return $r8;

     label79:
        $r9 := @caughtexception;

        $r24_5 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_14 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_4 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_4 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_12 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_15 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_18 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_6 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_5 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_6 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_6 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_1 = new com.stripe.exception.APIException;

        specialinvoke $r35_1.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r9);

        throw $r35_1;

     label80:
        $r10 := @caughtexception;

        $r24_6 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_15 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_5 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_5 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_13 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_16 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_19 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_7 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_6 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_7 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_7 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_2 = new com.stripe.exception.APIException;

        specialinvoke $r35_2.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r10);

        throw $r35_2;

     label81:
        $r11 := @caughtexception;

        $r24_7 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_16 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_6 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_6 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_14 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_17 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_20 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_8 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_7 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_8 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_8 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_3 = new com.stripe.exception.APIException;

        specialinvoke $r35_3.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r11);

        throw $r35_3;

     label82:
        $r12 := @caughtexception;

        $r24_8 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_17 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_7 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_7 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_15 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_18 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_21 = Phi($r20 #2, $r20_1 #4, $r20_2 #8, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_9 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_8 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_9 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_9 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_4 = new com.stripe.exception.APIException;

        specialinvoke $r35_4.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r12);

        throw $r35_4;

     label83:
        $r13 := @caughtexception;

        $r24_9 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_18 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_8 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_8 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_16 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_19 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_22 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_10 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_9 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_10 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_10 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_5 = new com.stripe.exception.APIException;

        specialinvoke $r35_5.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r13);

        throw $r35_5;

     label84:
        $r14 := @caughtexception;

        $r24_10 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_19 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_9 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_9 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_17 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_20 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_23 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_11 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_10 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_11 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_11 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_6 = new com.stripe.exception.APIException;

        specialinvoke $r35_6.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r14);

        throw $r35_6;

     label85:
        $r15 := @caughtexception;

        $r24_11 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_20 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_10 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_10 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_18 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_21 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_24 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_12 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_11 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_12 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_12 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_7 = new com.stripe.exception.APIException;

        specialinvoke $r35_7.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r15);

        throw $r35_7;

     label86:
        $r16 := @caughtexception;

        $r24_12 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_21 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_11 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_11 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_19 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_22 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_25 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_13 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_12 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_13 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_13 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_8 = new com.stripe.exception.APIException;

        specialinvoke $r35_8.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r16);

        throw $r35_8;

     label87:
        $r17 := @caughtexception;

        $r24_13 = Phi($r24 #2, $r24 #4, $r24_1 #13, $r24_2 #53, $r24_3 #59);

        $r26_22 = Phi($r26 #2, $r26 #4, $r26_1 #9, $r26_2 #11, $r26_3 #19, $r26_4 #22, $r26_5 #24, $r26_6 #34, $r26_11 #37, $r26_12 #39, $r26_7 #45, $r26_8 #50, $r26_9 #55, $r26_10 #61);

        $r30_12 = Phi($r30 #2, $r30 #4, $r30_1 #22, $r30_2 #64);

        $r29_12 = Phi($r29 #2, $r29 #4, $r29_1 #24, $r29_2 #28);

        $r27_20 = Phi($r27 #2, $r27 #4, $r27_1 #9, $r27_2 #24, $r27_3 #25, $r27_4 #30, $r27_5 #31, $r27_6 #32, $r27_9 #37, $r27_10 #41, $r27_7 #47, $r27_8 #57);

        $r25_23 = Phi($r25 #2, $r25 #4, $r25_1 #9, $r25_2 #10, $r25_3 #14, $r25_4 #18, $r25_5 #22, $r25_6 #24, $r25_7 #27, $r25_8 #33, $r25_13 #38, $r25_9 #44, $r25_10 #49, $r25_11 #54, $r25_12 #60);

        $r20_26 = Phi($r20 #2, $r20_1 #4, $r20_2 #7, $r20_3 #9, $r20_4 #12, $r20_5 #15, $r20_6 #20, $r20_7 #22, $r20_8 #24, $r20_9 #29, $r20_10 #35, $r20_15 #37, $r20_16 #40, $r20_11 #46, $r20_12 #51, $r20_13 #56, $r20_14 #62);

        $r21_14 = Phi($r21 #2, $r21 #4, $r21_1 #24, $r21_2 #26, $r21_3 #43, $r21_4 #48);

        $r23_13 = Phi($r23 #2, $r23 #4, $r23_1 #16, $r23_2 #52, $r23_3 #63);

        $r19_14 = Phi($r19_2 #2, $r19_3 #4, $r19_4 #17);

        $r18_14 = Phi($r18 #2, $r18_1 #3, $r18_2 #4, $r18_3 #5, $r18_4 #58);

        $r35_9 = new com.stripe.exception.APIException;

        specialinvoke $r35_9.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r17);

        throw $r35_9;

        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label45;
        catch java.net.MalformedURLException from label02 to label03 with label79;
        catch java.lang.NoSuchFieldException from label02 to label03 with label80;
        catch java.lang.SecurityException from label02 to label03 with label81;
        catch java.lang.NoSuchMethodException from label02 to label03 with label82;
        catch java.lang.ClassNotFoundException from label02 to label03 with label83;
        catch java.lang.IllegalArgumentException from label02 to label03 with label84;
        catch java.lang.IllegalAccessException from label02 to label03 with label85;
        catch java.lang.InstantiationException from label02 to label03 with label86;
        catch java.io.UnsupportedEncodingException from label02 to label03 with label87;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label45;
        catch java.net.MalformedURLException from label04 to label05 with label79;
        catch java.lang.NoSuchFieldException from label04 to label05 with label80;
        catch java.lang.SecurityException from label04 to label05 with label81;
        catch java.lang.NoSuchMethodException from label04 to label05 with label82;
        catch java.lang.ClassNotFoundException from label04 to label05 with label83;
        catch java.lang.IllegalArgumentException from label04 to label05 with label84;
        catch java.lang.IllegalAccessException from label04 to label05 with label85;
        catch java.lang.InstantiationException from label04 to label05 with label86;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label87;
        catch java.lang.NoSuchMethodException from label06 to label07 with label46;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label45;
        catch java.net.MalformedURLException from label06 to label07 with label79;
        catch java.lang.NoSuchFieldException from label06 to label07 with label80;
        catch java.lang.SecurityException from label06 to label07 with label81;
        catch java.lang.ClassNotFoundException from label06 to label07 with label83;
        catch java.lang.IllegalArgumentException from label06 to label07 with label84;
        catch java.lang.IllegalAccessException from label06 to label07 with label85;
        catch java.lang.InstantiationException from label06 to label07 with label86;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label87;
        catch java.lang.NoSuchMethodException from label08 to label09 with label46;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label45;
        catch java.net.MalformedURLException from label08 to label09 with label79;
        catch java.lang.NoSuchFieldException from label08 to label09 with label80;
        catch java.lang.SecurityException from label08 to label09 with label81;
        catch java.lang.ClassNotFoundException from label08 to label09 with label83;
        catch java.lang.IllegalArgumentException from label08 to label09 with label84;
        catch java.lang.IllegalAccessException from label08 to label09 with label85;
        catch java.lang.InstantiationException from label08 to label09 with label86;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label87;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label45;
        catch java.net.MalformedURLException from label09 to label10 with label79;
        catch java.lang.NoSuchFieldException from label09 to label10 with label80;
        catch java.lang.SecurityException from label09 to label10 with label81;
        catch java.lang.NoSuchMethodException from label09 to label10 with label82;
        catch java.lang.ClassNotFoundException from label09 to label10 with label83;
        catch java.lang.IllegalArgumentException from label09 to label10 with label84;
        catch java.lang.IllegalAccessException from label09 to label10 with label85;
        catch java.lang.InstantiationException from label09 to label10 with label86;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label87;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label45;
        catch java.net.MalformedURLException from label11 to label12 with label79;
        catch java.lang.NoSuchFieldException from label11 to label12 with label80;
        catch java.lang.SecurityException from label11 to label12 with label81;
        catch java.lang.NoSuchMethodException from label11 to label12 with label82;
        catch java.lang.ClassNotFoundException from label11 to label12 with label83;
        catch java.lang.IllegalArgumentException from label11 to label12 with label84;
        catch java.lang.IllegalAccessException from label11 to label12 with label85;
        catch java.lang.InstantiationException from label11 to label12 with label86;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label87;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label45;
        catch java.net.MalformedURLException from label13 to label14 with label79;
        catch java.lang.NoSuchFieldException from label13 to label14 with label80;
        catch java.lang.SecurityException from label13 to label14 with label81;
        catch java.lang.NoSuchMethodException from label13 to label14 with label82;
        catch java.lang.ClassNotFoundException from label13 to label14 with label83;
        catch java.lang.IllegalArgumentException from label13 to label14 with label84;
        catch java.lang.IllegalAccessException from label13 to label14 with label85;
        catch java.lang.InstantiationException from label13 to label14 with label86;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label87;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label45;
        catch java.net.MalformedURLException from label15 to label16 with label79;
        catch java.lang.NoSuchFieldException from label15 to label16 with label80;
        catch java.lang.SecurityException from label15 to label16 with label81;
        catch java.lang.NoSuchMethodException from label15 to label16 with label82;
        catch java.lang.ClassNotFoundException from label15 to label16 with label83;
        catch java.lang.IllegalArgumentException from label15 to label16 with label84;
        catch java.lang.IllegalAccessException from label15 to label16 with label85;
        catch java.lang.InstantiationException from label15 to label16 with label86;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label87;
        catch java.lang.reflect.InvocationTargetException from label17 to label18 with label45;
        catch java.net.MalformedURLException from label17 to label18 with label79;
        catch java.lang.NoSuchFieldException from label17 to label18 with label80;
        catch java.lang.SecurityException from label17 to label18 with label81;
        catch java.lang.NoSuchMethodException from label17 to label18 with label82;
        catch java.lang.ClassNotFoundException from label17 to label18 with label83;
        catch java.lang.IllegalArgumentException from label17 to label18 with label84;
        catch java.lang.IllegalAccessException from label17 to label18 with label85;
        catch java.lang.InstantiationException from label17 to label18 with label86;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label87;
        catch java.lang.reflect.InvocationTargetException from label19 to label20 with label45;
        catch java.net.MalformedURLException from label19 to label20 with label79;
        catch java.lang.NoSuchFieldException from label19 to label20 with label80;
        catch java.lang.SecurityException from label19 to label20 with label81;
        catch java.lang.NoSuchMethodException from label19 to label20 with label82;
        catch java.lang.ClassNotFoundException from label19 to label20 with label83;
        catch java.lang.IllegalArgumentException from label19 to label20 with label84;
        catch java.lang.IllegalAccessException from label19 to label20 with label85;
        catch java.lang.InstantiationException from label19 to label20 with label86;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label87;
        catch java.lang.reflect.InvocationTargetException from label21 to label22 with label45;
        catch java.net.MalformedURLException from label21 to label22 with label79;
        catch java.lang.NoSuchFieldException from label21 to label22 with label80;
        catch java.lang.SecurityException from label21 to label22 with label81;
        catch java.lang.NoSuchMethodException from label21 to label22 with label82;
        catch java.lang.ClassNotFoundException from label21 to label22 with label83;
        catch java.lang.IllegalArgumentException from label21 to label22 with label84;
        catch java.lang.IllegalAccessException from label21 to label22 with label85;
        catch java.lang.InstantiationException from label21 to label22 with label86;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label87;
        catch java.lang.reflect.InvocationTargetException from label23 to label24 with label45;
        catch java.net.MalformedURLException from label23 to label24 with label79;
        catch java.lang.NoSuchFieldException from label23 to label24 with label80;
        catch java.lang.SecurityException from label23 to label24 with label81;
        catch java.lang.NoSuchMethodException from label23 to label24 with label82;
        catch java.lang.ClassNotFoundException from label23 to label24 with label83;
        catch java.lang.IllegalArgumentException from label23 to label24 with label84;
        catch java.lang.IllegalAccessException from label23 to label24 with label85;
        catch java.lang.InstantiationException from label23 to label24 with label86;
        catch java.io.UnsupportedEncodingException from label23 to label24 with label87;
        catch java.lang.reflect.InvocationTargetException from label25 to label28 with label45;
        catch java.net.MalformedURLException from label25 to label28 with label79;
        catch java.lang.NoSuchFieldException from label25 to label28 with label80;
        catch java.lang.SecurityException from label25 to label28 with label81;
        catch java.lang.NoSuchMethodException from label25 to label28 with label82;
        catch java.lang.ClassNotFoundException from label25 to label28 with label83;
        catch java.lang.IllegalArgumentException from label25 to label28 with label84;
        catch java.lang.IllegalAccessException from label25 to label28 with label85;
        catch java.lang.InstantiationException from label25 to label28 with label86;
        catch java.io.UnsupportedEncodingException from label25 to label28 with label87;
        catch java.lang.reflect.InvocationTargetException from label29 to label30 with label45;
        catch java.net.MalformedURLException from label29 to label30 with label79;
        catch java.lang.NoSuchFieldException from label29 to label30 with label80;
        catch java.lang.SecurityException from label29 to label30 with label81;
        catch java.lang.NoSuchMethodException from label29 to label30 with label82;
        catch java.lang.ClassNotFoundException from label29 to label30 with label83;
        catch java.lang.IllegalArgumentException from label29 to label30 with label84;
        catch java.lang.IllegalAccessException from label29 to label30 with label85;
        catch java.lang.InstantiationException from label29 to label30 with label86;
        catch java.io.UnsupportedEncodingException from label29 to label30 with label87;
        catch java.lang.reflect.InvocationTargetException from label31 to label32 with label45;
        catch java.net.MalformedURLException from label31 to label32 with label79;
        catch java.lang.NoSuchFieldException from label31 to label32 with label80;
        catch java.lang.SecurityException from label31 to label32 with label81;
        catch java.lang.NoSuchMethodException from label31 to label32 with label82;
        catch java.lang.ClassNotFoundException from label31 to label32 with label83;
        catch java.lang.IllegalArgumentException from label31 to label32 with label84;
        catch java.lang.IllegalAccessException from label31 to label32 with label85;
        catch java.lang.InstantiationException from label31 to label32 with label86;
        catch java.io.UnsupportedEncodingException from label31 to label32 with label87;
        catch java.lang.reflect.InvocationTargetException from label33 to label34 with label45;
        catch java.net.MalformedURLException from label33 to label34 with label79;
        catch java.lang.NoSuchFieldException from label33 to label34 with label80;
        catch java.lang.SecurityException from label33 to label34 with label81;
        catch java.lang.NoSuchMethodException from label33 to label34 with label82;
        catch java.lang.ClassNotFoundException from label33 to label34 with label83;
        catch java.lang.IllegalArgumentException from label33 to label34 with label84;
        catch java.lang.IllegalAccessException from label33 to label34 with label85;
        catch java.lang.InstantiationException from label33 to label34 with label86;
        catch java.io.UnsupportedEncodingException from label33 to label34 with label87;
        catch java.lang.reflect.InvocationTargetException from label35 to label36 with label45;
        catch java.net.MalformedURLException from label35 to label36 with label79;
        catch java.lang.NoSuchFieldException from label35 to label36 with label80;
        catch java.lang.SecurityException from label35 to label36 with label81;
        catch java.lang.NoSuchMethodException from label35 to label36 with label82;
        catch java.lang.ClassNotFoundException from label35 to label36 with label83;
        catch java.lang.IllegalArgumentException from label35 to label36 with label84;
        catch java.lang.IllegalAccessException from label35 to label36 with label85;
        catch java.lang.InstantiationException from label35 to label36 with label86;
        catch java.io.UnsupportedEncodingException from label35 to label36 with label87;
        catch java.lang.reflect.InvocationTargetException from label37 to label38 with label45;
        catch java.net.MalformedURLException from label37 to label38 with label79;
        catch java.lang.NoSuchFieldException from label37 to label38 with label80;
        catch java.lang.SecurityException from label37 to label38 with label81;
        catch java.lang.NoSuchMethodException from label37 to label38 with label82;
        catch java.lang.ClassNotFoundException from label37 to label38 with label83;
        catch java.lang.IllegalArgumentException from label37 to label38 with label84;
        catch java.lang.IllegalAccessException from label37 to label38 with label85;
        catch java.lang.InstantiationException from label37 to label38 with label86;
        catch java.io.UnsupportedEncodingException from label37 to label38 with label87;
        catch java.lang.reflect.InvocationTargetException from label39 to label40 with label45;
        catch java.net.MalformedURLException from label39 to label40 with label79;
        catch java.lang.NoSuchFieldException from label39 to label40 with label80;
        catch java.lang.SecurityException from label39 to label40 with label81;
        catch java.lang.NoSuchMethodException from label39 to label40 with label82;
        catch java.lang.ClassNotFoundException from label39 to label40 with label83;
        catch java.lang.IllegalArgumentException from label39 to label40 with label84;
        catch java.lang.IllegalAccessException from label39 to label40 with label85;
        catch java.lang.InstantiationException from label39 to label40 with label86;
        catch java.io.UnsupportedEncodingException from label39 to label40 with label87;
        catch java.lang.reflect.InvocationTargetException from label41 to label42 with label45;
        catch java.net.MalformedURLException from label41 to label42 with label79;
        catch java.lang.NoSuchFieldException from label41 to label42 with label80;
        catch java.lang.SecurityException from label41 to label42 with label81;
        catch java.lang.NoSuchMethodException from label41 to label42 with label82;
        catch java.lang.ClassNotFoundException from label41 to label42 with label83;
        catch java.lang.IllegalArgumentException from label41 to label42 with label84;
        catch java.lang.IllegalAccessException from label41 to label42 with label85;
        catch java.lang.InstantiationException from label41 to label42 with label86;
        catch java.io.UnsupportedEncodingException from label41 to label42 with label87;
        catch java.lang.reflect.InvocationTargetException from label43 to label44 with label45;
        catch java.net.MalformedURLException from label43 to label44 with label79;
        catch java.lang.NoSuchFieldException from label43 to label44 with label80;
        catch java.lang.SecurityException from label43 to label44 with label81;
        catch java.lang.NoSuchMethodException from label43 to label44 with label82;
        catch java.lang.ClassNotFoundException from label43 to label44 with label83;
        catch java.lang.IllegalArgumentException from label43 to label44 with label84;
        catch java.lang.IllegalAccessException from label43 to label44 with label85;
        catch java.lang.InstantiationException from label43 to label44 with label86;
        catch java.io.UnsupportedEncodingException from label43 to label44 with label87;
        catch java.lang.reflect.InvocationTargetException from label47 to label48 with label45;
        catch java.net.MalformedURLException from label47 to label48 with label79;
        catch java.lang.NoSuchFieldException from label47 to label48 with label80;
        catch java.lang.SecurityException from label47 to label48 with label81;
        catch java.lang.NoSuchMethodException from label47 to label48 with label82;
        catch java.lang.ClassNotFoundException from label47 to label48 with label83;
        catch java.lang.IllegalArgumentException from label47 to label48 with label84;
        catch java.lang.IllegalAccessException from label47 to label48 with label85;
        catch java.lang.InstantiationException from label47 to label48 with label86;
        catch java.io.UnsupportedEncodingException from label47 to label48 with label87;
        catch java.lang.reflect.InvocationTargetException from label49 to label50 with label45;
        catch java.net.MalformedURLException from label49 to label50 with label79;
        catch java.lang.NoSuchFieldException from label49 to label50 with label80;
        catch java.lang.SecurityException from label49 to label50 with label81;
        catch java.lang.NoSuchMethodException from label49 to label50 with label82;
        catch java.lang.ClassNotFoundException from label49 to label50 with label83;
        catch java.lang.IllegalArgumentException from label49 to label50 with label84;
        catch java.lang.IllegalAccessException from label49 to label50 with label85;
        catch java.lang.InstantiationException from label49 to label50 with label86;
        catch java.io.UnsupportedEncodingException from label49 to label50 with label87;
        catch java.lang.reflect.InvocationTargetException from label51 to label52 with label45;
        catch java.net.MalformedURLException from label51 to label52 with label79;
        catch java.lang.NoSuchFieldException from label51 to label52 with label80;
        catch java.lang.SecurityException from label51 to label52 with label81;
        catch java.lang.NoSuchMethodException from label51 to label52 with label82;
        catch java.lang.ClassNotFoundException from label51 to label52 with label83;
        catch java.lang.IllegalArgumentException from label51 to label52 with label84;
        catch java.lang.IllegalAccessException from label51 to label52 with label85;
        catch java.lang.InstantiationException from label51 to label52 with label86;
        catch java.io.UnsupportedEncodingException from label51 to label52 with label87;
        catch java.lang.reflect.InvocationTargetException from label53 to label54 with label45;
        catch java.net.MalformedURLException from label53 to label54 with label79;
        catch java.lang.NoSuchFieldException from label53 to label54 with label80;
        catch java.lang.SecurityException from label53 to label54 with label81;
        catch java.lang.NoSuchMethodException from label53 to label54 with label82;
        catch java.lang.ClassNotFoundException from label53 to label54 with label83;
        catch java.lang.IllegalArgumentException from label53 to label54 with label84;
        catch java.lang.IllegalAccessException from label53 to label54 with label85;
        catch java.lang.InstantiationException from label53 to label54 with label86;
        catch java.io.UnsupportedEncodingException from label53 to label54 with label87;
        catch java.lang.reflect.InvocationTargetException from label55 to label56 with label45;
        catch java.net.MalformedURLException from label55 to label56 with label79;
        catch java.lang.NoSuchFieldException from label55 to label56 with label80;
        catch java.lang.SecurityException from label55 to label56 with label81;
        catch java.lang.NoSuchMethodException from label55 to label56 with label82;
        catch java.lang.ClassNotFoundException from label55 to label56 with label83;
        catch java.lang.IllegalArgumentException from label55 to label56 with label84;
        catch java.lang.IllegalAccessException from label55 to label56 with label85;
        catch java.lang.InstantiationException from label55 to label56 with label86;
        catch java.io.UnsupportedEncodingException from label55 to label56 with label87;
        catch java.lang.reflect.InvocationTargetException from label57 to label58 with label45;
        catch java.net.MalformedURLException from label57 to label58 with label79;
        catch java.lang.NoSuchFieldException from label57 to label58 with label80;
        catch java.lang.SecurityException from label57 to label58 with label81;
        catch java.lang.NoSuchMethodException from label57 to label58 with label82;
        catch java.lang.ClassNotFoundException from label57 to label58 with label83;
        catch java.lang.IllegalArgumentException from label57 to label58 with label84;
        catch java.lang.IllegalAccessException from label57 to label58 with label85;
        catch java.lang.InstantiationException from label57 to label58 with label86;
        catch java.io.UnsupportedEncodingException from label57 to label58 with label87;
        catch java.lang.reflect.InvocationTargetException from label59 to label60 with label45;
        catch java.net.MalformedURLException from label59 to label60 with label79;
        catch java.lang.NoSuchFieldException from label59 to label60 with label80;
        catch java.lang.SecurityException from label59 to label60 with label81;
        catch java.lang.NoSuchMethodException from label59 to label60 with label82;
        catch java.lang.ClassNotFoundException from label59 to label60 with label83;
        catch java.lang.IllegalArgumentException from label59 to label60 with label84;
        catch java.lang.IllegalAccessException from label59 to label60 with label85;
        catch java.lang.InstantiationException from label59 to label60 with label86;
        catch java.io.UnsupportedEncodingException from label59 to label60 with label87;
        catch java.lang.reflect.InvocationTargetException from label61 to label62 with label45;
        catch java.net.MalformedURLException from label61 to label62 with label79;
        catch java.lang.NoSuchFieldException from label61 to label62 with label80;
        catch java.lang.SecurityException from label61 to label62 with label81;
        catch java.lang.NoSuchMethodException from label61 to label62 with label82;
        catch java.lang.ClassNotFoundException from label61 to label62 with label83;
        catch java.lang.IllegalArgumentException from label61 to label62 with label84;
        catch java.lang.IllegalAccessException from label61 to label62 with label85;
        catch java.lang.InstantiationException from label61 to label62 with label86;
        catch java.io.UnsupportedEncodingException from label61 to label62 with label87;
        catch java.lang.reflect.InvocationTargetException from label63 to label64 with label45;
        catch java.net.MalformedURLException from label63 to label64 with label79;
        catch java.lang.NoSuchFieldException from label63 to label64 with label80;
        catch java.lang.SecurityException from label63 to label64 with label81;
        catch java.lang.NoSuchMethodException from label63 to label64 with label82;
        catch java.lang.ClassNotFoundException from label63 to label64 with label83;
        catch java.lang.IllegalArgumentException from label63 to label64 with label84;
        catch java.lang.IllegalAccessException from label63 to label64 with label85;
        catch java.lang.InstantiationException from label63 to label64 with label86;
        catch java.io.UnsupportedEncodingException from label63 to label64 with label87;
        catch java.lang.reflect.InvocationTargetException from label65 to label66 with label45;
        catch java.net.MalformedURLException from label65 to label66 with label79;
        catch java.lang.NoSuchFieldException from label65 to label66 with label80;
        catch java.lang.SecurityException from label65 to label66 with label81;
        catch java.lang.NoSuchMethodException from label65 to label66 with label82;
        catch java.lang.ClassNotFoundException from label65 to label66 with label83;
        catch java.lang.IllegalArgumentException from label65 to label66 with label84;
        catch java.lang.IllegalAccessException from label65 to label66 with label85;
        catch java.lang.InstantiationException from label65 to label66 with label86;
        catch java.io.UnsupportedEncodingException from label65 to label66 with label87;
        catch java.lang.reflect.InvocationTargetException from label67 to label68 with label45;
        catch java.net.MalformedURLException from label67 to label68 with label79;
        catch java.lang.NoSuchFieldException from label67 to label68 with label80;
        catch java.lang.SecurityException from label67 to label68 with label81;
        catch java.lang.NoSuchMethodException from label67 to label68 with label82;
        catch java.lang.ClassNotFoundException from label67 to label68 with label83;
        catch java.lang.IllegalArgumentException from label67 to label68 with label84;
        catch java.lang.IllegalAccessException from label67 to label68 with label85;
        catch java.lang.InstantiationException from label67 to label68 with label86;
        catch java.io.UnsupportedEncodingException from label67 to label68 with label87;
        catch java.lang.reflect.InvocationTargetException from label69 to label70 with label45;
        catch java.net.MalformedURLException from label69 to label70 with label79;
        catch java.lang.NoSuchFieldException from label69 to label70 with label80;
        catch java.lang.SecurityException from label69 to label70 with label81;
        catch java.lang.NoSuchMethodException from label69 to label70 with label82;
        catch java.lang.ClassNotFoundException from label69 to label70 with label83;
        catch java.lang.IllegalArgumentException from label69 to label70 with label84;
        catch java.lang.IllegalAccessException from label69 to label70 with label85;
        catch java.lang.InstantiationException from label69 to label70 with label86;
        catch java.io.UnsupportedEncodingException from label69 to label70 with label87;
        catch java.lang.reflect.InvocationTargetException from label71 to label72 with label45;
        catch java.net.MalformedURLException from label71 to label72 with label79;
        catch java.lang.NoSuchFieldException from label71 to label72 with label80;
        catch java.lang.SecurityException from label71 to label72 with label81;
        catch java.lang.NoSuchMethodException from label71 to label72 with label82;
        catch java.lang.ClassNotFoundException from label71 to label72 with label83;
        catch java.lang.IllegalArgumentException from label71 to label72 with label84;
        catch java.lang.IllegalAccessException from label71 to label72 with label85;
        catch java.lang.InstantiationException from label71 to label72 with label86;
        catch java.io.UnsupportedEncodingException from label71 to label72 with label87;
        catch java.lang.reflect.InvocationTargetException from label73 to label74 with label45;
        catch java.net.MalformedURLException from label73 to label74 with label79;
        catch java.lang.NoSuchFieldException from label73 to label74 with label80;
        catch java.lang.SecurityException from label73 to label74 with label81;
        catch java.lang.NoSuchMethodException from label73 to label74 with label82;
        catch java.lang.ClassNotFoundException from label73 to label74 with label83;
        catch java.lang.IllegalArgumentException from label73 to label74 with label84;
        catch java.lang.IllegalAccessException from label73 to label74 with label85;
        catch java.lang.InstantiationException from label73 to label74 with label86;
        catch java.io.UnsupportedEncodingException from label73 to label74 with label87;
        catch java.lang.reflect.InvocationTargetException from label75 to label76 with label45;
        catch java.net.MalformedURLException from label75 to label76 with label79;
        catch java.lang.NoSuchFieldException from label75 to label76 with label80;
        catch java.lang.SecurityException from label75 to label76 with label81;
        catch java.lang.NoSuchMethodException from label75 to label76 with label82;
        catch java.lang.ClassNotFoundException from label75 to label76 with label83;
        catch java.lang.IllegalArgumentException from label75 to label76 with label84;
        catch java.lang.IllegalAccessException from label75 to label76 with label85;
        catch java.lang.InstantiationException from label75 to label76 with label86;
        catch java.io.UnsupportedEncodingException from label75 to label76 with label87;
        catch java.lang.reflect.InvocationTargetException from label77 to label78 with label45;
        catch java.net.MalformedURLException from label77 to label78 with label79;
        catch java.lang.NoSuchFieldException from label77 to label78 with label80;
        catch java.lang.SecurityException from label77 to label78 with label81;
        catch java.lang.NoSuchMethodException from label77 to label78 with label82;
        catch java.lang.ClassNotFoundException from label77 to label78 with label83;
        catch java.lang.IllegalArgumentException from label77 to label78 with label84;
        catch java.lang.IllegalAccessException from label77 to label78 with label85;
        catch java.lang.InstantiationException from label77 to label78 with label86;
        catch java.io.UnsupportedEncodingException from label77 to label78 with label87;
    }

    private static com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod, java.lang.String, java.lang.String, java.lang.String) throws com.stripe.exception.APIConnectionException
    {
        com.stripe.net.APIResource$RequestMethod $r0;
        java.lang.String $r1, $r2, $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7;
        int[] $r3;
        java.io.IOException $r4;
        java.lang.Throwable $r5;
        com.stripe.net.StripeResponse $r6;
        javax.net.ssl.HttpsURLConnection $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4;
        com.stripe.exception.APIConnectionException $r9, $r9_1, $r9_2, $r9_3;
        java.lang.Object[] $r10, $r10_1, $r10_2, $r10_3;
        java.io.InputStream $r11, $r11_1, $r11_2, $r11_3, $r11_4;

        $r0 := @parameter0: com.stripe.net.APIResource$RequestMethod;

        $r7 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

(0)     $r8 = null;

     label01:
(1)     $r3 = <com.stripe.net.APIResource$1: int[] $SwitchMap$com$stripe$net$APIResource$RequestMethod>;

     label02:
        $i0 = virtualinvoke $r0.<com.stripe.net.APIResource$RequestMethod: int ordinal()>();

     label03:
(2)     $i0_1 = $r3[$i0];

     label04:
(3)     lookupswitch($i0_1)
        {
            case 1: goto label13;
            case 2: goto label20;
            case 3: goto label22;
            default: goto label05;
        };

     label05:
        goto label06;

     label06:
        $r9 = new com.stripe.exception.APIConnectionException;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r0;

     label07:
(4)     $r7_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unrecognized HTTP method %s. This indicates a bug in the Stripe bindings. Please contact support@stripe.com for assistance.", $r10);

        specialinvoke $r9.<com.stripe.exception.APIConnectionException: void <init>(java.lang.String)>($r7_1);

     label08:
        throw $r9;

     label09:
        $r4 := @caughtexception;

        $r7_5 = Phi($r7 #1, $r7_1 #4, $r7_2 #11, $r7_3 #12, $r7_4 #18);

        $r8_5 = Phi($r8 #1, $r8_1 #9, $r8_2 #10, $r8_3 #13, $r8_4 #15);

        $r10_1 = Phi($r10 #1);

        $r9_1 = Phi($r9 #1);

        $r11_3 = Phi($r11 #1, $r11_1 #12, $r11_2 #17);

(5)     $i0_3 = Phi($i0 #1, $i0_1 #3, $i0_2 #10);

     label10:
(6)     $r9_2 = new com.stripe.exception.APIConnectionException;

(7)     $r10_2 = newarray (java.lang.Object)[1];

        $r10_2[0] = "https://api.stripe.com";

(8)     $r7_6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not connect to Stripe (%s). Please check your internet connection and try again. If this problem persists,you should check Stripe\'s service status at https://twitter.com/stripestatus, or let us know at support@stripe.com.", $r10_2);

        specialinvoke $r9_2.<com.stripe.exception.APIConnectionException: void <init>(java.lang.String,java.lang.Throwable)>($r7_6, $r4);

        throw $r9_2;

     label11:
        $r5 := @caughtexception;

        $r7_7 = Phi($r7 #0, $r7_1 #4, $r7_5 #5, $r7_6 #8, $r7_2 #11, $r7_3 #12, $r7_4 #18);

        $r8_6 = Phi($r8 #0, $r8_5 #5, $r8_1 #9, $r8_2 #10, $r8_3 #13, $r8_4 #15);

        $r10_3 = Phi($r10 #0, $r10_1 #5, $r10_2 #7);

        $r9_3 = Phi($r9 #0, $r9_1 #5, $r9_2 #6);

        $r11_4 = Phi($r11 #0, $r11_3 #5, $r11_1 #12, $r11_2 #17);

        $i0_4 = Phi($i0 #0, $i0_1 #2, $i0_3 #5, $i0_2 #10);

        if $r8_6 == null goto label12;

        virtualinvoke $r8_6.<javax.net.ssl.HttpsURLConnection: void disconnect()>();

     label12:
        throw $r5;

     label13:
(9)     $r8_1 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String,java.lang.String)>($r7, $r1, $r2);

     label14:
        $r8_2 = Phi($r8_1 #9, $r8_3 #14, $r8_4 #16);

(10)    $i0_2 = virtualinvoke $r8_2.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>();

     label15:
        if $i0_2 < 200 goto label24;

        if $i0_2 >= 300 goto label24;

     label16:
        $r11 = virtualinvoke $r8_2.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();

(11)    $r7_2 = staticinvoke <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)>($r11);

     label17:
        $r7_3 = Phi($r7_2 #11, $r7_4 #19);

        $r11_1 = Phi($r11 #11, $r11_2 #19);

(12)    $r6 = new com.stripe.net.StripeResponse;

     label18:
        specialinvoke $r6.<com.stripe.net.StripeResponse: void <init>(int,java.lang.String)>($i0_2, $r7_3);

     label19:
        if $r8_2 == null goto label26;

        virtualinvoke $r8_2.<javax.net.ssl.HttpsURLConnection: void disconnect()>();

        return $r6;

     label20:
(13)    $r8_3 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String,java.lang.String)>($r7, $r1, $r2);

     label21:
(14)    goto label14;

     label22:
(15)    $r8_4 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createDeleteConnection(java.lang.String,java.lang.String,java.lang.String)>($r7, $r1, $r2);

     label23:
(16)    goto label14;

     label24:
(17)    $r11_2 = virtualinvoke $r8_2.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getErrorStream()>();

(18)    $r7_4 = staticinvoke <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)>($r11_2);

     label25:
(19)    goto label17;

     label26:
        return $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.io.IOException from label13 to label14 with label09;
        catch java.io.IOException from label14 to label15 with label09;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.io.IOException from label16 to label17 with label09;
        catch java.lang.Throwable from label16 to label17 with label11;
        catch java.io.IOException from label18 to label19 with label09;
        catch java.lang.Throwable from label18 to label19 with label11;
        catch java.io.IOException from label20 to label21 with label09;
        catch java.lang.Throwable from label20 to label21 with label11;
        catch java.io.IOException from label22 to label23 with label09;
        catch java.lang.Throwable from label22 to label23 with label11;
        catch java.io.IOException from label24 to label25 with label09;
        catch java.lang.Throwable from label24 to label25 with label11;
    }

    protected static java.lang.Object request(com.stripe.net.APIResource$RequestMethod, java.lang.String, java.util.Map, java.lang.Class, java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        com.stripe.net.APIResource$RequestMethod $r0;
        java.lang.String $r1, $r4, $r7, $r7_1, $r7_2, $r7_3, $r7_4;
        java.util.Map $r2;
        java.lang.Class $r3;
        java.lang.SecurityException $r5;
        java.lang.Throwable $r6;
        java.lang.Boolean $r8, $r8_1, $r8_2, $r8_3;
        java.lang.Object $r9;
        boolean $z0, $z0_1;

        $r0 := @parameter0: com.stripe.net.APIResource$RequestMethod;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.util.Map;

        $r3 := @parameter3: java.lang.Class;

        $r4 := @parameter4: java.lang.String;

        $r7 = null;

(0)     $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label01:
(1)     $r7_1 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("networkaddress.cache.ttl");

     label02:
(2)     staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>("networkaddress.cache.ttl", "0");

     label03:
        $r8_1 = Phi($r8 #2, $r8_2 #4);

        $r7_2 = Phi($r7_1 #2, $r7_3 #4);

(3)     $r9 = staticinvoke <com.stripe.net.APIResource: java.lang.Object _request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class,java.lang.String)>($r0, $r1, $r2, $r3, $r4);

     label04:
        $z0 = virtualinvoke $r8_1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label10;

        if $r7_2 != null goto label06;

        staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>("networkaddress.cache.ttl", "-1");

        return $r9;

     label05:
        $r5 := @caughtexception;

        $r7_3 = Phi($r7 #0, $r7_1 #1);

        $r8_2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

(4)     goto label03;

     label06:
        staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>("networkaddress.cache.ttl", $r7_2);

        return $r9;

     label07:
        $r6 := @caughtexception;

        $r8_3 = Phi($r8 #2, $r8_2 #4, $r8_1 #3);

        $r7_4 = Phi($r7_1 #2, $r7_3 #4, $r7_2 #3);

        $z0_1 = virtualinvoke $r8_3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0_1 == 0 goto label08;

        if $r7_4 != null goto label09;

        staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>("networkaddress.cache.ttl", "-1");

     label08:
        throw $r6;

     label09:
        staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>("networkaddress.cache.ttl", $r7_4);

        goto label08;

     label10:
        return $r9;

        catch java.lang.SecurityException from label01 to label02 with label05;
        catch java.lang.SecurityException from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
    }

    protected static java.lang.String singleClassURL(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r2_1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "https://api.stripe.com";

        $r2 = staticinvoke <com.stripe.net.APIResource: java.lang.String className(java.lang.Class)>($r0);

        $r1[1] = $r2;

        $r2_1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/v1/%s", $r1);

        return $r2_1;
    }

    private static java.lang.String urlEncodePair(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r2, $r2_1, $r2_2, $r2_3;
        java.lang.Object[] $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 = newarray (java.lang.Object)[2];

        $r2_1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        $r1[0] = $r2_1;

        $r2_2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

        $r1[1] = $r2_2;

        $r2_3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s=%s", $r1);

        return $r2_3;
    }
}
