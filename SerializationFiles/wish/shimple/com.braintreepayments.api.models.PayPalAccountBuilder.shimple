public class com.braintreepayments.api.models.PayPalAccountBuilder extends java.lang.Object implements com.braintreepayments.api.models.PaymentMethod$Builder
{
    private java.lang.String mAuthorizationCode;
    private java.lang.String mClientMetadataId;
    private java.lang.String mEmail;
    private java.lang.String mIntegration;
    private org.json.JSONObject mOtcResponse;
    private com.braintreepayments.api.models.PaymentMethodOptions mPaymentMethodOptions;
    private java.lang.String mSource;

    public void <init>()
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mIntegration> = "custom";

        return;
    }

    public com.braintreepayments.api.models.PayPalAccountBuilder authorizationCode(java.lang.String)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        java.lang.String $r1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mAuthorizationCode> = $r1;

        return $r0;
    }

    public com.braintreepayments.api.models.PayPalAccount build()
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        com.braintreepayments.api.models.PayPalAccount $r1;
        com.braintreepayments.api.models.PaymentMethodOptions $r2;
        java.lang.String $r3, $r3_1, $r3_2;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 = new com.braintreepayments.api.models.PayPalAccount;

        specialinvoke $r1.<com.braintreepayments.api.models.PayPalAccount: void <init>()>();

        $r3 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mAuthorizationCode>;

        virtualinvoke $r1.<com.braintreepayments.api.models.PayPalAccount: void setConsentCode(java.lang.String)>($r3);

        $r3_1 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mClientMetadataId>;

        virtualinvoke $r1.<com.braintreepayments.api.models.PayPalAccount: void setClientMetadataId(java.lang.String)>($r3_1);

        $r2 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PaymentMethodOptions mPaymentMethodOptions>;

        virtualinvoke $r1.<com.braintreepayments.api.models.PayPalAccount: void setOptions(com.braintreepayments.api.models.PaymentMethodOptions)>($r2);

        $r3_2 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mSource>;

        virtualinvoke $r1.<com.braintreepayments.api.models.PayPalAccount: void setSource(java.lang.String)>($r3_2);

        return $r1;
    }

    public volatile com.braintreepayments.api.models.PaymentMethod build()
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        com.braintreepayments.api.models.PayPalAccount $r1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 = virtualinvoke $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PayPalAccount build()>();

        return $r1;
    }

    public com.braintreepayments.api.models.PayPalAccountBuilder clientMetadataId(java.lang.String)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        java.lang.String $r1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mClientMetadataId> = $r1;

        return $r0;
    }

    public com.braintreepayments.api.models.PayPalAccountBuilder email(java.lang.String)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        java.lang.String $r1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mEmail> = $r1;

        return $r0;
    }

    public com.braintreepayments.api.models.PayPalAccount fromJson(java.lang.String)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        java.lang.String $r1, $r1_1, $r1_2, $r1_3;
        com.braintreepayments.api.models.PayPalAccount $r2;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.braintreepayments.api.models.PayPalAccount: com.braintreepayments.api.models.PayPalAccount fromJson(java.lang.String)>($r1);

        $r1_1 = virtualinvoke $r2.<com.braintreepayments.api.models.PayPalAccount: java.lang.String getEmail()>();

(0)     if $r1_1 != null goto label1;

        $r1_2 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mEmail>;

(1)     virtualinvoke $r2.<com.braintreepayments.api.models.PayPalAccount: void setEmail(java.lang.String)>($r1_2);

     label1:
        $r1_3 = Phi($r1_1 #0, $r1_2 #1);

        return $r2;
    }

    public volatile com.braintreepayments.api.models.PaymentMethod fromJson(java.lang.String)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        java.lang.String $r1;
        com.braintreepayments.api.models.PayPalAccount $r2;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PayPalAccount fromJson(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getApiPath()
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        return "paypal_accounts";
    }

    public java.lang.String getApiResource()
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        return "paypalAccounts";
    }

    public com.braintreepayments.api.models.PayPalAccountBuilder integration(java.lang.String)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        java.lang.String $r1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mIntegration> = $r1;

        return $r0;
    }

    public volatile com.braintreepayments.api.models.PaymentMethod$Builder integration(java.lang.String)
    {
        java.lang.String $r0;
        com.braintreepayments.api.models.PayPalAccountBuilder $r1, $r1_1;

        $r1 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PayPalAccountBuilder integration(java.lang.String)>($r0);

        return $r1_1;
    }

    public com.braintreepayments.api.models.PayPalAccountBuilder otcResponse(org.json.JSONObject)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        org.json.JSONObject $r1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: org.json.JSONObject;

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: org.json.JSONObject mOtcResponse> = $r1;

        return $r0;
    }

    public com.braintreepayments.api.models.PayPalAccountBuilder source(java.lang.String)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        java.lang.String $r1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mSource> = $r1;

        return $r0;
    }

    public volatile com.braintreepayments.api.models.PaymentMethod$Builder source(java.lang.String)
    {
        java.lang.String $r0;
        com.braintreepayments.api.models.PayPalAccountBuilder $r1, $r1_1;

        $r1 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PayPalAccountBuilder source(java.lang.String)>($r0);

        return $r1_1;
    }

    public java.lang.String toJsonString()
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        org.json.JSONObject $r1, $r7, $r8, $r8_1, $r7_1, $r7_2, $r7_3, $r8_2, $r7_4, $r8_3;
        com.google.gson.Gson $r2;
        com.braintreepayments.api.models.Metadata $r3;
        java.lang.String $r4, $r9, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        org.json.JSONException $r5;
        com.braintreepayments.api.models.PaymentMethodOptions $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r6 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PaymentMethodOptions mPaymentMethodOptions>;

(0)     if $r6 == null goto label14;

(1)     $r6_1 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PaymentMethodOptions mPaymentMethodOptions>;

     label01:
        $z0 = virtualinvoke $r6_1.<com.braintreepayments.api.models.PaymentMethodOptions: boolean getValidate()>();

     label02:
(2)     if $z0 == 0 goto label14;

(3)     $z0_1 = 1;

     label03:
        $r6_2 = Phi($r6_1 #3, $r6_4 #11);

        $z0_2 = Phi($z0_1 #3, $z0_5 #11);

        $r7 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: org.json.JSONObject mOtcResponse>;

(4)     $r8 = new org.json.JSONObject;

     label04:
        specialinvoke $r8.<org.json.JSONObject: void <init>()>();

(5)     $r8_1 = virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("validate", $z0_2);

        virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("options", $r8_1);

     label05:
(6)     $r7_1 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: org.json.JSONObject mOtcResponse>;

     label06:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("paypal_account", $r7_1);

     label07:
        $r4 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mClientMetadataId>;

     label08:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("correlation_id", $r4);

     label09:
        $r7_2 = new org.json.JSONObject;

(7)     $r2 = new com.google.gson.Gson;

     label10:
        specialinvoke $r2.<com.google.gson.Gson: void <init>()>();

     label11:
        $r3 = new com.braintreepayments.api.models.Metadata;

        $r9 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mIntegration>;

(8)     $r4_1 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: java.lang.String mSource>;

     label12:
        specialinvoke $r3.<com.braintreepayments.api.models.Metadata: void <init>(java.lang.String,java.lang.String)>($r9, $r4_1);

(9)     $r4_2 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3);

        specialinvoke $r7_2.<org.json.JSONObject: void <init>(java.lang.String)>($r4_2);

(10)    virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("_meta", $r7_2);

     label13:
        $r6_3 = Phi($r6_2 #10, $r6_5 #12);

        $z0_3 = Phi($z0_2 #10, $z0_6 #12);

        $r7_3 = Phi($r7_2 #10, $r7_4 #12);

        $r4_3 = Phi($r4_2 #10, $r4_5 #12);

        $r8_2 = Phi($r8_1 #10, $r8_3 #12);

        $r4_4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        return $r4_4;

     label14:
        $r6_4 = Phi($r6 #0, $r6_1 #2);

        $z0_4 = Phi($z0 #0, $z0 #2);

        $z0_5 = 0;

(11)    goto label03;

     label15:
        $r5 := @caughtexception;

        $r6_5 = Phi($r6_1 #1, $r6_2 #4);

        $z0_6 = Phi($z0 #1, $z0_2 #4);

        $r7_4 = Phi($r7 #1, $r7 #4, $r7_1 #6, $r7_2 #7);

        $r4_5 = Phi($r4 #1, $r4 #4, $r4_1 #8, $r4_2 #9);

        $r8_3 = Phi($r8 #1, $r8 #4, $r8_1 #5);

(12)    goto label13;

        catch org.json.JSONException from label01 to label02 with label15;
        catch org.json.JSONException from label04 to label05 with label15;
        catch org.json.JSONException from label06 to label07 with label15;
        catch org.json.JSONException from label08 to label09 with label15;
        catch org.json.JSONException from label10 to label11 with label15;
        catch org.json.JSONException from label12 to label13 with label15;
    }

    public com.braintreepayments.api.models.PayPalAccountBuilder validate(boolean)
    {
        com.braintreepayments.api.models.PayPalAccountBuilder $r0;
        boolean $z0;
        com.braintreepayments.api.models.PaymentMethodOptions $r1, $r1_1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $z0 := @parameter0: boolean;

        $r1 = new com.braintreepayments.api.models.PaymentMethodOptions;

        specialinvoke $r1.<com.braintreepayments.api.models.PaymentMethodOptions: void <init>()>();

        $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PaymentMethodOptions mPaymentMethodOptions> = $r1;

        $r1_1 = $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PaymentMethodOptions mPaymentMethodOptions>;

        virtualinvoke $r1_1.<com.braintreepayments.api.models.PaymentMethodOptions: void setValidate(boolean)>($z0);

        return $r0;
    }

    public volatile com.braintreepayments.api.models.PaymentMethod$Builder validate(boolean)
    {
        boolean $z0;
        com.braintreepayments.api.models.PayPalAccountBuilder $r0, $r0_1;

        $r0 := @this: com.braintreepayments.api.models.PayPalAccountBuilder;

        $z0 := @parameter0: boolean;

        $r0_1 = virtualinvoke $r0.<com.braintreepayments.api.models.PayPalAccountBuilder: com.braintreepayments.api.models.PayPalAccountBuilder validate(boolean)>($z0);

        return $r0_1;
    }
}
