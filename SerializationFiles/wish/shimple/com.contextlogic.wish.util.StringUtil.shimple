public class com.contextlogic.wish.util.StringUtil extends java.lang.Object
{

    public void <init>()
    {
        com.contextlogic.wish.util.StringUtil $r0;

        $r0 := @this: com.contextlogic.wish.util.StringUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int compareVersionStrings(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r0_1, $r1_1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r0_1 = staticinvoke <com.contextlogic.wish.util.StringUtil: java.lang.String normalizeVersionString(java.lang.String,java.lang.String,int)>($r0, ".", 4);

        $r1_1 = staticinvoke <com.contextlogic.wish.util.StringUtil: java.lang.String normalizeVersionString(java.lang.String,java.lang.String,int)>($r1, ".", 4);

        $i0 = virtualinvoke $r0_1.<java.lang.String: int compareTo(java.lang.String)>($r1_1);

        return $i0;
    }

    public static java.lang.String ensureString(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0, $z0_1, $z0_2;
        java.lang.Integer $r1;
        int $i0;
        java.lang.String $r2, $r2_1, $r2_2;
        java.lang.Long $r3;
        long $l1;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Integer) $r0;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r2;

     label1:
        $z0_1 = $r0 instanceof java.lang.Long;

        if $z0_1 == 0 goto label2;

        $r3 = (java.lang.Long) $r0;

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $r2_1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        return $r2_1;

     label2:
        $z0_2 = $r0 instanceof java.lang.String;

        if $z0_2 == 0 goto label3;

        $r2_2 = (java.lang.String) $r0;

        return $r2_2;

     label3:
        return null;
    }

    public static java.lang.String extractEditTextValue(android.widget.EditText)
    {
        android.widget.EditText $r0;
        android.text.Editable $r1, $r1_1, $r1_2;
        java.lang.String $r2, $r2_1, $r2_2, $r2_3;
        boolean $z0;

        $r0 := @parameter0: android.widget.EditText;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        if $r1 != null goto label3;

(0)     $r2 = "";

     label2:
        $r2_1 = Phi($r2 #0, $r2_3 #1);

        $r1_1 = Phi($r1 #0, $r1_2 #1);

        $z0 = virtualinvoke $r2_1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label4;

        return null;

     label3:
        $r1_2 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r2_2 = virtualinvoke $r1_2.<java.lang.Object: java.lang.String toString()>();

        $r2_3 = virtualinvoke $r2_2.<java.lang.String: java.lang.String trim()>();

(1)     goto label2;

     label4:
        return $r2_1;
    }

    public static java.lang.String joinList(java.util.ArrayList, java.lang.String, boolean, boolean)
    {
        java.util.ArrayList $r0;
        boolean $z0, $z1;
        java.lang.StringBuffer $r1;
        java.lang.String $r2, $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r2_1;
        int $i0, $i1, $i0_1, $i1_1, $i1_2, $i1_3, $i1_4, $i0_2, $i1_5, $i1_6;
        java.lang.Object $r3;
        java.lang.Object[] $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

(0)     $i0 = 0;

     label1:
        $i0_1 = Phi($i0 #0, $i0_2 #2);

        $r4 = Phi($r4 #0, $r4_2 #2);

        $r5 = Phi($r5 #0, $r5_1 #2);

        $i1 = Phi($i1 #0, $i1_4 #2);

        $i1_1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0_1 >= $i1_1 goto label6;

        $r3 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i0_1);

        $r4_1 = (java.lang.String) $r3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4_1);

        $i1_2 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $i1_3 = $i1_2 + -2;

        if $i0_1 >= $i1_3 goto label4;

        if $z1 == 0 goto label3;

(1)     virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r4_2 = Phi($r4_1 #1, $r4_1 #3, $r4_1 #4, $r4_3 #5, $r4_4 #6);

        $r5_1 = Phi($r5 #1, $r5 #3, $r5 #4, $r5_2 #5, $r5_3 #6);

        $i1_4 = Phi($i1_3 #1, $i1_3 #3, $i1_6 #4, $i1_6 #5, $i1_6 #6);

        $i0_2 = $i0_1 + 1;

(2)     goto label1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

(3)     goto label2;

     label4:
        $i1_5 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $i1_6 = $i1_5 + -2;

(4)     if $i0_1 != $i1_6 goto label2;

        if $z0 == 0 goto label5;

        $r5_2 = newarray (java.lang.Object)[1];

        $r5_2[0] = $r2;

        $r4_3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s ", $r5_2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4_3);

(5)     goto label2;

     label5:
        $r5_3 = newarray (java.lang.Object)[1];

        $r5_3[0] = $r2;

        $r4_4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r5_3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4_4);

(6)     goto label2;

     label6:
        $r2_1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2_1;
    }

    private static java.lang.String normalizeVersionString(java.lang.String, java.lang.String, int)
    {
        int $i0, $i1, $i2, $i2_1, $i2_2;
        java.lang.StringBuilder $r0, $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r3_1, $r2_1, $r2_2, $r3_2, $r2_3, $r2_4;
        java.util.regex.Pattern $r4;
        java.lang.String[] $r5;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r3, 16);

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r2);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i1 = lengthof $r5;

(0)     $i2 = 0;

     label1:
        $r6 = Phi($r6 #0, $r6_4 #1);

        $i2_1 = Phi($i2 #0, $i2_2 #1);

        $r3_1 = Phi($r3 #0, $r3_2 #1);

        $r2_1 = Phi($r2 #0, $r2_3 #1);

        if $i2_1 >= $i1 goto label2;

        $r2_2 = $r5[$i2_1];

        $r6_1 = new java.lang.StringBuilder;

        specialinvoke $r6_1.<java.lang.StringBuilder: void <init>()>();

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6_4 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(115);

        $r3_2 = virtualinvoke $r6_4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r2_2;

        $r2_3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r3_2, $r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_3);

        $i2_2 = $i2_1 + 1;

(1)     goto label1;

     label2:
        $r2_4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2_4;
    }

    public static java.lang.String toTitleCase(java.lang.String)
    {
        java.lang.StringBuilder $r0;
        int $i0, $i1, $i1_1, $i1_2;
        java.lang.String $r1, $r1_1;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3, $z0_4;
        char[] $r2;
        char $c2, $c2_1, $c2_2, $c2_3;

        $r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $z0 = 1;

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r2;

(0)     $i1 = 0;

     label1:
        $z0_1 = Phi($z0 #0, $z0_3 #2);

        $c2 = Phi($c2 #0, $c2_2 #2);

        $i1_1 = Phi($i1 #0, $i1_2 #2);

        if $i1_1 >= $i0 goto label4;

        $c2_1 = $r2[$i1_1];

        $z1 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c2_1);

        if $z1 == 0 goto label3;

(1)     $z0_2 = 1;

     label2:
        $z0_3 = Phi($z0_2 #1, $z0_1 #3, $z0_4 #4);

        $c2_2 = Phi($c2_1 #1, $c2_1 #3, $c2_3 #4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2_2);

        $i1_2 = $i1_1 + 1;

(2)     goto label1;

     label3:
(3)     if $z0_1 == 0 goto label2;

        $c2_3 = staticinvoke <java.lang.Character: char toTitleCase(char)>($c2_1);

        $z0_4 = 0;

(4)     goto label2;

     label4:
        $r1_1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1_1;
    }
}
