public final class java.lang.Math extends java.lang.Object
{
    public static final double E;
    public static final double PI;

    void <init>()
    {
        java.lang.Math r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Math;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static double abs(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float abs(float)
    {
        float f0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int abs(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static long abs(long)
    {
        long l0;
        java.lang.RuntimeException $r0;

        l0 := @parameter0: long;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static native double acos(double);

    public static native double asin(double);

    public static native double atan(double);

    public static native double atan2(double, double);

    public static native double cbrt(double);

    public static native double ceil(double);

    public static native double cos(double);

    public static native double cosh(double);

    public static native double exp(double);

    public static native double expm1(double);

    public static native double floor(double);

    public static native double hypot(double, double);

    public static native double IEEEremainder(double, double);

    public static native double log(double);

    public static native double log10(double);

    public static native double log1p(double);

    public static double max(double, double)
    {
        double d0, d1;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float max(float, float)
    {
        float f0, f1;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int max(int, int)
    {
        int i0, i1;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static long max(long, long)
    {
        long l0, l1;
        java.lang.RuntimeException $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double min(double, double)
    {
        double d0, d1;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float min(float, float)
    {
        float f0, f1;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int min(int, int)
    {
        int i0, i1;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static long min(long, long)
    {
        long l0, l1;
        java.lang.RuntimeException $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static native double pow(double, double);

    public static native double rint(double);

    public static long round(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int round(float)
    {
        float f0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double signum(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float signum(float)
    {
        float f0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static native double sin(double);

    public static native double sinh(double);

    public static native double sqrt(double);

    public static native double tan(double);

    public static native double tanh(double);

    public static synchronized double random()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double toRadians(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double toDegrees(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double ulp(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float ulp(float)
    {
        float f0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double copySign(double, double)
    {
        double d0, d1;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float copySign(float, float)
    {
        float f0, f1;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int getExponent(float)
    {
        float f0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static int getExponent(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double nextAfter(double, double)
    {
        double d0, d1;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float nextAfter(float, double)
    {
        float f0;
        double d0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        d0 := @parameter1: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double nextUp(double)
    {
        double d0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float nextUp(float)
    {
        float f0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static double scalb(double, int)
    {
        double d0;
        int i0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static float scalb(float, int)
    {
        float f0;
        int i0;
        java.lang.RuntimeException $r0;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }
}
