public class com.facebook.internal.BundleJSONConverter extends java.lang.Object
{
    private static final java.util.Map SETTERS;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        com.facebook.internal.BundleJSONConverter$1 $r1;
        com.facebook.internal.BundleJSONConverter$2 $r2;
        com.facebook.internal.BundleJSONConverter$3 $r3;
        com.facebook.internal.BundleJSONConverter$4 $r4;
        com.facebook.internal.BundleJSONConverter$5 $r5;
        com.facebook.internal.BundleJSONConverter$6 $r6;
        com.facebook.internal.BundleJSONConverter$7 $r7;
        java.util.Map $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS> = $r0;

        $r8 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r1 = new com.facebook.internal.BundleJSONConverter$1;

        specialinvoke $r1.<com.facebook.internal.BundleJSONConverter$1: void <init>()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "java/lang/Boolean", $r1);

        $r8_1 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r2 = new com.facebook.internal.BundleJSONConverter$2;

        specialinvoke $r2.<com.facebook.internal.BundleJSONConverter$2: void <init>()>();

        interfaceinvoke $r8_1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "java/lang/Integer", $r2);

        $r8_2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r3 = new com.facebook.internal.BundleJSONConverter$3;

        specialinvoke $r3.<com.facebook.internal.BundleJSONConverter$3: void <init>()>();

        interfaceinvoke $r8_2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "java/lang/Long", $r3);

        $r8_3 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r4 = new com.facebook.internal.BundleJSONConverter$4;

        specialinvoke $r4.<com.facebook.internal.BundleJSONConverter$4: void <init>()>();

        interfaceinvoke $r8_3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "java/lang/Double", $r4);

        $r8_4 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r5 = new com.facebook.internal.BundleJSONConverter$5;

        specialinvoke $r5.<com.facebook.internal.BundleJSONConverter$5: void <init>()>();

        interfaceinvoke $r8_4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "java/lang/String", $r5);

        $r8_5 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r6 = new com.facebook.internal.BundleJSONConverter$6;

        specialinvoke $r6.<com.facebook.internal.BundleJSONConverter$6: void <init>()>();

        interfaceinvoke $r8_5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/String;", $r6);

        $r8_6 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r7 = new com.facebook.internal.BundleJSONConverter$7;

        specialinvoke $r7.<com.facebook.internal.BundleJSONConverter$7: void <init>()>();

        interfaceinvoke $r8_6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "org/json/JSONArray", $r7);

        return;
    }

    public void <init>()
    {
        com.facebook.internal.BundleJSONConverter $r0;

        $r0 := @this: com.facebook.internal.BundleJSONConverter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.Bundle convertToBundle(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject $r0, $r8;
        android.os.Bundle $r1, $r9;
        java.util.Map $r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Iterator $r4;
        boolean $z0, $z0_1, $z0_2;
        java.lang.Object $r5, $r7, $r5_1, $r5_2, $r7_1, $r7_2;
        java.lang.String $r6, $r6_1, $r6_2;
        java.lang.Class $r10, $r10_1, $r10_2;
        com.facebook.internal.BundleJSONConverter$Setter $r11;
        java.lang.StringBuilder $r12, $r12_1, $r12_2;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

(0)     $r4 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $r5 = Phi($r5 #0, $r5_2 #1, $r5_2 #2, $r5_2 #3, $r5_2 #4);

        $r10 = Phi($r10 #0, $r10 #1, $r10 #2, $r10 #3, $r10_1 #4);

        $r6 = Phi($r6 #0, $r6_1 #1, $r6_1 #2, $r6_1 #3, $r6_1 #4);

        $r7 = Phi($r7 #0, $r7 #1, $r7_1 #2, $r7_1 #3, $r7_2 #4);

        $z0 = Phi($z0 #0, $z0_1 #1, $z0_1 #2, $z0_2 #3, $z0_2 #4);

        $z0_1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label4;

        $r5_1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6_1 = (java.lang.String) $r5_1;

        $r5_2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r6_1);

(1)     if $r5_2 == null goto label1;

        $r7_1 = <org.json.JSONObject: java.lang.Object NULL>;

(2)     if $r5_2 == $r7_1 goto label1;

        $z0_2 = $r5_2 instanceof org.json.JSONObject;

        if $z0_2 == 0 goto label2;

        $r8 = (org.json.JSONObject) $r5_2;

        $r9 = staticinvoke <com.facebook.internal.BundleJSONConverter: android.os.Bundle convertToBundle(org.json.JSONObject)>($r8);

        virtualinvoke $r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r6_1, $r9);

(3)     goto label1;

     label2:
        $r2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r10_1 = virtualinvoke $r5_2.<java.lang.Object: java.lang.Class getClass()>();

        $r7_2 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10_1);

        $r11 = (com.facebook.internal.BundleJSONConverter$Setter) $r7_2;

        if $r11 != null goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12_1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type: ");

        $r10_2 = virtualinvoke $r5_2.<java.lang.Object: java.lang.Class getClass()>();

        $r12_2 = virtualinvoke $r12_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10_2);

        $r6_2 = virtualinvoke $r12_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6_2);

        throw $r3;

     label3:
        interfaceinvoke $r11.<com.facebook.internal.BundleJSONConverter$Setter: void setOnBundle(android.os.Bundle,java.lang.String,java.lang.Object)>($r1, $r6_1, $r5_2);

(4)     goto label1;

     label4:
        return $r1;
    }

    public static org.json.JSONObject convertToJSON(android.os.Bundle) throws org.json.JSONException
    {
        android.os.Bundle $r0, $r12;
        org.json.JSONObject $r1, $r13;
        org.json.JSONArray $r2;
        java.util.Map $r3;
        java.lang.IllegalArgumentException $r4;
        java.util.Set $r5;
        java.util.Iterator $r6, $r10;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.Object $r7, $r15, $r7_1, $r7_2, $r7_3, $r7_4;
        java.lang.String $r8, $r11, $r8_1, $r8_2;
        java.util.List $r9;
        java.lang.Class $r14, $r14_1, $r14_2;
        com.facebook.internal.BundleJSONConverter$Setter $r16;
        java.lang.StringBuilder $r17, $r17_1, $r17_2;

        $r0 := @parameter0: android.os.Bundle;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r5 = virtualinvoke $r0.<android.os.Bundle: java.util.Set keySet()>();

(0)     $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $r14 = Phi($r14 #0, $r14 #1, $r14 #4, $r14 #5, $r14_1 #6);

        $z0 = Phi($z0 #0, $z0_1 #1, $z0_4 #4, $z0_5 #5, $z0_5 #6);

        $r8 = Phi($r8 #0, $r8_1 #1, $r8_1 #4, $r8_1 #5, $r8_1 #6);

        $r7 = Phi($r7 #0, $r7_2 #1, $r7_3 #4, $r7_2 #5, $r7_2 #6);

        $z0_1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label7;

        $r7_1 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8_1 = (java.lang.String) $r7_1;

        $r7_2 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r8_1);

(1)     if $r7_2 == null goto label1;

        $z0_2 = $r7_2 instanceof java.util.List;

        if $z0_2 == 0 goto label4;

        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

        $r9 = (java.util.List) $r7_2;

(2)     $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0_3 = Phi($z0_2 #2, $z0_4 #3);

        $r7_3 = Phi($r7_2 #2, $r7_4 #3);

        $z0_4 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0_4 == 0 goto label3;

        $r7_4 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r7_4;

        virtualinvoke $r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r11);

(3)     goto label2;

     label3:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r8_1, $r2);

(4)     goto label1;

     label4:
        $z0_5 = $r7_2 instanceof android.os.Bundle;

        if $z0_5 == 0 goto label5;

        $r12 = (android.os.Bundle) $r7_2;

        $r13 = staticinvoke <com.facebook.internal.BundleJSONConverter: org.json.JSONObject convertToJSON(android.os.Bundle)>($r12);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r8_1, $r13);

(5)     goto label1;

     label5:
        $r3 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r14_1 = virtualinvoke $r7_2.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14_1);

        $r16 = (com.facebook.internal.BundleJSONConverter$Setter) $r15;

        if $r16 != null goto label6;

        $r4 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17_1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type: ");

        $r14_2 = virtualinvoke $r7_2.<java.lang.Object: java.lang.Class getClass()>();

        $r17_2 = virtualinvoke $r17_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14_2);

        $r8_2 = virtualinvoke $r17_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8_2);

        throw $r4;

     label6:
        interfaceinvoke $r16.<com.facebook.internal.BundleJSONConverter$Setter: void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)>($r1, $r8_1, $r7_2);

(6)     goto label1;

     label7:
        return $r1;
    }
}
