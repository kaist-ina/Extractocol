public class com.ortiz.touch.TouchImageView extends android.widget.ImageView
{
    private static final java.lang.String DEBUG;
    private static final float SUPER_MAX_MULTIPLIER;
    private static final float SUPER_MIN_MULTIPLIER;
    private android.content.Context context;
    private com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables;
    private android.view.GestureDetector$OnDoubleTapListener doubleTapListener;
    private com.ortiz.touch.TouchImageView$Fling fling;
    private boolean imageRenderedAtLeastOnce;
    private float[] m;
    private android.view.GestureDetector mGestureDetector;
    private android.view.ScaleGestureDetector mScaleDetector;
    private android.widget.ImageView$ScaleType mScaleType;
    private float matchViewHeight;
    private float matchViewWidth;
    private android.graphics.Matrix matrix;
    private float maxScale;
    private float minScale;
    private float normalizedScale;
    private boolean onDrawReady;
    private float prevMatchViewHeight;
    private float prevMatchViewWidth;
    private android.graphics.Matrix prevMatrix;
    private int prevViewHeight;
    private int prevViewWidth;
    private com.ortiz.touch.TouchImageView$State state;
    private float superMaxScale;
    private float superMinScale;
    private com.ortiz.touch.TouchImageView$OnTouchImageViewListener touchImageViewListener;
    private android.view.View$OnTouchListener userTouchListener;
    private int viewHeight;
    private int viewWidth;

    public void <init>(android.content.Context)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.content.Context $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        $r0.<com.ortiz.touch.TouchImageView: android.view.GestureDetector$OnDoubleTapListener doubleTapListener> = null;

        $r0.<com.ortiz.touch.TouchImageView: android.view.View$OnTouchListener userTouchListener> = null;

        $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$OnTouchImageViewListener touchImageViewListener> = null;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void sharedConstructing(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<com.ortiz.touch.TouchImageView: android.view.GestureDetector$OnDoubleTapListener doubleTapListener> = null;

        $r0.<com.ortiz.touch.TouchImageView: android.view.View$OnTouchListener userTouchListener> = null;

        $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$OnTouchImageViewListener touchImageViewListener> = null;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void sharedConstructing(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r0.<com.ortiz.touch.TouchImageView: android.view.GestureDetector$OnDoubleTapListener doubleTapListener> = null;

        $r0.<com.ortiz.touch.TouchImageView: android.view.View$OnTouchListener userTouchListener> = null;

        $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$OnTouchImageViewListener touchImageViewListener> = null;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void sharedConstructing(android.content.Context)>($r1);

        return;
    }

    static android.view.ScaleGestureDetector access$1000(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.view.ScaleGestureDetector r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: android.view.ScaleGestureDetector mScaleDetector>;

        return r1;
    }

    static android.view.GestureDetector access$1100(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.view.GestureDetector r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: android.view.GestureDetector mGestureDetector>;

        return r1;
    }

    static void access$1200(com.ortiz.touch.TouchImageView, com.ortiz.touch.TouchImageView$State)
    {
        com.ortiz.touch.TouchImageView $r0;
        com.ortiz.touch.TouchImageView$State $r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $r1 := @parameter1: com.ortiz.touch.TouchImageView$State;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void setState(com.ortiz.touch.TouchImageView$State)>($r1);

        return;
    }

    static int access$1300(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        int i0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        i0 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        return i0;
    }

    static float access$1400(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $f0 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        return $f0;
    }

    static float access$1500(com.ortiz.touch.TouchImageView, float, float, float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f2, $f2_1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $f2 := @parameter1: float;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $f2_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getFixDragTrans(float,float,float)>($f2, $f0, $f1);

        return $f2_1;
    }

    static int access$1600(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        int i0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        i0 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        return i0;
    }

    static float access$1700(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $f0 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        return $f0;
    }

    static android.graphics.Matrix access$1800(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Matrix r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        return r1;
    }

    static void access$1900(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fixTrans()>();

        return;
    }

    static android.view.View$OnTouchListener access$2000(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.view.View$OnTouchListener r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: android.view.View$OnTouchListener userTouchListener>;

        return r1;
    }

    static com.ortiz.touch.TouchImageView$OnTouchImageViewListener access$2100(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        com.ortiz.touch.TouchImageView$OnTouchImageViewListener r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$OnTouchImageViewListener touchImageViewListener>;

        return r1;
    }

    static void access$2200(com.ortiz.touch.TouchImageView, double, float, float, boolean)
    {
        com.ortiz.touch.TouchImageView $r0;
        double $d0;
        float $f0, $f1;
        boolean $z0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $d0 := @parameter1: double;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $z0 := @parameter4: boolean;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void scaleImage(double,float,float,boolean)>($d0, $f0, $f1, $z0);

        return;
    }

    static android.graphics.PointF access$2300(com.ortiz.touch.TouchImageView, float, float, boolean)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1;
        boolean $z0;
        android.graphics.PointF $r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $r1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.PointF transformCoordTouchToBitmap(float,float,boolean)>($f0, $f1, $z0);

        return $r1;
    }

    static android.graphics.PointF access$2400(com.ortiz.touch.TouchImageView, float, float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1;
        android.graphics.PointF $r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.PointF transformCoordBitmapToTouch(float,float)>($f0, $f1);

        return $r1;
    }

    static void access$2500(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fixScaleTrans()>();

        return;
    }

    static android.content.Context access$2600(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.content.Context r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: android.content.Context context>;

        return r1;
    }

    static float[] access$2700(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        float[] r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        return r1;
    }

    static android.view.GestureDetector$OnDoubleTapListener access$300(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.view.GestureDetector$OnDoubleTapListener r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: android.view.GestureDetector$OnDoubleTapListener doubleTapListener>;

        return r1;
    }

    static com.ortiz.touch.TouchImageView$Fling access$400(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        com.ortiz.touch.TouchImageView$Fling r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$Fling fling>;

        return r1;
    }

    static com.ortiz.touch.TouchImageView$Fling access$402(com.ortiz.touch.TouchImageView, com.ortiz.touch.TouchImageView$Fling)
    {
        com.ortiz.touch.TouchImageView $r0;
        com.ortiz.touch.TouchImageView$Fling $r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $r1 := @parameter1: com.ortiz.touch.TouchImageView$Fling;

        $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$Fling fling> = $r1;

        return $r1;
    }

    static void access$500(com.ortiz.touch.TouchImageView, java.lang.Runnable)
    {
        com.ortiz.touch.TouchImageView $r0;
        java.lang.Runnable $r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        $r1 := @parameter1: java.lang.Runnable;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void compatPostOnAnimation(java.lang.Runnable)>($r1);

        return;
    }

    static com.ortiz.touch.TouchImageView$State access$600(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        com.ortiz.touch.TouchImageView$State r1;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$State state>;

        return r1;
    }

    static float access$700(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        float f0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        f0 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        return f0;
    }

    static float access$800(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        float f0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        f0 = $r0.<com.ortiz.touch.TouchImageView: float minScale>;

        return f0;
    }

    static float access$900(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0;
        float f0;

        $r0 := @parameter0: com.ortiz.touch.TouchImageView;

        f0 = $r0.<com.ortiz.touch.TouchImageView: float maxScale>;

        return f0;
    }

    private void compatPostOnAnimation(java.lang.Runnable)
    {
        com.ortiz.touch.TouchImageView $r0;
        java.lang.Runnable $r1;
        int $i0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: java.lang.Runnable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void postOnAnimation(java.lang.Runnable)>($r1);

        return;

     label1:
        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: boolean postDelayed(java.lang.Runnable,long)>($r1, 16L);

        return;
    }

    private void fitImageToView()
    {
        com.ortiz.touch.TouchImageView $r0;
        int[] $r1;
        java.lang.UnsupportedOperationException $r2;
        android.graphics.drawable.Drawable $r3;
        int $i0, $i1, $i2, $i4, $i0_1, $i0_2, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6, $i2_7, $i1_1, $i2_8, $i2_9, $i1_2, $i2_10, $i0_3;
        android.graphics.Matrix $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6, $r4_7, $r4_8;
        float $f0, $f1, $f2, $f3, $f4, $f0_1, $f1_1, $f1_2, $f1_3, $f0_2, $f0_3, $f1_4, $f2_1, $f3_1, $f2_2, $f3_2, $f4_1, $f3_3, $f4_2, $f4_3, $f4_4, $f4_5, $f0_4, $f1_5, $f0_5, $f1_6, $f2_3, $f3_4, $f0_6, $f0_7, $f0_8, $f0_9, $f0_10, $f1_7, $f0_11, $f1_8, $f0_12, $f0_13, $f1_9, $f0_14, $f1_10, $f0_15, $f1_11, $f0_16, $f2_4, $f3_5, $f2_5, $f3_6, $f1_12, $f2_6, $f1_13, $f2_7, $f1_14, $f0_17, $f0_18, $f1_15, $f0_19, $f0_20, $f1_16, $f1_17, $f0_21;
        android.widget.ImageView$ScaleType $r5;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        byte $b3, $b3_1, $b3_2, $b3_3, $b3_4;
        float[] $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r3 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

(0)     if $r3 == null goto label13;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

(1)     if $i0 == 0 goto label13;

        $i0_1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if $i0_1 != 0 goto label01;

        return;

     label01:
        $r4 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

(2)     if $r4 == null goto label13;

        $r4_1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix prevMatrix>;

(3)     if $r4_1 == null goto label13;

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i0_2 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f0 = (float) $i2;

        $f1 = (float) $i1;

        $f0_1 = $f0 / $f1;

        $i2_1 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f1_1 = (float) $i2_1;

        $f2 = (float) $i0_2;

        $f1_2 = $f1_1 / $f2;

        $r1 = <com.ortiz.touch.TouchImageView$1: int[] $SwitchMap$android$widget$ImageView$ScaleType>;

        $r5 = $r0.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType>;

        $i2_2 = virtualinvoke $r5.<android.widget.ImageView$ScaleType: int ordinal()>();

        $i2_3 = $r1[$i2_2];

(4)     lookupswitch($i2_3)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label05;
            default: goto label02;
        };

     label02:
        goto label03;

     label03:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("TouchImageView does not support FIT_START or FIT_END");

        throw $r2;

     label04:
        $f1_3 = 1.0F;

(5)     $f0_2 = 1.0F;

     label05:
        $f0_3 = Phi($f0_1 #4, $f0_2 #5, $f0_17 #9, $f0_21 #11);

        $f1_4 = Phi($f1_2 #4, $f1_3 #5, $f1_14 #9, $f1_17 #11);

        $i2_4 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f2_1 = (float) $i2_4;

        $f3 = (float) $i1;

        $f3_1 = $f3 * $f0_3;

        $f2_2 = $f2_1 - $f3_1;

        $i2_5 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f3_2 = (float) $i2_5;

        $f4 = (float) $i0_2;

        $f4_1 = $f4 * $f1_4;

        $f3_3 = $f3_2 - $f4_1;

        $i2_6 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f4_2 = (float) $i2_6;

        $f4_3 = $f4_2 - $f2_2;

        $r0.<com.ortiz.touch.TouchImageView: float matchViewWidth> = $f4_3;

        $i2_7 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f4_4 = (float) $i2_7;

        $f4_5 = $f4_4 - $f3_3;

        $r0.<com.ortiz.touch.TouchImageView: float matchViewHeight> = $f4_5;

        $z0 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: boolean isZoomed()>();

(6)     if $z0 != 0 goto label10;

        $z0_1 = $r0.<com.ortiz.touch.TouchImageView: boolean imageRenderedAtLeastOnce>;

(7)     if $z0_1 != 0 goto label10;

        $r4_2 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r4_2.<android.graphics.Matrix: void setScale(float,float)>($f0_3, $f1_4);

        $r4_3 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $f0_4 = $f2_2 / 2.0F;

        $f1_5 = $f3_3 / 2.0F;

        virtualinvoke $r4_3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0_4, $f1_5);

(8)     $r0.<com.ortiz.touch.TouchImageView: float normalizedScale> = 1.0F;

     label06:
        $f0_5 = Phi($f0_4 #8, $f0_16 #15);

        $i1_1 = Phi($i1 #8, $i1_2 #15);

        $i2_8 = Phi($i2_7 #8, $i2_10 #15);

        $f1_6 = Phi($f1_5 #8, $f1_13 #15);

        $f2_3 = Phi($f2_2 #8, $f2_7 #15);

        $z0_2 = Phi($z0_1 #8, $z0_3 #15);

        $r4_4 = Phi($r4_3 #8, $r4_7 #15);

        $b3 = Phi($b3 #8, $b3_4 #15);

        $r6 = Phi($r6 #8, $r6_6 #15);

        $f3_4 = Phi($f3_3 #8, $f3_6 #15);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fixTrans()>();

        $r4_5 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setImageMatrix(android.graphics.Matrix)>($r4_5);

        return;

     label07:
        $f1_14 = staticinvoke <java.lang.Math: float max(float,float)>($f0_1, $f1_2);

        $f0_17 = $f1_14;

(9)     goto label05;

     label08:
        $f0_18 = staticinvoke <java.lang.Math: float min(float,float)>($f0_1, $f1_2);

        $f1_15 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0_18);

(10)    $f0_19 = $f1_15;

     label09:
        $f0_20 = Phi($f0_1 #4, $f0_19 #10);

        $f1_16 = Phi($f1_2 #4, $f1_15 #10);

        $f1_17 = staticinvoke <java.lang.Math: float min(float,float)>($f0_20, $f1_16);

        $f0_21 = $f1_17;

(11)    goto label05;

     label10:
        $z0_3 = Phi($z0 #6, $z0_1 #7);

        $f0_6 = $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewWidth>;

        $b3_1 = $f0_6 cmpl 0.0F;

(12)    if $b3_1 == 0 goto label11;

        $f0_7 = $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewHeight>;

        $b3_2 = $f0_7 cmpl 0.0F;

(13)    if $b3_2 != 0 goto label12;

     label11:
        $f0_8 = Phi($f0_6 #12, $f0_7 #13);

        $b3_3 = Phi($b3_1 #12, $b3_2 #13);

(14)    specialinvoke $r0.<com.ortiz.touch.TouchImageView: void savePreviousImageValues()>();

     label12:
        $f0_9 = Phi($f0_7 #13, $f0_8 #14);

        $b3_4 = Phi($b3_2 #13, $b3_3 #14);

        $r4_6 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix prevMatrix>;

        $r6_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r4_6.<android.graphics.Matrix: void getValues(float[])>($r6_1);

        $r6_2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f0_10 = $r0.<com.ortiz.touch.TouchImageView: float matchViewWidth>;

        $f1_7 = (float) $i1;

        $f0_11 = $f0_10 / $f1_7;

        $f1_8 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $f0_12 = $f0_11 * $f1_8;

        $r6_2[0] = $f0_12;

        $r6_3 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f0_13 = $r0.<com.ortiz.touch.TouchImageView: float matchViewHeight>;

        $f1_9 = (float) $i0_2;

        $f0_14 = $f0_13 / $f1_9;

        $f1_10 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $f0_15 = $f0_14 * $f1_10;

        $r6_3[4] = $f0_15;

        $r6_4 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f1_11 = $r6_4[2];

        $r6_5 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f0_16 = $r6_5[5];

        $f2_4 = $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewWidth>;

        $f3_5 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $f2_5 = $f2_4 * $f3_5;

        $f3_6 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $i2_9 = $r0.<com.ortiz.touch.TouchImageView: int prevViewWidth>;

        $i4 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void translateMatrixAfterRotate(int,float,float,float,int,int,int)>(2, $f1_11, $f2_5, $f3_6, $i2_9, $i4, $i1);

        $f1_12 = $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewHeight>;

        $f2_6 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $f1_13 = $f1_12 * $f2_6;

        $f2_7 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        $i1_2 = $r0.<com.ortiz.touch.TouchImageView: int prevViewHeight>;

        $i2_10 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void translateMatrixAfterRotate(int,float,float,float,int,int,int)>(5, $f0_16, $f1_13, $f2_7, $i1_2, $i2_10, $i0_2);

        $r4_7 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r6_6 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r4_7.<android.graphics.Matrix: void setValues(float[])>($r6_6);

(15)    goto label06;

     label13:
        $i0_3 = Phi($i0 #0, $i0 #1, $i0_1 #2, $i0_1 #3);

        $r4_8 = Phi($r4 #0, $r4 #1, $r4 #2, $r4_1 #3);

        return;
    }

    private void fixScaleTrans()
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Matrix $r1, $r1_1;
        float[] $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5;
        float $f0, $f1, $f0_1, $f1_1, $f0_2, $f0_3, $f0_4, $f1_2, $f0_5, $f1_3, $f0_6, $f1_4, $f0_7, $f0_8, $f0_9, $f1_5;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        byte $b1, $b1_1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fixTrans()>();

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1.<android.graphics.Matrix: void getValues(float[])>($r2);

        $f0 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $i0 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

(0)     if $b1 >= 0 goto label1;

        $r2_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $i0_1 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f0_1 = (float) $i0_1;

        $f1_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $f0_2 = $f0_1 - $f1_1;

        $f0_3 = $f0_2 / 2.0F;

(1)     $r2_1[2] = $f0_3;

     label1:
        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $f0_4 = Phi($f0 #0, $f0_3 #1);

        $f1_2 = Phi($f1 #0, $f1_1 #1);

        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $f0_5 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        $i0_3 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f1_3 = (float) $i0_3;

        $b1_1 = $f0_5 cmpg $f1_3;

(2)     if $b1_1 >= 0 goto label2;

        $r2_3 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $i0_4 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f0_6 = (float) $i0_4;

        $f1_4 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        $f0_7 = $f0_6 - $f1_4;

        $f0_8 = $f0_7 / 2.0F;

(3)     $r2_3[5] = $f0_8;

     label2:
        $i0_5 = Phi($i0_3 #2, $i0_4 #3);

        $f0_9 = Phi($f0_5 #2, $f0_8 #3);

        $f1_5 = Phi($f1_3 #2, $f1_4 #3);

        $r2_4 = Phi($r2_2 #2, $r2_3 #3);

        $r1_1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r2_5 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1_1.<android.graphics.Matrix: void setValues(float[])>($r2_5);

        return;
    }

    private void fixTrans()
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Matrix $r1, $r1_1, $r1_2;
        float[] $r2, $r2_1, $r2_2;
        float $f0, $f1, $f2, $f3, $f0_1, $f2_1, $f3_1, $f1_1;
        int $i0, $i0_1;
        byte $b1, $b1_1, $b1_2, $b1_3;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1.<android.graphics.Matrix: void getValues(float[])>($r2);

        $r2_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f0 = $r2_1[2];

        $r2_2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f1 = $r2_2[5];

        $i0 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f2 = (float) $i0;

        $f3 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $f0_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getFixTrans(float,float,float)>($f0, $f2, $f3);

        $i0_1 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f2_1 = (float) $i0_1;

        $f3_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        $f1_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getFixTrans(float,float,float)>($f1, $f2_1, $f3_1);

        $b1 = $f0_1 cmpl 0.0F;

(0)     if $b1 != 0 goto label1;

        $b1_1 = $f1_1 cmpl 0.0F;

(1)     if $b1_1 == 0 goto label2;

     label1:
        $b1_2 = Phi($b1 #0, $b1_1 #1);

        $r1_1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

(2)     virtualinvoke $r1_1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0_1, $f1_1);

     label2:
        $r1_2 = Phi($r1 #1, $r1_1 #2);

        $b1_3 = Phi($b1_1 #1, $b1_2 #2);

        return;
    }

    private float getFixDragTrans(float, float, float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f2;
        byte $b0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $b0 = $f2 cmpg $f1;

        if $b0 > 0 goto label1;

        return 0.0F;

     label1:
        return $f0;
    }

    private float getFixTrans(float, float, float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f2, $f3, $f2_1, $f2_2, $f3_1, $f1_1, $f1_2, $f1_3, $f1_4, $f3_2, $f2_3;
        byte $b0, $b0_1, $b0_2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f1 := @parameter0: float;

        $f2 := @parameter1: float;

        $f0 := @parameter2: float;

        $b0 = $f0 cmpg $f2;

        if $b0 > 0 goto label2;

        $f3 = 0.0F;

(0)     $f2_1 = $f2 - $f0;

     label1:
        $f2_2 = Phi($f2_1 #0, $f2_3 #1);

        $f3_1 = Phi($f3 #0, $f3_2 #1);

        $b0_1 = $f1 cmpg $f3_1;

        if $b0_1 >= 0 goto label3;

        $f1_1 = neg $f1;

        $f1_2 = $f1_1 + $f3_1;

        return $f1_2;

     label2:
        $f3_2 = $f2 - $f0;

        $f2_3 = 0.0F;

(1)     goto label1;

     label3:
        $b0_2 = $f1 cmpl $f2_2;

        if $b0_2 <= 0 goto label4;

        $f1_3 = neg $f1;

        $f1_4 = $f1_3 + $f2_2;

        return $f1_4;

     label4:
        return 0.0F;
    }

    private float getImageHeight()
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f0_1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 = $r0.<com.ortiz.touch.TouchImageView: float matchViewHeight>;

        $f1 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $f0_1 = $f0 * $f1;

        return $f0_1;
    }

    private float getImageWidth()
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f0_1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 = $r0.<com.ortiz.touch.TouchImageView: float matchViewWidth>;

        $f1 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $f0_1 = $f0 * $f1;

        return $f0_1;
    }

    private void printMatrixInfo()
    {
        com.ortiz.touch.TouchImageView $r0;
        float[] $r1;
        android.graphics.Matrix $r2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6;
        float $f0, $f0_1, $f0_2;
        java.lang.String $r4;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 = newarray (float)[9];

        $r2 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void getValues(float[])>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scale: ");

        $f0 = $r1[0];

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TransX: ");

        $f0_1 = $r1[2];

        $r3_4 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0_1);

        $r3_5 = virtualinvoke $r3_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TransY: ");

        $f0_2 = $r1[5];

        $r3_6 = virtualinvoke $r3_5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0_2);

        $r4 = virtualinvoke $r3_6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DEBUG", $r4);

        return;
    }

    private void savePreviousImageValues()
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Matrix $r1, $r1_1, $r1_2, $r1_3;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4;
        float[] $r2, $r2_1, $r2_2;
        float $f0, $f0_1, $f0_2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

(0)     if $r1 == null goto label1;

        $i0 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

(1)     if $i0 == 0 goto label1;

        $i0_1 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

(2)     if $i0_1 == 0 goto label1;

        $r1_1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1_1.<android.graphics.Matrix: void getValues(float[])>($r2);

        $r1_2 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix prevMatrix>;

        $r2_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1_2.<android.graphics.Matrix: void setValues(float[])>($r2_1);

        $f0 = $r0.<com.ortiz.touch.TouchImageView: float matchViewHeight>;

        $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewHeight> = $f0;

        $f0_1 = $r0.<com.ortiz.touch.TouchImageView: float matchViewWidth>;

        $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewWidth> = $f0_1;

        $i0_2 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $r0.<com.ortiz.touch.TouchImageView: int prevViewHeight> = $i0_2;

        $i0_3 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

(3)     $r0.<com.ortiz.touch.TouchImageView: int prevViewWidth> = $i0_3;

     label1:
        $r2_2 = Phi($r2 #0, $r2 #1, $r2 #2, $r2_1 #3);

        $r1_3 = Phi($r1 #0, $r1 #1, $r1 #2, $r1_2 #3);

        $f0_2 = Phi($f0 #0, $f0 #1, $f0 #2, $f0_1 #3);

        $i0_4 = Phi($i0 #0, $i0 #1, $i0_1 #2, $i0_3 #3);

        return;
    }

    private void scaleImage(double, float, float, boolean)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f3_1, $f2_1, $f5_1, $f5_2, $f2_2, $f3_2, $f2_3, $f2_4, $f4_1, $f3_3, $f2_5, $f2_6, $f3_4;
        boolean $z0;
        android.graphics.Matrix $r1;
        double $d0, $d1, $d1_1, $d0_1, $d0_2, $d0_3;
        byte $b0, $b0_1, $b0_2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $d0 := @parameter0: double;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label3;

        $f2 = $r0.<com.ortiz.touch.TouchImageView: float superMinScale>;

(0)     $f3 = $r0.<com.ortiz.touch.TouchImageView: float superMaxScale>;

     label1:
        $f3_1 = Phi($f3 #0, $f3_4 #2);

        $f2_1 = Phi($f2 #0, $f2_6 #2);

        $f4 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $f5 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $d1 = (double) $f5;

        $d1_1 = $d1 * $d0;

        $f5_1 = (float) $d1_1;

        $r0.<com.ortiz.touch.TouchImageView: float normalizedScale> = $f5_1;

        $f5_2 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $b0 = $f5_2 cmpl $f3_1;

        if $b0 <= 0 goto label4;

        $r0.<com.ortiz.touch.TouchImageView: float normalizedScale> = $f3_1;

        $f2_2 = $f3_1 / $f4;

(1)     $d0_1 = (double) $f2_2;

     label2:
        $b0_1 = Phi($b0 #1, $b0_2 #3, $b0_2 #4);

        $d0_2 = Phi($d0_1 #1, $d0 #3, $d0_3 #4);

        $f3_2 = Phi($f3_1 #1, $f3_3 #3, $f3_3 #4);

        $f2_3 = Phi($f2_2 #1, $f2_1 #3, $f2_5 #4);

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $f2_4 = (float) $d0_2;

        $f4_1 = (float) $d0_2;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f2_4, $f4_1, $f0, $f1);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fixScaleTrans()>();

        return;

     label3:
        $f2_6 = $r0.<com.ortiz.touch.TouchImageView: float minScale>;

        $f3_4 = $r0.<com.ortiz.touch.TouchImageView: float maxScale>;

(2)     goto label1;

     label4:
        $f3_3 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $b0_2 = $f3_3 cmpg $f2_1;

(3)     if $b0_2 >= 0 goto label2;

        $r0.<com.ortiz.touch.TouchImageView: float normalizedScale> = $f2_1;

        $f2_5 = $f2_1 / $f4;

        $d0_3 = (double) $f2_5;

(4)     goto label2;
    }

    private void setState(com.ortiz.touch.TouchImageView$State)
    {
        com.ortiz.touch.TouchImageView $r0;
        com.ortiz.touch.TouchImageView$State $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: com.ortiz.touch.TouchImageView$State;

        $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$State state> = $r1;

        return;
    }

    private int setViewSize(int, int, int)
    {
        com.ortiz.touch.TouchImageView $r0;
        int $i0, $i1, $i2, $i2_1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        lookupswitch($i2)
        {
            case -2147483648: goto label2;
            case 0: goto label3;
            case 1073741824: goto label1;
            default: goto label1;
        };

     label1:
        return $i0;

     label2:
        $i2_1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        return $i2_1;

     label3:
        return $i1;
    }

    private void sharedConstructing(android.content.Context)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.content.Context $r1;
        android.view.ScaleGestureDetector $r2;
        com.ortiz.touch.TouchImageView$ScaleListener $r3;
        android.view.GestureDetector $r4;
        com.ortiz.touch.TouchImageView$GestureListener $r5;
        float[] $r6;
        com.ortiz.touch.TouchImageView$State $r7;
        com.ortiz.touch.TouchImageView$PrivateOnTouchListener $r8;
        android.graphics.Matrix $r9, $r9_1, $r9_2;
        android.widget.ImageView$ScaleType $r10, $r10_1, $r10_2, $r10_3;
        float $f0, $f0_1, $f0_2, $f0_3;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.widget.ImageView: void setClickable(boolean)>(1);

        $r0.<com.ortiz.touch.TouchImageView: android.content.Context context> = $r1;

        $r2 = new android.view.ScaleGestureDetector;

        $r3 = new com.ortiz.touch.TouchImageView$ScaleListener;

        specialinvoke $r3.<com.ortiz.touch.TouchImageView$ScaleListener: void <init>(com.ortiz.touch.TouchImageView,com.ortiz.touch.TouchImageView$1)>($r0, null);

        specialinvoke $r2.<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>($r1, $r3);

        $r0.<com.ortiz.touch.TouchImageView: android.view.ScaleGestureDetector mScaleDetector> = $r2;

        $r4 = new android.view.GestureDetector;

        $r5 = new com.ortiz.touch.TouchImageView$GestureListener;

        specialinvoke $r5.<com.ortiz.touch.TouchImageView$GestureListener: void <init>(com.ortiz.touch.TouchImageView,com.ortiz.touch.TouchImageView$1)>($r0, null);

        specialinvoke $r4.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r1, $r5);

        $r0.<com.ortiz.touch.TouchImageView: android.view.GestureDetector mGestureDetector> = $r4;

        $r9 = new android.graphics.Matrix;

        specialinvoke $r9.<android.graphics.Matrix: void <init>()>();

        $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix> = $r9;

        $r9_1 = new android.graphics.Matrix;

        specialinvoke $r9_1.<android.graphics.Matrix: void <init>()>();

        $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix prevMatrix> = $r9_1;

        $r6 = newarray (float)[9];

        $r0.<com.ortiz.touch.TouchImageView: float[] m> = $r6;

        $r0.<com.ortiz.touch.TouchImageView: float normalizedScale> = 1.0F;

        $r10 = $r0.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType>;

(0)     if $r10 != null goto label1;

        $r10_1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

(1)     $r0.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType> = $r10_1;

     label1:
        $r10_2 = Phi($r10 #0, $r10_1 #1);

        $r0.<com.ortiz.touch.TouchImageView: float minScale> = 1.0F;

        $r0.<com.ortiz.touch.TouchImageView: float maxScale> = 3.0F;

        $f0 = $r0.<com.ortiz.touch.TouchImageView: float minScale>;

        $f0_1 = 0.75F * $f0;

        $r0.<com.ortiz.touch.TouchImageView: float superMinScale> = $f0_1;

        $f0_2 = $r0.<com.ortiz.touch.TouchImageView: float maxScale>;

        $f0_3 = 1.25F * $f0_2;

        $r0.<com.ortiz.touch.TouchImageView: float superMaxScale> = $f0_3;

        $r9_2 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setImageMatrix(android.graphics.Matrix)>($r9_2);

        $r10_3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r10_3);

        $r7 = <com.ortiz.touch.TouchImageView$State: com.ortiz.touch.TouchImageView$State NONE>;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void setState(com.ortiz.touch.TouchImageView$State)>($r7);

        $r0.<com.ortiz.touch.TouchImageView: boolean onDrawReady> = 0;

        $r8 = new com.ortiz.touch.TouchImageView$PrivateOnTouchListener;

        specialinvoke $r8.<com.ortiz.touch.TouchImageView$PrivateOnTouchListener: void <init>(com.ortiz.touch.TouchImageView,com.ortiz.touch.TouchImageView$1)>($r0, null);

        specialinvoke $r0.<android.widget.ImageView: void setOnTouchListener(android.view.View$OnTouchListener)>($r8);

        return;
    }

    private android.graphics.PointF transformCoordBitmapToTouch(float, float)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Matrix $r1;
        android.graphics.PointF $r2;
        float $f0, $f1, $f2, $f3, $f2_1, $f3_1, $f2_2, $f0_1, $f1_1, $f3_2, $f2_3, $f1_2, $f2_4, $f3_3, $f0_2, $f0_3, $f3_4, $f2_5;
        float[] $r3, $r3_1, $r3_2;
        android.graphics.drawable.Drawable $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        int $i0, $i0_1, $i0_2, $i0_3;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r3 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1.<android.graphics.Matrix: void getValues(float[])>($r3);

        $r4 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        if $r4 != null goto label3;

(0)     $f2 = 0.0F;

     label1:
        $r4_1 = Phi($r4 #0, $r4_5 #2);

        $f2_1 = Phi($f2 #0, $f2_5 #2);

        $i0 = Phi($i0 #0, $i0_3 #2);

        $r4_2 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        if $r4_2 != null goto label4;

(1)     $f3 = 0.0F;

     label2:
        $r4_3 = Phi($r4_2 #1, $r4_4 #3);

        $f3_1 = Phi($f3 #1, $f3_4 #3);

        $i0_1 = Phi($i0 #1, $i0_2 #3);

        $f2_2 = $f0 / $f2_1;

        $f0_1 = $f1 / $f3_1;

        $r3_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f1_1 = $r3_1[2];

        $f3_2 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $f2_3 = $f3_2 * $f2_2;

        $f1_2 = $f1_1 + $f2_3;

        $r3_2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f2_4 = $r3_2[5];

        $f3_3 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        $f0_2 = $f3_3 * $f0_1;

        $f0_3 = $f2_4 + $f0_2;

        $r2 = new android.graphics.PointF;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>($f1_2, $f0_3);

        return $r2;

     label3:
        $r4_5 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0_3 = virtualinvoke $r4_5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f2_5 = (float) $i0_3;

(2)     goto label1;

     label4:
        $r4_4 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0_2 = virtualinvoke $r4_4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f3_4 = (float) $i0_2;

(3)     goto label2;
    }

    private android.graphics.PointF transformCoordTouchToBitmap(float, float, boolean)
    {
        com.ortiz.touch.TouchImageView $r0;
        boolean $z0;
        android.graphics.Matrix $r1;
        android.graphics.PointF $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f2_1, $f3_1, $f0_1, $f0_2, $f4_1, $f0_3, $f1_1, $f1_2, $f5_1, $f1_3, $f0_4, $f0_5, $f1_4, $f1_5, $f0_6, $f1_6, $f3_2, $f2_2;
        float[] $r3, $r3_1, $r3_2;
        android.graphics.drawable.Drawable $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        int $i0, $i0_1, $i0_2, $i0_3;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r3 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1.<android.graphics.Matrix: void getValues(float[])>($r3);

        $r4 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        if $r4 != null goto label4;

(0)     $f2 = 0.0F;

     label1:
        $f2_1 = Phi($f2 #0, $f2_2 #4);

        $i0 = Phi($i0 #0, $i0_3 #4);

        $r4_1 = Phi($r4 #0, $r4_5 #4);

        $r4_2 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        if $r4_2 != null goto label5;

(1)     $f3 = 0.0F;

     label2:
        $i0_1 = Phi($i0 #1, $i0_2 #5);

        $r4_3 = Phi($r4_2 #1, $r4_4 #5);

        $f3_1 = Phi($f3 #1, $f3_2 #5);

        $r3_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f4 = $r3_1[2];

        $r3_2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f5 = $r3_2[5];

        $f0_1 = $f0 - $f4;

        $f0_2 = $f0_1 * $f2_1;

        $f4_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $f0_3 = $f0_2 / $f4_1;

        $f1_1 = $f1 - $f5;

        $f1_2 = $f1_1 * $f3_1;

        $f5_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        $f1_3 = $f1_2 / $f5_1;

(2)     if $z0 == 0 goto label3;

        $f0_4 = staticinvoke <java.lang.Math: float max(float,float)>($f0_3, 0.0F);

        $f0_5 = staticinvoke <java.lang.Math: float min(float,float)>($f0_4, $f2_1);

        $f1_4 = staticinvoke <java.lang.Math: float max(float,float)>($f1_3, 0.0F);

(3)     $f1_5 = staticinvoke <java.lang.Math: float min(float,float)>($f1_4, $f3_1);

     label3:
        $f0_6 = Phi($f0_3 #2, $f0_5 #3);

        $f1_6 = Phi($f1_3 #2, $f1_5 #3);

        $r2 = new android.graphics.PointF;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>($f0_6, $f1_6);

        return $r2;

     label4:
        $r4_5 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0_3 = virtualinvoke $r4_5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f2_2 = (float) $i0_3;

(4)     goto label1;

     label5:
        $r4_4 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0_2 = virtualinvoke $r4_4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f3_2 = (float) $i0_2;

(5)     goto label2;
    }

    private void translateMatrixAfterRotate(int, float, float, float, int, int, int)
    {
        com.ortiz.touch.TouchImageView $r0;
        int $i0, $i1, $i2, $i3;
        float[] $r1, $r2, $r1_1, $r1_2;
        float $f0, $f1, $f2, $f3, $f0_1, $f1_1, $f2_1, $f1_2, $f0_2, $f0_3, $f0_4, $f0_5, $f0_6, $f0_7, $f0_8, $f3_1, $f3_2, $f0_9, $f0_10, $f0_11, $f1_3, $f1_4, $f0_12, $f0_13;
        byte $b4, $b4_1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $f3 = (float) $i2;

        $b4 = $f2 cmpg $f3;

        if $b4 >= 0 goto label1;

        $r2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f0_1 = (float) $i2;

        $f1_1 = (float) $i3;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f2_1 = $r1[0];

        $f1_2 = $f1_1 * $f2_1;

        $f0_2 = $f0_1 - $f1_2;

        $f0_3 = $f0_2 * 0.5F;

        $r2[$i0] = $f0_3;

        return;

     label1:
        $b4_1 = $f0 cmpl 0.0F;

        if $b4_1 <= 0 goto label2;

        $r1_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f0_4 = (float) $i2;

        $f0_5 = $f2 - $f0_4;

        $f0_6 = $f0_5 * 0.5F;

        $f0_7 = neg $f0_6;

        $r1_1[$i0] = $f0_7;

        return;

     label2:
        $f0_8 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f3_1 = (float) $i1;

        $f3_2 = $f3_1 * 0.5F;

        $f0_9 = $f0_8 + $f3_2;

        $f0_10 = $f0_9 / $f1;

        $r1_2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f0_11 = $f0_10 * $f2;

        $f1_3 = (float) $i2;

        $f1_4 = $f1_3 * 0.5F;

        $f0_12 = $f0_11 - $f1_4;

        $f0_13 = neg $f0_12;

        $r1_2[$i0] = $f0_13;

        return;
    }

    public boolean canScrollHorizontally(int)
    {
        com.ortiz.touch.TouchImageView $r0;
        int $i0, $i1, $i1_1, $i1_2;
        android.graphics.Matrix $r1;
        float $f0, $f1, $f2, $f0_1, $f1_1, $f0_2, $f0_3, $f1_2, $f1_3, $f0_4;
        float[] $r2, $r2_1;
        byte $b2, $b2_1, $b2_2, $b2_3;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1.<android.graphics.Matrix: void getValues(float[])>($r2);

        $r2_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f1 = $r2_1[2];

        $f2 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $i1 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f0 = (float) $i1;

        $b2 = $f2 cmpg $f0;

        if $b2 >= 0 goto label1;

        return 0;

     label1:
        $b2_1 = $f1 cmpl -1.0F;

        if $b2_1 < 0 goto label2;

(0)     if $i0 < 0 goto label4;

     label2:
        $f0_1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $i1_1 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f1_1 = (float) $i1_1;

        $f0_2 = $f0_1 + $f1_1;

        $f0_3 = $f0_2 + 1.0F;

        $f1_2 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $b2_2 = $f0_3 cmpl $f1_2;

        if $b2_2 < 0 goto label3;

(1)     if $i0 > 0 goto label4;

     label3:
        return 1;

     label4:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        $f1_3 = Phi($f1 #0, $f1_2 #1);

        $b2_3 = Phi($b2_1 #0, $b2_2 #1);

        $f0_4 = Phi($f0 #0, $f0_3 #1);

        return 0;
    }

    public boolean canScrollHorizontallyFroyo(int)
    {
        com.ortiz.touch.TouchImageView $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: boolean canScrollHorizontally(int)>($i0);

        return $z0;
    }

    public float getCurrentZoom()
    {
        com.ortiz.touch.TouchImageView $r0;
        float f0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        f0 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        return f0;
    }

    public float getMaxZoom()
    {
        com.ortiz.touch.TouchImageView $r0;
        float f0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        f0 = $r0.<com.ortiz.touch.TouchImageView: float maxScale>;

        return f0;
    }

    public float getMinZoom()
    {
        com.ortiz.touch.TouchImageView $r0;
        float f0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        f0 = $r0.<com.ortiz.touch.TouchImageView: float minScale>;

        return f0;
    }

    public android.widget.ImageView$ScaleType getScaleType()
    {
        com.ortiz.touch.TouchImageView $r0;
        android.widget.ImageView$ScaleType r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        r1 = $r0.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType>;

        return r1;
    }

    public android.graphics.PointF getScrollPosition()
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2, $i2_1, $i2_2, $i2_3;
        float $f0, $f1, $f0_1, $f1_1, $f0_2, $f0_3, $f1_2, $f0_4;
        android.graphics.PointF $r2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $i2_1 = $i2 / 2;

        $f0 = (float) $i2_1;

        $i2_2 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $i2_3 = $i2_2 / 2;

        $f1 = (float) $i2_3;

        $r2 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.PointF transformCoordTouchToBitmap(float,float,boolean)>($f0, $f1, 1);

        $f0_1 = $r2.<android.graphics.PointF: float x>;

        $f1_1 = (float) $i0;

        $f0_2 = $f0_1 / $f1_1;

        $r2.<android.graphics.PointF: float x> = $f0_2;

        $f0_3 = $r2.<android.graphics.PointF: float y>;

        $f1_2 = (float) $i1;

        $f0_4 = $f0_3 / $f1_2;

        $r2.<android.graphics.PointF: float y> = $f0_4;

        return $r2;
    }

    public android.graphics.RectF getZoomedRect()
    {
        android.widget.ImageView$ScaleType $r0, $r1;
        java.lang.UnsupportedOperationException $r2;
        android.graphics.RectF $r3;
        com.ortiz.touch.TouchImageView $r4;
        android.graphics.PointF $r5, $r6;
        int $i0, $i0_1, $i0_2, $i0_3;
        float $f0, $f1, $f2, $f3, $f4, $f0_1, $f1_1, $f1_2, $f3_1, $f2_1, $f4_1, $f0_2;
        android.graphics.drawable.Drawable $r7, $r7_1;

        $r4 := @this: com.ortiz.touch.TouchImageView;

        $r0 = $r4.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType>;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        if $r0 != $r1 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getZoomedRect() not supported with FIT_XY");

        throw $r2;

     label1:
        $r5 = specialinvoke $r4.<com.ortiz.touch.TouchImageView: android.graphics.PointF transformCoordTouchToBitmap(float,float,boolean)>(0.0F, 0.0F, 1);

        $i0 = $r4.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f0 = (float) $i0;

        $i0_1 = $r4.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f1 = (float) $i0_1;

        $r6 = specialinvoke $r4.<com.ortiz.touch.TouchImageView: android.graphics.PointF transformCoordTouchToBitmap(float,float,boolean)>($f0, $f1, 1);

        $r7 = virtualinvoke $r4.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0_2 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f2 = (float) $i0_2;

        $r7_1 = virtualinvoke $r4.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i0_3 = virtualinvoke $r7_1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f0_1 = (float) $i0_3;

        $r3 = new android.graphics.RectF;

        $f1_1 = $r5.<android.graphics.PointF: float x>;

        $f1_2 = $f1_1 / $f2;

        $f3 = $r5.<android.graphics.PointF: float y>;

        $f3_1 = $f3 / $f0_1;

        $f4 = $r6.<android.graphics.PointF: float x>;

        $f2_1 = $f4 / $f2;

        $f4_1 = $r6.<android.graphics.PointF: float y>;

        $f0_2 = $f4_1 / $f0_1;

        specialinvoke $r3.<android.graphics.RectF: void <init>(float,float,float,float)>($f1_2, $f3_1, $f2_1, $f0_2);

        return $r3;
    }

    public boolean isZoomed()
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0;
        byte $b0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.content.res.Configuration $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke $r0.<android.widget.ImageView: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void savePreviousImageValues()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2;
        android.widget.ImageView$ScaleType $r2;
        com.ortiz.touch.TouchImageView$ZoomVariables $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r0.<com.ortiz.touch.TouchImageView: boolean onDrawReady> = 1;

        $r0.<com.ortiz.touch.TouchImageView: boolean imageRenderedAtLeastOnce> = 1;

        $r3 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables>;

(0)     if $r3 == null goto label1;

        $r3_1 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables>;

        $f0 = $r3_1.<com.ortiz.touch.TouchImageView$ZoomVariables: float scale>;

        $r3_2 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables>;

        $f1 = $r3_2.<com.ortiz.touch.TouchImageView$ZoomVariables: float focusX>;

        $r3_3 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables>;

        $f2 = $r3_3.<com.ortiz.touch.TouchImageView$ZoomVariables: float focusY>;

        $r3_4 = $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables>;

        $r2 = $r3_4.<com.ortiz.touch.TouchImageView$ZoomVariables: android.widget.ImageView$ScaleType scaleType>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setZoom(float,float,float,android.widget.ImageView$ScaleType)>($f0, $f1, $f2, $r2);

(1)     $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables> = null;

     label1:
        $r3_5 = Phi($r3 #0, $r3_4 #1);

        specialinvoke $r0.<android.widget.ImageView: void onDraw(android.graphics.Canvas)>($r1);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.ortiz.touch.TouchImageView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i2_1, $i2_2, $i0_1, $i1_1, $i3_1, $i0_2, $i0_3, $i1_2, $i2_3;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke $r0.<com.ortiz.touch.TouchImageView: android.graphics.drawable.Drawable getDrawable()>();

(0)     if $r1 == null goto label1;

        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

(1)     if $i2 == 0 goto label1;

        $i2_1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

(2)     if $i2_1 != 0 goto label2;

     label1:
        $i2_3 = Phi($i2 #0, $i2 #1, $i2_1 #2);

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setMeasuredDimension(int,int)>(0, 0);

        return;

     label2:
        $i3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i2_2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0_1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i1_1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i3_1 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: int setViewSize(int,int,int)>($i5, $i4, $i3);

        $r0.<com.ortiz.touch.TouchImageView: int viewWidth> = $i3_1;

        $i0_2 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: int setViewSize(int,int,int)>($i1_1, $i0_1, $i2_2);

        $r0.<com.ortiz.touch.TouchImageView: int viewHeight> = $i0_2;

        $i0_3 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $i1_2 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setMeasuredDimension(int,int)>($i0_3, $i1_2);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fitImageToView()>();

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Matrix $r1;
        android.os.Parcelable $r2, $r2_1;
        boolean $z0, $z0_1;
        android.os.Bundle $r3;
        float $f0, $f0_1, $f0_2;
        float[] $r4, $r4_1;
        int $i0, $i0_1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r2 := @parameter0: android.os.Parcelable;

        $z0 = $r2 instanceof android.os.Bundle;

        if $z0 == 0 goto label1;

        $r3 = (android.os.Bundle) $r2;

        $f0 = virtualinvoke $r3.<android.os.Bundle: float getFloat(java.lang.String)>("saveScale");

        $r0.<com.ortiz.touch.TouchImageView: float normalizedScale> = $f0;

        $r4 = virtualinvoke $r3.<android.os.Bundle: float[] getFloatArray(java.lang.String)>("matrix");

        $r0.<com.ortiz.touch.TouchImageView: float[] m> = $r4;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix prevMatrix>;

        $r4_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1.<android.graphics.Matrix: void setValues(float[])>($r4_1);

        $f0_1 = virtualinvoke $r3.<android.os.Bundle: float getFloat(java.lang.String)>("matchViewHeight");

        $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewHeight> = $f0_1;

        $f0_2 = virtualinvoke $r3.<android.os.Bundle: float getFloat(java.lang.String)>("matchViewWidth");

        $r0.<com.ortiz.touch.TouchImageView: float prevMatchViewWidth> = $f0_2;

        $i0 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("viewHeight");

        $r0.<com.ortiz.touch.TouchImageView: int prevViewHeight> = $i0;

        $i0_1 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("viewWidth");

        $r0.<com.ortiz.touch.TouchImageView: int prevViewWidth> = $i0_1;

        $z0_1 = virtualinvoke $r3.<android.os.Bundle: boolean getBoolean(java.lang.String)>("imageRendered");

        $r0.<com.ortiz.touch.TouchImageView: boolean imageRenderedAtLeastOnce> = $z0_1;

        $r2_1 = virtualinvoke $r3.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("instanceState");

        specialinvoke $r0.<android.widget.ImageView: void onRestoreInstanceState(android.os.Parcelable)>($r2_1);

        return;

     label1:
        specialinvoke $r0.<android.widget.ImageView: void onRestoreInstanceState(android.os.Parcelable)>($r2);

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.ortiz.touch.TouchImageView $r0;
        android.os.Bundle $r1;
        android.graphics.Matrix $r2;
        boolean $z0;
        android.os.Parcelable $r3;
        float $f0, $f0_1, $f0_2;
        int $i0, $i0_1;
        float[] $r4, $r4_1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $r3 = specialinvoke $r0.<android.widget.ImageView: android.os.Parcelable onSaveInstanceState()>();

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("instanceState", $r3);

        $f0 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        virtualinvoke $r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("saveScale", $f0);

        $f0_1 = $r0.<com.ortiz.touch.TouchImageView: float matchViewHeight>;

        virtualinvoke $r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("matchViewHeight", $f0_1);

        $f0_2 = $r0.<com.ortiz.touch.TouchImageView: float matchViewWidth>;

        virtualinvoke $r1.<android.os.Bundle: void putFloat(java.lang.String,float)>("matchViewWidth", $f0_2);

        $i0 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("viewWidth", $i0);

        $i0_1 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("viewHeight", $i0_1);

        $r2 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r4 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r2.<android.graphics.Matrix: void getValues(float[])>($r4);

        $r4_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r1.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>("matrix", $r4_1);

        $z0 = $r0.<com.ortiz.touch.TouchImageView: boolean imageRenderedAtLeastOnce>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("imageRendered", $z0);

        return $r1;
    }

    public void resetZoom()
    {
        com.ortiz.touch.TouchImageView $r0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r0.<com.ortiz.touch.TouchImageView: float normalizedScale> = 1.0F;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fitImageToView()>();

        return;
    }

    public void setImageBitmap(android.graphics.Bitmap)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.Bitmap $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke $r0.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r1);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void savePreviousImageValues()>();

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fitImageToView()>();

        return;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke $r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void savePreviousImageValues()>();

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fitImageToView()>();

        return;
    }

    public void setImageResource(int)
    {
        com.ortiz.touch.TouchImageView $r0;
        int $i0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.widget.ImageView: void setImageResource(int)>($i0);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void savePreviousImageValues()>();

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fitImageToView()>();

        return;
    }

    public void setImageURI(android.net.Uri)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.net.Uri $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.net.Uri;

        specialinvoke $r0.<android.widget.ImageView: void setImageURI(android.net.Uri)>($r1);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void savePreviousImageValues()>();

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fitImageToView()>();

        return;
    }

    public void setMaxZoom(float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f0_1, $f0_2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        $r0.<com.ortiz.touch.TouchImageView: float maxScale> = $f0;

        $f0_1 = $r0.<com.ortiz.touch.TouchImageView: float maxScale>;

        $f0_2 = 1.25F * $f0_1;

        $r0.<com.ortiz.touch.TouchImageView: float superMaxScale> = $f0_2;

        return;
    }

    public void setMinZoom(float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f0_1, $f0_2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        $r0.<com.ortiz.touch.TouchImageView: float minScale> = $f0;

        $f0_1 = $r0.<com.ortiz.touch.TouchImageView: float minScale>;

        $f0_2 = 0.75F * $f0_1;

        $r0.<com.ortiz.touch.TouchImageView: float superMinScale> = $f0_2;

        return;
    }

    public void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.view.GestureDetector$OnDoubleTapListener $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.view.GestureDetector$OnDoubleTapListener;

        $r0.<com.ortiz.touch.TouchImageView: android.view.GestureDetector$OnDoubleTapListener doubleTapListener> = $r1;

        return;
    }

    public void setOnTouchImageViewListener(com.ortiz.touch.TouchImageView$OnTouchImageViewListener)
    {
        com.ortiz.touch.TouchImageView $r0;
        com.ortiz.touch.TouchImageView$OnTouchImageViewListener $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: com.ortiz.touch.TouchImageView$OnTouchImageViewListener;

        $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$OnTouchImageViewListener touchImageViewListener> = $r1;

        return;
    }

    public void setOnTouchListener(android.view.View$OnTouchListener)
    {
        com.ortiz.touch.TouchImageView $r0;
        android.view.View$OnTouchListener $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: android.view.View$OnTouchListener;

        $r0.<com.ortiz.touch.TouchImageView: android.view.View$OnTouchListener userTouchListener> = $r1;

        return;
    }

    public void setScaleType(android.widget.ImageView$ScaleType)
    {
        com.ortiz.touch.TouchImageView $r0;
        java.lang.UnsupportedOperationException $r1;
        boolean $z0;
        android.widget.ImageView$ScaleType $r2, $r3, $r3_1, $r3_2, $r2_1, $r3_3;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r2 := @parameter0: android.widget.ImageView$ScaleType;

        $r3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_START>;

(0)     if $r2 == $r3 goto label1;

        $r3_1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_END>;

(1)     if $r2 != $r3_1 goto label2;

     label1:
        $r3_3 = Phi($r3 #0, $r3_1 #1);

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("TouchImageView does not support FIT_START or FIT_END");

        throw $r1;

     label2:
        $r3_2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        if $r2 != $r3_2 goto label3;

        $r2_1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        specialinvoke $r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r2_1);

        return;

     label3:
        $r0.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType> = $r2;

        $z0 = $r0.<com.ortiz.touch.TouchImageView: boolean onDrawReady>;

        if $z0 == 0 goto label4;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setZoom(com.ortiz.touch.TouchImageView)>($r0);

     label4:
        return;
    }

    public void setScrollPosition(float, float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f2;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = $r0.<com.ortiz.touch.TouchImageView: float normalizedScale>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setZoom(float,float,float)>($f2, $f0, $f1);

        return;
    }

    public void setZoom(float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setZoom(float,float,float)>($f0, 0.5F, 0.5F);

        return;
    }

    public void setZoom(float, float, float)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f2;
        android.widget.ImageView$ScaleType $r1;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 = $r0.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setZoom(float,float,float,android.widget.ImageView$ScaleType)>($f0, $f1, $f2, $r1);

        return;
    }

    public void setZoom(float, float, float, android.widget.ImageView$ScaleType)
    {
        com.ortiz.touch.TouchImageView $r0;
        float $f0, $f1, $f2, $f3, $f1_1, $f1_2, $f1_3, $f2_1, $f2_2, $f1_4, $f1_5, $f1_6, $f1_7, $f2_3, $f2_4, $f1_8, $f1_9;
        android.widget.ImageView$ScaleType $r1, $r3;
        boolean $z0;
        com.ortiz.touch.TouchImageView$ZoomVariables $r2;
        double $d0;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        android.graphics.Matrix $r4, $r4_1, $r4_2;
        float[] $r5, $r5_1, $r5_2, $r5_3;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $f1 := @parameter0: float;

        $f2 := @parameter1: float;

        $f0 := @parameter2: float;

        $r1 := @parameter3: android.widget.ImageView$ScaleType;

        $z0 = $r0.<com.ortiz.touch.TouchImageView: boolean onDrawReady>;

        if $z0 != 0 goto label1;

        $r2 = new com.ortiz.touch.TouchImageView$ZoomVariables;

        specialinvoke $r2.<com.ortiz.touch.TouchImageView$ZoomVariables: void <init>(com.ortiz.touch.TouchImageView,float,float,float,android.widget.ImageView$ScaleType)>($r0, $f1, $f2, $f0, $r1);

        $r0.<com.ortiz.touch.TouchImageView: com.ortiz.touch.TouchImageView$ZoomVariables delayedZoomVariables> = $r2;

        return;

     label1:
        $r3 = $r0.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r1 == $r3 goto label2;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r1);

     label2:
        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void resetZoom()>();

        $d0 = (double) $f1;

        $i0 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $i0_1 = $i0 / 2;

        $f3 = (float) $i0_1;

        $i0_2 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $i0_3 = $i0_2 / 2;

        $f1_1 = (float) $i0_3;

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void scaleImage(double,float,float,boolean)>($d0, $f3, $f1_1, 1);

        $r4 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r5 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r4.<android.graphics.Matrix: void getValues(float[])>($r5);

        $r5_1 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f1_2 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageWidth()>();

        $f1_3 = $f1_2 * $f2;

        $i0_4 = $r0.<com.ortiz.touch.TouchImageView: int viewWidth>;

        $f2_1 = (float) $i0_4;

        $f2_2 = $f2_1 * 0.5F;

        $f1_4 = $f1_3 - $f2_2;

        $f1_5 = neg $f1_4;

        $r5_1[2] = $f1_5;

        $r5_2 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        $f1_6 = specialinvoke $r0.<com.ortiz.touch.TouchImageView: float getImageHeight()>();

        $f1_7 = $f1_6 * $f0;

        $i0_5 = $r0.<com.ortiz.touch.TouchImageView: int viewHeight>;

        $f2_3 = (float) $i0_5;

        $f2_4 = $f2_3 * 0.5F;

        $f1_8 = $f1_7 - $f2_4;

        $f1_9 = neg $f1_8;

        $r5_2[5] = $f1_9;

        $r4_1 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        $r5_3 = $r0.<com.ortiz.touch.TouchImageView: float[] m>;

        virtualinvoke $r4_1.<android.graphics.Matrix: void setValues(float[])>($r5_3);

        specialinvoke $r0.<com.ortiz.touch.TouchImageView: void fixTrans()>();

        $r4_2 = $r0.<com.ortiz.touch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setImageMatrix(android.graphics.Matrix)>($r4_2);

        return;
    }

    public void setZoom(com.ortiz.touch.TouchImageView)
    {
        com.ortiz.touch.TouchImageView $r0, $r1;
        float $f0, $f1, $f2;
        android.graphics.PointF $r2, $r3, $r3_1, $r3_2;
        android.widget.ImageView$ScaleType $r4;

        $r0 := @this: com.ortiz.touch.TouchImageView;

        $r1 := @parameter0: com.ortiz.touch.TouchImageView;

        $r2 = virtualinvoke $r1.<com.ortiz.touch.TouchImageView: android.graphics.PointF getScrollPosition()>();

        $r3 = $r2;

(0)     if $r2 != null goto label1;

        $r3_1 = new android.graphics.PointF;

(1)     specialinvoke $r3_1.<android.graphics.PointF: void <init>(float,float)>(0.0F, 0.0F);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $f2 = virtualinvoke $r1.<com.ortiz.touch.TouchImageView: float getCurrentZoom()>();

        $f0 = $r3_2.<android.graphics.PointF: float x>;

        $f1 = $r3_2.<android.graphics.PointF: float y>;

        $r4 = virtualinvoke $r1.<com.ortiz.touch.TouchImageView: android.widget.ImageView$ScaleType getScaleType()>();

        virtualinvoke $r0.<com.ortiz.touch.TouchImageView: void setZoom(float,float,float,android.widget.ImageView$ScaleType)>($f2, $f0, $f1, $r4);

        return;
    }
}
