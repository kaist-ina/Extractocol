public class ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient extends ch.boye.httpclientandroidlib.impl.client.DefaultHttpClient
{

    public void <init>()
    {
        ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.DefaultHttpClient: void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionManager,ch.boye.httpclientandroidlib.params.HttpParams)>(null, null);

        return;
    }

    public void <init>(ch.boye.httpclientandroidlib.params.HttpParams)
    {
        ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient $r0;
        ch.boye.httpclientandroidlib.params.HttpParams $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.params.HttpParams;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.DefaultHttpClient: void <init>(ch.boye.httpclientandroidlib.conn.ClientConnectionManager,ch.boye.httpclientandroidlib.params.HttpParams)>(null, $r1);

        return;
    }

    protected ch.boye.httpclientandroidlib.conn.ClientConnectionManager createClientConnectionManager()
    {
        ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient $r0;
        ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager $r1;
        java.lang.String $r2, $r4, $r2_1, $r2_2;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r3;
        boolean $z0;
        int $i0, $i0_1, $i0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient;

        $r1 = new ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager;

        $r3 = staticinvoke <ch.boye.httpclientandroidlib.impl.conn.SchemeRegistryFactory: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry createSystemDefault()>();

        specialinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager: void <init>(ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry)>($r3);

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.keepAlive");

        $r2 = "true";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

(0)     if $z0 == 0 goto label1;

        $r2_1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("http.maxConnections", "5");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2_1);

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager: void setDefaultMaxPerRoute(int)>($i0);

        $i0_1 = $i0 * 2;

(1)     virtualinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.PoolingClientConnectionManager: void setMaxTotal(int)>($i0_1);

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $i0_2 = Phi($i0 #0, $i0_1 #1);

        return $r1;
    }

    protected ch.boye.httpclientandroidlib.ConnectionReuseStrategy createConnectionReuseStrategy()
    {
        ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient $r0;
        java.lang.String $r1, $r4;
        ch.boye.httpclientandroidlib.impl.DefaultConnectionReuseStrategy $r2;
        ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy $r3;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient;

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.keepAlive");

        $r1 = "true";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r2 = new ch.boye.httpclientandroidlib.impl.DefaultConnectionReuseStrategy;

        specialinvoke $r2.<ch.boye.httpclientandroidlib.impl.DefaultConnectionReuseStrategy: void <init>()>();

        return $r2;

     label1:
        $r3 = new ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy;

        specialinvoke $r3.<ch.boye.httpclientandroidlib.impl.NoConnectionReuseStrategy: void <init>()>();

        return $r3;
    }

    protected ch.boye.httpclientandroidlib.conn.routing.HttpRoutePlanner createHttpRoutePlanner()
    {
        ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient $r0;
        ch.boye.httpclientandroidlib.impl.conn.ProxySelectorRoutePlanner $r1;
        ch.boye.httpclientandroidlib.conn.ClientConnectionManager $r2;
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r3;
        java.net.ProxySelector $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient;

        $r1 = new ch.boye.httpclientandroidlib.impl.conn.ProxySelectorRoutePlanner;

        $r2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.SystemDefaultHttpClient: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>();

        $r3 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.ClientConnectionManager: ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>();

        specialinvoke $r1.<ch.boye.httpclientandroidlib.impl.conn.ProxySelectorRoutePlanner: void <init>(ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry,java.net.ProxySelector)>($r3, $r4);

        return $r1;
    }
}
