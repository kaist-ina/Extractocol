public class io.fabric.sdk.android.services.common.ApiKey extends java.lang.Object
{
    static final java.lang.String CRASHLYTICS_API_KEY;
    static final java.lang.String FABRIC_API_KEY;

    public void <init>()
    {
        io.fabric.sdk.android.services.common.ApiKey $r0;

        $r0 := @this: io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getApiKey(android.content.Context)
    {
        android.content.Context $r0;
        io.fabric.sdk.android.services.common.ApiKey $r1;
        io.fabric.sdk.android.Logger $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("Fabric", "getApiKey(context) is deprecated, please upgrade kit(s) to the latest version.");

        $r1 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r1.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r3 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r0);

        return $r3;
    }

    public static java.lang.String getApiKey(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;
        io.fabric.sdk.android.services.common.ApiKey $r1;
        io.fabric.sdk.android.Logger $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void w(java.lang.String,java.lang.String)>("Fabric", "getApiKey(context, debug) is deprecated, please upgrade kit(s) to the latest version.");

        $r1 = new io.fabric.sdk.android.services.common.ApiKey;

        specialinvoke $r1.<io.fabric.sdk.android.services.common.ApiKey: void <init>()>();

        $r3 = virtualinvoke $r1.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getValue(android.content.Context)>($r0);

        return $r3;
    }

    protected java.lang.String buildApiKeyInstructions()
    {
        io.fabric.sdk.android.services.common.ApiKey $r0;

        $r0 := @this: io.fabric.sdk.android.services.common.ApiKey;

        return "Fabric could not be initialized, API key missing from AndroidManifest.xml. Add the following tag to your Application element \n\t<meta-data android:name=\"io.fabric.ApiKey\" android:value=\"YOUR_API_KEY\"/>";
    }

    protected java.lang.String getApiKeyFromManifest(android.content.Context)
    {
        io.fabric.sdk.android.services.common.ApiKey $r0;
        android.content.Context $r1;
        android.os.Bundle $r2;
        java.lang.Exception $r3;
        java.lang.String $r4, $r5, $r5_1, $r4_1, $r4_2, $r5_2, $r4_3, $r5_3;
        android.content.pm.PackageManager $r6;
        android.content.pm.ApplicationInfo $r7;
        io.fabric.sdk.android.Logger $r8, $r8_1, $r8_2;
        java.lang.StringBuilder $r9, $r9_1, $r9_2;

        $r0 := @this: io.fabric.sdk.android.services.common.ApiKey;

        $r1 := @parameter0: android.content.Context;

(0)     $r4 = null;

     label1:
        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r5, 128);

        $r2 = $r7.<android.content.pm.PackageItemInfo: android.os.Bundle metaData>;

     label2:
        if $r2 == null goto label8;

     label3:
(1)     $r5_1 = virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("io.fabric.ApiKey");

     label4:
        $r4_1 = $r5_1;

(2)     if $r5_1 != null goto label9;

     label5:
        $r8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r8.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Falling back to Crashlytics key lookup from Manifest");

(3)     $r4_2 = virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.crashlytics.ApiKey");

     label6:
        return $r4_2;

     label7:
        $r3 := @caughtexception;

        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r8_1 = Phi($r8 #0);

        $r4_3 = Phi($r4 #0, $r4_1 #2, $r4_2 #3);

        $r8_2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9_1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught non-fatal exception while retrieving apiKey: ");

        $r9_2 = virtualinvoke $r9_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5_3 = virtualinvoke $r9_2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8_2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r5_3);

        return $r4_3;

     label8:
        return null;

     label9:
        return $r5_1;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    protected java.lang.String getApiKeyFromStrings(android.content.Context)
    {
        io.fabric.sdk.android.services.common.ApiKey $r0;
        android.content.Context $r1;
        int $i0, $i1, $i1_1, $i1_2;
        io.fabric.sdk.android.Logger $r2;
        android.content.res.Resources $r3;
        java.lang.String $r4;

        $r0 := @this: io.fabric.sdk.android.services.common.ApiKey;

        $r1 := @parameter0: android.content.Context;

        $i0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: int getResourcesIdentifier(android.content.Context,java.lang.String,java.lang.String)>($r1, "io.fabric.ApiKey", "string");

        $i1 = $i0;

(0)     if $i0 != 0 goto label1;

        $r2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", "Falling back to Crashlytics key lookup from Strings");

(1)     $i1_1 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: int getResourcesIdentifier(android.content.Context,java.lang.String,java.lang.String)>($r1, "com.crashlytics.ApiKey", "string");

     label1:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        if $i1_2 == 0 goto label2;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>($i1_2);

        return $r4;

     label2:
        return null;
    }

    public java.lang.String getValue(android.content.Context)
    {
        io.fabric.sdk.android.services.common.ApiKey $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        boolean $z0, $z0_1;

        $r0 := @this: io.fabric.sdk.android.services.common.ApiKey;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKeyFromManifest(android.content.Context)>($r1);

        $r3 = $r2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKeyFromStrings(android.content.Context)>($r1);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $z0_1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3_2);

        if $z0_1 == 0 goto label2;

        virtualinvoke $r0.<io.fabric.sdk.android.services.common.ApiKey: void logErrorOrThrowException(android.content.Context)>($r1);

     label2:
        return $r3_2;
    }

    protected void logErrorOrThrowException(android.content.Context)
    {
        io.fabric.sdk.android.services.common.ApiKey $r0;
        android.content.Context $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z0_1, $z0_2;
        java.lang.String $r3, $r3_1;
        io.fabric.sdk.android.Logger $r4;

        $r0 := @this: io.fabric.sdk.android.services.common.ApiKey;

        $r1 := @parameter0: android.content.Context;

        $z0 = staticinvoke <io.fabric.sdk.android.Fabric: boolean isDebuggable()>();

(0)     if $z0 != 0 goto label1;

        $z0_1 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isAppDebuggable(android.content.Context)>($r1);

(1)     if $z0_1 == 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r2 = new java.lang.IllegalArgumentException;

        $r3_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String buildApiKeyInstructions()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3_1);

        throw $r2;

     label2:
        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r3 = virtualinvoke $r0.<io.fabric.sdk.android.services.common.ApiKey: java.lang.String buildApiKeyInstructions()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String)>("Fabric", $r3);

        return;
    }
}
