public abstract class java.nio.CharBuffer extends java.nio.Buffer implements java.lang.Comparable, java.lang.CharSequence, java.lang.Appendable, java.lang.Readable
{

    void <init>()
    {
        java.nio.CharBuffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        specialinvoke r0.<java.nio.Buffer: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.nio.CharBuffer allocate(int)
    {
        int i0;
        java.lang.RuntimeException $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public static java.nio.CharBuffer wrap(char[])
    {
        char[] r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: char[];

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.nio.CharBuffer wrap(char[], int, int)
    {
        char[] r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.nio.CharBuffer wrap(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.nio.CharBuffer wrap(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final char[] array()
    {
        java.nio.CharBuffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int arrayOffset()
    {
        java.nio.CharBuffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.nio.CharBuffer asReadOnlyBuffer();

    public final char charAt(int)
    {
        java.nio.CharBuffer r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.nio.CharBuffer compact();

    public int compareTo(java.nio.CharBuffer)
    {
        java.nio.CharBuffer r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.nio.CharBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract java.nio.CharBuffer duplicate();

    public boolean equals(java.lang.Object)
    {
        java.nio.CharBuffer r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract char get();

    public java.nio.CharBuffer get(char[])
    {
        java.nio.CharBuffer r0;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: char[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.nio.CharBuffer get(char[], int, int)
    {
        java.nio.CharBuffer r0;
        char[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract char get(int);

    public final boolean hasArray()
    {
        java.nio.CharBuffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int hashCode()
    {
        java.nio.CharBuffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract boolean isDirect();

    public final int length()
    {
        java.nio.CharBuffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.nio.ByteOrder order();

    public abstract java.nio.CharBuffer put(char);

    public final java.nio.CharBuffer put(char[])
    {
        java.nio.CharBuffer r0;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: char[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.nio.CharBuffer put(char[], int, int)
    {
        java.nio.CharBuffer r0;
        char[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.nio.CharBuffer put(java.nio.CharBuffer)
    {
        java.nio.CharBuffer r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.nio.CharBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract java.nio.CharBuffer put(int, char);

    public final java.nio.CharBuffer put(java.lang.String)
    {
        java.nio.CharBuffer r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.nio.CharBuffer put(java.lang.String, int, int)
    {
        java.nio.CharBuffer r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract java.nio.CharBuffer slice();

    public abstract java.nio.CharBuffer subSequence(int, int);

    public java.lang.String toString()
    {
        java.nio.CharBuffer r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.nio.CharBuffer append(char)
    {
        java.nio.CharBuffer r0;
        char c0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.CharBuffer;

        c0 := @parameter0: char;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.nio.CharBuffer append(java.lang.CharSequence)
    {
        java.nio.CharBuffer r0;
        java.lang.CharSequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.nio.CharBuffer append(java.lang.CharSequence, int, int)
    {
        java.nio.CharBuffer r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int read(java.nio.CharBuffer) throws java.io.IOException
    {
        java.nio.CharBuffer r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.nio.CharBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public volatile java.lang.Object array()
    {
        java.nio.CharBuffer r0;
        char[] $r1;

        r0 := @this: java.nio.CharBuffer;

        $r1 = virtualinvoke r0.<java.nio.CharBuffer: char[] array()>();

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.nio.CharBuffer r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.nio.CharBuffer) r1;

        $i0 = virtualinvoke r0.<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>($r2);

        return $i0;
    }

    public volatile java.lang.CharSequence subSequence(int, int)
    {
        java.nio.CharBuffer r0, $r1;
        int i0, i1;

        r0 := @this: java.nio.CharBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer subSequence(int,int)>(i0, i1);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.nio.CharBuffer r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.nio.CharBuffer r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.nio.CharBuffer;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        java.nio.CharBuffer r0, $r1;
        char c0;

        r0 := @this: java.nio.CharBuffer;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.nio.CharBuffer: java.nio.CharBuffer append(char)>(c0);

        return $r1;
    }
}
