public abstract class io.fabric.sdk.android.services.events.EventsFilesManager extends java.lang.Object
{
    public static final int MAX_BYTE_SIZE_PER_FILE;
    public static final int MAX_FILES_IN_BATCH;
    public static final int MAX_FILES_TO_KEEP;
    public static final java.lang.String ROLL_OVER_FILE_NAME_SEPARATOR;
    protected final android.content.Context context;
    protected final io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider;
    private final int defaultMaxFilesToKeep;
    protected final io.fabric.sdk.android.services.events.EventsStorage eventStorage;
    protected volatile long lastRollOverTime;
    protected final java.util.List rollOverListeners;
    protected final io.fabric.sdk.android.services.events.EventTransform transform;

    public void <init>(android.content.Context, io.fabric.sdk.android.services.events.EventTransform, io.fabric.sdk.android.services.common.CurrentTimeProvider, io.fabric.sdk.android.services.events.EventsStorage, int) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        io.fabric.sdk.android.services.events.EventTransform $r1;
        io.fabric.sdk.android.services.events.EventsStorage $r2;
        int $i0;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        android.content.Context $r4, $r4_1;
        io.fabric.sdk.android.services.common.CurrentTimeProvider $r5, $r5_1;
        long $l1;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r4 := @parameter0: android.content.Context;

        $r1 := @parameter1: io.fabric.sdk.android.services.events.EventTransform;

        $r5 := @parameter2: io.fabric.sdk.android.services.common.CurrentTimeProvider;

        $r2 := @parameter3: io.fabric.sdk.android.services.events.EventsStorage;

        $i0 := @parameter4: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: java.util.List rollOverListeners> = $r3;

        $r4_1 = virtualinvoke $r4.<android.content.Context: android.content.Context getApplicationContext()>();

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: android.content.Context context> = $r4_1;

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventTransform transform> = $r1;

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage> = $r2;

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider> = $r5;

        $r5_1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider>;

        $l1 = interfaceinvoke $r5_1.<io.fabric.sdk.android.services.common.CurrentTimeProvider: long getCurrentTimeMillis()>();

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: long lastRollOverTime> = $l1;

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: int defaultMaxFilesToKeep> = $i0;

        return;
    }

    private void rollFileOverIfNeeded(int) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        android.content.Context $r3;
        int $i0, $i1, $i1_1, $i0_1, $i0_2, $i1_2;
        io.fabric.sdk.android.services.events.EventsStorage $r4, $r4_1, $r4_2;
        boolean $z0;
        java.lang.Integer $r5, $r5_1, $r5_2, $r5_3;
        java.lang.String $r6;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $i0 := @parameter0: int;

        $r4 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        $i1 = virtualinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: int getMaxByteSizePerFile()>();

        $z0 = interfaceinvoke $r4.<io.fabric.sdk.android.services.events.EventsStorage: boolean canWorkingFileStore(int,int)>($i0, $i1);

(0)     if $z0 != 0 goto label1;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[3];

        $r4_1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        $i1_1 = interfaceinvoke $r4_1.<io.fabric.sdk.android.services.events.EventsStorage: int getWorkingFileUsedSizeInBytes()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1_1);

        $r2[0] = $r5;

        $r5_1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r5_1;

        $i0_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: int getMaxByteSizePerFile()>();

        $r5_2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0_1);

        $r2[2] = $r5_2;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "session analytics events file is %d bytes, new event is %d bytes, this is over flush limit of %d, rolling it over", $r2);

        $r3 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: android.content.Context context>;

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void logControlled(android.content.Context,int,java.lang.String,java.lang.String)>($r3, 4, "Fabric", $r6);

(1)     virtualinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: boolean rollFileOver()>();

     label1:
        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $i1_2 = Phi($i1 #0, $i1_1 #1);

        $r5_3 = Phi($r5 #0, $r5_2 #1);

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return;
    }

    private void triggerRollOverOnListeners(java.lang.String)
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        java.lang.String $r1;
        java.util.List $r2;
        java.lang.Exception $r3;
        android.content.Context $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        io.fabric.sdk.android.services.events.EventsStorageListener $r7;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: java.util.List rollOverListeners>;

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (io.fabric.sdk.android.services.events.EventsStorageListener) $r6;

     label2:
        interfaceinvoke $r7.<io.fabric.sdk.android.services.events.EventsStorageListener: void onRollOver(java.lang.String)>($r1);

     label3:
        goto label1;

     label4:
        $r3 := @caughtexception;

        $r4 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: android.content.Context context>;

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void logControlledError(android.content.Context,java.lang.String,java.lang.Throwable)>($r4, "One of the roll over listeners threw an exception", $r3);

        goto label1;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void deleteAllEventsFiles()
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        io.fabric.sdk.android.services.events.EventsStorage $r1, $r3, $r1_1;
        java.util.List $r2;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r3 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        $r1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        $r2 = interfaceinvoke $r1.<io.fabric.sdk.android.services.events.EventsStorage: java.util.List getAllFilesInRollOverDirectory()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.services.events.EventsStorage: void deleteFilesInRollOverDirectory(java.util.List)>($r2);

        $r1_1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        interfaceinvoke $r1_1.<io.fabric.sdk.android.services.events.EventsStorage: void deleteWorkingFile()>();

        return;
    }

    public void deleteOldestInRollOverIfOverMax()
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        android.content.Context $r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        java.util.TreeSet $r4;
        io.fabric.sdk.android.services.events.EventsFilesManager$1 $r5;
        java.util.ArrayList $r6;
        io.fabric.sdk.android.services.events.EventsStorage $r7, $r7_1;
        java.util.List $r8;
        int $i0, $i1, $i2, $i1_1, $i1_2, $i0_1, $i0_2, $i0_3;
        java.lang.Integer $r9, $r9_1, $r9_2;
        java.lang.String $r10, $r10_1, $r10_2;
        java.util.Iterator $r11, $r11_1;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.Object $r12, $r12_1, $r12_2, $r12_3, $r12_4;
        java.io.File $r13, $r13_1, $r13_2, $r13_3, $r13_4;
        long $l3;
        io.fabric.sdk.android.services.events.EventsFilesManager$FileWithTimestamp $r14, $r14_1, $r14_2, $r14_3, $r14_4;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r7 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        $r8 = interfaceinvoke $r7.<io.fabric.sdk.android.services.events.EventsStorage: java.util.List getAllFilesInRollOverDirectory()>();

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: int getMaxFilesToKeep()>();

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i1 > $i0 goto label1;

        return;

     label1:
        $i1_1 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i1_2 = $i1_1 - $i0;

        $r1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: android.content.Context context>;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[3];

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3[0] = $r9;

        $r9_1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[1] = $r9_1;

        $r9_2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1_2);

        $r3[2] = $r9_2;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "Found %d files in  roll over directory, this is greater than %d, deleting %d oldest files", $r3);

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void logControlled(android.content.Context,java.lang.String)>($r1, $r10);

        $r4 = new java.util.TreeSet;

        $r5 = new io.fabric.sdk.android.services.events.EventsFilesManager$1;

        specialinvoke $r5.<io.fabric.sdk.android.services.events.EventsFilesManager$1: void <init>(io.fabric.sdk.android.services.events.EventsFilesManager)>($r0);

        specialinvoke $r4.<java.util.TreeSet: void <init>(java.util.Comparator)>($r5);

(0)     $r11 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $r14 = Phi($r14 #0, $r14_1 #1);

        $r12 = Phi($r12 #0, $r12_1 #1);

        $r13 = Phi($r13 #0, $r13_1 #1);

        $z0 = Phi($z0 #0, $z0_1 #1);

        $r10_1 = Phi($r10 #0, $r10_2 #1);

        $z0_1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label3;

        $r12_1 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13_1 = (java.io.File) $r12_1;

        $r10_2 = virtualinvoke $r13_1.<java.io.File: java.lang.String getName()>();

        $l3 = virtualinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: long parseCreationTimestampFromFileName(java.lang.String)>($r10_2);

        $r14_1 = new io.fabric.sdk.android.services.events.EventsFilesManager$FileWithTimestamp;

        specialinvoke $r14_1.<io.fabric.sdk.android.services.events.EventsFilesManager$FileWithTimestamp: void <init>(java.io.File,long)>($r13_1, $l3);

        virtualinvoke $r4.<java.util.TreeSet: boolean add(java.lang.Object)>($r14_1);

(1)     goto label2;

     label3:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

(2)     $r11_1 = virtualinvoke $r4.<java.util.TreeSet: java.util.Iterator iterator()>();

     label4:
        $i0_1 = Phi($i0 #2, $i0_2 #4);

        $r14_2 = Phi($r14 #2, $r14_3 #4);

        $r12_2 = Phi($r12 #2, $r12_3 #4);

        $r13_2 = Phi($r13 #2, $r13_3 #4);

        $z0_2 = Phi($z0_1 #2, $z0_3 #4);

        $z0_3 = interfaceinvoke $r11_1.<java.util.Iterator: boolean hasNext()>();

(3)     if $z0_3 == 0 goto label5;

        $r12_3 = interfaceinvoke $r11_1.<java.util.Iterator: java.lang.Object next()>();

        $r14_3 = (io.fabric.sdk.android.services.events.EventsFilesManager$FileWithTimestamp) $r12_3;

        $r13_3 = $r14_3.<io.fabric.sdk.android.services.events.EventsFilesManager$FileWithTimestamp: java.io.File file>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r13_3);

        $i0_2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

(4)     if $i0_2 != $i1_2 goto label4;

     label5:
        $i0_3 = Phi($i0_1 #3, $i0_2 #4);

        $r14_4 = Phi($r14_2 #3, $r14_3 #4);

        $r12_4 = Phi($r12_2 #3, $r12_3 #4);

        $r13_4 = Phi($r13_2 #3, $r13_3 #4);

        $r7_1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        interfaceinvoke $r7_1.<io.fabric.sdk.android.services.events.EventsStorage: void deleteFilesInRollOverDirectory(java.util.List)>($r6);

        return;
    }

    public void deleteSentFiles(java.util.List)
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        java.util.List $r1;
        io.fabric.sdk.android.services.events.EventsStorage $r2;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r1 := @parameter0: java.util.List;

        $r2 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventsStorage: void deleteFilesInRollOverDirectory(java.util.List)>($r1);

        return;
    }

    protected abstract java.lang.String generateUniqueRollOverFileName();

    public java.util.List getBatchOfFilesToSend()
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        io.fabric.sdk.android.services.events.EventsStorage $r1;
        java.util.List $r2;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        $r2 = interfaceinvoke $r1.<io.fabric.sdk.android.services.events.EventsStorage: java.util.List getBatchOfFilesToSend(int)>(1);

        return $r2;
    }

    public long getLastRollOverTime()
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        long l0;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        l0 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: long lastRollOverTime>;

        return l0;
    }

    protected int getMaxByteSizePerFile()
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        return 8000;
    }

    protected int getMaxFilesToKeep()
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        int i0;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        i0 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: int defaultMaxFilesToKeep>;

        return i0;
    }

    public long parseCreationTimestampFromFileName(java.lang.String)
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        int $i0;
        java.lang.NumberFormatException $r1;
        java.lang.String $r2, $r2_1;
        java.lang.String[] $r3;
        java.lang.Long $r4;
        long $l1;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r2 := @parameter0: java.lang.String;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("_");

        $i0 = lengthof $r3;

        if $i0 == 3 goto label1;

        return 0L;

     label1:
        $r2_1 = $r3[2];

     label2:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r2_1);

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label3:
        return $l1;

     label4:
        $r1 := @caughtexception;

        return 0L;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public void registerRollOverListener(io.fabric.sdk.android.services.events.EventsStorageListener)
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        io.fabric.sdk.android.services.events.EventsStorageListener $r1;
        java.util.List $r2;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r1 := @parameter0: io.fabric.sdk.android.services.events.EventsStorageListener;

        if $r1 == null goto label1;

        $r2 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: java.util.List rollOverListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public boolean rollFileOver() throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        android.content.Context $r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        io.fabric.sdk.android.services.common.CurrentTimeProvider $r4;
        boolean $z0, $z1, $z0_1, $z0_2;
        java.lang.String $r5, $r7, $r5_1, $r7_1, $r5_2, $r7_2;
        io.fabric.sdk.android.services.events.EventsStorage $r6, $r6_1, $r6_2;
        long $l0;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $z0 = 0;

        $r5 = null;

        $r6 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        $z1 = interfaceinvoke $r6.<io.fabric.sdk.android.services.events.EventsStorage: boolean isWorkingFileEmpty()>();

(0)     if $z1 != 0 goto label1;

        $r7 = virtualinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: java.lang.String generateUniqueRollOverFileName()>();

        $r5_1 = $r7;

        $r6_1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        interfaceinvoke $r6_1.<io.fabric.sdk.android.services.events.EventsStorage: void rollOver(java.lang.String)>($r7);

        $r1 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: android.content.Context context>;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r7;

        $r7_1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "generated new file %s", $r3);

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void logControlled(android.content.Context,int,java.lang.String,java.lang.String)>($r1, 4, "Fabric", $r7_1);

        $r4 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.common.CurrentTimeProvider currentTimeProvider>;

        $l0 = interfaceinvoke $r4.<io.fabric.sdk.android.services.common.CurrentTimeProvider: long getCurrentTimeMillis()>();

        $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: long lastRollOverTime> = $l0;

(1)     $z0_1 = 1;

     label1:
        $r6_2 = Phi($r6 #0, $r6_1 #1);

        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r7_2 = Phi($r7 #0, $r7_1 #1);

        specialinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: void triggerRollOverOnListeners(java.lang.String)>($r5_2);

        return $z0_2;
    }

    public void writeEvent(java.lang.Object) throws java.io.IOException
    {
        io.fabric.sdk.android.services.events.EventsFilesManager $r0;
        java.lang.Object $r1;
        io.fabric.sdk.android.services.events.EventTransform $r2;
        int $i0;
        io.fabric.sdk.android.services.events.EventsStorage $r3;
        byte[] $r4;

        $r0 := @this: io.fabric.sdk.android.services.events.EventsFilesManager;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventTransform transform>;

        $r4 = interfaceinvoke $r2.<io.fabric.sdk.android.services.events.EventTransform: byte[] toBytes(java.lang.Object)>($r1);

        $i0 = lengthof $r4;

        specialinvoke $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: void rollFileOverIfNeeded(int)>($i0);

        $r3 = $r0.<io.fabric.sdk.android.services.events.EventsFilesManager: io.fabric.sdk.android.services.events.EventsStorage eventStorage>;

        interfaceinvoke $r3.<io.fabric.sdk.android.services.events.EventsStorage: void add(byte[])>($r4);

        return;
    }
}
