class android.support.v4.provider.RawDocumentFile extends android.support.v4.provider.DocumentFile
{
    private java.io.File mFile;

    void <init>(android.support.v4.provider.DocumentFile, java.io.File)
    {
        android.support.v4.provider.RawDocumentFile $r0;
        android.support.v4.provider.DocumentFile $r1;
        java.io.File $r2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 := @parameter0: android.support.v4.provider.DocumentFile;

        $r2 := @parameter1: java.io.File;

        specialinvoke $r0.<android.support.v4.provider.DocumentFile: void <init>(android.support.v4.provider.DocumentFile)>($r1);

        $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile> = $r2;

        return;
    }

    private static boolean deleteContents(java.io.File)
    {
        int $i0, $i1, $i1_1, $i1_2;
        boolean $z0, $z1, $z0_1, $z1_1, $z1_2, $z0_2, $z1_3, $z0_3, $z1_4, $z0_4, $z0_5;
        java.io.File $r0, $r0_1, $r0_2;
        java.io.File[] $r1;
        java.lang.StringBuilder $r2, $r2_1, $r2_2, $r2_3, $r2_4;
        java.lang.String $r3;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $z0 = 1;

        if $r1 == null goto label4;

        $i0 = lengthof $r1;

(0)     $i1 = 0;

     label1:
        $z1 = Phi($z1 #0, $z1_4 #5);

        $i1_1 = Phi($i1 #0, $i1_2 #5);

        $r2 = Phi($r2 #0, $r2_4 #5);

        $z0_1 = Phi($z0 #0, $z0_5 #5);

        $r0_1 = Phi($r0 #0, $r0_2 #5);

        if $i1_1 >= $i0 goto label5;

        $r0_2 = $r1[$i1_1];

        $z1_1 = virtualinvoke $r0_2.<java.io.File: boolean isDirectory()>();

(1)     if $z1_1 == 0 goto label2;

        $z1_2 = staticinvoke <android.support.v4.provider.RawDocumentFile: boolean deleteContents(java.io.File)>($r0_2);

(2)     $z0_2 = $z0_1 & $z1_2;

     label2:
        $z1_3 = Phi($z1_1 #1, $z1_2 #2);

        $z0_3 = Phi($z0_1 #1, $z0_2 #2);

        $z1_4 = virtualinvoke $r0_2.<java.io.File: boolean delete()>();

(3)     if $z1_4 != 0 goto label3;

        $r2_1 = new java.lang.StringBuilder;

        specialinvoke $r2_1.<java.lang.StringBuilder: void <init>()>();

        $r2_2 = virtualinvoke $r2_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        $r2_3 = virtualinvoke $r2_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0_2);

        $r3 = virtualinvoke $r2_3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r3);

(4)     $z0_4 = 0;

     label3:
        $r2_4 = Phi($r2 #3, $r2_3 #4);

        $z0_5 = Phi($z0_3 #3, $z0_4 #4);

        $i1_2 = $i1_1 + 1;

(5)     goto label1;

     label4:
        return 1;

     label5:
        return $z0_1;
    }

    private static java.lang.String getTypeForName(java.lang.String)
    {
        java.lang.String $r0, $r0_1, $r0_2, $r0_3, $r0_4;
        int $i0, $i0_1, $i0_2;
        android.webkit.MimeTypeMap $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);

(0)     if $i0 < 0 goto label1;

        $i0_1 = $i0 + 1;

        $r0_1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0_1);

        $r0_2 = virtualinvoke $r0_1.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r0_3 = virtualinvoke $r1.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r0_2);

(1)     if $r0_3 == null goto label1;

        return $r0_3;

     label1:
        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $r0_4 = Phi($r0 #0, $r0_3 #1);

        return "application/octet-stream";
    }

    public boolean canRead()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        return $z0;
    }

    public boolean canWrite()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canWrite()>();

        return $z0;
    }

    public android.support.v4.provider.DocumentFile createDirectory(java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile $r0, $r4;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        $r3 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

(0)     if $z0 != 0 goto label1;

        $z0_1 = virtualinvoke $r2.<java.io.File: boolean mkdir()>();

(1)     if $z0_1 == 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r4 = new android.support.v4.provider.RawDocumentFile;

        specialinvoke $r4.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>($r0, $r2);

        return $r4;

     label2:
        return null;
    }

    public android.support.v4.provider.DocumentFile createFile(java.lang.String, java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile $r0, $r3;
        java.io.File $r1, $r2;
        java.io.IOException $r4;
        java.lang.String $r5, $r6, $r5_1, $r6_1, $r6_2, $r5_2;
        android.webkit.MimeTypeMap $r7;
        java.lang.StringBuilder $r8, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5, $r8_6, $r8_7;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r5 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.lang.String;

        $r7 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r5_1 = virtualinvoke $r7.<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>($r5);

(0)     if $r5_1 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8_1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8_2 = virtualinvoke $r8_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8_3 = virtualinvoke $r8_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5_1);

(1)     $r6_1 = virtualinvoke $r8_3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r8_4 = Phi($r8 #0, $r8_3 #1);

        $r6_2 = Phi($r6 #0, $r6_1 #1);

        $r1 = new java.io.File;

        $r2 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r6_2);

     label2:
        virtualinvoke $r1.<java.io.File: boolean createNewFile()>();

     label3:
        $r3 = new android.support.v4.provider.RawDocumentFile;

     label4:
        specialinvoke $r3.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>($r0, $r1);

     label5:
        return $r3;

     label6:
        $r4 := @caughtexception;

        $r8_5 = new java.lang.StringBuilder;

        specialinvoke $r8_5.<java.lang.StringBuilder: void <init>()>();

        $r8_6 = virtualinvoke $r8_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to createFile: ");

        $r8_7 = virtualinvoke $r8_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5_2 = virtualinvoke $r8_7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r5_2);

        return null;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public boolean delete()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        boolean $z0;
        java.io.File $r1, $r1_1;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        staticinvoke <android.support.v4.provider.RawDocumentFile: boolean deleteContents(java.io.File)>($r1);

        $r1_1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1_1.<java.io.File: boolean delete()>();

        return $z0;
    }

    public boolean exists()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public java.lang.String getName()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getType()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1, $r1_1;
        boolean $z0;
        java.lang.String $r2, $r2_1;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1_1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r2 = virtualinvoke $r1_1.<java.io.File: java.lang.String getName()>();

        $r2_1 = staticinvoke <android.support.v4.provider.RawDocumentFile: java.lang.String getTypeForName(java.lang.String)>($r2);

        return $r2_1;
    }

    public android.net.Uri getUri()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        android.net.Uri $r2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r1);

        return $r2;
    }

    public boolean isDirectory()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        return $z0;
    }

    public boolean isFile()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        return $z0;
    }

    public long lastModified()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        long $l0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long lastModified()>();

        return $l0;
    }

    public long length()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        long $l0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public android.support.v4.provider.DocumentFile[] listFiles()
    {
        android.support.v4.provider.RawDocumentFile $r0, $r2;
        java.util.ArrayList $r1;
        java.io.File $r3, $r3_1, $r3_2, $r3_3;
        java.io.File[] $r4;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i0_1, $i0_2;
        android.support.v4.provider.DocumentFile[] $r5, $r5_1;
        java.lang.Object[] $r6;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r4 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles()>();

(0)     if $r4 == null goto label2;

        $i0 = lengthof $r4;

(1)     $i1 = 0;

     label1:
        $r3_1 = Phi($r3 #1, $r3_2 #3);

        $i1_1 = Phi($i1 #1, $i1_2 #3);

(2)     if $i1_1 >= $i0 goto label2;

        $r3_2 = $r4[$i1_1];

        $r2 = new android.support.v4.provider.RawDocumentFile;

        specialinvoke $r2.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>($r0, $r3_2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i1_2 = $i1_1 + 1;

(3)     goto label1;

     label2:
        $r3_3 = Phi($r3 #0, $r3_1 #2);

        $i1_3 = Phi($i1 #0, $i1_1 #2);

        $i0_1 = Phi($i0 #0, $i0 #2);

        $i0_2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (android.support.v4.provider.DocumentFile)[$i0_2];

        $r6 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5_1 = (android.support.v4.provider.DocumentFile[]) $r6;

        return $r5_1;
    }

    public boolean renameTo(java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.lang.String $r1;
        java.io.File $r2, $r3, $r3_1, $r3_2;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        $r3 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $r3_1 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3_1, $r1);

        $r3_2 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r3_2.<java.io.File: boolean renameTo(java.io.File)>($r2);

        if $z0 == 0 goto label1;

        $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile> = $r2;

        return 1;

     label1:
        return 0;
    }
}
