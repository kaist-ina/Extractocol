public class ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser extends java.lang.Object
{
    private static final int MAX_LINE_LEN;
    private final ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter filter;

    void <init>(ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter)
    {
        ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser $r0;
        ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser: ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter filter> = $r1;

        return;
    }

    private boolean readLine(java.io.Reader, java.lang.StringBuilder) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser $r0;
        java.io.Reader $r1;
        java.lang.StringBuilder $r2;
        char $c0;
        java.io.IOException $r3;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3;
        int $i1, $i1_1, $i1_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: java.lang.StringBuilder;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

(0)     $z0 = 0;

     label1:
        $i1 = Phi($i1 #0, $i1_2 #3);

        $z0_1 = Phi($z0 #0, $z0_3 #3);

        $i1_1 = virtualinvoke $r1.<java.io.Reader: int read()>();

        if $i1_1 == -1 goto label2;

        $c0 = (char) $i1_1;

        if $c0 != 10 goto label3;

     label2:
        if $i1_1 == -1 goto label6;

        return 1;

     label3:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

(1)     if $z1 == 0 goto label4;

(2)     $z0_2 = 1;

     label4:
        $z0_3 = Phi($z0_1 #1, $z0_2 #2);

        if $z0_3 != 0 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

     label5:
        $i1_2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

(3)     if $i1_2 <= 256 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Line too long");

        throw $r3;

     label6:
        return 0;
    }

    public void parse(java.io.Reader) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser $r0;
        java.io.Reader $r1;
        java.util.ArrayList $r2, $r3;
        java.io.BufferedReader $r4;
        java.lang.StringBuilder $r5;
        boolean $z0, $z1, $z0_1, $z0_2, $z1_1, $z1_2, $z1_3;
        java.lang.String $r6, $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5;
        int $i0;
        ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter $r8, $r8_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser;

        $r1 := @parameter0: java.io.Reader;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new java.io.BufferedReader;

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(256);

(0)     $z0 = 1;

     label1:
        $z1 = Phi($z1 #0, $z1 #1, $z1_1 #2, $z1_3 #7, $z1_3 #8);

        $z0_1 = Phi($z0 #0, $z0_2 #1, $z0_2 #2, $z0_2 #7, $z0_2 #8);

        $r7 = Phi($r7 #0, $r7_1 #1, $r7_1 #2, $r7_5 #7, $r7_5 #8);

        if $z0_1 == 0 goto label5;

        $z0_2 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser: boolean readLine(java.io.Reader,java.lang.StringBuilder)>($r4, $r5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7_1 = $r6;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

(1)     if $i0 == 0 goto label1;

        $z1_1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("//");

(2)     if $z1_1 != 0 goto label1;

        $z1_2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(".");

(3)     if $z1_2 == 0 goto label2;

(4)     $r7_2 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $r7_3 = Phi($r7_1 #3, $r7_2 #4);

        $z1_3 = virtualinvoke $r7_3.<java.lang.String: boolean startsWith(java.lang.String)>("!");

(5)     if $z1_3 == 0 goto label3;

(6)     $r7_4 = virtualinvoke $r7_3.<java.lang.String: java.lang.String substring(int)>(1);

     label3:
        $r7_5 = Phi($r7_3 #5, $r7_4 #6);

        if $z1_3 == 0 goto label4;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r7_5);

(7)     goto label1;

     label4:
        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r7_5);

(8)     goto label1;

     label5:
        $r8 = $r0.<ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser: ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter filter>;

        virtualinvoke $r8.<ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter: void setPublicSuffixes(java.util.Collection)>($r2);

        $r8_1 = $r0.<ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixListParser: ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter filter>;

        virtualinvoke $r8_1.<ch.boye.httpclientandroidlib.impl.cookie.PublicSuffixFilter: void setExceptions(java.util.Collection)>($r3);

        return;
    }
}
