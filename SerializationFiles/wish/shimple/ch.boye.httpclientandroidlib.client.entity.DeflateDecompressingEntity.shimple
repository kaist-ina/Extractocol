public class ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity extends ch.boye.httpclientandroidlib.client.entity.DecompressingEntity
{

    public void <init>(ch.boye.httpclientandroidlib.HttpEntity)
    {
        ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity $r0;
        ch.boye.httpclientandroidlib.HttpEntity $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpEntity;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.client.entity.DecompressingEntity: void <init>(ch.boye.httpclientandroidlib.HttpEntity)>($r1);

        return;
    }

    public volatile java.io.InputStream getContent() throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity $r0;
        java.io.InputStream $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity;

        $r1 = specialinvoke $r0.<ch.boye.httpclientandroidlib.client.entity.DecompressingEntity: java.io.InputStream getContent()>();

        return $r1;
    }

    public ch.boye.httpclientandroidlib.Header getContentEncoding()
    {
        ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity;

        return null;
    }

    public long getContentLength()
    {
        ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity;

        return -1L;
    }

    java.io.InputStream getDecompressingInputStream(java.io.InputStream) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity $r0;
        java.io.InputStream $r1;
        byte[] $r2, $r4;
        java.io.PushbackInputStream $r3;
        java.util.zip.DataFormatException $r5;
        int $i0, $i1, $i0_1;
        java.io.IOException $r6, $r6_1, $r6_2, $r6_3;
        java.util.zip.Inflater $r7, $r7_1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.util.zip.InflaterInputStream $r8, $r8_1, $r8_2;

        $r0 := @this: ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = newarray (byte)[6];

        $r3 = new java.io.PushbackInputStream;

        $i0 = lengthof $r2;

        specialinvoke $r3.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>($r1, $i0);

        $i0_1 = virtualinvoke $r3.<java.io.PushbackInputStream: int read(byte[])>($r2);

        if $i0_1 != -1 goto label01;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Unable to read the response");

        throw $r6;

     label01:
        $r4 = newarray (byte)[1];

        $r7 = new java.util.zip.Inflater;

(0)     specialinvoke $r7.<java.util.zip.Inflater: void <init>()>();

     label02:
        $z0 = Phi($z0 #0, $z0_3 #9, $z0_3 #10);

        $i1 = virtualinvoke $r7.<java.util.zip.Inflater: int inflate(byte[])>($r4);

     label03:
(1)     if $i1 != 0 goto label11;

     label04:
(2)     $z0_1 = virtualinvoke $r7.<java.util.zip.Inflater: boolean finished()>();

     label05:
        if $z0_1 == 0 goto label09;

(3)     $r6_1 = new java.io.IOException;

     label06:
        specialinvoke $r6_1.<java.io.IOException: void <init>(java.lang.String)>("Unable to read the response");

     label07:
        throw $r6_1;

     label08:
        $r5 := @caughtexception;

        $r8_1 = Phi($r8 #0);

        $r6_3 = Phi($r6 #0, $r6_1 #3, $r6_2 #7);

        $z0_5 = Phi($z0 #0, $z0_1 #2, $z0_2 #4, $z0_3 #8, $z0_4 #6);

        virtualinvoke $r3.<java.io.PushbackInputStream: void unread(byte[],int,int)>($r2, 0, $i0_1);

        $r8_2 = new java.util.zip.InflaterInputStream;

        $r7_1 = new java.util.zip.Inflater;

        specialinvoke $r7_1.<java.util.zip.Inflater: void <init>(boolean)>(1);

        specialinvoke $r8_2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater)>($r3, $r7_1);

        return $r8_2;

     label09:
(4)     $z0_2 = virtualinvoke $r7.<java.util.zip.Inflater: boolean needsDictionary()>();

     label10:
(5)     if $z0_2 == 0 goto label14;

     label11:
        $z0_4 = Phi($z0 #1, $z0_2 #5);

(6)     if $i1 != -1 goto label18;

(7)     $r6_2 = new java.io.IOException;

     label12:
        specialinvoke $r6_2.<java.io.IOException: void <init>(java.lang.String)>("Unable to read the response");

     label13:
        throw $r6_2;

     label14:
(8)     $z0_3 = virtualinvoke $r7.<java.util.zip.Inflater: boolean needsInput()>();

     label15:
(9)     if $z0_3 == 0 goto label02;

     label16:
        virtualinvoke $r7.<java.util.zip.Inflater: void setInput(byte[])>($r2);

     label17:
(10)    goto label02;

     label18:
        virtualinvoke $r3.<java.io.PushbackInputStream: void unread(byte[],int,int)>($r2, 0, $i0_1);

     label19:
        $r8 = new java.util.zip.InflaterInputStream;

     label20:
        specialinvoke $r8.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r3);

     label21:
        return $r8;

        catch java.util.zip.DataFormatException from label02 to label03 with label08;
        catch java.util.zip.DataFormatException from label04 to label05 with label08;
        catch java.util.zip.DataFormatException from label06 to label07 with label08;
        catch java.util.zip.DataFormatException from label09 to label10 with label08;
        catch java.util.zip.DataFormatException from label12 to label13 with label08;
        catch java.util.zip.DataFormatException from label14 to label15 with label08;
        catch java.util.zip.DataFormatException from label16 to label17 with label08;
        catch java.util.zip.DataFormatException from label18 to label19 with label08;
        catch java.util.zip.DataFormatException from label20 to label21 with label08;
    }

    public volatile void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity $r0;
        java.io.OutputStream $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.client.entity.DeflateDecompressingEntity;

        $r1 := @parameter0: java.io.OutputStream;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.client.entity.DecompressingEntity: void writeTo(java.io.OutputStream)>($r1);

        return;
    }
}
