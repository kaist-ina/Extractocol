public abstract class java.security.Permission extends java.lang.Object implements java.security.Guard, java.io.Serializable
{

    public void <init>(java.lang.String)
    {
        java.security.Permission r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.security.Permission;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.lang.String getName()
    {
        java.security.Permission r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.security.Permission;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void checkGuard(java.lang.Object) throws java.lang.SecurityException
    {
        java.security.Permission r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.security.Permission;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.security.PermissionCollection newPermissionCollection()
    {
        java.security.Permission r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.security.Permission;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.lang.String getActions();

    public abstract boolean implies(java.security.Permission);
}
