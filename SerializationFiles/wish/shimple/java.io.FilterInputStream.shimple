public class java.io.FilterInputStream extends java.io.InputStream
{
    protected volatile java.io.InputStream in;

    protected void <init>(java.io.InputStream)
    {
        java.io.FilterInputStream r0;
        java.io.InputStream r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.FilterInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int available() throws java.io.IOException
    {
        java.io.FilterInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FilterInputStream;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        java.io.FilterInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FilterInputStream;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public synchronized void mark(int)
    {
        java.io.FilterInputStream r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FilterInputStream;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean markSupported()
    {
        java.io.FilterInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FilterInputStream;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int read() throws java.io.IOException
    {
        java.io.FilterInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FilterInputStream;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.io.FilterInputStream r0;
        byte[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.FilterInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public synchronized void reset() throws java.io.IOException
    {
        java.io.FilterInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FilterInputStream;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.FilterInputStream r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FilterInputStream;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
