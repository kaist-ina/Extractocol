public final class com.google.gson.internal.$Gson$Types extends java.lang.Object
{
    static final java.lang.reflect.Type[] EMPTY_TYPE_ARRAY;

    static void <clinit>()
    {
        java.lang.reflect.Type[] $r0;

        $r0 = newarray (java.lang.reflect.Type)[0];

        <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.gson.internal.$Gson$Types $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.gson.internal.$Gson$Types;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl $r1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 = new com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl;

        specialinvoke $r1.<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>($r0);

        return $r1;
    }

    public static java.lang.reflect.Type canonicalize(java.lang.reflect.Type)
    {
        com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl $r0, $r0_1, $r0_2;
        com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl $r1;
        com.google.gson.internal.$Gson$Types$WildcardTypeImpl $r2;
        java.lang.reflect.Type $r3, $r7, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.lang.Class $r4, $r4_1, $r4_2;
        java.io.Serializable $r5, $r5_1, $r5_2;
        java.lang.reflect.ParameterizedType $r6;
        java.lang.reflect.Type[] $r8, $r11, $r8_1;
        java.lang.reflect.GenericArrayType $r9;
        java.lang.reflect.WildcardType $r10;

        $r3 := @parameter0: java.lang.reflect.Type;

        $z0 = $r3 instanceof java.lang.Class;

        if $z0 == 0 goto label3;

        $r4 = (java.lang.Class) $r3;

        $z0_1 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z0_1 == 0 goto label2;

        $r0 = new com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl;

        $r5 = $r0;

        $r4_1 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getComponentType()>();

        $r3_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r4_1);

(0)     specialinvoke $r0.<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>($r3_1);

     label1:
        $r4_2 = Phi($r4_1 #0, $r4 #1);

        $r3_2 = Phi($r3_1 #0, $r3 #1);

        $r0_1 = Phi($r0 #0, $r0 #1);

        $r5_1 = Phi($r5 #0, $r5_2 #1);

        $r3_3 = (java.lang.reflect.Type) $r5_1;

        return $r3_3;

     label2:
        $r5_2 = $r4;

(1)     goto label1;

     label3:
        $z0_2 = $r3 instanceof java.lang.reflect.ParameterizedType;

        if $z0_2 == 0 goto label4;

        $r6 = (java.lang.reflect.ParameterizedType) $r3;

        $r1 = new com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl;

        $r3_4 = interfaceinvoke $r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $r7 = interfaceinvoke $r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r8 = interfaceinvoke $r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        specialinvoke $r1.<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>($r3_4, $r7, $r8);

        return $r1;

     label4:
        $z0_3 = $r3 instanceof java.lang.reflect.GenericArrayType;

        if $z0_3 == 0 goto label5;

        $r9 = (java.lang.reflect.GenericArrayType) $r3;

        $r0_2 = new com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl;

        $r3_5 = interfaceinvoke $r9.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        specialinvoke $r0_2.<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>($r3_5);

        return $r0_2;

     label5:
        $z0_4 = $r3 instanceof java.lang.reflect.WildcardType;

        if $z0_4 == 0 goto label6;

        $r10 = (java.lang.reflect.WildcardType) $r3;

        $r2 = new com.google.gson.internal.$Gson$Types$WildcardTypeImpl;

        $r8_1 = interfaceinvoke $r10.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r11 = interfaceinvoke $r10.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        specialinvoke $r2.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r8_1, $r11);

        return $r2;

     label6:
        return $r3;
    }

    static void checkNotPrimitive(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.Class $r1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.Class;

(0)     if $z0 == 0 goto label1;

        $r1 = (java.lang.Class) $r0;

        $z0_1 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

(1)     if $z0_1 != 0 goto label3;

     label1:
        $z0_3 = Phi($z0 #0, $z0_1 #1);

(2)     $z0_4 = 1;

     label2:
        $z0_5 = Phi($z0_4 #2, $z0_2 #3);

        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0_5);

        return;

     label3:
        $z0_2 = 0;

(3)     goto label2;
    }

    private static java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
    {
        java.lang.reflect.TypeVariable $r0;
        boolean $z0;
        java.lang.reflect.GenericDeclaration $r1;
        java.lang.Class $r2;

        $r0 := @parameter0: java.lang.reflect.TypeVariable;

        $r1 = interfaceinvoke $r0.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Class) $r1;

        return $r2;

     label1:
        return null;
    }

    static boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == $r1 goto label1;

        if $r0 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean equals(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0, $r1, $r0_1, $r1_1, $r0_2, $r1_2, $r0_3, $r1_3, $r0_4, $r1_4;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11, $z0_12, $z0_13, $z0_14, $z0_15, $z0_16, $z0_17, $z0_18, $z0_19, $z0_20;
        java.lang.reflect.ParameterizedType $r2, $r3;
        java.lang.reflect.Type[] $r4, $r5, $r4_1, $r5_1, $r4_2, $r5_2, $r4_3, $r5_3, $r4_4, $r5_4;
        java.lang.reflect.GenericArrayType $r6, $r7;
        java.lang.reflect.WildcardType $r8, $r9;
        java.lang.reflect.TypeVariable $r10, $r11;
        java.lang.reflect.GenericDeclaration $r12, $r13;
        java.lang.String $r14, $r15;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.reflect.Type;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        $z0_1 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0_1;

     label2:
        $z0_2 = $r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0_2 == 0 goto label4;

        $z0_3 = $r1 instanceof java.lang.reflect.ParameterizedType;

(0)     if $z0_3 == 0 goto label9;

        $r2 = (java.lang.reflect.ParameterizedType) $r0;

        $r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r0_1 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $r1_1 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $z0_4 = staticinvoke <com.google.gson.internal.$Gson$Types: boolean equal(java.lang.Object,java.lang.Object)>($r0_1, $r1_1);

(1)     if $z0_4 == 0 goto label3;

        $r0_2 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r1_2 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z0_5 = virtualinvoke $r0_2.<java.lang.Object: boolean equals(java.lang.Object)>($r1_2);

(2)     if $z0_5 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r5 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $z0_6 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r5);

(3)     if $z0_6 == 0 goto label3;

        return 1;

     label3:
        $r4_1 = Phi($r4 #1, $r4 #2, $r4 #3);

        $z0_7 = Phi($z0_4 #1, $z0_5 #2, $z0_6 #3);

        $r0_3 = Phi($r0_1 #1, $r0_2 #2, $r0_2 #3);

        $r5_1 = Phi($r5 #1, $r5 #2, $r5 #3);

        $r1_3 = Phi($r1_1 #1, $r1_2 #2, $r1_2 #3);

        return 0;

     label4:
        $z0_8 = $r0 instanceof java.lang.reflect.GenericArrayType;

        if $z0_8 == 0 goto label5;

        $z0_9 = $r1 instanceof java.lang.reflect.GenericArrayType;

(4)     if $z0_9 == 0 goto label9;

        $r6 = (java.lang.reflect.GenericArrayType) $r0;

        $r7 = (java.lang.reflect.GenericArrayType) $r1;

        $r0_4 = interfaceinvoke $r6.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r1_4 = interfaceinvoke $r7.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $z0_10 = staticinvoke <com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>($r0_4, $r1_4);

        return $z0_10;

     label5:
        $z0_11 = $r0 instanceof java.lang.reflect.WildcardType;

        if $z0_11 == 0 goto label7;

        $z0_12 = $r1 instanceof java.lang.reflect.WildcardType;

(5)     if $z0_12 == 0 goto label9;

        $r8 = (java.lang.reflect.WildcardType) $r0;

        $r9 = (java.lang.reflect.WildcardType) $r1;

        $r4_2 = interfaceinvoke $r8.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r5_2 = interfaceinvoke $r9.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $z0_13 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4_2, $r5_2);

(6)     if $z0_13 == 0 goto label6;

        $r4_3 = interfaceinvoke $r8.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r5_3 = interfaceinvoke $r9.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $z0_14 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4_3, $r5_3);

(7)     if $z0_14 == 0 goto label6;

        return 1;

     label6:
        $r4_4 = Phi($r4_2 #6, $r4_3 #7);

        $z0_15 = Phi($z0_13 #6, $z0_14 #7);

        $r5_4 = Phi($r5_2 #6, $r5_3 #7);

        return 0;

     label7:
        $z0_16 = $r0 instanceof java.lang.reflect.TypeVariable;

(8)     if $z0_16 == 0 goto label9;

        $z0_17 = $r1 instanceof java.lang.reflect.TypeVariable;

(9)     if $z0_17 == 0 goto label9;

        $r10 = (java.lang.reflect.TypeVariable) $r0;

        $r11 = (java.lang.reflect.TypeVariable) $r1;

        $r12 = interfaceinvoke $r10.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

        $r13 = interfaceinvoke $r11.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

(10)    if $r12 != $r13 goto label8;

        $r14 = interfaceinvoke $r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r15 = interfaceinvoke $r11.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $z0_18 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

(11)    if $z0_18 == 0 goto label8;

        return 1;

     label8:
        $z0_19 = Phi($z0_17 #10, $z0_18 #11);

        return 0;

     label9:
        $z0_20 = Phi($z0_3 #0, $z0_9 #4, $z0_12 #5, $z0_16 #8, $z0_17 #9);

        return 0;
    }

    public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
    {
        boolean $z0;
        java.lang.reflect.Type $r0, $r0_1;
        java.lang.reflect.GenericArrayType $r1;
        java.lang.Class $r2, $r2_1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.reflect.GenericArrayType) $r0;

        $r0_1 = interfaceinvoke $r1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        return $r0_1;

     label1:
        $r2 = (java.lang.Class) $r0;

        $r2_1 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        return $r2_1;
    }

    public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type, java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.reflect.Type $r1, $r2, $r1_1, $r2_1, $r2_2, $r1_2;
        boolean $z0, $z0_1;
        java.lang.reflect.WildcardType $r3;
        java.lang.reflect.Type[] $r4, $r4_1, $r4_2;
        java.lang.reflect.ParameterizedType $r5;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

        $r1_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1, $r0, class "java/util/Collection");

        $r2 = $r1_1;

        $z0 = $r1_1 instanceof java.lang.reflect.WildcardType;

(0)     if $z0 == 0 goto label1;

        $r3 = (java.lang.reflect.WildcardType) $r1_1;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

(1)     $r2_1 = $r4[0];

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r4_1 = Phi($r4 #0, $r4 #1);

        $z0_1 = $r2_2 instanceof java.lang.reflect.ParameterizedType;

        if $z0_1 == 0 goto label2;

        $r5 = (java.lang.reflect.ParameterizedType) $r2_2;

        $r4_2 = interfaceinvoke $r5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r1_2 = $r4_2[0];

        return $r1_2;

     label2:
        return class "java/lang/Object";
    }

    static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type, java.lang.Class, java.lang.Class)
    {
        java.lang.Class $r0, $r2, $r4, $r4_1, $r4_2, $r2_1, $r4_3, $r2_2, $r4_4, $r4_5, $r2_3, $r2_4, $r4_6;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        java.lang.reflect.Type $r1, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5, $r1_6;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        java.lang.Class[] $r3;
        java.lang.reflect.Type[] $r5, $r5_1;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 := @parameter1: java.lang.Class;

        $r0 := @parameter2: java.lang.Class;

        if $r0 != $r2 goto label1;

        return $r1;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInterface()>();

(0)     if $z0 == 0 goto label5;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i1 = 0;

(1)     $i0 = lengthof $r3;

     label2:
        $z0_1 = Phi($z0 #1, $z0_2 #3);

        $i1_1 = Phi($i1 #1, $i1_2 #3);

        $r4 = Phi($r4 #1, $r4_2 #3);

(2)     if $i1_1 >= $i0 goto label5;

        $r4_1 = $r3[$i1_1];

        if $r4_1 != $r0 goto label3;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        $r1_1 = $r5[$i1_1];

        return $r1_1;

     label3:
        $r4_2 = $r3[$i1_1];

        $z0_2 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4_2);

        if $z0_2 == 0 goto label4;

        $r5_1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        $r1_2 = $r5_1[$i1_1];

        $r2_1 = $r3[$i1_1];

        $r1_3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1_2, $r2_1, $r0);

        return $r1_3;

     label4:
        $i1_2 = $i1_1 + 1;

(3)     goto label2;

     label5:
        $z0_3 = Phi($z0 #0, $z0_1 #2);

        $i1_3 = Phi($i1 #0, $i1_1 #2);

        $r4_3 = Phi($r4 #0, $r4 #2);

        $z0_4 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

(4)     if $z0_4 != 0 goto label9;

     label6:
        $z0_5 = Phi($z0_4 #4, $z0_6 #6);

        $r2_2 = Phi($r2 #4, $r2_3 #6);

        $r4_4 = Phi($r4_3 #4, $r4_5 #6);

(5)     if $r2_2 == class "java/lang/Object" goto label9;

        $r4_5 = virtualinvoke $r2_2.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r4_5 != $r0 goto label7;

        $r1_4 = virtualinvoke $r2_2.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        return $r1_4;

     label7:
        $z0_6 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4_5);

        if $z0_6 == 0 goto label8;

        $r1_5 = virtualinvoke $r2_2.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        $r1_6 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1_5, $r4_5, $r0);

        return $r1_6;

     label8:
        $r2_3 = $r4_5;

(6)     goto label6;

     label9:
        $z0_7 = Phi($z0_4 #4, $z0_5 #5);

        $r2_4 = Phi($r2 #4, $r2_2 #5);

        $r4_6 = Phi($r4_3 #4, $r4_4 #5);

        return $r0;
    }

    public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type, java.lang.Class)
    {
        java.lang.Class $r0;
        boolean $z0;
        java.lang.reflect.Type $r1, $r1_1;
        java.lang.reflect.Type[] $r2, $r2_1, $r2_2;
        java.lang.reflect.ParameterizedType $r3;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

        if $r1 != class "java/util/Properties" goto label1;

        $r2 = newarray (java.lang.reflect.Type)[2];

        $r2[0] = class "java/lang/String";

        $r2[1] = class "java/lang/String";

        return $r2;

     label1:
        $r1_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r1, $r0, class "java/util/Map");

        $z0 = $r1_1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.reflect.ParameterizedType) $r1_1;

        $r2_1 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        return $r2_1;

     label2:
        $r2_2 = newarray (java.lang.reflect.Type)[2];

        $r2_2[0] = class "java/lang/Object";

        $r2_2[1] = class "java/lang/Object";

        return $r2_2;
    }

    public static java.lang.Class getRawType(java.lang.reflect.Type)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.reflect.Type $r1, $r1_1, $r1_2, $r1_3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.Class $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6;
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.GenericArrayType $r4;
        java.lang.Object $r5;
        java.lang.reflect.WildcardType $r6;
        java.lang.reflect.Type[] $r7;
        java.lang.String $r8, $r8_1, $r8_2, $r8_3;
        java.lang.StringBuilder $r9, $r9_1, $r9_2, $r9_3, $r9_4;

        $r1 := @parameter0: java.lang.reflect.Type;

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Class) $r1;

        return $r2;

     label1:
        $z0_1 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0_1 == 0 goto label2;

        $r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r1_1 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z0_2 = $r1_1 instanceof java.lang.Class;

        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0_2);

        $r2_1 = (java.lang.Class) $r1_1;

        return $r2_1;

     label2:
        $z0_3 = $r1 instanceof java.lang.reflect.GenericArrayType;

        if $z0_3 == 0 goto label3;

        $r4 = (java.lang.reflect.GenericArrayType) $r1;

        $r1_2 = interfaceinvoke $r4.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r2_2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1_2);

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2_2, 0);

        $r2_3 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        return $r2_3;

     label3:
        $z0_4 = $r1 instanceof java.lang.reflect.TypeVariable;

        if $z0_4 == 0 goto label4;

        return class "java/lang/Object";

     label4:
        $z0_5 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0_5 == 0 goto label5;

        $r6 = (java.lang.reflect.WildcardType) $r1;

        $r7 = interfaceinvoke $r6.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r1_3 = $r7[0];

        $r2_4 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1_3);

        return $r2_4;

     label5:
        if $r1 != null goto label7;

(0)     $r8 = "null";

     label6:
        $r8_1 = Phi($r8 #0, $r8_3 #1);

        $r2_5 = Phi($r2 #0, $r2_6 #1);

        $r0 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9_1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a Class, ParameterizedType, or GenericArrayType, but <");

        $r9_2 = virtualinvoke $r9_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9_3 = virtualinvoke $r9_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> is of type ");

        $r9_4 = virtualinvoke $r9_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8_1);

        $r8_2 = virtualinvoke $r9_4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8_2);

        throw $r0;

     label7:
        $r2_6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8_3 = virtualinvoke $r2_6.<java.lang.Class: java.lang.String getName()>();

(1)     goto label6;
    }

    static java.lang.reflect.Type getSupertype(java.lang.reflect.Type, java.lang.Class, java.lang.Class)
    {
        java.lang.Class $r0, $r1;
        java.lang.reflect.Type $r2, $r3, $r2_1;
        boolean $z0;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

        $r1 := @parameter2: java.lang.Class;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r0);

        staticinvoke <com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0);

        $r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r2, $r0, $r1);

        $r2_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r2, $r0, $r3);

        return $r2_1;
    }

    static int hashCodeOrZero(java.lang.Object)
    {
        java.lang.Object $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        return $i0;

     label1:
        return 0;
    }

    private static int indexOf(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1, $i1_1, $i1_2;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object;

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #1);

        $i0 = lengthof $r0;

        if $i1_1 >= $i0 goto label3;

        $r2 = $r0[$i1_1];

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return $i1_1;

     label2:
        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label3:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;
    }

    public static transient java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[])
    {
        java.lang.reflect.Type $r0, $r1;
        java.lang.reflect.Type[] $r2;
        com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl $r3;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.reflect.Type;

        $r2 := @parameter2: java.lang.reflect.Type[];

        $r3 = new com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl;

        specialinvoke $r3.<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>($r0, $r1, $r2);

        return $r3;
    }

    public static java.lang.reflect.Type resolve(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type)
    {
        java.lang.Class $r0, $r5, $r6, $r5_1, $r6_1, $r5_2;
        java.lang.reflect.Type $r1, $r2, $r3, $r11, $r3_1, $r1_1, $r3_2, $r2_1, $r3_3, $r2_2, $r1_2, $r3_4, $r1_3, $r1_4, $r1_5, $r2_3, $r3_5, $r2_4, $r3_6, $r3_7, $r2_5, $r3_8, $r3_9, $r2_6;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11, $z0_12, $z0_13, $z0_14;
        java.lang.reflect.TypeVariable $r4;
        java.lang.reflect.GenericArrayType $r7, $r7_1, $r7_2;
        java.lang.reflect.ParameterizedType $r8, $r8_1;
        java.lang.reflect.Type[] $r9, $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r9_1, $r10_5;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        java.lang.Object $r12;
        java.lang.reflect.WildcardType $r13, $r13_1, $r13_2;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

(0)     $r3 := @parameter2: java.lang.reflect.Type;

     label01:
        $r3_1 = Phi($r3 #0, $r3_2 #1);

        $z0 = Phi($z0 #0, $z0_1 #1);

        $r1 = Phi($r1 #0, $r1_1 #1);

        $z0_1 = $r3_1 instanceof java.lang.reflect.TypeVariable;

        if $z0_1 == 0 goto label02;

        $r4 = (java.lang.reflect.TypeVariable) $r3_1;

        $r1_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)>($r2, $r0, $r4);

        $r3_2 = $r1_1;

(1)     if $r1_1 != $r4 goto label01;

        return $r1_1;

     label02:
        $z0_2 = $r3_1 instanceof java.lang.Class;

(2)     if $z0_2 == 0 goto label04;

        $r5 = (java.lang.Class) $r3_1;

        $z0_3 = virtualinvoke $r5.<java.lang.Class: boolean isArray()>();

(3)     if $z0_3 == 0 goto label04;

        $r5_1 = (java.lang.Class) $r3_1;

        $r6 = $r5_1;

        $r6_1 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();

        $r2_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r2, $r0, $r6_1);

        if $r6_1 != $r2_1 goto label03;

        return $r5_1;

     label03:
        $r7 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)>($r2_1);

        return $r7;

     label04:
        $r5_2 = Phi($r5 #2, $r5 #3);

        $z0_4 = Phi($z0_2 #2, $z0_3 #3);

        $z0_5 = $r3_1 instanceof java.lang.reflect.GenericArrayType;

        if $z0_5 == 0 goto label05;

        $r7_1 = (java.lang.reflect.GenericArrayType) $r3_1;

        $r3_3 = interfaceinvoke $r7_1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r2_2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r2, $r0, $r3_3);

        if $r3_3 == $r2_2 goto label15;

        $r7_2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)>($r2_2);

        return $r7_2;

     label05:
        $z0_6 = $r3_1 instanceof java.lang.reflect.ParameterizedType;

        if $z0_6 == 0 goto label12;

        $r8 = (java.lang.reflect.ParameterizedType) $r3_1;

        $r1_2 = interfaceinvoke $r8.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $r3_4 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r2, $r0, $r1_2);

        if $r3_4 == $r1_2 goto label10;

(4)     $z0_7 = 1;

     label06:
        $z0_8 = Phi($z0_7 #4, $z0_13 #11);

        $r9 = interfaceinvoke $r8.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r10 = $r9;

        $i0 = 0;

(5)     $i1 = lengthof $r9;

     label07:
        $r10_1 = Phi($r10 #5, $r10_4 #10);

        $i0_1 = Phi($i0 #5, $i0_2 #10);

        $z0_9 = Phi($z0_8 #5, $z0_12 #10);

        $r1_3 = Phi($r1_2 #5, $r1_5 #10);

        if $i0_1 >= $i1 goto label11;

        $r1_4 = $r10_1[$i0_1];

        $r11 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r2, $r0, $r1_4);

        $r1_5 = $r10_1[$i0_1];

(6)     if $r11 == $r1_5 goto label09;

(7)     if $z0_9 != 0 goto label08;

        $r12 = virtualinvoke $r10_1.<java.lang.Object: java.lang.Object clone()>();

        $r10_2 = (java.lang.reflect.Type[]) $r12;

(8)     $z0_10 = 1;

     label08:
        $r10_3 = Phi($r10_1 #7, $r10_2 #8);

        $z0_11 = Phi($z0_9 #7, $z0_10 #8);

(9)     $r10_3[$i0_1] = $r11;

     label09:
        $r10_4 = Phi($r10_1 #6, $r10_3 #9);

        $z0_12 = Phi($z0_9 #6, $z0_11 #9);

        $i0_2 = $i0_1 + 1;

(10)    goto label07;

     label10:
        $z0_13 = 0;

(11)    goto label06;

     label11:
        if $z0_9 == 0 goto label16;

        $r2_3 = interfaceinvoke $r8.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r8_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>($r3_4, $r2_3, $r10_1);

        return $r8_1;

     label12:
        $z0_14 = $r3_1 instanceof java.lang.reflect.WildcardType;

        if $z0_14 == 0 goto label14;

        $r13 = (java.lang.reflect.WildcardType) $r3_1;

        $r9_1 = interfaceinvoke $r13.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $r10_5 = interfaceinvoke $r13.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $i0_3 = lengthof $r9_1;

        if $i0_3 != 1 goto label13;

        $r3_5 = $r9_1[0];

        $r2_4 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r2, $r0, $r3_5);

        $r3_6 = $r9_1[0];

(12)    if $r2_4 == $r3_6 goto label17;

        $r13_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)>($r2_4);

        return $r13_1;

     label13:
        $i0_4 = lengthof $r10_5;

(13)    if $i0_4 != 1 goto label17;

        $r3_7 = $r10_5[0];

        $r2_5 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>($r2, $r0, $r3_7);

        $r3_8 = $r10_5[0];

(14)    if $r2_5 == $r3_8 goto label17;

        $r13_2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)>($r2_5);

        return $r13_2;

     label14:
        return $r3_1;

     label15:
        return $r7_1;

     label16:
        return $r8;

     label17:
        $i0_5 = Phi($i0_3 #12, $i0_4 #13, $i0_4 #14);

        $r3_9 = Phi($r3_6 #12, $r3_1 #13, $r3_8 #14);

        $r2_6 = Phi($r2_4 #12, $r2 #13, $r2_5 #14);

        return $r13;
    }

    static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.TypeVariable)
    {
        java.lang.Class $r0, $r3;
        java.lang.reflect.TypeVariable $r1;
        boolean $z0;
        java.lang.reflect.Type $r2, $r2_1, $r2_2;
        java.lang.reflect.TypeVariable[] $r4;
        int $i0;
        java.lang.reflect.ParameterizedType $r5;
        java.lang.reflect.Type[] $r6;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.Class;

        $r1 := @parameter2: java.lang.reflect.TypeVariable;

        $r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)>($r1);

        if $r3 != null goto label1;

        return $r1;

     label1:
        $r2_1 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>($r2, $r0, $r3);

        $z0 = $r2_1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i0 = staticinvoke <com.google.gson.internal.$Gson$Types: int indexOf(java.lang.Object[],java.lang.Object)>($r4, $r1);

        $r5 = (java.lang.reflect.ParameterizedType) $r2_1;

        $r6 = interfaceinvoke $r5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r2_2 = $r6[$i0];

        return $r2_2;

     label2:
        return $r1;
    }

    public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        com.google.gson.internal.$Gson$Types$WildcardTypeImpl $r1;
        java.lang.reflect.Type[] $r2, $r3;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 = new com.google.gson.internal.$Gson$Types$WildcardTypeImpl;

        $r2 = newarray (java.lang.reflect.Type)[1];

        $r2[0] = $r0;

        $r3 = <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY>;

        specialinvoke $r1.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r2, $r3);

        return $r1;
    }

    public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        com.google.gson.internal.$Gson$Types$WildcardTypeImpl $r1;
        java.lang.reflect.Type[] $r2, $r3;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 = new com.google.gson.internal.$Gson$Types$WildcardTypeImpl;

        $r2 = newarray (java.lang.reflect.Type)[1];

        $r2[0] = class "java/lang/Object";

        $r3 = newarray (java.lang.reflect.Type)[1];

        $r3[0] = $r0;

        specialinvoke $r1.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>($r2, $r3);

        return $r1;
    }

    public static java.lang.String typeToString(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r0;
        boolean $z0;
        java.lang.Class $r1;
        java.lang.String $r2, $r2_1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = $r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Class) $r0;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;

     label1:
        $r2_1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r2_1;
    }
}
