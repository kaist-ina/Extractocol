public abstract class java.io.Reader extends java.lang.Object implements java.lang.Readable, java.io.Closeable
{
    protected java.lang.Object lock;

    protected void <init>()
    {
        java.io.Reader r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void <init>(java.lang.Object)
    {
        java.io.Reader r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.Reader;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract void close() throws java.io.IOException;

    public void mark(int) throws java.io.IOException
    {
        java.io.Reader r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.Reader;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean markSupported()
    {
        java.io.Reader r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.Reader;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int read() throws java.io.IOException
    {
        java.io.Reader r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.Reader;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int read(char[]) throws java.io.IOException
    {
        java.io.Reader r0;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.Reader;

        r1 := @parameter0: char[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract int read(char[], int, int) throws java.io.IOException;

    public boolean ready() throws java.io.IOException
    {
        java.io.Reader r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.Reader;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void reset() throws java.io.IOException
    {
        java.io.Reader r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.Reader;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.Reader r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.Reader;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int read(java.nio.CharBuffer) throws java.io.IOException
    {
        java.io.Reader r0;
        java.nio.CharBuffer r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.io.Reader;

        r1 := @parameter0: java.nio.CharBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }
}
