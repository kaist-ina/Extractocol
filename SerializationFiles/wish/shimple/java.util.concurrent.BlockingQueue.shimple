public interface  java.util.concurrent.BlockingQueue extends java.lang.Object implements java.util.Queue
{

    public abstract boolean add(java.lang.Object);

    public abstract boolean offer(java.lang.Object);

    public abstract void put(java.lang.Object) throws java.lang.InterruptedException;

    public abstract boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract java.lang.Object take() throws java.lang.InterruptedException;

    public abstract java.lang.Object poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract int remainingCapacity();

    public abstract boolean remove(java.lang.Object);

    public abstract boolean contains(java.lang.Object);

    public abstract int drainTo(java.util.Collection);

    public abstract int drainTo(java.util.Collection, int);
}
