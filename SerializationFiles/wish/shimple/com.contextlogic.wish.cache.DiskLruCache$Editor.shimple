public final class com.contextlogic.wish.cache.DiskLruCache$Editor extends java.lang.Object
{
    private final com.contextlogic.wish.cache.DiskLruCache$Entry entry;
    private boolean hasErrors;
    final com.contextlogic.wish.cache.DiskLruCache this$0;

    private void <init>(com.contextlogic.wish.cache.DiskLruCache, com.contextlogic.wish.cache.DiskLruCache$Entry)
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        com.contextlogic.wish.cache.DiskLruCache$Entry $r2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $r1 := @parameter0: com.contextlogic.wish.cache.DiskLruCache;

        $r2 := @parameter1: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry> = $r2;

        return;
    }

    void <init>(com.contextlogic.wish.cache.DiskLruCache, com.contextlogic.wish.cache.DiskLruCache$Entry, com.contextlogic.wish.cache.DiskLruCache$1)
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        com.contextlogic.wish.cache.DiskLruCache$Entry $r2;
        com.contextlogic.wish.cache.DiskLruCache$1 $r3;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $r1 := @parameter0: com.contextlogic.wish.cache.DiskLruCache;

        $r2 := @parameter1: com.contextlogic.wish.cache.DiskLruCache$Entry;

        $r3 := @parameter2: com.contextlogic.wish.cache.DiskLruCache$1;

        specialinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: void <init>(com.contextlogic.wish.cache.DiskLruCache,com.contextlogic.wish.cache.DiskLruCache$Entry)>($r1, $r2);

        return;
    }

    static com.contextlogic.wish.cache.DiskLruCache$Entry access$1600(com.contextlogic.wish.cache.DiskLruCache$Editor)
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        com.contextlogic.wish.cache.DiskLruCache$Entry r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Editor;

        r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry>;

        return r1;
    }

    static boolean access$2302(com.contextlogic.wish.cache.DiskLruCache$Editor, boolean)
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        boolean $z0;

        $r0 := @parameter0: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $z0 := @parameter1: boolean;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: boolean hasErrors> = $z0;

        return $z0;
    }

    public void abort() throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache this$0>;

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$2200(com.contextlogic.wish.cache.DiskLruCache,com.contextlogic.wish.cache.DiskLruCache$Editor,boolean)>($r1, $r0, 0);

        return;
    }

    public void commit() throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        boolean $z0;
        com.contextlogic.wish.cache.DiskLruCache$Entry $r1;
        java.lang.String $r2;
        com.contextlogic.wish.cache.DiskLruCache $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $z0 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: boolean hasErrors>;

        if $z0 == 0 goto label1;

        $r3 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache this$0>;

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$2200(com.contextlogic.wish.cache.DiskLruCache,com.contextlogic.wish.cache.DiskLruCache$Editor,boolean)>($r3, $r0, 0);

        $r3_1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache this$0>;

        $r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry>;

        $r2 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache$Entry: java.lang.String access$1200(com.contextlogic.wish.cache.DiskLruCache$Entry)>($r1);

        virtualinvoke $r3_1.<com.contextlogic.wish.cache.DiskLruCache: boolean remove(java.lang.String)>($r2);

        return;

     label1:
        $r3_2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache this$0>;

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$2200(com.contextlogic.wish.cache.DiskLruCache,com.contextlogic.wish.cache.DiskLruCache$Editor,boolean)>($r3_2, $r0, 1);

        return;
    }

    public java.lang.String getString(int) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        int $i0;
        java.io.InputStream $r1;
        java.lang.String $r2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: java.io.InputStream newInputStream(int)>($i0);

        if $r1 == null goto label1;

        $r2 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: java.lang.String access$1800(java.io.InputStream)>($r1);

        return $r2;

     label1:
        return null;
    }

    public java.io.InputStream newInputStream(int) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0, $r6;
        int $i0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;
        java.io.FileInputStream $r4;
        com.contextlogic.wish.cache.DiskLruCache$Entry $r5, $r5_1, $r5_2, $r5_3;
        boolean $z0;
        java.io.File $r7;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache this$0>;

(0)     entermonitor $r1;

     label1:
        $r5 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry>;

        $r6 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache$Editor access$700(com.contextlogic.wish.cache.DiskLruCache$Entry)>($r5);

        if $r6 == $r0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label2:
        $r3 := @caughtexception;

(1)     $r5_3 = Phi($r5 #0, $r5_3 #1, $r5_1 #2, $r5_2 #3);

        exitmonitor $r1;

     label3:
        throw $r3;

     label4:
(2)     $r5_1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry>;

        $z0 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache$Entry: boolean access$600(com.contextlogic.wish.cache.DiskLruCache$Entry)>($r5_1);

        if $z0 != 0 goto label6;

        exitmonitor $r1;

     label5:
        return null;

     label6:
        $r4 = new java.io.FileInputStream;

(3)     $r5_2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry>;

        $r7 = virtualinvoke $r5_2.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.io.File getCleanFile(int)>($i0);

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        exitmonitor $r1;

     label7:
        return $r4;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
        catch java.lang.Throwable from label6 to label7 with label2;
    }

    public java.io.OutputStream newOutputStream(int) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0, $r7;
        int $i0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        java.lang.IllegalStateException $r2;
        java.lang.Throwable $r3;
        com.contextlogic.wish.cache.DiskLruCache$Editor$FaultHidingOutputStream $r4;
        java.io.FileOutputStream $r5;
        com.contextlogic.wish.cache.DiskLruCache$Entry $r6, $r6_1, $r6_2;
        java.io.File $r8;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache this$0>;

(0)     entermonitor $r1;

     label1:
        $r6 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry>;

        $r7 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache$Entry: com.contextlogic.wish.cache.DiskLruCache$Editor access$700(com.contextlogic.wish.cache.DiskLruCache$Entry)>($r6);

        if $r7 == $r0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label2:
        $r3 := @caughtexception;

(1)     $r6_2 = Phi($r6 #0, $r6_2 #1, $r6_1 #2);

        exitmonitor $r1;

     label3:
        throw $r3;

     label4:
        $r4 = new com.contextlogic.wish.cache.DiskLruCache$Editor$FaultHidingOutputStream;

        $r5 = new java.io.FileOutputStream;

(2)     $r6_1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: com.contextlogic.wish.cache.DiskLruCache$Entry entry>;

        $r8 = virtualinvoke $r6_1.<com.contextlogic.wish.cache.DiskLruCache$Entry: java.io.File getDirtyFile(int)>($i0);

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r8);

        specialinvoke $r4.<com.contextlogic.wish.cache.DiskLruCache$Editor$FaultHidingOutputStream: void <init>(com.contextlogic.wish.cache.DiskLruCache$Editor,java.io.OutputStream,com.contextlogic.wish.cache.DiskLruCache$1)>($r0, $r5, null);

        exitmonitor $r1;

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }

    public void set(int, java.lang.String) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        int $i0;
        java.lang.String $r1;
        java.io.OutputStreamWriter $r2, $r3, $r3_1, $r3_2;
        java.io.OutputStream $r4;
        java.nio.charset.Charset $r5;
        java.lang.Throwable $r6, $r6_1, $r6_2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r3 = null;

     label1:
        $r2 = new java.io.OutputStreamWriter;

        $r4 = virtualinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>($i0);

        $r5 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: java.nio.charset.Charset access$2100()>();

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r4, $r5);

     label2:
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

     label3:
        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$1900(java.io.Closeable)>($r2);

        return;

     label4:
(0)     $r6_1 := @caughtexception;

     label5:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r6_2 = Phi($r6_1 #0, $r6 #1);

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$1900(java.io.Closeable)>($r3_2);

        throw $r6_2;

     label6:
        $r6 := @caughtexception;

        $r3_1 = $r2;

(1)     goto label5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
    }

    public void set(int, byte[]) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Editor $r0;
        int $i0;
        byte[] $r1;
        java.io.BufferedOutputStream $r2, $r4, $r4_1, $r4_2;
        java.io.OutputStream $r3;
        java.lang.Throwable $r5, $r5_1, $r5_2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Editor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $r4 = null;

     label1:
        $r2 = new java.io.BufferedOutputStream;

        $r3 = virtualinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>($i0);

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r3, 2048);

     label2:
        virtualinvoke $r2.<java.io.BufferedOutputStream: void write(byte[])>($r1);

     label3:
        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$1900(java.io.Closeable)>($r2);

        return;

     label4:
(0)     $r5_1 := @caughtexception;

     label5:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r5_2 = Phi($r5_1 #0, $r5 #1);

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$1900(java.io.Closeable)>($r4_2);

        throw $r5_2;

     label6:
        $r5 := @caughtexception;

        $r4_1 = $r2;

(1)     goto label5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
    }
}
