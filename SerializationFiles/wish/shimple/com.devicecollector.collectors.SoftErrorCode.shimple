public final enum class com.devicecollector.collectors.SoftErrorCode extends java.lang.Enum
{
    private static final com.devicecollector.collectors.SoftErrorCode[] $VALUES;
    public static final enum com.devicecollector.collectors.SoftErrorCode MERCHANT_CANCELLED;
    public static final enum com.devicecollector.collectors.SoftErrorCode MERCHANT_SKIPPED;
    public static final enum com.devicecollector.collectors.SoftErrorCode PERMISSION_DENIED;
    public static final enum com.devicecollector.collectors.SoftErrorCode SERVICE_UNAVAILABLE;
    public static final enum com.devicecollector.collectors.SoftErrorCode TIMEOUT;
    public static final enum com.devicecollector.collectors.SoftErrorCode UNEXPECTED;
    private java.lang.String postValue;

    static void <clinit>()
    {
        com.devicecollector.collectors.SoftErrorCode[] $r0;
        com.devicecollector.collectors.SoftErrorCode $r1, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5, $r1_6, $r1_7, $r1_8, $r1_9, $r1_10, $r1_11;

        $r1 = new com.devicecollector.collectors.SoftErrorCode;

        specialinvoke $r1.<com.devicecollector.collectors.SoftErrorCode: void <init>(java.lang.String,int,java.lang.String)>("MERCHANT_CANCELLED", 0, "merchant_cancelled");

        <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode MERCHANT_CANCELLED> = $r1;

        $r1_1 = new com.devicecollector.collectors.SoftErrorCode;

        specialinvoke $r1_1.<com.devicecollector.collectors.SoftErrorCode: void <init>(java.lang.String,int,java.lang.String)>("MERCHANT_SKIPPED", 1, "skipped");

        <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode MERCHANT_SKIPPED> = $r1_1;

        $r1_2 = new com.devicecollector.collectors.SoftErrorCode;

        specialinvoke $r1_2.<com.devicecollector.collectors.SoftErrorCode: void <init>(java.lang.String,int,java.lang.String)>("PERMISSION_DENIED", 2, "permission_denied");

        <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode PERMISSION_DENIED> = $r1_2;

        $r1_3 = new com.devicecollector.collectors.SoftErrorCode;

        specialinvoke $r1_3.<com.devicecollector.collectors.SoftErrorCode: void <init>(java.lang.String,int,java.lang.String)>("SERVICE_UNAVAILABLE", 3, "not_available");

        <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode SERVICE_UNAVAILABLE> = $r1_3;

        $r1_4 = new com.devicecollector.collectors.SoftErrorCode;

        specialinvoke $r1_4.<com.devicecollector.collectors.SoftErrorCode: void <init>(java.lang.String,int,java.lang.String)>("TIMEOUT", 4, "timeout");

        <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode TIMEOUT> = $r1_4;

        $r1_5 = new com.devicecollector.collectors.SoftErrorCode;

        specialinvoke $r1_5.<com.devicecollector.collectors.SoftErrorCode: void <init>(java.lang.String,int,java.lang.String)>("UNEXPECTED", 5, "unexpected");

        <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode UNEXPECTED> = $r1_5;

        $r0 = newarray (com.devicecollector.collectors.SoftErrorCode)[6];

        $r1_6 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode MERCHANT_CANCELLED>;

        $r0[0] = $r1_6;

        $r1_7 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode MERCHANT_SKIPPED>;

        $r0[1] = $r1_7;

        $r1_8 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode PERMISSION_DENIED>;

        $r0[2] = $r1_8;

        $r1_9 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode SERVICE_UNAVAILABLE>;

        $r0[3] = $r1_9;

        $r1_10 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode TIMEOUT>;

        $r0[4] = $r1_10;

        $r1_11 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode UNEXPECTED>;

        $r0[5] = $r1_11;

        <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        com.devicecollector.collectors.SoftErrorCode $r0;
        java.lang.String $r1, $r2;
        int $i0;

        $r0 := @this: com.devicecollector.collectors.SoftErrorCode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<com.devicecollector.collectors.SoftErrorCode: java.lang.String postValue> = $r2;

        return;
    }

    public static com.devicecollector.collectors.SoftErrorCode valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.devicecollector.collectors.SoftErrorCode $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/devicecollector/collectors/SoftErrorCode", $r0);

        $r2 = (com.devicecollector.collectors.SoftErrorCode) $r1;

        return $r2;
    }

    public static com.devicecollector.collectors.SoftErrorCode[] values()
    {
        java.lang.Object $r0;
        com.devicecollector.collectors.SoftErrorCode[] $r1, $r1_1;

        $r1 = <com.devicecollector.collectors.SoftErrorCode: com.devicecollector.collectors.SoftErrorCode[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1_1 = (com.devicecollector.collectors.SoftErrorCode[]) $r0;

        return $r1_1;
    }

    public java.lang.String postValue()
    {
        com.devicecollector.collectors.SoftErrorCode $r0;
        java.lang.String r1;

        $r0 := @this: com.devicecollector.collectors.SoftErrorCode;

        r1 = $r0.<com.devicecollector.collectors.SoftErrorCode: java.lang.String postValue>;

        return r1;
    }
}
