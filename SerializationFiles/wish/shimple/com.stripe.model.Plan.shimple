public class com.stripe.model.Plan extends com.stripe.net.APIResource
{
    java.lang.Integer amount;
    java.lang.String currency;
    java.lang.String id;
    java.lang.String interval;
    java.lang.Integer intervalCount;
    java.lang.Boolean livemode;
    java.lang.String name;
    java.lang.Integer trialPeriodDays;

    public void <init>()
    {
        com.stripe.model.Plan $r0;

        $r0 := @this: com.stripe.model.Plan;

        specialinvoke $r0.<com.stripe.net.APIResource: void <init>()>();

        return;
    }

    public static com.stripe.model.PlanCollection all(java.util.Map) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.util.Map $r0;
        com.stripe.model.PlanCollection $r1;

        $r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <com.stripe.model.Plan: com.stripe.model.PlanCollection all(java.util.Map,java.lang.String)>($r0, null);

        return $r1;
    }

    public static com.stripe.model.PlanCollection all(java.util.Map, java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.util.Map $r0;
        java.lang.String $r1, $r3;
        com.stripe.net.APIResource$RequestMethod $r2;
        java.lang.Object $r4;
        com.stripe.model.PlanCollection $r5;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET>;

        $r3 = staticinvoke <com.stripe.model.Plan: java.lang.String classURL(java.lang.Class)>(class "com/stripe/model/Plan");

        $r4 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class,java.lang.String)>($r2, $r3, $r0, class "com/stripe/model/PlanCollection", $r1);

        $r5 = (com.stripe.model.PlanCollection) $r4;

        return $r5;
    }

    public static com.stripe.model.Plan create(java.util.Map) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.util.Map $r0;
        com.stripe.model.Plan $r1;

        $r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <com.stripe.model.Plan: com.stripe.model.Plan create(java.util.Map,java.lang.String)>($r0, null);

        return $r1;
    }

    public static com.stripe.model.Plan create(java.util.Map, java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.util.Map $r0;
        java.lang.String $r1, $r3;
        com.stripe.net.APIResource$RequestMethod $r2;
        java.lang.Object $r4;
        com.stripe.model.Plan $r5;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST>;

        $r3 = staticinvoke <com.stripe.model.Plan: java.lang.String classURL(java.lang.Class)>(class "com/stripe/model/Plan");

        $r4 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class,java.lang.String)>($r2, $r3, $r0, class "com/stripe/model/Plan", $r1);

        $r5 = (com.stripe.model.Plan) $r4;

        return $r5;
    }

    public static com.stripe.model.Plan retrieve(java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.lang.String $r0;
        com.stripe.model.Plan $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.stripe.model.Plan: com.stripe.model.Plan retrieve(java.lang.String,java.lang.String)>($r0, null);

        return $r1;
    }

    public static com.stripe.model.Plan retrieve(java.lang.String, java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.lang.String $r0, $r2, $r2_1;
        com.stripe.net.APIResource$RequestMethod $r1;
        java.lang.Object $r3;
        com.stripe.model.Plan $r4;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET>;

        $r2_1 = staticinvoke <com.stripe.model.Plan: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "com/stripe/model/Plan", $r2);

        $r3 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class,java.lang.String)>($r1, $r2_1, null, class "com/stripe/model/Plan", $r0);

        $r4 = (com.stripe.model.Plan) $r3;

        return $r4;
    }

    public com.stripe.model.DeletedPlan delete() throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        com.stripe.model.Plan $r0;
        com.stripe.model.DeletedPlan $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 = virtualinvoke $r0.<com.stripe.model.Plan: com.stripe.model.DeletedPlan delete(java.lang.String)>(null);

        return $r1;
    }

    public com.stripe.model.DeletedPlan delete(java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        com.stripe.model.Plan $r0;
        java.lang.String $r1, $r3, $r3_1;
        com.stripe.net.APIResource$RequestMethod $r2;
        java.lang.Object $r4;
        com.stripe.model.DeletedPlan $r5;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE>;

        $r3 = $r0.<com.stripe.model.Plan: java.lang.String id>;

        $r3_1 = staticinvoke <com.stripe.model.Plan: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "com/stripe/model/Plan", $r3);

        $r4 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class,java.lang.String)>($r2, $r3_1, null, class "com/stripe/model/DeletedPlan", $r1);

        $r5 = (com.stripe.model.DeletedPlan) $r4;

        return $r5;
    }

    public java.lang.Integer getAmount()
    {
        com.stripe.model.Plan $r0;
        java.lang.Integer r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.Integer amount>;

        return r1;
    }

    public java.lang.String getCurrency()
    {
        com.stripe.model.Plan $r0;
        java.lang.String r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.String currency>;

        return r1;
    }

    public java.lang.String getId()
    {
        com.stripe.model.Plan $r0;
        java.lang.String r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.String id>;

        return r1;
    }

    public java.lang.String getInterval()
    {
        com.stripe.model.Plan $r0;
        java.lang.String r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.String interval>;

        return r1;
    }

    public java.lang.Integer getIntervalCount()
    {
        com.stripe.model.Plan $r0;
        java.lang.Integer r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.Integer intervalCount>;

        return r1;
    }

    public java.lang.Boolean getLivemode()
    {
        com.stripe.model.Plan $r0;
        java.lang.Boolean r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.Boolean livemode>;

        return r1;
    }

    public java.lang.String getName()
    {
        com.stripe.model.Plan $r0;
        java.lang.String r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.String name>;

        return r1;
    }

    public java.lang.Integer getTrialPeriodDays()
    {
        com.stripe.model.Plan $r0;
        java.lang.Integer r1;

        $r0 := @this: com.stripe.model.Plan;

        r1 = $r0.<com.stripe.model.Plan: java.lang.Integer trialPeriodDays>;

        return r1;
    }

    public void setAmount(java.lang.Integer)
    {
        com.stripe.model.Plan $r0;
        java.lang.Integer $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.Integer;

        $r0.<com.stripe.model.Plan: java.lang.Integer amount> = $r1;

        return;
    }

    public void setCurrency(java.lang.String)
    {
        com.stripe.model.Plan $r0;
        java.lang.String $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.stripe.model.Plan: java.lang.String currency> = $r1;

        return;
    }

    public void setId(java.lang.String)
    {
        com.stripe.model.Plan $r0;
        java.lang.String $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.stripe.model.Plan: java.lang.String id> = $r1;

        return;
    }

    public void setInterval(java.lang.String)
    {
        com.stripe.model.Plan $r0;
        java.lang.String $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.stripe.model.Plan: java.lang.String interval> = $r1;

        return;
    }

    public void setIntervalCount(java.lang.Integer)
    {
        com.stripe.model.Plan $r0;
        java.lang.Integer $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.Integer;

        $r0.<com.stripe.model.Plan: java.lang.Integer intervalCount> = $r1;

        return;
    }

    public void setLivemode(java.lang.Boolean)
    {
        com.stripe.model.Plan $r0;
        java.lang.Boolean $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.Boolean;

        $r0.<com.stripe.model.Plan: java.lang.Boolean livemode> = $r1;

        return;
    }

    public void setName(java.lang.String)
    {
        com.stripe.model.Plan $r0;
        java.lang.String $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.stripe.model.Plan: java.lang.String name> = $r1;

        return;
    }

    public void setTrialPeriodDays(java.lang.Integer)
    {
        com.stripe.model.Plan $r0;
        java.lang.Integer $r1;

        $r0 := @this: com.stripe.model.Plan;

        $r1 := @parameter0: java.lang.Integer;

        $r0.<com.stripe.model.Plan: java.lang.Integer trialPeriodDays> = $r1;

        return;
    }

    public com.stripe.model.Plan update(java.util.Map) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.util.Map $r0;
        com.stripe.model.Plan $r1, $r1_1;

        $r1 := @this: com.stripe.model.Plan;

        $r0 := @parameter0: java.util.Map;

        $r1_1 = virtualinvoke $r1.<com.stripe.model.Plan: com.stripe.model.Plan update(java.util.Map,java.lang.String)>($r0, null);

        return $r1_1;
    }

    public com.stripe.model.Plan update(java.util.Map, java.lang.String) throws com.stripe.exception.AuthenticationException, com.stripe.exception.InvalidRequestException, com.stripe.exception.APIConnectionException, com.stripe.exception.CardException, com.stripe.exception.APIException
    {
        java.util.Map $r0;
        java.lang.String $r1, $r4, $r4_1;
        com.stripe.net.APIResource$RequestMethod $r2;
        com.stripe.model.Plan $r3, $r3_1;
        java.lang.Object $r5;

        $r3 := @this: com.stripe.model.Plan;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST>;

        $r4 = $r3.<com.stripe.model.Plan: java.lang.String id>;

        $r4_1 = staticinvoke <com.stripe.model.Plan: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "com/stripe/model/Plan", $r4);

        $r5 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class,java.lang.String)>($r2, $r4_1, $r0, class "com/stripe/model/Plan", $r1);

        $r3_1 = (com.stripe.model.Plan) $r5;

        return $r3_1;
    }
}
