public class ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy extends java.lang.Object implements ch.boye.httpclientandroidlib.entity.ContentLengthStrategy
{
    private final int implicitLen;

    public void <init>()
    {
        ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy: void <init>(int)>(-1);

        return;
    }

    public void <init>(int)
    {
        ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy $r0;
        int $i0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy: int implicitLen> = $i0;

        return;
    }

    public long determineLength(ch.boye.httpclientandroidlib.HttpMessage) throws ch.boye.httpclientandroidlib.HttpException
    {
        ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy $r0;
        ch.boye.httpclientandroidlib.HttpMessage $r1;
        java.lang.IllegalArgumentException $r2;
        ch.boye.httpclientandroidlib.HttpVersion $r3;
        byte $b0;
        java.lang.NumberFormatException $r4;
        ch.boye.httpclientandroidlib.Header $r5, $r5_1;
        java.lang.String $r6, $r7, $r6_1, $r7_1, $r6_2, $r6_3, $r7_2, $r7_3, $r6_4, $r6_5;
        boolean $z0, $z0_1, $z0_2;
        ch.boye.httpclientandroidlib.ProtocolVersion $r8, $r8_1;
        ch.boye.httpclientandroidlib.ProtocolException $r9, $r9_1, $r9_2, $r9_3, $r9_4;
        java.lang.StringBuilder $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5, $r10_6, $r10_7, $r10_8, $r10_9, $r10_10, $r10_11, $r10_12;
        long $l1, $l1_1, $l1_2, $l1_3;
        int $i2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpMessage;

        if $r1 != null goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP message may not be null");

        throw $r2;

     label01:
        $r5 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpMessage: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Transfer-Encoding");

        if $r5 == null goto label05;

        $r6 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r7 = "chunked";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label03;

        $r8 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpMessage: ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion()>();

        $r3 = <ch.boye.httpclientandroidlib.HttpVersion: ch.boye.httpclientandroidlib.HttpVersion HTTP_1_0>;

        $z0_1 = virtualinvoke $r8.<ch.boye.httpclientandroidlib.ProtocolVersion: boolean lessEquals(ch.boye.httpclientandroidlib.ProtocolVersion)>($r3);

        if $z0_1 == 0 goto label02;

        $r9 = new ch.boye.httpclientandroidlib.ProtocolException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10_1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Chunked transfer encoding not allowed for ");

        $r8_1 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpMessage: ch.boye.httpclientandroidlib.ProtocolVersion getProtocolVersion()>();

        $r10_2 = virtualinvoke $r10_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8_1);

        $r6_1 = virtualinvoke $r10_2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<ch.boye.httpclientandroidlib.ProtocolException: void <init>(java.lang.String)>($r6_1);

        throw $r9;

     label02:
        return -2L;

     label03:
        $r7_1 = "identity";

        $z0_2 = virtualinvoke $r7_1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0_2 == 0 goto label04;

        return -1L;

     label04:
        $r9_1 = new ch.boye.httpclientandroidlib.ProtocolException;

        $r10_3 = new java.lang.StringBuilder;

        specialinvoke $r10_3.<java.lang.StringBuilder: void <init>()>();

        $r10_4 = virtualinvoke $r10_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported transfer encoding: ");

        $r10_5 = virtualinvoke $r10_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6_2 = virtualinvoke $r10_5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9_1.<ch.boye.httpclientandroidlib.ProtocolException: void <init>(java.lang.String)>($r6_2);

        throw $r9_1;

     label05:
        $r5_1 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpMessage: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Content-Length");

        if $r5_1 == null goto label11;

(0)     $r6_3 = interfaceinvoke $r5_1.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

     label06:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6_3);

     label07:
        $b0 = $l1 cmp 0L;

(1)     if $b0 >= 0 goto label12;

        $r9_2 = new ch.boye.httpclientandroidlib.ProtocolException;

(2)     $r10_6 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r10_6.<java.lang.StringBuilder: void <init>()>();

(3)     $r10_7 = virtualinvoke $r10_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative content length: ");

(4)     $r10_8 = virtualinvoke $r10_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6_3);

(5)     $r7_2 = virtualinvoke $r10_8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9_2.<ch.boye.httpclientandroidlib.ProtocolException: void <init>(java.lang.String)>($r7_2);

     label09:
        throw $r9_2;

     label10:
        $r4 := @caughtexception;

        $r7_3 = Phi($r7 #0, $r7_2 #5);

        $r9_3 = Phi($r9 #0, $r9_2 #2);

        $r10_9 = Phi($r10 #0, $r10_6 #2, $r10_7 #3, $r10_8 #4);

        $l1_1 = Phi($l1 #0);

        $r9_4 = new ch.boye.httpclientandroidlib.ProtocolException;

        $r10_10 = new java.lang.StringBuilder;

        specialinvoke $r10_10.<java.lang.StringBuilder: void <init>()>();

        $r10_11 = virtualinvoke $r10_10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content length: ");

        $r10_12 = virtualinvoke $r10_11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6_3);

        $r6_4 = virtualinvoke $r10_12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9_4.<ch.boye.httpclientandroidlib.ProtocolException: void <init>(java.lang.String)>($r6_4);

        throw $r9_4;

     label11:
        $i2 = $r0.<ch.boye.httpclientandroidlib.impl.entity.StrictContentLengthStrategy: int implicitLen>;

(6)     $l1_2 = (long) $i2;

     label12:
        $r6_5 = Phi($r6_3 #1, $r6 #6);

        $l1_3 = Phi($l1 #1, $l1_2 #6);

        return $l1_3;

        catch java.lang.NumberFormatException from label06 to label07 with label10;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }
}
