public class ch.boye.httpclientandroidlib.androidextra.Base64 extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    public static final int CRLF;
    public static final int DEFAULT;
    public static final int NO_CLOSE;
    public static final int NO_PADDING;
    public static final int NO_WRAP;
    public static final int URL_SAFE;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 = class "ch/boye/httpclientandroidlib/androidextra/Base64";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

(0)     $z0_1 = 1;

     label1:
        $z0_2 = Phi($z0_1 #0, $z0_3 #1);

        <ch.boye.httpclientandroidlib.androidextra.Base64: boolean $assertionsDisabled> = $z0_2;

        return;

     label2:
        $z0_3 = 0;

(1)     goto label1;
    }

    private void <init>()
    {
        ch.boye.httpclientandroidlib.androidextra.Base64 $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.androidextra.Base64;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        byte[] $r1, $r1_1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r1_1 = staticinvoke <ch.boye.httpclientandroidlib.androidextra.Base64: byte[] decode(byte[],int)>($r1, $i0);

        return $r1_1;
    }

    public static byte[] decode(byte[], int)
    {
        int $i0, $i1;
        byte[] $r0, $r0_1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r0;

        $r0_1 = staticinvoke <ch.boye.httpclientandroidlib.androidextra.Base64: byte[] decode(byte[],int,int,int)>($r0, 0, $i1, $i0);

        return $r0_1;
    }

    public static byte[] decode(byte[], int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i3_1, $i1_1, $i2_1, $i1_2, $i1_3;
        ch.boye.httpclientandroidlib.androidextra.Base64$Decoder $r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;
        byte[] $r2, $r3, $r2_1, $r2_2, $r2_3, $r3_1;

        $r2 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $r0 = new ch.boye.httpclientandroidlib.androidextra.Base64$Decoder;

        $i3 = $i2 * 3;

        $i3_1 = $i3 / 4;

        $r3 = newarray (byte)[$i3_1];

        specialinvoke $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Decoder: void <init>(int,byte[])>($i0, $r3);

        $z0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Decoder: boolean process(byte[],int,int,boolean)>($r2, $i1, $i2, 1);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad base-64");

        throw $r1;

     label1:
        $i1_1 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: int op>;

        $r2_1 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: byte[] output>;

        $i2_1 = lengthof $r2_1;

        if $i1_1 != $i2_1 goto label2;

        $r2_2 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: byte[] output>;

        return $r2_2;

     label2:
        $i1_2 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: int op>;

        $r2_3 = newarray (byte)[$i1_2];

        $r3_1 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: byte[] output>;

        $i1_3 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: int op>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3_1, 0, $r2_3, 0, $i1_3);

        return $r2_3;
    }

    public static byte[] encode(byte[], int)
    {
        int $i0, $i1;
        byte[] $r0, $r0_1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r0;

        $r0_1 = staticinvoke <ch.boye.httpclientandroidlib.androidextra.Base64: byte[] encode(byte[],int,int,int)>($r0, 0, $i1, $i0);

        return $r0_1;
    }

    public static byte[] encode(byte[], int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i2_3, $i2_4, $i3_1, $i3_2, $i3_3, $i3_4, $i3_5, $i2_5, $i2_6, $i3_6, $i1_1, $i1_2, $i3_7, $i2_7, $i2_8;
        ch.boye.httpclientandroidlib.androidextra.Base64$Encoder $r0;
        byte[] $r1, $r3, $r3_1;
        java.lang.AssertionError $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        byte $b4, $b4_1, $b4_2, $b4_3;

        $r3 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 := @parameter3: int;

        $r0 = new ch.boye.httpclientandroidlib.androidextra.Base64$Encoder;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Encoder: void <init>(int,byte[])>($i2, null);

        $i2_1 = $i0 / 3;

        $i2_2 = $i2_1 * 4;

        $z0 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Encoder: boolean do_padding>;

        if $z0 == 0 goto label4;

        $i3 = $i0 % 3;

(0)     if $i3 <= 0 goto label1;

(1)     $i2_3 = $i2_2 + 4;

     label1:
        $i2_4 = Phi($i2_2 #0, $i2_3 #1, $i2_2 #8, $i2_2 #9, $i2_7 #10, $i2_8 #11);

        $i3_1 = Phi($i3 #0, $i3 #1, $i3_7 #8, $i3_7 #9, $i3_7 #10, $i3_7 #11);

        $z0_1 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Encoder: boolean do_newline>;

(2)     if $z0_1 == 0 goto label3;

(3)     if $i0 <= 0 goto label3;

        $i3_2 = $i0 + -1;

        $i3_3 = $i3_2 / 57;

        $i3_4 = $i3_3 + 1;

        $z0_2 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Encoder: boolean do_cr>;

        if $z0_2 == 0 goto label8;

(4)     $b4 = 2;

     label2:
        $b4_1 = Phi($b4 #4, $b4_2 #12);

        $i3_5 = $b4_1 * $i3_4;

(5)     $i2_5 = $i2_4 + $i3_5;

     label3:
        $b4_3 = Phi($b4 #2, $b4 #3, $b4_1 #5);

        $z0_3 = Phi($z0_1 #2, $z0_1 #3, $z0_2 #5);

        $i2_6 = Phi($i2_4 #2, $i2_4 #3, $i2_5 #5);

        $i3_6 = Phi($i3_1 #2, $i3_1 #3, $i3_5 #5);

        $r1 = newarray (byte)[$i2_6];

        $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: byte[] output> = $r1;

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Encoder: boolean process(byte[],int,int,boolean)>($r3, $i1, $i0, 1);

        $z0_4 = <ch.boye.httpclientandroidlib.androidextra.Base64: boolean $assertionsDisabled>;

(6)     if $z0_4 != 0 goto label9;

        $i1_1 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: int op>;

(7)     if $i1_1 == $i2_6 goto label9;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label4:
        $i3_7 = $i0 % 3;

(8)     lookupswitch($i3_7)
        {
            case 0: goto label1;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label5;
        };

     label5:
(9)     goto label1;

     label6:
        $i2_7 = $i2_2 + 2;

(10)    goto label1;

     label7:
        $i2_8 = $i2_2 + 3;

(11)    goto label1;

     label8:
        $b4_2 = 1;

(12)    goto label2;

     label9:
        $i1_2 = Phi($i1 #6, $i1_1 #7);

        $r3_1 = $r0.<ch.boye.httpclientandroidlib.androidextra.Base64$Coder: byte[] output>;

        return $r3_1;
    }

    public static java.lang.String encodeToString(byte[], int)
    {
        int $i0;
        java.lang.String $r0;
        java.io.UnsupportedEncodingException $r1;
        java.lang.AssertionError $r2;
        byte[] $r3, $r3_1, $r3_2;

        $r3 := @parameter0: byte[];

        $i0 := @parameter1: int;

(0)     $r0 = new java.lang.String;

     label1:
(1)     $r3_1 = staticinvoke <ch.boye.httpclientandroidlib.androidextra.Base64: byte[] encode(byte[],int)>($r3, $i0);

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r3_1, "US-ASCII");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r1);

        throw $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String encodeToString(byte[], int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.String $r0;
        java.io.UnsupportedEncodingException $r1;
        java.lang.AssertionError $r2;
        byte[] $r3, $r3_1, $r3_2;

        $r3 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

(0)     $r0 = new java.lang.String;

     label1:
(1)     $r3_1 = staticinvoke <ch.boye.httpclientandroidlib.androidextra.Base64: byte[] encode(byte[],int,int,int)>($r3, $i0, $i1, $i2);

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r3_1, "US-ASCII");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r1);

        throw $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
