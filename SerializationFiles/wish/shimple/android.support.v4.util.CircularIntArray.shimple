public final class android.support.v4.util.CircularIntArray extends java.lang.Object
{
    private int mCapacityBitmask;
    private int[] mElements;
    private int mHead;
    private int mTail;

    public void <init>()
    {
        android.support.v4.util.CircularIntArray $r0;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        specialinvoke $r0.<android.support.v4.util.CircularIntArray: void <init>(int)>(8);

        return;
    }

    public void <init>(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        java.lang.IllegalArgumentException $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i1_1, $i1_2, $i0_3, $i0_4;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity must be positive");

        throw $r1;

     label1:
        $i1 = $i0;

        $i2 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

(0)     if $i2 == 1 goto label2;

        $i0_1 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        $i0_2 = $i0_1 + 1;

(1)     $i1_1 = 1 << $i0_2;

     label2:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        $i0_3 = Phi($i0 #0, $i0_2 #1);

        $i0_4 = $i1_2 + -1;

        $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask> = $i0_4;

        $r2 = newarray (int)[$i1_2];

        $r0.<android.support.v4.util.CircularIntArray: int[] mElements> = $r2;

        return;
    }

    private void doubleCapacity()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1, $i2, $i3, $i0_1, $i3_1, $i1_1;
        java.lang.RuntimeException $r1;
        int[] $r2, $r3, $r2_1, $r3_1;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i1 = lengthof $r2;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i0_1 = $i1 - $i0;

        $i2 = $i1 << 1;

        if $i2 >= 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Max array capacity exceeded");

        throw $r1;

     label1:
        $r2_1 = newarray (int)[$i2];

        $r3 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i3 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i3, $r2_1, 0, $i0_1);

        $r3_1 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i3_1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3_1, 0, $r2_1, $i0_1, $i3_1);

        $r0.<android.support.v4.util.CircularIntArray: int[] mElements> = $r2_1;

        $r0.<android.support.v4.util.CircularIntArray: int mHead> = 0;

        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i1;

        $i1_1 = $i2 + -1;

        $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask> = $i1_1;

        return;
    }

    public void addFirst(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i0_3, $i1_1, $i0_4;
        int[] $r1;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i1 := @parameter0: int;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i2 = $i0 + -1;

        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i0_2 = $i2 & $i0_1;

        $r0.<android.support.v4.util.CircularIntArray: int mHead> = $i0_2;

        $r1 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i0_3 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $r1[$i0_3] = $i1;

        $i1_1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i0_4 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        if $i1_1 != $i0_4 goto label1;

        specialinvoke $r0.<android.support.v4.util.CircularIntArray: void doubleCapacity()>();

     label1:
        return;
    }

    public void addLast(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int[] $r1;
        int $i0, $i1, $i0_1, $i0_2, $i1_1, $i0_3, $i0_4, $i1_2;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        $r1[$i1] = $i0;

        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        $i0_2 = $i0_1 + 1;

        $i1_1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i0_3 = $i0_2 & $i1_1;

        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i0_3;

        $i0_4 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        $i1_2 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        if $i0_4 != $i1_2 goto label1;

        specialinvoke $r0.<android.support.v4.util.CircularIntArray: void doubleCapacity()>();

     label1:
        return;
    }

    public void clear()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i0;

        return;
    }

    public int get(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2, $i1_3, $i0_3;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i1 := @parameter0: int;

(0)     if $i1 < 0 goto label1;

        $i0 = virtualinvoke $r0.<android.support.v4.util.CircularIntArray: int size()>();

(1)     if $i1 < $i0 goto label2;

     label1:
        $i0_3 = Phi($i0 #0, $i0 #1);

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i1_1 = $i0_1 + $i1;

        $i0_2 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i1_2 = $i1_1 & $i0_2;

        $i1_3 = $r2[$i1_2];

        return $i1_3;
    }

    public int getFirst()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1, $i0_1, $i0_2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        if $i1 != $i0 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i0_2 = $r2[$i0_1];

        return $i0_2;
    }

    public int getLast()
    {
        android.support.v4.util.CircularIntArray $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;
        int $i0, $i1, $i0_1, $i0_2, $i1_1, $i0_3, $i0_4;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        if $i0 != $i1 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        $i0_2 = $i0_1 + -1;

        $i1_1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i0_3 = $i0_2 & $i1_1;

        $i0_4 = $r2[$i0_3];

        return $i0_4;
    }

    public boolean isEmpty()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int popFirst()
    {
        android.support.v4.util.CircularIntArray $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i1_1, $i1_2, $i0_1, $i0_2, $i0_3;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        if $i1 != $i0 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i1_1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i1_2 = $r2[$i1_1];

        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i2 = $i0_1 + 1;

        $i0_2 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i0_3 = $i2 & $i0_2;

        $r0.<android.support.v4.util.CircularIntArray: int mHead> = $i0_3;

        return $i1_2;
    }

    public int popLast()
    {
        android.support.v4.util.CircularIntArray $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;
        int $i0, $i1, $i0_1, $i0_2, $i1_1, $i0_3, $i1_2;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        if $i0 != $i1 goto label1;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        $i0_2 = $i0_1 + -1;

        $i1_1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i0_3 = $i0_2 & $i1_1;

        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;

        $i1_2 = $r2[$i0_3];

        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i0_3;

        return $i1_2;
    }

    public void removeFromEnd(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i1 := @parameter0: int;

        if $i1 > 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v4.util.CircularIntArray: int size()>();

        if $i1 <= $i0 goto label2;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        $i1_1 = $i0_1 - $i1;

        $i0_2 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i1_2 = $i1_1 & $i0_2;

        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i1_2;

        return;
    }

    public void removeFromStart(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i1_2;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i1 := @parameter0: int;

        if $i1 > 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v4.util.CircularIntArray: int size()>();

        if $i1 <= $i0 goto label2;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $i0_1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i1_1 = $i0_1 + $i1;

        $i0_2 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i1_2 = $i1_1 & $i0_2;

        $r0.<android.support.v4.util.CircularIntArray: int mHead> = $i1_2;

        return;
    }

    public int size()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1, $i0_1, $i1_1, $i0_2;

        $r0 := @this: android.support.v4.util.CircularIntArray;

        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;

        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;

        $i0_1 = $i0 - $i1;

        $i1_1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;

        $i0_2 = $i0_1 & $i1_1;

        return $i0_2;
    }
}
