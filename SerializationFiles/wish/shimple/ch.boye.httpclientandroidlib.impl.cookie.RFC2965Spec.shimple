public class ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec extends ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec
{

    public void <init>()
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: void <init>(java.lang.String[],boolean)>(null, 0);

        return;
    }

    public void <init>(java.lang.String[], boolean)
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        java.lang.String[] $r1;
        boolean $z0;
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965DomainAttributeHandler $r2;
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965PortAttributeHandler $r3;
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965CommentUrlAttributeHandler $r4;
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965DiscardAttributeHandler $r5;
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965VersionAttributeHandler $r6;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: java.lang.String[];

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec: void <init>(java.lang.String[],boolean)>($r1, $z0);

        $r2 = new ch.boye.httpclientandroidlib.impl.cookie.RFC2965DomainAttributeHandler;

        specialinvoke $r2.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965DomainAttributeHandler: void <init>()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler)>("domain", $r2);

        $r3 = new ch.boye.httpclientandroidlib.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke $r3.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965PortAttributeHandler: void <init>()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler)>("port", $r3);

        $r4 = new ch.boye.httpclientandroidlib.impl.cookie.RFC2965CommentUrlAttributeHandler;

        specialinvoke $r4.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler)>("commenturl", $r4);

        $r5 = new ch.boye.httpclientandroidlib.impl.cookie.RFC2965DiscardAttributeHandler;

        specialinvoke $r5.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler)>("discard", $r5);

        $r6 = new ch.boye.httpclientandroidlib.impl.cookie.RFC2965VersionAttributeHandler;

        specialinvoke $r6.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965VersionAttributeHandler: void <init>()>();

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler)>("version", $r6);

        return;
    }

    private static ch.boye.httpclientandroidlib.cookie.CookieOrigin adjustEffectiveHost(ch.boye.httpclientandroidlib.cookie.CookieOrigin)
    {
        ch.boye.httpclientandroidlib.cookie.CookieOrigin $r0, $r1;
        java.lang.String $r2, $r4, $r2_1;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        int $i0, $i1, $i0_1, $i0_2, $i0_3;
        char $c2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2;

        $r0 := @parameter0: ch.boye.httpclientandroidlib.cookie.CookieOrigin;

        $r2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.cookie.CookieOrigin: java.lang.String getHost()>();

        $z0 = 1;

(0)     $i0 = 0;

     label1:
        $i0_1 = Phi($i0 #0, $i0_2 #3);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

(1)     if $i0_1 >= $i1 goto label3;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0_1);

        if $c2 == 46 goto label2;

        if $c2 != 58 goto label4;

     label2:
(2)     $z0_1 = 0;

     label3:
        $z0_2 = Phi($z0 #1, $z0_1 #2);

        if $z0_2 == 0 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local");

        $r2_1 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new ch.boye.httpclientandroidlib.cookie.CookieOrigin;

        $i0_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.cookie.CookieOrigin: int getPort()>();

        $r4 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.cookie.CookieOrigin: java.lang.String getPath()>();

        $z0_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.cookie.CookieOrigin: boolean isSecure()>();

        specialinvoke $r1.<ch.boye.httpclientandroidlib.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>($r2_1, $i0_3, $r4, $z0_3);

        return $r1;

     label4:
        $i0_2 = $i0_1 + 1;

(3)     goto label1;

     label5:
        return $r0;
    }

    private java.util.List createCookies(ch.boye.httpclientandroidlib.HeaderElement[], ch.boye.httpclientandroidlib.cookie.CookieOrigin) throws ch.boye.httpclientandroidlib.cookie.MalformedCookieException
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        ch.boye.httpclientandroidlib.HeaderElement[] $r1;
        ch.boye.httpclientandroidlib.cookie.CookieOrigin $r2;
        java.util.ArrayList $r3;
        ch.boye.httpclientandroidlib.HeaderElement $r4;
        ch.boye.httpclientandroidlib.cookie.MalformedCookieException $r5;
        ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2 $r6;
        int[] $r7;
        java.util.HashMap $r8;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6, $i2_7, $i1_2, $i2_8;
        java.lang.String $r9, $r10, $r9_1, $r10_1, $r9_2, $r9_3, $r9_4, $r9_5, $r9_6, $r10_2, $r9_7, $r9_8, $r9_9, $r10_3, $r9_10;
        ch.boye.httpclientandroidlib.NameValuePair[] $r11;
        ch.boye.httpclientandroidlib.NameValuePair $r12, $r12_1, $r12_2, $r12_3, $r12_4;
        java.util.Locale $r13, $r13_1, $r13_2, $r13_3, $r13_4;
        java.util.Set $r14;
        java.util.Iterator $r15;
        boolean $z0;
        java.lang.Object $r16, $r16_1, $r16_2, $r16_3;
        java.util.Map$Entry $r17;
        ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler $r18;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HeaderElement[];

        $r2 := @parameter1: ch.boye.httpclientandroidlib.cookie.CookieOrigin;

        $r3 = new java.util.ArrayList;

        $i0 = lengthof $r1;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0_1 = lengthof $r1;

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #8);

        $r16 = Phi($r16 #0, $r16_1 #8);

        $r13 = Phi($r13 #0, $r13_3 #8);

        $r12 = Phi($r12 #0, $r12_3 #8);

        $i2 = Phi($i2 #0, $i2_6 #8);

        $r10 = Phi($r10 #0, $r10_2 #8);

        $r9 = Phi($r9 #0, $r9_7 #8);

        if $i1_1 >= $i0_1 goto label8;

        $r4 = $r1[$i1_1];

        $r9_1 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        $r10_1 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getValue()>();

(1)     if $r9_1 == null goto label2;

        $i2_1 = virtualinvoke $r9_1.<java.lang.String: int length()>();

(2)     if $i2_1 != 0 goto label3;

     label2:
        $i2_8 = Phi($i2 #1, $i2_1 #2);

        $r5 = new ch.boye.httpclientandroidlib.cookie.MalformedCookieException;

        specialinvoke $r5.<ch.boye.httpclientandroidlib.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r5;

     label3:
        $r6 = new ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2;

        specialinvoke $r6.<ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2: void <init>(java.lang.String,java.lang.String)>($r9_1, $r10_1);

        $r9_2 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r2);

        virtualinvoke $r6.<ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2: void setPath(java.lang.String)>($r9_2);

        $r9_3 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r2);

        virtualinvoke $r6.<ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2: void setDomain(java.lang.String)>($r9_3);

        $r7 = newarray (int)[1];

        $i2_2 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.cookie.CookieOrigin: int getPort()>();

        $r7[0] = $i2_2;

        virtualinvoke $r6.<ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2: void setPorts(int[])>($r7);

        $r11 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.HeaderElement: ch.boye.httpclientandroidlib.NameValuePair[] getParameters()>();

        $r8 = new java.util.HashMap;

        $i2_3 = lengthof $r11;

        specialinvoke $r8.<java.util.HashMap: void <init>(int)>($i2_3);

        $i2_4 = lengthof $r11;

(3)     $i2_5 = $i2_4 + -1;

     label4:
        $r13_1 = Phi($r13 #3, $r13_2 #4);

        $r12_1 = Phi($r12 #3, $r12_2 #4);

        $i2_6 = Phi($i2_5 #3, $i2_7 #4);

        $r9_4 = Phi($r9_3 #3, $r9_6 #4);

        if $i2_6 < 0 goto label5;

        $r12_2 = $r11[$i2_6];

        $r9_5 = interfaceinvoke $r12_2.<ch.boye.httpclientandroidlib.NameValuePair: java.lang.String getName()>();

        $r13_2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9_6 = virtualinvoke $r9_5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13_2);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9_6, $r12_2);

        $i2_7 = $i2_6 + -1;

(4)     goto label4;

     label5:
        $r14 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

(5)     $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $r16_1 = Phi($r16 #5, $r16_3 #6, $r16_3 #7);

        $r13_3 = Phi($r13_1 #5, $r13_4 #6, $r13_4 #7);

        $r12_3 = Phi($r12_1 #5, $r12_4 #6, $r12_4 #7);

        $r10_2 = Phi($r10_1 #5, $r10_3 #6, $r10_3 #7);

        $r9_7 = Phi($r9_4 #5, $r9_9 #6, $r9_10 #7);

        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r16_2 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.util.Map$Entry) $r16_2;

        $r16_3 = interfaceinvoke $r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12_4 = (ch.boye.httpclientandroidlib.NameValuePair) $r16_3;

        $r9_8 = interfaceinvoke $r12_4.<ch.boye.httpclientandroidlib.NameValuePair: java.lang.String getName()>();

        $r13_4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9_9 = virtualinvoke $r9_8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13_4);

        $r10_3 = interfaceinvoke $r12_4.<ch.boye.httpclientandroidlib.NameValuePair: java.lang.String getValue()>();

        virtualinvoke $r6.<ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie2: void setAttribute(java.lang.String,java.lang.String)>($r9_9, $r10_3);

        $r18 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>($r9_9);

(6)     if $r18 == null goto label6;

        $r9_10 = interfaceinvoke $r12_4.<ch.boye.httpclientandroidlib.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r18.<ch.boye.httpclientandroidlib.cookie.CookieAttributeHandler: void parse(ch.boye.httpclientandroidlib.cookie.SetCookie,java.lang.String)>($r6, $r9_10);

(7)     goto label6;

     label7:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $i1_2 = $i1_1 + 1;

(8)     goto label1;

     label8:
        return $r3;
    }

    protected void formatCookieAsVer(ch.boye.httpclientandroidlib.util.CharArrayBuffer, ch.boye.httpclientandroidlib.cookie.Cookie, int)
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r1;
        ch.boye.httpclientandroidlib.cookie.Cookie $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i0_2, $i0_3, $i1_2, $i1_3, $i0_4, $i1_4, $i0_5;
        ch.boye.httpclientandroidlib.cookie.ClientCookie $r3;
        java.lang.String $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        int[] $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.cookie.Cookie;

        $i0 := @parameter2: int;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec: void formatCookieAsVer(ch.boye.httpclientandroidlib.util.CharArrayBuffer,ch.boye.httpclientandroidlib.cookie.Cookie,int)>($r1, $r2, $i0);

        $z0 = $r2 instanceof ch.boye.httpclientandroidlib.cookie.ClientCookie;

(0)     if $z0 == 0 goto label4;

        $r3 = (ch.boye.httpclientandroidlib.cookie.ClientCookie) $r2;

        $r4 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.cookie.ClientCookie: java.lang.String getAttribute(java.lang.String)>("port");

(1)     if $r4 == null goto label4;

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>("; $Port");

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>("=\"");

        $r4_1 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i0_1 = virtualinvoke $r4_1.<java.lang.String: int length()>();

(2)     if $i0_1 <= 0 goto label3;

        $r5 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.cookie.Cookie: int[] getPorts()>();

(3)     if $r5 == null goto label3;

        $i1 = 0;

(4)     $i2 = lengthof $r5;

     label1:
        $i1_1 = Phi($i1 #4, $i1_2 #6);

        $r4_2 = Phi($r4_1 #4, $r4_3 #6);

        $i0_2 = Phi($i0_1 #4, $i0_3 #6);

(5)     if $i1_1 >= $i2 goto label3;

        if $i1_1 <= 0 goto label2;

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>(",");

     label2:
        $i0_3 = $r5[$i1_1];

        $r4_3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0_3);

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>($r4_3);

        $i1_2 = $i1_1 + 1;

(6)     goto label1;

     label3:
        $i1_3 = Phi($i1 #2, $i1 #3, $i1_1 #5);

        $r4_4 = Phi($r4_1 #2, $r4_1 #3, $r4_2 #5);

        $i0_4 = Phi($i0_1 #2, $i0_1 #3, $i0_2 #5);

(7)     virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>("\"");

     label4:
        $i1_4 = Phi($i1 #0, $i1 #1, $i1_3 #7);

        $r4_5 = Phi($r4 #0, $r4 #1, $r4_4 #7);

        $i0_5 = Phi($i0 #0, $i0 #1, $i0_4 #7);

        return;
    }

    public int getVersion()
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        return 1;
    }

    public ch.boye.httpclientandroidlib.Header getVersionHeader()
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        ch.boye.httpclientandroidlib.util.CharArrayBuffer $r1;
        ch.boye.httpclientandroidlib.message.BufferedHeader $r2;
        int $i0;
        java.lang.String $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 = new ch.boye.httpclientandroidlib.util.CharArrayBuffer;

        specialinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void <init>(int)>(40);

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>("Cookie2");

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>(": ");

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>("$Version=");

        $i0 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: int getVersion()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r1.<ch.boye.httpclientandroidlib.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        $r2 = new ch.boye.httpclientandroidlib.message.BufferedHeader;

        specialinvoke $r2.<ch.boye.httpclientandroidlib.message.BufferedHeader: void <init>(ch.boye.httpclientandroidlib.util.CharArrayBuffer)>($r1);

        return $r2;
    }

    public boolean match(ch.boye.httpclientandroidlib.cookie.Cookie, ch.boye.httpclientandroidlib.cookie.CookieOrigin)
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        ch.boye.httpclientandroidlib.cookie.Cookie $r1;
        ch.boye.httpclientandroidlib.cookie.CookieOrigin $r2, $r2_1;
        java.lang.IllegalArgumentException $r3, $r3_1;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.cookie.Cookie;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r3_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3_1;

     label2:
        $r2_1 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: ch.boye.httpclientandroidlib.cookie.CookieOrigin adjustEffectiveHost(ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r2);

        $z0 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec: boolean match(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r1, $r2_1);

        return $z0;
    }

    public java.util.List parse(ch.boye.httpclientandroidlib.Header, ch.boye.httpclientandroidlib.cookie.CookieOrigin) throws ch.boye.httpclientandroidlib.cookie.MalformedCookieException
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        ch.boye.httpclientandroidlib.Header $r1;
        ch.boye.httpclientandroidlib.cookie.MalformedCookieException $r2;
        ch.boye.httpclientandroidlib.cookie.CookieOrigin $r3, $r3_1;
        java.lang.IllegalArgumentException $r4, $r4_1;
        java.lang.String $r5, $r5_1, $r5_2;
        boolean $z0;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3;
        ch.boye.httpclientandroidlib.HeaderElement[] $r7;
        java.util.List $r8;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.Header;

        $r3 := @parameter1: ch.boye.httpclientandroidlib.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r4;

     label1:
        if $r3 != null goto label2;

        $r4_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r4_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r4_1;

     label2:
        $r5 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-Cookie2");

        if $z0 != 0 goto label3;

        $r2 = new ch.boye.httpclientandroidlib.cookie.MalformedCookieException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized cookie header \'");

        $r5_1 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5_1);

        $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5_2 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<ch.boye.httpclientandroidlib.cookie.MalformedCookieException: void <init>(java.lang.String)>($r5_2);

        throw $r2;

     label3:
        $r3_1 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: ch.boye.httpclientandroidlib.cookie.CookieOrigin adjustEffectiveHost(ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r3);

        $r7 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.Header: ch.boye.httpclientandroidlib.HeaderElement[] getElements()>();

        $r8 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: java.util.List createCookies(ch.boye.httpclientandroidlib.HeaderElement[],ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r7, $r3_1);

        return $r8;
    }

    protected java.util.List parse(ch.boye.httpclientandroidlib.HeaderElement[], ch.boye.httpclientandroidlib.cookie.CookieOrigin) throws ch.boye.httpclientandroidlib.cookie.MalformedCookieException
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        ch.boye.httpclientandroidlib.HeaderElement[] $r1;
        ch.boye.httpclientandroidlib.cookie.CookieOrigin $r2, $r2_1;
        java.util.List $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HeaderElement[];

        $r2 := @parameter1: ch.boye.httpclientandroidlib.cookie.CookieOrigin;

        $r2_1 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: ch.boye.httpclientandroidlib.cookie.CookieOrigin adjustEffectiveHost(ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r2);

        $r3 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: java.util.List createCookies(ch.boye.httpclientandroidlib.HeaderElement[],ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r1, $r2_1);

        return $r3;
    }

    public java.lang.String toString()
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        return "rfc2965";
    }

    public void validate(ch.boye.httpclientandroidlib.cookie.Cookie, ch.boye.httpclientandroidlib.cookie.CookieOrigin) throws ch.boye.httpclientandroidlib.cookie.MalformedCookieException
    {
        ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec $r0;
        ch.boye.httpclientandroidlib.cookie.Cookie $r1;
        ch.boye.httpclientandroidlib.cookie.CookieOrigin $r2, $r2_1;
        java.lang.IllegalArgumentException $r3, $r3_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.cookie.Cookie;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.cookie.CookieOrigin;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r3_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r3_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3_1;

     label2:
        $r2_1 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.RFC2965Spec: ch.boye.httpclientandroidlib.cookie.CookieOrigin adjustEffectiveHost(ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.RFC2109Spec: void validate(ch.boye.httpclientandroidlib.cookie.Cookie,ch.boye.httpclientandroidlib.cookie.CookieOrigin)>($r1, $r2_1);

        return;
    }
}
