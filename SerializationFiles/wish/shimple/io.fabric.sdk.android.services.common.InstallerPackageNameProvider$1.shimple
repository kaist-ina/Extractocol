class io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1 extends java.lang.Object implements io.fabric.sdk.android.services.cache.ValueLoader
{
    final io.fabric.sdk.android.services.common.InstallerPackageNameProvider this$0;

    void <init>(io.fabric.sdk.android.services.common.InstallerPackageNameProvider)
    {
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1 $r0;
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider $r1;

        $r0 := @this: io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1;

        $r1 := @parameter0: io.fabric.sdk.android.services.common.InstallerPackageNameProvider;

        $r0.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1: io.fabric.sdk.android.services.common.InstallerPackageNameProvider this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object load(android.content.Context) throws java.lang.Exception
    {
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1 $r0;
        android.content.Context $r1;
        java.lang.String $r2;

        $r0 := @this: io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1: java.lang.String load(android.content.Context)>($r1);

        return $r2;
    }

    public java.lang.String load(android.content.Context) throws java.lang.Exception
    {
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1 $r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, $r3_1;

        $r0 := @this: io.fabric.sdk.android.services.common.InstallerPackageNameProvider$1;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r3_1 = virtualinvoke $r2.<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>($r3);

        if $r3_1 != null goto label1;

        return "";

     label1:
        return $r3_1;
    }
}
