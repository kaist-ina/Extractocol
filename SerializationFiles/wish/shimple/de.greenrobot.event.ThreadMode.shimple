public final enum class de.greenrobot.event.ThreadMode extends java.lang.Enum
{
    private static final de.greenrobot.event.ThreadMode[] $VALUES;
    public static final enum de.greenrobot.event.ThreadMode Async;
    public static final enum de.greenrobot.event.ThreadMode BackgroundThread;
    public static final enum de.greenrobot.event.ThreadMode MainThread;
    public static final enum de.greenrobot.event.ThreadMode PostThread;

    static void <clinit>()
    {
        de.greenrobot.event.ThreadMode[] $r0;
        de.greenrobot.event.ThreadMode $r1, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5, $r1_6, $r1_7;

        $r1 = new de.greenrobot.event.ThreadMode;

        specialinvoke $r1.<de.greenrobot.event.ThreadMode: void <init>(java.lang.String,int)>("PostThread", 0);

        <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode PostThread> = $r1;

        $r1_1 = new de.greenrobot.event.ThreadMode;

        specialinvoke $r1_1.<de.greenrobot.event.ThreadMode: void <init>(java.lang.String,int)>("MainThread", 1);

        <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode MainThread> = $r1_1;

        $r1_2 = new de.greenrobot.event.ThreadMode;

        specialinvoke $r1_2.<de.greenrobot.event.ThreadMode: void <init>(java.lang.String,int)>("BackgroundThread", 2);

        <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode BackgroundThread> = $r1_2;

        $r1_3 = new de.greenrobot.event.ThreadMode;

        specialinvoke $r1_3.<de.greenrobot.event.ThreadMode: void <init>(java.lang.String,int)>("Async", 3);

        <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode Async> = $r1_3;

        $r0 = newarray (de.greenrobot.event.ThreadMode)[4];

        $r1_4 = <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode PostThread>;

        $r0[0] = $r1_4;

        $r1_5 = <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode MainThread>;

        $r0[1] = $r1_5;

        $r1_6 = <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode BackgroundThread>;

        $r0[2] = $r1_6;

        $r1_7 = <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode Async>;

        $r0[3] = $r1_7;

        <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        de.greenrobot.event.ThreadMode $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: de.greenrobot.event.ThreadMode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static de.greenrobot.event.ThreadMode valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        de.greenrobot.event.ThreadMode $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "de/greenrobot/event/ThreadMode", $r0);

        $r2 = (de.greenrobot.event.ThreadMode) $r1;

        return $r2;
    }

    public static de.greenrobot.event.ThreadMode[] values()
    {
        java.lang.Object $r0;
        de.greenrobot.event.ThreadMode[] $r1, $r1_1;

        $r1 = <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1_1 = (de.greenrobot.event.ThreadMode[]) $r0;

        return $r1_1;
    }
}
