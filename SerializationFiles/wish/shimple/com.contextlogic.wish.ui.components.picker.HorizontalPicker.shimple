public class com.contextlogic.wish.ui.components.picker.HorizontalPicker extends android.view.View
{
    private static final int SELECTOR_ADJUSTMENT_DURATION_MILLIS;
    private static final int SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT;
    public static final java.lang.String TAG;
    private android.widget.OverScroller mAdjustScrollerX;
    private android.text.BoringLayout$Metrics mBoringMetrics;
    private float mDividerSize;
    private android.text.TextUtils$TruncateAt mEllipsize;
    private android.widget.OverScroller mFlingScrollerX;
    private android.graphics.RectF mItemClipBounds;
    private android.graphics.RectF mItemClipBoundsOffser;
    private int mItemWidth;
    private float mLastDownEventX;
    private android.text.BoringLayout[] mLayouts;
    private com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee;
    private int mMarqueeRepeatLimit;
    private int mMaximumFlingVelocity;
    private int mMinimumFlingVelocity;
    private com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected mOnItemSelected;
    private final int mOverscrollDistance;
    private int mPressedItem;
    private int mPreviousScrollerX;
    private boolean mScrollingX;
    private int mSelectedItem;
    private int mSideItems;
    private android.content.res.ColorStateList mTextColor;
    private android.support.v4.text.TextDirectionHeuristicCompat mTextDir;
    private android.text.TextPaint mTextPaint;
    private final com.contextlogic.wish.ui.components.picker.HorizontalPicker$PickerTouchHelper mTouchHelper;
    private int mTouchSlop;
    private java.lang.CharSequence[] mValues;
    private android.view.VelocityTracker mVelocityTracker;

    public void <init>(android.content.Context)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.content.Context $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 2130771971);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.content.Context $r1, $r8;
        android.util.AttributeSet $r2;
        int[] $r3;
        byte $b0;
        android.view.animation.DecelerateInterpolator $r4;
        java.lang.Throwable $r5;
        int $i1, $i2, $i3, $i4, $i5, $i1_1, $i5_1, $i2_1, $i4_1, $i4_2, $i4_3, $i4_4, $i4_5, $i4_6, $i4_7, $i4_8, $i4_9, $i4_10, $i4_11, $i3_1, $i3_2, $i3_3, $i3_4, $i4_12, $i4_13, $i4_14, $i3_5, $i3_6, $i4_15, $i3_7, $i1_2, $i5_2, $i2_2, $i4_16;
        android.text.TextPaint $r6, $r6_1;
        com.contextlogic.wish.cache.TransientCache $r7;
        android.graphics.Typeface $r9;
        android.content.res.Resources$Theme $r10;
        android.content.res.TypedArray $r11;
        android.content.res.ColorStateList $r12;
        java.lang.CharSequence[] $r13, $r14, $r14_1, $r14_2, $r14_3;
        float $f0, $f0_1, $f0_2, $f0_3;
        android.graphics.Paint$FontMetricsInt $r15;
        android.text.BoringLayout$Metrics $r16, $r16_1, $r16_2, $r16_3, $r16_4, $r16_5, $r16_6;
        android.widget.OverScroller $r17, $r17_1;
        android.view.ViewConfiguration $r18;
        java.lang.String[] $r19;
        java.lang.String $r20;
        android.text.TextUtils$TruncateAt $r21, $r21_1, $r21_2, $r21_3, $r21_4;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$PickerTouchHelper $r22, $r22_1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i1 := @parameter2: int;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i1);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPressedItem> = -1;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMarqueeRepeatLimit> = 3;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize> = 0.0F;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems> = 1;

        $r6 = new android.text.TextPaint;

        specialinvoke $r6.<android.text.TextPaint: void <init>()>();

        virtualinvoke $r6.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r7 = staticinvoke <com.contextlogic.wish.cache.TransientCache: com.contextlogic.wish.cache.TransientCache getInstance()>();

        $r8 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.Context getContext()>();

        $r9 = virtualinvoke $r7.<com.contextlogic.wish.cache.TransientCache: android.graphics.Typeface getTypefaceForStyle(android.content.Context,int)>($r8, 0);

        virtualinvoke $r6.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r9);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint> = $r6;

        $r10 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = <com.contextlogic.wish.R$styleable: int[] HorizontalPicker>;

        $r11 = virtualinvoke $r10.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i1, 0);

(0)     $i2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

     label01:
        $r12 = virtualinvoke $r11.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(1);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor> = $r12;

        $r13 = virtualinvoke $r11.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>(4);

     label02:
        $r14 = $r13;

     label03:
(1)     $i1_1 = virtualinvoke $r11.<android.content.res.TypedArray: int getInt(int,int)>(7, -2147483648);

        $i3 = virtualinvoke $r11.<android.content.res.TypedArray: int getInt(int,int)>(8, -2147483648);

        $i4 = virtualinvoke $r11.<android.content.res.TypedArray: int getInt(int,int)>(2, 3);

        $i5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMarqueeRepeatLimit>;

(2)     $i5_1 = virtualinvoke $r11.<android.content.res.TypedArray: int getInt(int,int)>(3, $i5);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMarqueeRepeatLimit> = $i5_1;

        $f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

(3)     $f0_1 = virtualinvoke $r11.<android.content.res.TypedArray: float getDimension(int,float)>(5, $f0);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize> = $f0_1;

(4)     $i2_1 = virtualinvoke $r11.<android.content.res.TypedArray: int getInt(int,int)>(6, $i2);

(5)     $f0_2 = virtualinvoke $r11.<android.content.res.TypedArray: float getDimension(int,float)>(0, -1.0F);

     label04:
        $b0 = $f0_2 cmpl -1.0F;

        if $b0 <= 0 goto label06;

     label05:
        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setTextSize(float)>($f0_2);

     label06:
        virtualinvoke $r11.<android.content.res.TypedArray: void recycle()>();

        lookupswitch($i4)
        {
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            default: goto label07;
        };

     label07:
(6)     goto label08;

     label08:
        $r21 = Phi($r21 #6, $r21_1 #14, $r21_2 #15, $r21_3 #16, $r21_4 #17);

        $r6_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint>;

        $r15 = virtualinvoke $r6_1.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        $r16 = new android.text.BoringLayout$Metrics;

        specialinvoke $r16.<android.text.BoringLayout$Metrics: void <init>()>();

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics> = $r16;

        $r16_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $i4_1 = $r15.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $r16_1.<android.graphics.Paint$FontMetricsInt: int ascent> = $i4_1;

        $r16_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $i4_2 = $r15.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $r16_2.<android.graphics.Paint$FontMetricsInt: int bottom> = $i4_2;

        $r16_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $i4_3 = $r15.<android.graphics.Paint$FontMetricsInt: int descent>;

        $r16_3.<android.graphics.Paint$FontMetricsInt: int descent> = $i4_3;

        $r16_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $i4_4 = $r15.<android.graphics.Paint$FontMetricsInt: int leading>;

        $r16_4.<android.graphics.Paint$FontMetricsInt: int leading> = $i4_4;

        $r16_5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $i4_5 = $r15.<android.graphics.Paint$FontMetricsInt: int top>;

        $r16_5.<android.graphics.Paint$FontMetricsInt: int top> = $i4_5;

        $r16_6 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $i4_6 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $r16_6.<android.text.BoringLayout$Metrics: int width> = $i4_6;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setWillNotDraw(boolean)>(0);

        $r17 = new android.widget.OverScroller;

        specialinvoke $r17.<android.widget.OverScroller: void <init>(android.content.Context)>($r1);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX> = $r17;

        $r17_1 = new android.widget.OverScroller;

        $r4 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r4.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.5F);

        specialinvoke $r17_1.<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r1, $r4);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mAdjustScrollerX> = $r17_1;

        $r18 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i4_7 = virtualinvoke $r18.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mTouchSlop> = $i4_7;

        $i4_8 = virtualinvoke $r18.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMinimumFlingVelocity> = $i4_8;

        $i4_9 = virtualinvoke $r18.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $i4_10 = $i4_9 / 4;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMaximumFlingVelocity> = $i4_10;

        $i4_11 = virtualinvoke $r18.<android.view.ViewConfiguration: int getScaledOverscrollDistance()>();

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mOverscrollDistance> = $i4_11;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPreviousScrollerX> = -2147483648;

(7)     if $r13 != null goto label15;

(8)     if $i1_1 == -2147483648 goto label15;

(9)     if $i3 == 2147483647 goto label15;

(10)    if $i1_1 >= $i3 goto label15;

        $i3_1 = $i3 - $i1_1;

        $i3_2 = $i3_1 + 1;

        $r19 = newarray (java.lang.String)[$i3_2];

        $r14_1 = $r19;

(11)    $i3_3 = 0;

     label09:
        $i3_4 = Phi($i3_3 #11, $i3_5 #13);

        $i4_12 = Phi($i4_11 #11, $i4_14 #13);

        $i4_13 = lengthof $r19;

(12)    if $i3_4 >= $i4_13 goto label15;

        $i4_14 = $i3_4 + $i1_1;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4_14);

        $r19[$i3_4] = $r20;

        $i3_5 = $i3_4 + 1;

(13)    goto label09;

     label10:
        $r5 := @caughtexception;

        $i3_7 = Phi($i3 #0);

        $r14_3 = Phi($r14 #0);

        $f0_3 = Phi($f0 #0, $f0_1 #3, $f0_2 #5);

        $i1_2 = Phi($i1 #0, $i1_1 #1);

        $i5_2 = Phi($i5 #0, $i5_1 #2);

        $i2_2 = Phi($i2 #0, $i2_1 #4);

        $i4_16 = Phi($i4 #0);

        virtualinvoke $r11.<android.content.res.TypedArray: void recycle()>();

        throw $r5;

     label11:
        $r21_1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setEllipsize(android.text.TextUtils$TruncateAt)>($r21_1);

(14)    goto label08;

     label12:
        $r21_2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MIDDLE>;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setEllipsize(android.text.TextUtils$TruncateAt)>($r21_2);

(15)    goto label08;

     label13:
        $r21_3 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setEllipsize(android.text.TextUtils$TruncateAt)>($r21_3);

(16)    goto label08;

     label14:
        $r21_4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setEllipsize(android.text.TextUtils$TruncateAt)>($r21_4);

(17)    goto label08;

     label15:
        $i3_6 = Phi($i3 #7, $i3 #8, $i3 #9, $i3 #10, $i3_4 #12);

        $r14_2 = Phi($r14 #7, $r14 #8, $r14 #9, $r14 #10, $r14_1 #12);

        $i4_15 = Phi($i4_11 #7, $i4_11 #8, $i4_11 #9, $i4_11 #10, $i4_13 #12);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setValues(java.lang.CharSequence[])>($r14_2);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setSideItems(int)>($i2_1);

        $r22 = new com.contextlogic.wish.ui.components.picker.HorizontalPicker$PickerTouchHelper;

        specialinvoke $r22.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$PickerTouchHelper: void <init>(com.contextlogic.wish.ui.components.picker.HorizontalPicker)>($r0);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$PickerTouchHelper mTouchHelper> = $r22;

        $r22_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$PickerTouchHelper mTouchHelper>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>($r0, $r22_1);

        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
    }

    static int access$100(com.contextlogic.wish.ui.components.picker.HorizontalPicker)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int i0;

        $r0 := @parameter0: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        return i0;
    }

    static float access$200(com.contextlogic.wish.ui.components.picker.HorizontalPicker)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float f0;

        $r0 := @parameter0: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        return f0;
    }

    static int access$300(com.contextlogic.wish.ui.components.picker.HorizontalPicker)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int i0;

        $r0 := @parameter0: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

        return i0;
    }

    static java.lang.CharSequence[] access$400(com.contextlogic.wish.ui.components.picker.HorizontalPicker)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        java.lang.CharSequence[] r1;

        $r0 := @parameter0: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        return r1;
    }

    private void adjustToNearestItemX()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.widget.OverScroller $r1;
        int $i0, $i1, $i2, $i3, $i1_1, $i1_2, $i1_3, $i2_1, $i3_1, $i2_2, $i1_4, $i1_5, $i3_2, $i1_6;
        float $f0, $f1, $f2, $f2_1, $f1_1, $f0_1, $f0_2;
        java.lang.CharSequence[] $r2, $r2_1, $r2_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        $f0 = (float) $i0;

        $i1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f1 = (float) $i1;

        $f2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f2_1 = $f2 * 1.0F;

        $f1_1 = $f1 + $f2_1;

        $f0_1 = $f0 / $f1_1;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0_1);

        $i1_1 = $i2;

        if $i2 >= 0 goto label2;

(0)     $i1_2 = 0;

     label1:
        $i3 = Phi($i3 #0, $i3_2 #1, $i3_2 #2);

        $r2 = Phi($r2 #0, $r2_1 #1, $r2_2 #2);

        $i1_3 = Phi($i1_2 #0, $i1_1 #1, $i1_6 #2);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSelectedItem> = $i1_3;

        $i2_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $i3_1 = (int) $f0_2;

        $i2_2 = $i2_1 + $i3_1;

        $i1_4 = $i2_2 * $i1_3;

        $i1_5 = $i1_4 - $i0;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mAdjustScrollerX>;

        virtualinvoke $r1.<android.widget.OverScroller: void startScroll(int,int,int,int,int)>($i0, 0, $i1_5, 0, 800);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

        return;

     label2:
        $r2_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i3_2 = lengthof $r2_1;

(1)     if $i2 <= $i3_2 goto label1;

        $r2_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i1_6 = lengthof $r2_2;

(2)     goto label1;
    }

    private java.lang.Object argbEvaluate(float, java.lang.Object, java.lang.Object)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        java.lang.Object $r1, $r2;
        float $f0, $f1, $f1_1, $f1_2, $f1_3, $f1_4, $f1_5, $f1_6, $f0_1;
        java.lang.Integer $r3, $r3_1, $r3_2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i1_1, $i1_2, $i1_3, $i0_1, $i5_1, $i5_2, $i5_3, $i4_1, $i6_1, $i6_2, $i2_1, $i2_2, $i7_1, $i7_2, $i3_1, $i3_2, $i3_3, $i5_4, $i5_5, $i1_4, $i1_5, $i1_6, $i4_2, $i4_3, $i0_2, $i0_3;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $f0 := @parameter0: float;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i0 >> 24;

        $i2 = $i1 & 255;

        $i1_1 = $i0 >> 16;

        $i3 = $i1_1 & 255;

        $i1_2 = $i0 >> 8;

        $i1_3 = $i1_2 & 255;

        $i0_1 = $i0 & 255;

        $r3_1 = (java.lang.Integer) $r2;

        $i4 = virtualinvoke $r3_1.<java.lang.Integer: int intValue()>();

        $i5 = $i4 >> 24;

        $i6 = $i5 & 255;

        $i5_1 = $i4 >> 16;

        $i7 = $i5_1 & 255;

        $i5_2 = $i4 >> 8;

        $i5_3 = $i5_2 & 255;

        $i4_1 = $i4 & 255;

        $i6_1 = $i6 - $i2;

        $f1 = (float) $i6_1;

        $f1_1 = $f1 * $f0;

        $i6_2 = (int) $f1_1;

        $i2_1 = $i6_2 + $i2;

        $i2_2 = $i2_1 << 24;

        $i7_1 = $i7 - $i3;

        $f1_2 = (float) $i7_1;

        $f1_3 = $f1_2 * $f0;

        $i7_2 = (int) $f1_3;

        $i3_1 = $i7_2 + $i3;

        $i3_2 = $i3_1 << 16;

        $i3_3 = $i2_2 | $i3_2;

        $i5_4 = $i5_3 - $i1_3;

        $f1_4 = (float) $i5_4;

        $f1_5 = $f1_4 * $f0;

        $i5_5 = (int) $f1_5;

        $i1_4 = $i5_5 + $i1_3;

        $i1_5 = $i1_4 << 8;

        $i1_6 = $i3_3 | $i1_5;

        $i4_2 = $i4_1 - $i0_1;

        $f1_6 = (float) $i4_2;

        $f0_1 = $f1_6 * $f0;

        $i4_3 = (int) $f0_1;

        $i0_2 = $i4_3 + $i0_1;

        $i0_3 = $i1_6 | $i0_2;

        $r3_2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0_3);

        return $r3_2;
    }

    private void calculateItemSize(int, int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1, $i2, $i3, $i4, $i3_1, $i3_2, $i1_1, $i2_1, $i2_2, $i2_3, $i2_4;
        float $f0, $f1, $f0_1;
        android.graphics.RectF $r1, $r2, $r1_1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

        $i3_1 = $i3 * 2;

        $i3_2 = $i3_1 + 1;

        $f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $i4 = (int) $f0;

        $i1 = $i3_2 + -1;

        $i1_1 = $i4 * $i1;

        $i2_1 = $i2 - $i1_1;

        $i2_2 = $i2_1 / $i3_2;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth> = $i2_2;

        $r1 = new android.graphics.RectF;

        $i2_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0_1 = (float) $i2_3;

        $f1 = (float) $i0;

        specialinvoke $r1.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0_1, $f1);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.graphics.RectF mItemClipBounds> = $r1;

        $r2 = new android.graphics.RectF;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.graphics.RectF mItemClipBounds>;

        specialinvoke $r2.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r1_1);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.graphics.RectF mItemClipBoundsOffser> = $r2;

        $i2_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSelectedItem>;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void scrollToItem(int)>($i2_4);

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void remakeLayout()>();

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void startMarqueeIfNeeded()>();

        return;
    }

    private void computeScrollX()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        android.widget.OverScroller $r1, $r1_1, $r1_2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        $z0 = virtualinvoke $r1.<android.widget.OverScroller: boolean isFinished()>();

(0)     if $z0 == 0 goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mAdjustScrollerX>;

        $z0_1 = virtualinvoke $r1_1.<android.widget.OverScroller: boolean isFinished()>();

(1)     if $z0_1 == 0 goto label1;

        return;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $z0_3 = virtualinvoke $r1_2.<android.widget.OverScroller: boolean computeScrollOffset()>();

(2)     if $z0_3 == 0 goto label4;

        $i1 = virtualinvoke $r1_2.<android.widget.OverScroller: int getCurrX()>();

        $i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPreviousScrollerX>;

(3)     if $i0 != -2147483648 goto label2;

        $i0_1 = virtualinvoke $r1_2.<android.widget.OverScroller: int getStartX()>();

(4)     $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPreviousScrollerX> = $i0_1;

     label2:
        $i0_2 = Phi($i0 #3, $i0_1 #4);

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollRange()>();

        $i0_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPreviousScrollerX>;

        $i0_4 = $i1 - $i0_3;

        $i2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPreviousScrollerX>;

        $i3 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollY()>();

        $i4 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollRange()>();

        $i5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mOverscrollDistance>;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>($i0_4, 0, $i2, $i3, $i4, 0, $i5, 0, 0);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPreviousScrollerX> = $i1;

        $z0_4 = virtualinvoke $r1_2.<android.widget.OverScroller: boolean isFinished()>();

        if $z0_4 == 0 goto label3;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void onScrollerFinishedX(android.widget.OverScroller)>($r1_2);

     label3:
(5)     virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void postInvalidate()>();

     label4:
        $z0_5 = Phi($z0_3 #2, $z0_4 #5);

        $i0_5 = Phi($i0 #2, $i0_4 #5);

        return;
    }

    private void finishScrolling()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void adjustToNearestItemX()>();

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX> = 0;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void startMarqueeIfNeeded()>();

        return;
    }

    private void flingX(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.widget.OverScroller $r1;
        int $i0, $i1, $i2, $i3, $i4, $i0_1, $i3_1, $i4_1, $i3_2, $i4_2, $i4_3;
        float $f0, $f1, $f0_1;
        java.lang.CharSequence[] $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPreviousScrollerX> = -2147483648;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        $i1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        $i2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollY()>();

        $i0_1 = neg $i0;

        $i3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = (float) $i3;

        $f1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f0_1 = $f0 + $f1;

        $i3_1 = (int) $f0_1;

        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i4 = lengthof $r2;

        $i4_1 = $i4 + -1;

        $i3_2 = $i4_1 * $i3_1;

        $i4_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getWidth()>();

        $i4_3 = $i4_2 / 2;

        virtualinvoke $r1.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>($i1, $i2, $i0_1, 0, 0, $i3_2, 0, 0, $i4_3, 0);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

        return;
    }

    private int getColor(int, int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        double $d0;
        byte $b0;
        int $i1, $i2, $i3, $i3_1, $i1_1, $i1_2, $i2_1, $i1_3, $i2_2, $i1_4, $i2_3, $i1_5, $i2_4, $i1_6, $i2_5;
        float $f0, $f1, $f0_1, $f0_2, $f0_3, $f1_1, $f0_4, $f0_5, $f1_2, $f1_3, $f0_6, $f0_7, $f0_8, $f0_9, $f0_10, $f0_11;
        android.content.res.ColorStateList $r1, $r3, $r1_1, $r1_2, $r1_3, $r1_4;
        int[] $r2, $r2_1, $r2_2, $r2_3;
        java.lang.Integer $r4, $r5, $r4_1;
        java.lang.Object $r6;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = (float) $i3;

        $f1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f0_1 = $f0 + $f1;

        $i3_1 = (int) $f0_1;

        $f0_2 = (float) $i1;

        $f0_3 = 1.0F * $f0_2;

        $f1_1 = (float) $i3_1;

        $f0_4 = $f0_3 % $f1_1;

        $f0_5 = $f0_4 / 2.0F;

        $f1_2 = (float) $i3_1;

        $f1_3 = $f1_2 / 2.0F;

        $f0_6 = $f0_5 / $f1_3;

        $f0_7 = staticinvoke <java.lang.Math: float abs(float)>($f0_6);

        $d0 = (double) $f0_7;

        $b0 = $d0 cmpl 0.5;

        if $b0 <= 0 goto label3;

(0)     $f0_8 = $f0_7 - 0.5F;

     label1:
        $f0_9 = Phi($f0_8 #0, $f0_11 #2);

        $f0_10 = $f0_9 * 2.0F;

        $i1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPressedItem>;

        if $i1_1 != $i2 goto label4;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor>;

        $r2 = newarray (int)[1];

        $r2[0] = 16842919;

        $r3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor>;

        $i1_2 = virtualinvoke $r3.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i2_1 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, $i1_2);

        $i1_3 = $i2_1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor>;

        $r2_1 = newarray (int)[2];

        $r2_1[0] = 16842919;

        $r2_1[1] = 16842913;

(1)     $i2_2 = virtualinvoke $r1_1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2_1, $i2_1);

     label2:
        $r1_2 = Phi($r1_1 #1, $r1_4 #3);

        $i1_4 = Phi($i1_3 #1, $i1_6 #3);

        $i2_3 = Phi($i2_2 #1, $i2_5 #3);

        $r2_2 = Phi($r2_1 #1, $r2_3 #3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2_3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1_4);

        $r6 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.Object argbEvaluate(float,java.lang.Object,java.lang.Object)>($f0_10, $r4, $r5);

        $r4_1 = (java.lang.Integer) $r6;

        $i1_5 = virtualinvoke $r4_1.<java.lang.Integer: int intValue()>();

        return $i1_5;

     label3:
        $f0_11 = 0.5F - $f0_7;

(2)     goto label1;

     label4:
        $r1_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor>;

        $i2_4 = virtualinvoke $r1_3.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i1_6 = $i2_4;

        $r1_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor>;

        $r2_3 = newarray (int)[1];

        $r2_3[0] = 16842913;

        $i2_5 = virtualinvoke $r1_4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2_3, $i2_4);

(3)     goto label2;
    }

    private int getInBoundsX(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1, $i2, $i1_1, $i2_1, $i2_2, $i1_2, $i0_1, $i1_3, $i0_2, $i1_4, $i1_5, $i0_3, $i0_4, $i1_6;
        float $f0, $f0_1, $f0_2;
        java.lang.CharSequence[] $r1, $r1_1, $r1_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        $i1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $i2 = (int) $f0;

        $i1_1 = $i1 + $i2;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i2_1 = lengthof $r1;

        $i2_2 = $i2_1 + -1;

        $i1_2 = $i1_1 * $i2_2;

(0)     if $i0 <= $i1_2 goto label2;

        $i0_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $i1_3 = (int) $f0_1;

        $i0_2 = $i0_1 + $i1_3;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i1_4 = lengthof $r1_1;

        $i1_5 = $i1_4 + -1;

(1)     $i0_3 = $i0_2 * $i1_5;

     label2:
        $i0_4 = Phi($i0 #0, $i0_3 #1);

        $i1_6 = Phi($i1_2 #0, $i1_5 #1);

        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $f0_2 = Phi($f0 #0, $f0_1 #1);

        return $i0_4;
    }

    private int getPositionFromCoordinates(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0, $f1, $f2, $f0_1, $f1_1;
        int $i0, $i0_1, $i0_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $f1 = (float) $i0;

        $i0_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = (float) $i0_1;

        $f2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f0_1 = $f0 + $f2;

        $f1_1 = $f1 / $f0_1;

        $i0_2 = staticinvoke <java.lang.Math: int round(float)>($f1_1);

        return $i0_2;
    }

    private int getPositionFromTouch(float)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0, $f1, $f2, $f3, $f2_1, $f3_1, $f3_2, $f2_2, $f1_1, $f0_1;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $f0 := @parameter0: float;

        $i0 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        $f1 = (float) $i0;

        $i0_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f2 = (float) $i0_1;

        $f3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f2_1 = $f2 + $f3;

        $i0_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

        $f3_1 = (float) $i0_2;

        $f3_2 = $f3_1 + 0.5F;

        $f2_2 = $f2_1 * $f3_2;

        $f1_1 = $f1 - $f2_2;

        $f0_1 = $f1_1 + $f0;

        $i0_3 = (int) $f0_1;

        $i0_4 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getPositionFromCoordinates(int)>($i0_3);

        return $i0_4;
    }

    private int getPositionOnScreen(float)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0, $f1, $f2, $f0_1, $f1_1;
        int $i0, $i0_1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $f1 := @parameter0: float;

        $i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = (float) $i0;

        $f2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f0_1 = $f0 + $f2;

        $f1_1 = $f1 / $f0_1;

        $i0_1 = (int) $f1_1;

        return $i0_1;
    }

    private int getRelativeInBound(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1, $i0_1, $i0_2, $i0_3;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        $i0_1 = $i1 + $i0;

        $i0_2 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getInBoundsX(int)>($i0_1);

        $i0_3 = $i0_2 - $i1;

        return $i0_3;
    }

    private int getScrollRange()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0;
        int $i0, $i1, $i0_1, $i0_2, $i1_1, $i1_2, $i0_3, $i0_4, $i0_5;
        java.lang.CharSequence[] $r1, $r1_1, $r1_2, $r1_3;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i0 = lengthof $r1_1;

(1)     if $i0 == 0 goto label1;

        $i0_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $i1 = (int) $f0;

        $i0_2 = $i0_1 + $i1;

        $r1_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i1_1 = lengthof $r1_2;

        $i1_2 = $i1_1 + -1;

        $i0_3 = $i0_2 * $i1_2;

        $i0_4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0_3);

        return $i0_4;

     label1:
        $r1_3 = Phi($r1 #0, $r1_1 #1);

        $i0_5 = Phi($i0 #0, $i0 #1);

        return 0;
    }

    private int getTextColor(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0, $f1, $f0_1;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i3_1, $i4_1, $i4_2, $i4_3, $i5_1, $i4_4, $i2_1, $i1_1, $i0_1, $i4_5, $i5_2, $i1_2, $i0_2;
        android.content.res.ColorStateList $r2, $r2_1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor>;

        $i2 = virtualinvoke $r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f1 = (float) $i3;

        $f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f0_1 = $f1 + $f0;

        $i3_1 = (int) $f0_1;

        $i4 = $i3_1 * $i0;

        $i5 = $i3_1 / 2;

        $i4_1 = $i4 - $i5;

(0)     if $i1 <= $i4_1 goto label1;

        $i4_2 = $i0 + 1;

        $i4_3 = $i4_2 * $i3_1;

        $i5_1 = $i3_1 / 2;

        $i4_4 = $i4_3 - $i5_1;

(1)     if $i1 >= $i4_4 goto label1;

        $i2_1 = $i3_1 / 2;

        $i1_1 = $i1 - $i2_1;

        $i0_1 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getColor(int,int)>($i1_1, $i0);

        return $i0_1;

     label1:
        $i4_5 = Phi($i4_1 #0, $i4_4 #1);

        $i5_2 = Phi($i5 #0, $i5_1 #1);

        $i1_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPressedItem>;

        if $i0 != $i1_2 goto label2;

        $r2_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.content.res.ColorStateList mTextColor>;

        $r1 = newarray (int)[1];

        $r1[0] = 16842919;

        $i0_2 = virtualinvoke $r2_1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r1, $i2);

        return $i0_2;

     label2:
        return $i2;
    }

    private android.support.v4.text.TextDirectionHeuristicCompat getTextDirectionHeuristic()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        boolean $z0, $z0_1, $z0_2;
        int $i0, $i0_1, $i0_2;
        android.support.v4.text.TextDirectionHeuristicCompat r1, r1_1, r1_2, r1_3, r1_4, r1_5, r1_6;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $z0 = 1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 17 goto label01;

        r1 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR>;

        return r1;

     label01:
        $i0_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getLayoutDirection()>();

(0)     if $i0_1 != 1 goto label05;

     label02:
        $z0_1 = Phi($z0 #0, $z0_2 #1);

        $i0_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getTextDirection()>();

        lookupswitch($i0_2)
        {
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            default: goto label03;
        };

     label03:
        goto label04;

     label04:
        if $z0_1 == 0 goto label06;

        r1_1 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL>;

        return r1_1;

     label05:
        $z0_2 = 0;

(1)     goto label02;

     label06:
        r1_2 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR>;

        return r1_2;

     label07:
        r1_3 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR>;

        return r1_3;

     label08:
        r1_4 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat LTR>;

        return r1_4;

     label09:
        r1_5 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat RTL>;

        return r1_5;

     label10:
        r1_6 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat LOCALE>;

        return r1_6;
    }

    private boolean isRtl(java.lang.CharSequence)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        java.lang.CharSequence $r1;
        android.support.v4.text.TextDirectionHeuristicCompat $r2, $r2_1, $r2_2, $r2_3;
        int $i0;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.support.v4.text.TextDirectionHeuristicCompat mTextDir>;

(0)     if $r2 != null goto label1;

        $r2_1 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.support.v4.text.TextDirectionHeuristicCompat getTextDirectionHeuristic()>();

(1)     $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.support.v4.text.TextDirectionHeuristicCompat mTextDir> = $r2_1;

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r2_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.support.v4.text.TextDirectionHeuristicCompat mTextDir>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $z0 = interfaceinvoke $r2_3.<android.support.v4.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i0);

        return $z0;
    }

    private void onScrollerFinishedX(android.widget.OverScroller)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.widget.OverScroller $r1, $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.widget.OverScroller;

        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        if $r1 != $r2 goto label1;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void finishScrolling()>();

     label1:
        return;
    }

    private void remakeLayout()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.text.BoringLayout $r1;
        java.lang.CharSequence[] $r2;
        java.lang.CharSequence $r3;
        android.text.Layout$Alignment $r4;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i0_3, $i1_1, $i1_2, $i0_4, $i0_5, $i1_3;
        android.text.BoringLayout[] $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;
        android.text.TextPaint $r6;
        android.text.BoringLayout$Metrics $r7;
        android.text.TextUtils$TruncateAt $r8;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

(0)     if $r5 == null goto label2;

        $r5_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

        $i0 = lengthof $r5_1;

(1)     if $i0 <= 0 goto label2;

        $i0_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getWidth()>();

(2)     if $i0_1 <= 0 goto label2;

(3)     $i0_2 = 0;

     label1:
        $i0_3 = Phi($i0_2 #3, $i0_4 #5);

        $i1 = Phi($i1 #3, $i1_2 #5);

        $r5_2 = Phi($r5_1 #3, $r5_4 #5);

        $r5_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

        $i1_1 = lengthof $r5_3;

(4)     if $i0_3 >= $i1_1 goto label2;

        $r5_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

        $r1 = $r5_4[$i0_3];

        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $r3 = $r2[$i0_3];

        $r6 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint>;

        $i1_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        $r7 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $r8 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextUtils$TruncateAt mEllipsize>;

        $i2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        virtualinvoke $r1.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r3, $r6, $i1_2, $r4, 1.0F, 1.0F, $r7, 0, $r8, $i2);

        $i0_4 = $i0_3 + 1;

(5)     goto label1;

     label2:
        $i0_5 = Phi($i0 #0, $i0 #1, $i0_1 #2, $i0_3 #4);

        $i1_3 = Phi($i1 #0, $i1 #1, $i1 #2, $i1_1 #4);

        $r5_5 = Phi($r5 #0, $r5_1 #1, $r5_1 #2, $r5_3 #4);

        return;
    }

    private void scrollToItem(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0;
        int $i0, $i1, $i2, $i0_1, $i1_1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i1 := @parameter0: int;

        $i2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $i0 = (int) $f0;

        $i0_1 = $i2 + $i0;

        $i1_1 = $i0_1 * $i1;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void scrollTo(int,int)>($i1_1, 0);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

        return;
    }

    private void selectItem()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected $r1, $r1_1, $r1_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected mOnItemSelected>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected mOnItemSelected>;

        $i0 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getSelectedItem()>();

(1)     interfaceinvoke $r1_1.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected: void onItemSelected(int)>($i0);

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void adjustToNearestItemX()>();

        return;
    }

    private void setTextSize(float)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0, $f1;
        byte $b0;
        android.text.TextPaint $r1, $r1_1, $r1_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $f0 := @parameter0: float;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        $b0 = $f0 cmpl $f1;

(0)     if $b0 == 0 goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1_1.<android.text.TextPaint: void setTextSize(float)>($f0);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void requestLayout()>();

(1)     virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        return;
    }

    private void smoothScrollBy(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        float $f0;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i1_2, $i0_2;
        android.widget.OverScroller $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i1 := @parameter0: int;

        $i2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $i0 = (int) $f0;

        $i0_1 = $i2 + $i0;

        $i1_1 = $i0_1 * $i1;

        $i1_2 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getRelativeInBound(int)>($i1_1);

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        $i0_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        virtualinvoke $r1.<android.widget.OverScroller: void startScroll(int,int,int,int)>($i0_2, 0, $i1_2, 0);

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void stopMarqueeIfNeeded()>();

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

        return;
    }

    private void startMarqueeIfNeeded()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.text.BoringLayout[] $r1;
        android.text.BoringLayout $r2;
        android.text.TextUtils$TruncateAt $r3, $r4;
        int $i0, $i2, $i0_1, $i0_2;
        float $f0, $f1;
        byte $b1;
        java.lang.CharSequence[] $r5;
        java.lang.CharSequence $r6;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee $r7, $r7_1, $r7_2;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void stopMarqueeIfNeeded()>();

        $i2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getSelectedItem()>();

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

        $r2 = $r1[$i2];

        $r3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextUtils$TruncateAt mEllipsize>;

        $r4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

(0)     if $r3 != $r4 goto label1;

        $i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r2.<android.text.Layout: float getLineWidth(int)>(0);

        $b1 = $f0 cmpg $f1;

(1)     if $b1 >= 0 goto label1;

        $r7 = new com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee;

        $r5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $r6 = $r5[$i2];

        $z0 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean isRtl(java.lang.CharSequence)>($r6);

        specialinvoke $r7.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee: void <init>(com.contextlogic.wish.ui.components.picker.HorizontalPicker,android.text.Layout,boolean)>($r0, $r2, $z0);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee> = $r7;

        $r7_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

        $i0_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMarqueeRepeatLimit>;

(2)     virtualinvoke $r7_1.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee: void start(int)>($i0_1);

     label1:
        $r7_2 = Phi($r7 #0, $r7 #1, $r7_1 #2);

        $i0_2 = Phi($i0 #0, $i0 #1, $i0_1 #2);

        return;
    }

    private void stopMarqueeIfNeeded()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee $r1, $r1_1, $r1_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

        virtualinvoke $r1_1.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee: void stop()>();

(1)     $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee> = null;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        return;
    }

    public void computeScroll()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void computeScrollX()>();

        return;
    }

    protected void drawableStateChanged()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        specialinvoke $r0.<android.view.View: void drawableStateChanged()>();

        return;
    }

    public android.text.TextUtils$TruncateAt getEllipsize()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.text.TextUtils$TruncateAt r1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextUtils$TruncateAt mEllipsize>;

        return r1;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.graphics.Rect $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke $r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r1);

        return;
    }

    public int getMarqueeRepeatLimit()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int i0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMarqueeRepeatLimit>;

        return i0;
    }

    public int getSelectedItem()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i0_1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        $i0_1 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getPositionFromCoordinates(int)>($i0);

        return $i0_1;
    }

    public int getSideItems()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int i0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

        return i0;
    }

    public java.lang.CharSequence[] getValues()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        java.lang.CharSequence[] r1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        return r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i2_1, $i2_2, $i2_3, $i3_1, $i3_2, $i3_3, $i4_1, $i4_2, $i4_3, $i4_4, $i4_5, $i4_6, $i4_7, $i2_4, $i4_8;
        android.text.TextPaint $r2;
        android.text.BoringLayout[] $r3;
        android.text.BoringLayout $r4;
        java.lang.CharSequence $r5;
        float $f0, $f1, $f2, $f3, $f4, $f0_1, $f1_1, $f1_2, $f1_3, $f1_4, $f2_1, $f3_1, $f1_5, $f1_6, $f1_7, $f1_8, $f1_9, $f1_10, $f1_11, $f1_12, $f1_13, $f2_2, $f1_14, $f2_3, $f1_15, $f3_2, $f3_3, $f2_4, $f3_4, $f3_5, $f1_16, $f1_17, $f3_6;
        java.lang.CharSequence[] $r6, $r6_1, $r6_2, $r6_3;
        byte $b5, $b5_1, $b5_2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7;
        android.graphics.RectF $r8, $r9, $r10, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $i1 = virtualinvoke $r1.<android.graphics.Canvas: int getSaveCount()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSelectedItem>;

        $i2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f0 = (float) $i2;

        $f1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mDividerSize>;

        $f0_1 = $f0 + $f1;

        $i2_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

        $f1_1 = (float) $i2_1;

        $f1_2 = $f1_1 * $f0_1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1_2, 0.0F);

(0)     $i2_2 = 0;

     label01:
        $i3 = Phi($i3 #0, $i3_3 #12);

        $b5 = Phi($b5 #0, $b5_2 #12);

        $f3 = Phi($f3 #0, $f3_5 #12);

        $i2_3 = Phi($i2_2 #0, $i2_4 #12);

        $r6 = Phi($r6 #0, $r6_3 #12);

        $r7 = Phi($r7 #0, $r7_7 #12);

        $i4 = Phi($i4 #0, $i4_7 #12);

        $f2 = Phi($f2 #0, $f2_4 #12);

        $z0 = Phi($z0 #0, $z0_4 #12);

        $r8 = Phi($r8 #0, $r8_4 #12);

        $f1_3 = Phi($f1_2 #0, $f1_17 #12);

        $r6_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i3_1 = lengthof $r6_1;

        if $i2_3 >= $i3_1 goto label10;

        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint>;

        $i3_2 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getTextColor(int)>($i2_3);

        virtualinvoke $r2.<android.text.TextPaint: void setColor(int)>($i3_2);

        $r3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

        $r4 = $r3[$i2_3];

        $i3_3 = virtualinvoke $r1.<android.graphics.Canvas: int getSaveCount()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f1_4 = 0.0F;

        $f2_1 = virtualinvoke $r4.<android.text.BoringLayout: float getLineWidth(int)>(0);

        $i4_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f3_1 = (float) $i4_1;

        $b5_1 = $f2_1 cmpl $f3_1;

(1)     if $b5_1 <= 0 goto label02;

        $r6_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $r5 = $r6_2[$i2_3];

        $z0_1 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean isRtl(java.lang.CharSequence)>($r5);

        if $z0_1 == 0 goto label07;

        $i4_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f1_5 = (float) $i4_2;

        $f1_6 = $f2_1 - $f1_5;

        $f1_7 = $f1_6 / 2.0F;

(2)     $f1_8 = 0.0F + $f1_7;

     label02:
        $r6_3 = Phi($r6_1 #1, $r6_2 #2, $r6_2 #13);

        $i4_4 = Phi($i4_1 #1, $i4_2 #2, $i4_3 #13);

        $z0_2 = Phi($z0 #1, $z0_1 #2, $z0_1 #13);

        $f1_13 = Phi($f1_4 #1, $f1_8 #2, $f1_12 #13);

        $r7_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

(3)     if $r7_1 == null goto label03;

(4)     if $i2_3 != $i0 goto label03;

        $r7_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

        $f2_2 = virtualinvoke $r7_2.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee: float getScroll()>();

(5)     $f1_14 = $f1_13 + $f2_2;

     label03:
        $r7_3 = Phi($r7_1 #3, $r7_1 #4, $r7_2 #5);

        $f2_3 = Phi($f2_1 #3, $f2_1 #4, $f2_2 #5);

        $f1_15 = Phi($f1_13 #3, $f1_13 #4, $f1_14 #5);

        $i4_5 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getHeight()>();

        if $i4_5 != 0 goto label08;

        $r8_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.graphics.RectF mItemClipBounds>;

(6)     $f3_2 = virtualinvoke $r8_1.<android.graphics.RectF: float height()>();

     label04:
        $f3_3 = Phi($f3_2 #6, $f3_6 #14);

        $i4_6 = Phi($i4_5 #6, $i4_8 #14);

        $r8_2 = Phi($r8_1 #6, $r8 #14);

        $f2_4 = neg $f1_15;

        $i4_7 = virtualinvoke $r4.<android.text.BoringLayout: int getHeight()>();

        $f4 = (float) $i4_7;

        $f3_4 = $f3_3 - $f4;

        $f3_5 = $f3_4 / 2.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2_4, $f3_5);

        $b5_2 = $f1_15 cmpl 0.0F;

        if $b5_2 != 0 goto label09;

(7)     $r8_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.graphics.RectF mItemClipBounds>;

     label05:
        $r8_4 = Phi($r8_3 #7, $r8_5 #15);

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>($r8_4);

        virtualinvoke $r4.<android.text.BoringLayout: void draw(android.graphics.Canvas)>($r1);

        $r7_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

(8)     if $r7_4 == null goto label06;

(9)     if $i2_3 != $i0 goto label06;

        $r7_5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

        $z0_3 = virtualinvoke $r7_5.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee: boolean shouldDrawGhost()>();

(10)    if $z0_3 == 0 goto label06;

        $r7_6 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee mMarquee>;

        $f1_16 = virtualinvoke $r7_6.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$Marquee: float getGhostOffset()>();

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1_16, 0.0F);

(11)    virtualinvoke $r4.<android.text.BoringLayout: void draw(android.graphics.Canvas)>($r1);

     label06:
        $r7_7 = Phi($r7_4 #8, $r7_4 #9, $r7_5 #10, $r7_6 #11);

        $z0_4 = Phi($z0_2 #8, $z0_2 #9, $z0_3 #10, $z0_3 #11);

        $f1_17 = Phi($f1_15 #8, $f1_15 #9, $f1_15 #10, $f1_16 #11);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i3_3);

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0_1, 0.0F);

        $i2_4 = $i2_3 + 1;

(12)    goto label01;

     label07:
        $i4_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $f1_9 = (float) $i4_3;

        $f1_10 = $f2_1 - $f1_9;

        $f1_11 = $f1_10 / 2.0F;

        $f1_12 = 0.0F - $f1_11;

(13)    goto label02;

     label08:
        $i4_8 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getHeight()>();

        $f3_6 = (float) $i4_8;

(14)    goto label04;

     label09:
        $r9 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.graphics.RectF mItemClipBoundsOffser>;

        $r8_5 = $r9;

        $r10 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.graphics.RectF mItemClipBounds>;

        virtualinvoke $r9.<android.graphics.RectF: void set(android.graphics.RectF)>($r10);

        virtualinvoke $r9.<android.graphics.RectF: void offset(float,float)>($f1_15, 0.0F);

(15)    goto label05;

     label10:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i1);

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0;
        android.view.KeyEvent $r1;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        $z0_1 = specialinvoke $r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0_1;

     label1:
        lookupswitch($i0)
        {
            case 21: goto label5;
            case 22: goto label6;
            case 23: goto label4;
            case 66: goto label4;
            default: goto label2;
        };

     label2:
        goto label3;

     label3:
        $z0_2 = specialinvoke $r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0_2;

     label4:
        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void selectItem()>();

        return 1;

     label5:
        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void smoothScrollBy(int)>(-1);

        return 1;

     label6:
        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void smoothScrollBy(int)>(1);

        return 1;
    }

    protected void onMeasure(int, int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.text.TextPaint $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i0_1, $i1_1, $i3_1, $i3_2, $i4_1, $i4_2, $i3_3, $i3_4;
        android.graphics.Paint$FontMetrics $r2;
        float $f0, $f1, $f0_1, $f0_2, $f1_1, $f1_2, $f0_3;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i0_1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i1_1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i3 = $i1_1;

(0)     if $i2 != 1073741824 goto label2;

     label1:
        $i4 = Phi($i4 #0, $i4_2 #1, $i4_2 #2);

        $f1 = Phi($f1 #0, $f1_2 #1, $f1_2 #2);

        $f0 = Phi($f0 #0, $f0_3 #1, $f0_3 #2);

        $i3_1 = Phi($i3 #0, $i3_4 #1, $i3_3 #2);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setMeasuredDimension(int,int)>($i0_1, $i3_1);

        return;

     label2:
        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f0_1 = $r2.<android.graphics.Paint$FontMetrics: float ascent>;

        $f0_2 = staticinvoke <java.lang.Math: float abs(float)>($f0_1);

        $f1_1 = $r2.<android.graphics.Paint$FontMetrics: float descent>;

        $f1_2 = staticinvoke <java.lang.Math: float abs(float)>($f1_1);

        $f0_3 = $f0_2 + $f1_2;

        $i3_2 = (int) $f0_3;

        $i4_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getPaddingTop()>();

        $i5 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getPaddingBottom()>();

        $i4_2 = $i4_1 + $i5;

        $i3_3 = $i3_2 + $i4_2;

        if $i2 != -2147483648 goto label3;

        $i3_4 = staticinvoke <java.lang.Math: int min(int,int)>($i1_1, $i3_3);

(1)     goto label1;

     label3:
(2)     goto label1;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z1_1;
        android.widget.OverScroller $r1, $r1_1, $r1_2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        specialinvoke $r0.<android.view.View: void scrollTo(int,int)>($i0, $i1);

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        $z1_1 = virtualinvoke $r1.<android.widget.OverScroller: boolean isFinished()>();

(0)     if $z1_1 != 0 goto label1;

(1)     if $z0 == 0 goto label1;

        $r1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        $i2 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollRange()>();

(2)     virtualinvoke $r1_1.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i0, $i1, 0, $i2, 0, 0);

     label1:
        $r1_2 = Phi($r1 #0, $r1 #1, $r1_1 #2);

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        boolean $z0;
        android.os.Parcelable $r1, $r1_1;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState $r2;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState) $r1;

        $r1_1 = virtualinvoke $r2.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1_1);

        $i0 = staticinvoke <com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState: int access$000(com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState)>($r2);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void setSelectedItem(int)>($i0);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState $r1;
        int $i0;
        android.os.Parcelable $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r2 = specialinvoke $r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState;

        specialinvoke $r1.<com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState: void <init>(android.os.Parcelable)>($r2);

        $i0 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSelectedItem>;

        staticinvoke <com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState: int access$002(com.contextlogic.wish.ui.components.picker.HorizontalPicker$SavedState,int)>($r1, $i0);

        return $r1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.view.View: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void calculateItemSize(int,int)>($i0, $i1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.view.MotionEvent $r1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11, $z0_12, $z0_13;
        android.view.VelocityTracker $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7, $r2_8, $r2_9;
        int $i0, $i1, $i2, $i3, $i0_1, $i0_2, $i1_1, $i2_1, $i2_2, $i1_2, $i0_3, $i0_4, $i1_3, $i2_3, $i0_5, $i0_6, $i0_7, $i0_8, $i1_4, $i2_4, $i0_9, $i2_5, $i1_5, $i2_6, $i1_6, $i0_10, $i1_7, $i0_11, $i0_12, $i2_7, $i1_8;
        android.view.ViewParent $r3, $r3_1, $r3_2;
        float $f0, $f1, $f0_1, $f1_1, $f1_2, $f0_2, $f0_3, $f0_4, $f0_5, $f0_6, $f0_7, $f0_8, $f0_9;
        android.widget.OverScroller $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean isEnabled()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.VelocityTracker mVelocityTracker>;

(0)     if $r2 != null goto label02;

        $r2_1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

(1)     $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.VelocityTracker mVelocityTracker> = $r2_1;

     label02:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r2_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2_3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

(2)     lookupswitch($i0)
        {
            case 0: goto label09;
            case 1: goto label14;
            case 2: goto label05;
            case 3: goto label16;
            default: goto label03;
        };

     label03:
(3)     goto label04;

     label04:
        $f1 = Phi($f1 #3, $f1_2 #5, $f1_2 #10, $f1 #14, $f1 #21);

        $i0_1 = Phi($i0 #3, $i0_2 #5, $i0_4 #10, $i0_6 #14, $i0_12 #21);

        $r3 = Phi($r3 #3, $r3_1 #5, $r3_1 #10, $r3_2 #14, $r3 #21);

        $i2 = Phi($i2 #3, $i2_1 #5, $i2_3 #10, $i2 #14, $i2_7 #21);

        $z0_1 = Phi($z0 #3, $z0_2 #5, $z0_4 #10, $z0_7 #14, $z0_13 #21);

        $f0 = Phi($f0 #3, $f0_1 #5, $f0_1 #10, $f0_4 #14, $f0_9 #21);

        $i1 = Phi($i1 #3, $i1_1 #5, $i1_3 #10, $i1 #14, $i1_8 #21);

        $r4 = Phi($r4 #3, $r4 #5, $r4 #10, $r4_3 #14, $r4 #21);

        $r2_4 = Phi($r2_3 #3, $r2_3 #5, $r2_6 #10, $r2_3 #14, $r2_9 #21);

        return 1;

     label05:
        $r3_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.ViewParent getParent()>();

        interfaceinvoke $r3_1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $f0_1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mLastDownEventX>;

        $f1_2 = $f1_1 - $f0_1;

        $i0_2 = (int) $f1_2;

        $z0_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX>;

(4)     if $z0_2 != 0 goto label06;

        $i1_1 = staticinvoke <java.lang.Math: int abs(int)>($i0_2);

        $i2_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mTouchSlop>;

(5)     if $i1_1 <= $i2_1 goto label04;

     label06:
        $i2_2 = Phi($i2 #4, $i2_1 #5);

        $i1_2 = Phi($i1 #4, $i1_1 #5);

        $z0_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX>;

(6)     if $z0_3 != 0 goto label07;

        $i0_3 = 0;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPressedItem> = -1;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX> = 1;

(7)     specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void stopMarqueeIfNeeded()>();

     label07:
        $i0_4 = Phi($i0_2 #6, $i0_3 #7);

        $i1_3 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollRange()>();

        $i2_3 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getScrollX()>();

        $i3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mOverscrollDistance>;

        $z0_4 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>($i0_4, 0, $i2_3, 0, $i1_3, 0, $i3, 0, 1);

(8)     if $z0_4 == 0 goto label08;

        $r2_5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.VelocityTracker mVelocityTracker>;

(9)     virtualinvoke $r2_5.<android.view.VelocityTracker: void clear()>();

     label08:
        $r2_6 = Phi($r2_3 #8, $r2_5 #9);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mLastDownEventX> = $f0_1;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

(10)    goto label04;

     label09:
        $r3_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.ViewParent getParent()>();

        interfaceinvoke $r3_2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $r4_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mAdjustScrollerX>;

        $z0_5 = virtualinvoke $r4_1.<android.widget.OverScroller: boolean isFinished()>();

        if $z0_5 != 0 goto label12;

        $r4_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mAdjustScrollerX>;

(11)    virtualinvoke $r4_2.<android.widget.OverScroller: void forceFinished(boolean)>(1);

     label10:
        $z0_6 = Phi($z0_5 #11, $z0_8 #15, $z0_8 #16);

        $r4_3 = Phi($r4_2 #11, $r4_5 #15, $r4_4 #16);

        $f0_2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: float mLastDownEventX> = $f0_2;

        $z0_7 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX>;

(12)    if $z0_7 != 0 goto label11;

        $f0_3 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0_5 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getPositionFromTouch(float)>($f0_3);

(13)    $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPressedItem> = $i0_5;

     label11:
        $i0_6 = Phi($i0 #12, $i0_5 #13);

        $f0_4 = Phi($f0_2 #12, $f0_3 #13);

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

(14)    goto label04;

     label12:
        $r4_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        $z0_8 = virtualinvoke $r4_4.<android.widget.OverScroller: boolean isFinished()>();

        if $z0_8 != 0 goto label13;

        $r4_5 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.widget.OverScroller mFlingScrollerX>;

        virtualinvoke $r4_5.<android.widget.OverScroller: void forceFinished(boolean)>(1);

(15)    goto label10;

     label13:
        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX> = 0;

(16)    goto label10;

     label14:
        $r2_7 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.VelocityTracker mVelocityTracker>;

        $i0_7 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMaximumFlingVelocity>;

        $f0_5 = (float) $i0_7;

        virtualinvoke $r2_7.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0_5);

        $f0_6 = virtualinvoke $r2_7.<android.view.VelocityTracker: float getXVelocity()>();

        $i0_8 = (int) $f0_6;

        $z0_9 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX>;

(17)    if $z0_9 == 0 goto label17;

        $i1_4 = staticinvoke <java.lang.Math: int abs(int)>($i0_8);

        $i2_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMinimumFlingVelocity>;

(18)    if $i1_4 <= $i2_4 goto label17;

(19)    specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void flingX(int)>($i0_8);

     label15:
        $i0_9 = Phi($i0_8 #19, $i0_11 #22, $i0_11 #23, $i0_8 #24, $i0_8 #25);

        $i2_5 = Phi($i2_4 #19, $i2_6 #22, $i2_6 #23, $i2_6 #24, $i2_6 #25);

        $z0_10 = Phi($z0_9 #19, $z0_11 #22, $z0_11 #23, $z0_12 #24, $z0_12 #25);

        $f0_7 = Phi($f0_6 #19, $f0_8 #22, $f0_8 #23, $f0_8 #24, $f0_8 #25);

        $i1_5 = Phi($i1_4 #19, $i1_7 #22, $i1_7 #23, $i1_6 #24, $i1_6 #25);

        $r2_8 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2_8.<android.view.VelocityTracker: void recycle()>();

(20)    $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.view.VelocityTracker mVelocityTracker> = null;

     label16:
        $i0_12 = Phi($i0 #2, $i0_9 #20);

        $i2_7 = Phi($i2 #2, $i2_5 #20);

        $z0_13 = Phi($z0 #2, $z0_10 #20);

        $f0_9 = Phi($f0 #2, $f0_7 #20);

        $i1_8 = Phi($i1 #2, $i1_5 #20);

        $r2_9 = Phi($r2_3 #2, $r2_8 #20);

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mPressedItem> = -1;

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

(21)    goto label04;

     label17:
        $i2_6 = Phi($i2 #17, $i2_4 #18);

        $i1_6 = Phi($i1 #17, $i1_4 #18);

        $f0_8 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $z0_11 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX>;

        if $z0_11 != 0 goto label19;

        $i0_10 = specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getPositionOnScreen(float)>($f0_8);

        $i1_7 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

        $i0_11 = $i0_10 - $i1_7;

        if $i0_11 != 0 goto label18;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void selectItem()>();

(22)    goto label15;

     label18:
        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void smoothScrollBy(int)>($i0_11);

(23)    goto label15;

     label19:
        $z0_12 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: boolean mScrollingX>;

(24)    if $z0_12 == 0 goto label15;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void finishScrolling()>();

(25)    goto label15;
    }

    public void scrollBy(int, int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.view.View: void scrollBy(int,int)>($i0, 0);

        return;
    }

    public void scrollTo(int, int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0, $i1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.view.View: void scrollTo(int,int)>($i0, $i1);

        return;
    }

    public void setEllipsize(android.text.TextUtils$TruncateAt)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: android.text.TextUtils$TruncateAt;

        $r2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r2 == $r1 goto label1;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextUtils$TruncateAt mEllipsize> = $r1;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void remakeLayout()>();

        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

     label1:
        return;
    }

    public void setMarqueeRepeatLimit(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mMarqueeRepeatLimit> = $i0;

        return;
    }

    public void setOnItemSelectedListener(com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected $r1;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r1 := @parameter0: com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: com.contextlogic.wish.ui.components.picker.HorizontalPicker$OnItemSelected mOnItemSelected> = $r1;

        return;
    }

    public void setOverScrollMode(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.View: void setOverScrollMode(int)>($i0);

        return;
    }

    public void setSelectedItem(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSelectedItem> = $i0;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void scrollToItem(int)>($i0);

        return;
    }

    public void setSideItems(int)
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        java.lang.IllegalArgumentException $r1;
        int $i0, $i1, $i1_1, $i0_1, $i1_2, $i0_2, $i1_3;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

        if $i1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number of items on each side must be grater or equal to 0.");

        throw $r1;

     label1:
        $i1_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems>;

(0)     if $i1_1 == $i0 goto label2;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mSideItems> = $i0;

        $i0_1 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getWidth()>();

        $i1_2 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getHeight()>();

(1)     specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void calculateItemSize(int,int)>($i0_1, $i1_2);

     label2:
        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $i1_3 = Phi($i1_1 #0, $i1_2 #1);

        return;
    }

    public void setValues(java.lang.CharSequence[])
    {
        com.contextlogic.wish.ui.components.picker.HorizontalPicker $r0;
        java.lang.CharSequence[] $r1, $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7;
        android.text.BoringLayout $r2;
        java.lang.CharSequence $r3;
        android.text.Layout$Alignment $r4;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i1_1, $i1_2, $i0_3, $i0_4, $i0_5, $i1_3;
        android.text.BoringLayout[] $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        android.text.TextPaint $r7;
        android.text.BoringLayout$Metrics $r8;
        android.text.TextUtils$TruncateAt $r9;

        $r0 := @this: com.contextlogic.wish.ui.components.picker.HorizontalPicker;

        $r5 := @parameter0: java.lang.CharSequence[];

        $r1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

(0)     if $r1 == $r5 goto label5;

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues> = $r5;

        $r5_1 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

(1)     if $r5_1 != null goto label1;

        $r5_2 = newarray (java.lang.CharSequence)[0];

(2)     $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues> = $r5_2;

     label1:
        $r5_3 = Phi($r5_1 #1, $r5_2 #2);

        $r5_4 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $i0 = lengthof $r5_4;

        $r6 = newarray (android.text.BoringLayout)[$i0];

        $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts> = $r6;

(3)     $i0_1 = 0;

     label2:
        $r5_5 = Phi($r5_4 #3, $r5_6 #4);

        $i0_2 = Phi($i0_1 #3, $i0_3 #4);

        $i1 = Phi($i1 #3, $i1_2 #4);

        $r6_1 = Phi($r6 #3, $r6_3 #4);

        $r6_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

        $i1_1 = lengthof $r6_2;

        if $i0_2 >= $i1_1 goto label3;

        $r6_3 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout[] mLayouts>;

        $r2 = new android.text.BoringLayout;

        $r5_6 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: java.lang.CharSequence[] mValues>;

        $r3 = $r5_6[$i0_2];

        $r7 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextPaint mTextPaint>;

        $i1_2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        $r8 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.BoringLayout$Metrics mBoringMetrics>;

        $r9 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: android.text.TextUtils$TruncateAt mEllipsize>;

        $i2 = $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int mItemWidth>;

        specialinvoke $r2.<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r3, $r7, $i1_2, $r4, 1.0F, 1.0F, $r8, 0, $r9, $i2);

        $r6_3[$i0_2] = $r2;

        $i0_3 = $i0_2 + 1;

(4)     goto label2;

     label3:
        $i0_4 = virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: int getWidth()>();

        if $i0_4 <= 0 goto label4;

        specialinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void startMarqueeIfNeeded()>();

     label4:
        virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void requestLayout()>();

(5)     virtualinvoke $r0.<com.contextlogic.wish.ui.components.picker.HorizontalPicker: void invalidate()>();

     label5:
        $r5_7 = Phi($r5 #0, $r5_5 #5);

        $i0_5 = Phi($i0 #0, $i0_4 #5);

        $i1_3 = Phi($i1 #0, $i1_1 #5);

        $r6_4 = Phi($r6 #0, $r6_2 #5);

        return;
    }
}
