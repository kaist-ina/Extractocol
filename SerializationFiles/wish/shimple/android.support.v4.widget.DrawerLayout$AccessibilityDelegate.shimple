class android.support.v4.widget.DrawerLayout$AccessibilityDelegate extends android.support.v4.view.AccessibilityDelegateCompat
{
    private final android.graphics.Rect mTmpRect;
    final android.support.v4.widget.DrawerLayout this$0;

    void <init>(android.support.v4.widget.DrawerLayout)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.support.v4.widget.DrawerLayout $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.widget.DrawerLayout;

        $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0> = $r1;

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect> = $r2;

        return;
    }

    private void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat, android.view.ViewGroup)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1;
        android.view.ViewGroup $r2;
        int $i0, $i1, $i1_1, $i1_2;
        android.view.View $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 := @parameter1: android.view.ViewGroup;

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #1);

        if $i1_1 >= $i0 goto label3;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1_1);

        $z0 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean access$400(android.view.View)>($r3);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)>($r3);

     label2:
        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label3:
        return;
    }

    private void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1, $r2;
        android.graphics.Rect $r3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        java.lang.CharSequence $r4, $r4_1, $r4_2;
        int $i0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect>;

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r3);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>($r3);

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>($r3);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r3);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>($z0);

        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r4);

        $r4_1 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r4_1);

        $r4_2 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($r4_2);

        $z0_1 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($z0_1);

        $z0_2 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>($z0_2);

        $z0_3 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>($z0_3);

        $z0_4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>($z0_4);

        $z0_5 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>($z0_5);

        $z0_6 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>($z0_6);

        $z0_7 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>($z0_7);

        $i0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>($i0);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.view.accessibility.AccessibilityEvent $r1;
        android.view.View $r2, $r2_1;
        int $i0, $i0_1, $i0_2;
        java.util.List $r3;
        android.support.v4.widget.DrawerLayout $r4, $r4_1, $r4_2, $r4_3;
        java.lang.CharSequence $r5;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r2 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $i0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 32 goto label2;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r4 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0>;

        $r2_1 = staticinvoke <android.support.v4.widget.DrawerLayout: android.view.View access$300(android.support.v4.widget.DrawerLayout)>($r4);

(0)     if $r2_1 == null goto label1;

        $r4_1 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0>;

        $i0_1 = virtualinvoke $r4_1.<android.support.v4.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>($r2_1);

        $r4_2 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0>;

        $r5 = virtualinvoke $r4_2.<android.support.v4.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)>($i0_1);

(1)     if $r5 == null goto label1;

(2)     interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $i0_2 = Phi($i0 #0, $i0_1 #1, $i0_1 #2);

        $r4_3 = Phi($r4 #0, $r4_2 #1, $r4_2 #2);

        return 1;

     label2:
        $z0 = specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r2, $r1);

        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2);

        $r3 = class "android/support/v4/widget/DrawerLayout";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.view.View $r1, $r7;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r2, $r5;
        java.lang.Class $r3;
        boolean $z0, $z0_1, $z0_2;
        java.lang.String $r4;
        android.view.ViewParent $r6;
        android.view.ViewGroup $r8;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean access$200()>();

        if $z0 == 0 goto label2;

(0)     specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r1, $r2);

     label1:
        $z0_1 = Phi($z0 #0, $z0_2 #1);

        $r3 = class "android/support/v4/widget/DrawerLayout";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r4);

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>(0);

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>(0);

        return;

     label2:
        $r5 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r2);

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r1, $r5);

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)>($r1);

        $r6 = staticinvoke <android.support.v4.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>($r1);

        $z0_2 = $r6 instanceof android.view.View;

        if $z0_2 == 0 goto label3;

        $r7 = (android.view.View) $r6;

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r7);

     label3:
        specialinvoke $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r2, $r5);

        virtualinvoke $r5.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

        $r8 = (android.view.ViewGroup) $r1;

        specialinvoke $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup)>($r2, $r8);

(1)     goto label1;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.view.ViewGroup $r1;
        android.view.View $r2;
        android.view.accessibility.AccessibilityEvent $r3;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $z0 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean access$200()>();

(0)     if $z0 != 0 goto label1;

        $z0_1 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean access$400(android.view.View)>($r2);

(1)     if $z0_1 == 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $z0_3 = specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2, $r3);

        return $z0_3;

     label2:
        return 0;
    }
}
