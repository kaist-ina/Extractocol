public abstract class java.nio.channels.spi.AbstractSelectableChannel extends java.nio.channels.SelectableChannel
{

    protected void <init>(java.nio.channels.spi.SelectorProvider)
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.nio.channels.spi.SelectorProvider r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        r1 := @parameter0: java.nio.channels.spi.SelectorProvider;

        specialinvoke r0.<java.nio.channels.SelectableChannel: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.nio.channels.spi.SelectorProvider provider()
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final synchronized boolean isRegistered()
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final synchronized java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.nio.channels.Selector r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        r1 := @parameter0: java.nio.channels.Selector;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.nio.channels.SelectionKey register(java.nio.channels.Selector, int, java.lang.Object) throws java.nio.channels.ClosedChannelException
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.nio.channels.Selector r1;
        int i0;
        java.lang.Object r2;
        java.lang.RuntimeException $r3;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        r1 := @parameter0: java.nio.channels.Selector;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    protected final synchronized void implCloseChannel() throws java.io.IOException
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected abstract void implCloseSelectableChannel() throws java.io.IOException;

    public final boolean isBlocking()
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.Object blockingLock()
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.channels.SelectableChannel configureBlocking(boolean) throws java.io.IOException
    {
        java.nio.channels.spi.AbstractSelectableChannel r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelectableChannel;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected abstract void implConfigureBlocking(boolean) throws java.io.IOException;
}
