public final class ch.boye.httpclientandroidlib.impl.conn.SchemeRegistryFactory extends java.lang.Object
{

    public void <init>()
    {
        ch.boye.httpclientandroidlib.impl.conn.SchemeRegistryFactory $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.conn.SchemeRegistryFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry createDefault()
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r1, $r1_1;
        ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory $r2;
        ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory $r3;

        $r0 = new ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: void <init>()>();

        $r1 = new ch.boye.httpclientandroidlib.conn.scheme.Scheme;

        $r2 = staticinvoke <ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory: ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r1.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: void <init>(java.lang.String,int,ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory)>("http", 80, $r2);

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme register(ch.boye.httpclientandroidlib.conn.scheme.Scheme)>($r1);

        $r1_1 = new ch.boye.httpclientandroidlib.conn.scheme.Scheme;

        $r3 = staticinvoke <ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory: ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory getSocketFactory()>();

        specialinvoke $r1_1.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: void <init>(java.lang.String,int,ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory)>("https", 443, $r3);

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme register(ch.boye.httpclientandroidlib.conn.scheme.Scheme)>($r1_1);

        return $r0;
    }

    public static ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry createSystemDefault()
    {
        ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry $r0;
        ch.boye.httpclientandroidlib.conn.scheme.Scheme $r1, $r1_1;
        ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory $r2;
        ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory $r3;

        $r0 = new ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: void <init>()>();

        $r1 = new ch.boye.httpclientandroidlib.conn.scheme.Scheme;

        $r2 = staticinvoke <ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory: ch.boye.httpclientandroidlib.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r1.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: void <init>(java.lang.String,int,ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory)>("http", 80, $r2);

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme register(ch.boye.httpclientandroidlib.conn.scheme.Scheme)>($r1);

        $r1_1 = new ch.boye.httpclientandroidlib.conn.scheme.Scheme;

        $r3 = staticinvoke <ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory: ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory getSystemSocketFactory()>();

        specialinvoke $r1_1.<ch.boye.httpclientandroidlib.conn.scheme.Scheme: void <init>(java.lang.String,int,ch.boye.httpclientandroidlib.conn.scheme.SchemeSocketFactory)>("https", 443, $r3);

        virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.scheme.SchemeRegistry: ch.boye.httpclientandroidlib.conn.scheme.Scheme register(ch.boye.httpclientandroidlib.conn.scheme.Scheme)>($r1_1);

        return $r0;
    }
}
