public abstract enum class com.google.gson.FieldNamingPolicy extends java.lang.Enum implements com.google.gson.FieldNamingStrategy
{
    private static final com.google.gson.FieldNamingPolicy[] $VALUES;
    public static final enum com.google.gson.FieldNamingPolicy IDENTITY;
    public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES;
    public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES;
    public static final enum com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE;
    public static final enum com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES;

    static void <clinit>()
    {
        com.google.gson.FieldNamingPolicy$1 $r0;
        com.google.gson.FieldNamingPolicy$2 $r1;
        com.google.gson.FieldNamingPolicy$3 $r2;
        com.google.gson.FieldNamingPolicy$4 $r3;
        com.google.gson.FieldNamingPolicy$5 $r4;
        com.google.gson.FieldNamingPolicy[] $r5;
        com.google.gson.FieldNamingPolicy $r6, $r6_1, $r6_2, $r6_3, $r6_4;

        $r0 = new com.google.gson.FieldNamingPolicy$1;

        specialinvoke $r0.<com.google.gson.FieldNamingPolicy$1: void <init>(java.lang.String,int)>("IDENTITY", 0);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY> = $r0;

        $r1 = new com.google.gson.FieldNamingPolicy$2;

        specialinvoke $r1.<com.google.gson.FieldNamingPolicy$2: void <init>(java.lang.String,int)>("UPPER_CAMEL_CASE", 1);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE> = $r1;

        $r2 = new com.google.gson.FieldNamingPolicy$3;

        specialinvoke $r2.<com.google.gson.FieldNamingPolicy$3: void <init>(java.lang.String,int)>("UPPER_CAMEL_CASE_WITH_SPACES", 2);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES> = $r2;

        $r3 = new com.google.gson.FieldNamingPolicy$4;

        specialinvoke $r3.<com.google.gson.FieldNamingPolicy$4: void <init>(java.lang.String,int)>("LOWER_CASE_WITH_UNDERSCORES", 3);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES> = $r3;

        $r4 = new com.google.gson.FieldNamingPolicy$5;

        specialinvoke $r4.<com.google.gson.FieldNamingPolicy$5: void <init>(java.lang.String,int)>("LOWER_CASE_WITH_DASHES", 4);

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES> = $r4;

        $r5 = newarray (com.google.gson.FieldNamingPolicy)[5];

        $r6 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY>;

        $r5[0] = $r6;

        $r6_1 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE>;

        $r5[1] = $r6_1;

        $r6_2 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES>;

        $r5[2] = $r6_2;

        $r6_3 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES>;

        $r5[3] = $r6_3;

        $r6_4 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES>;

        $r5[4] = $r6_4;

        <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES> = $r5;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.google.gson.FieldNamingPolicy $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: com.google.gson.FieldNamingPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    void <init>(java.lang.String, int, com.google.gson.FieldNamingPolicy$1)
    {
        com.google.gson.FieldNamingPolicy $r0;
        java.lang.String $r1;
        int $i0;
        com.google.gson.FieldNamingPolicy$1 $r2;

        $r0 := @this: com.google.gson.FieldNamingPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.gson.FieldNamingPolicy$1;

        specialinvoke $r0.<com.google.gson.FieldNamingPolicy: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    private static java.lang.String modifyString(char, java.lang.String, int)
    {
        char $c0;
        int $i1, $i2;
        java.lang.String $r0, $r0_1, $r0_2, $r0_3;
        java.lang.StringBuilder $r1, $r1_1, $r1_2;

        $c0 := @parameter0: char;

        $r0 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1_1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0_1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r1_2 = virtualinvoke $r1_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0_1);

        $r0_2 = virtualinvoke $r1_2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0_2;

     label1:
        $r0_3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        return $r0_3;
    }

    static java.lang.String separateCamelCase(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2, $r2_1;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i0_1, $i1_1, $i1_2, $i1_3, $i0_2;
        char $c2;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

(0)     $i0 = 0;

     label1:
        $i0_1 = Phi($i0 #0, $i0_2 #4);

        $i1 = Phi($i1 #0, $i1_3 #4);

        $i1_1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0_1 >= $i1_1 goto label3;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0_1);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c2);

(1)     if $z0 == 0 goto label2;

        $i1_2 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

(2)     if $i1_2 == 0 goto label2;

(3)     virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label2:
        $i1_3 = Phi($i1_1 #1, $i1_2 #2, $i1_2 #3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $i0_2 = $i0_1 + 1;

(4)     goto label1;

     label3:
        $r2_1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2_1;
    }

    static java.lang.String upperCaseFirstLetter(java.lang.String)
    {
        java.lang.String $r0, $r0_1, $r0_2, $r0_3, $r0_4;
        java.lang.StringBuilder $r1, $r1_1, $r1_2;
        int $i0, $i2, $i0_1, $i2_1, $i2_2, $i0_2, $i2_3, $i0_3, $i0_4;
        char $c1, $c1_1, $c1_2, $c1_3, $c1_4;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

(0)     $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

     label1:
        $z0 = Phi($z0 #0, $z0_1 #3);

        $i2 = Phi($i2 #0, $i2_2 #3);

        $i0_1 = Phi($i0 #0, $i0_2 #3);

        $c1_1 = Phi($c1 #0, $c1_2 #3);

        $i2_1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2_2 = $i2_1 + -1;

(1)     if $i0_1 >= $i2_2 goto label2;

        $z0_1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c1_1);

(2)     if $z0_1 == 0 goto label3;

     label2:
        $z0_2 = Phi($z0 #1, $z0_1 #2);

        $i2_3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0_1 != $i2_3 goto label4;

        $r0_1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0_1;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1_1);

        $i0_2 = $i0_1 + 1;

        $c1_2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0_2);

(3)     goto label1;

     label4:
        $z0_3 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c1_1);

(4)     if $z0_3 != 0 goto label5;

        $c1_3 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1_1);

        $i0_3 = $i0_1 + 1;

        $r0_2 = staticinvoke <com.google.gson.FieldNamingPolicy: java.lang.String modifyString(char,java.lang.String,int)>($c1_3, $r0, $i0_3);

        $r1_1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0_2);

(5)     $r0_3 = virtualinvoke $r1_1.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $i0_4 = Phi($i0_1 #4, $i0_3 #5);

        $r0_4 = Phi($r0 #4, $r0_3 #5);

        $r1_2 = Phi($r1 #4, $r1_1 #5);

        $c1_4 = Phi($c1_1 #4, $c1_3 #5);

        return $r0_4;
    }

    public static com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.google.gson.FieldNamingPolicy $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/google/gson/FieldNamingPolicy", $r0);

        $r2 = (com.google.gson.FieldNamingPolicy) $r1;

        return $r2;
    }

    public static com.google.gson.FieldNamingPolicy[] values()
    {
        java.lang.Object $r0;
        com.google.gson.FieldNamingPolicy[] $r1, $r1_1;

        $r1 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1_1 = (com.google.gson.FieldNamingPolicy[]) $r0;

        return $r1_1;
    }
}
