class com.braintreepayments.api.Braintree$5 extends java.lang.Object implements java.lang.Runnable
{
    final com.braintreepayments.api.Braintree this$0;
    final java.lang.String val$nonce;

    void <init>(com.braintreepayments.api.Braintree, java.lang.String)
    {
        com.braintreepayments.api.Braintree$5 $r0;
        com.braintreepayments.api.Braintree $r1;
        java.lang.String $r2;

        $r0 := @this: com.braintreepayments.api.Braintree$5;

        $r1 := @parameter0: com.braintreepayments.api.Braintree;

        $r2 := @parameter1: java.lang.String;

        $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0> = $r1;

        $r0.<com.braintreepayments.api.Braintree$5: java.lang.String val$nonce> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.braintreepayments.api.Braintree$5 $r0;
        com.braintreepayments.api.exceptions.BraintreeException $r1;
        org.json.JSONException $r2;
        com.braintreepayments.api.exceptions.ErrorWithResponse $r3;
        com.braintreepayments.api.Braintree $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5, $r4_6, $r4_7, $r4_8, $r4_9, $r4_10;
        com.braintreepayments.api.BraintreeApi $r5;
        java.lang.String $r6, $r6_1, $r6_2, $r6_3, $r6_4;
        com.braintreepayments.api.models.PaymentMethod $r7;

        $r0 := @this: com.braintreepayments.api.Braintree$5;

(0)     $r4 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

     label01:
        $r5 = staticinvoke <com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi access$300(com.braintreepayments.api.Braintree)>($r4);

     label02:
        $r6 = $r0.<com.braintreepayments.api.Braintree$5: java.lang.String val$nonce>;

     label03:
        $r7 = virtualinvoke $r5.<com.braintreepayments.api.BraintreeApi: com.braintreepayments.api.models.PaymentMethod getPaymentMethod(java.lang.String)>($r6);

        virtualinvoke $r7.<com.braintreepayments.api.models.PaymentMethod: void setSource(java.lang.String)>("venmo-app");

     label04:
(1)     $r4_1 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

     label05:
        staticinvoke <com.braintreepayments.api.Braintree: void access$800(com.braintreepayments.api.Braintree,com.braintreepayments.api.models.PaymentMethod)>($r4_1, $r7);

     label06:
(2)     $r4_2 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

     label07:
        staticinvoke <com.braintreepayments.api.Braintree: void access$900(com.braintreepayments.api.Braintree,com.braintreepayments.api.models.PaymentMethod)>($r4_2, $r7);

     label08:
        $r4_3 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

(3)     $r6_1 = $r0.<com.braintreepayments.api.Braintree$5: java.lang.String val$nonce>;

     label09:
        staticinvoke <com.braintreepayments.api.Braintree: void access$1000(com.braintreepayments.api.Braintree,java.lang.String)>($r4_3, $r6_1);

     label10:
(4)     $r4_4 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

     label11:
        virtualinvoke $r4_4.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("venmo-app.success");

     label12:
        return;

     label13:
        $r1 := @caughtexception;

        $r4_5 = Phi($r4 #0, $r4_1 #1, $r4_2 #2, $r4_3 #3, $r4_4 #4);

        $r6_2 = Phi($r6 #0, $r6_1 #3);

        $r4_6 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

        virtualinvoke $r4_6.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r1);

        return;

     label14:
        $r2 := @caughtexception;

        $r4_7 = Phi($r4 #0, $r4_1 #1, $r4_2 #2, $r4_3 #3, $r4_4 #4);

        $r6_3 = Phi($r6 #0, $r6_1 #3);

        $r4_8 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

        virtualinvoke $r4_8.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r2);

        return;

     label15:
        $r3 := @caughtexception;

        $r4_9 = Phi($r4 #0, $r4_1 #1, $r4_2 #2, $r4_3 #3, $r4_4 #4);

        $r6_4 = Phi($r6 #0, $r6_1 #3);

        $r4_10 = $r0.<com.braintreepayments.api.Braintree$5: com.braintreepayments.api.Braintree this$0>;

        staticinvoke <com.braintreepayments.api.Braintree: void access$600(com.braintreepayments.api.Braintree,com.braintreepayments.api.exceptions.ErrorWithResponse)>($r4_10, $r3);

        return;

        catch com.braintreepayments.api.exceptions.BraintreeException from label01 to label02 with label13;
        catch org.json.JSONException from label01 to label02 with label14;
        catch com.braintreepayments.api.exceptions.ErrorWithResponse from label01 to label02 with label15;
        catch com.braintreepayments.api.exceptions.BraintreeException from label03 to label04 with label13;
        catch org.json.JSONException from label03 to label04 with label14;
        catch com.braintreepayments.api.exceptions.ErrorWithResponse from label03 to label04 with label15;
        catch com.braintreepayments.api.exceptions.BraintreeException from label05 to label06 with label13;
        catch org.json.JSONException from label05 to label06 with label14;
        catch com.braintreepayments.api.exceptions.ErrorWithResponse from label05 to label06 with label15;
        catch com.braintreepayments.api.exceptions.BraintreeException from label07 to label08 with label13;
        catch org.json.JSONException from label07 to label08 with label14;
        catch com.braintreepayments.api.exceptions.ErrorWithResponse from label07 to label08 with label15;
        catch com.braintreepayments.api.exceptions.BraintreeException from label09 to label10 with label13;
        catch org.json.JSONException from label09 to label10 with label14;
        catch com.braintreepayments.api.exceptions.ErrorWithResponse from label09 to label10 with label15;
        catch com.braintreepayments.api.exceptions.BraintreeException from label11 to label12 with label13;
        catch org.json.JSONException from label11 to label12 with label14;
        catch com.braintreepayments.api.exceptions.ErrorWithResponse from label11 to label12 with label15;
    }
}
