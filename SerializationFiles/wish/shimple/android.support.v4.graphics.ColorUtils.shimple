public class android.support.v4.graphics.ColorUtils extends java.lang.Object
{
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS;
    private static final int MIN_ALPHA_SEARCH_PRECISION;

    private void <init>()
    {
        android.support.v4.graphics.ColorUtils $r0;

        $r0 := @this: android.support.v4.graphics.ColorUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int HSLToColor(float[])
    {
        float[] $r0;
        int $i0, $i1, $i2, $i3, $i1_1, $i3_1, $i2_1, $i1_2, $i1_3, $i2_2, $i3_2, $i1_4, $i1_5, $i2_3, $i3_3, $i1_6, $i2_4, $i3_4, $i1_7, $i2_5, $i3_5, $i1_8, $i2_6, $i3_6, $i1_9, $i2_7, $i3_7, $i1_10, $i2_8, $i3_8;
        float $f0, $f1, $f2, $f3, $f3_1, $f3_2, $f3_3, $f1_1, $f3_4, $f2_1, $f3_5, $f3_6, $f3_7, $f3_8, $f3_9, $f3_10, $f0_1, $f1_2, $f2_2, $f1_3, $f1_4, $f1_5, $f1_6, $f2_3, $f0_2, $f0_3, $f1_7, $f1_8, $f2_4, $f0_4, $f1_9, $f1_10, $f2_5, $f2_6, $f0_5, $f0_6, $f0_7, $f2_7, $f2_8, $f0_8, $f0_9, $f0_10, $f2_9, $f2_10, $f1_11, $f1_12, $f1_13, $f2_11, $f2_12;

        $r0 := @parameter0: float[];

        $f0 = $r0[0];

        $f1 = $r0[1];

        $f2 = $r0[2];

        $f3 = 2.0F * $f2;

        $f3_1 = $f3 - 1.0F;

        $f3_2 = staticinvoke <java.lang.Math: float abs(float)>($f3_1);

        $f3_3 = 1.0F - $f3_2;

        $f1_1 = $f3_3 * $f1;

        $f3_4 = 0.5F * $f1_1;

        $f2_1 = $f2 - $f3_4;

        $f3_5 = $f0 / 60.0F;

        $f3_6 = $f3_5 % 2.0F;

        $f3_7 = $f3_6 - 1.0F;

        $f3_8 = staticinvoke <java.lang.Math: float abs(float)>($f3_7);

        $f3_9 = 1.0F - $f3_8;

        $f3_10 = $f1_1 * $f3_9;

        $i1 = (int) $f0;

        $i0 = $i1 / 60;

        $i1_1 = 0;

        $i2 = 0;

        $i3 = 0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            case 6: goto label8;
            default: goto label1;
        };

     label1:
(0)     goto label2;

     label2:
        $f0_1 = Phi($f0 #0, $f0 #1, $f0_3 #2, $f0_4 #3, $f0_7 #4, $f0_10 #5, $f0 #6);

        $f1_2 = Phi($f1_1 #0, $f1_6 #1, $f1_8 #2, $f1_10 #3, $f1_1 #4, $f1_1 #5, $f1_13 #6);

        $i3_1 = Phi($i3 #0, $i3_3 #1, $i3_4 #2, $i3_5 #3, $i3_6 #4, $i3_7 #5, $i3_8 #6);

        $i2_1 = Phi($i2 #0, $i2_3 #1, $i2_4 #2, $i2_5 #3, $i2_6 #4, $i2_7 #5, $i2_8 #6);

        $f2_2 = Phi($f2_1 #0, $f2_3 #1, $f2_4 #2, $f2_6 #3, $f2_8 #4, $f2_10 #5, $f2_12 #6);

        $i1_2 = Phi($i1_1 #0, $i1_5 #1, $i1_6 #2, $i1_7 #3, $i1_8 #4, $i1_9 #5, $i1_10 #6);

        $i1_3 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>($i1_2, 0, 255);

        $i2_2 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>($i2_1, 0, 255);

        $i3_2 = staticinvoke <android.support.v4.graphics.ColorUtils: int constrain(int,int,int)>($i3_1, 0, 255);

        $i1_4 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i1_3, $i2_2, $i3_2);

        return $i1_4;

     label3:
        $f1_3 = $f1_1 + $f2_1;

        $f1_4 = 255.0F * $f1_3;

        $i1_5 = staticinvoke <java.lang.Math: int round(float)>($f1_4);

        $f1_5 = $f3_10 + $f2_1;

        $f1_6 = 255.0F * $f1_5;

        $i2_3 = staticinvoke <java.lang.Math: int round(float)>($f1_6);

        $f2_3 = 255.0F * $f2_1;

        $i3_3 = staticinvoke <java.lang.Math: int round(float)>($f2_3);

(1)     goto label2;

     label4:
        $f0_2 = $f3_10 + $f2_1;

        $f0_3 = 255.0F * $f0_2;

        $i1_6 = staticinvoke <java.lang.Math: int round(float)>($f0_3);

        $f1_7 = $f1_1 + $f2_1;

        $f1_8 = 255.0F * $f1_7;

        $i2_4 = staticinvoke <java.lang.Math: int round(float)>($f1_8);

        $f2_4 = 255.0F * $f2_1;

        $i3_4 = staticinvoke <java.lang.Math: int round(float)>($f2_4);

(2)     goto label2;

     label5:
        $f0_4 = 255.0F * $f2_1;

        $i1_7 = staticinvoke <java.lang.Math: int round(float)>($f0_4);

        $f1_9 = $f1_1 + $f2_1;

        $f1_10 = 255.0F * $f1_9;

        $i2_5 = staticinvoke <java.lang.Math: int round(float)>($f1_10);

        $f2_5 = $f3_10 + $f2_1;

        $f2_6 = 255.0F * $f2_5;

        $i3_5 = staticinvoke <java.lang.Math: int round(float)>($f2_6);

(3)     goto label2;

     label6:
        $f0_5 = 255.0F * $f2_1;

        $i1_8 = staticinvoke <java.lang.Math: int round(float)>($f0_5);

        $f0_6 = $f3_10 + $f2_1;

        $f0_7 = 255.0F * $f0_6;

        $i2_6 = staticinvoke <java.lang.Math: int round(float)>($f0_7);

        $f2_7 = $f1_1 + $f2_1;

        $f2_8 = 255.0F * $f2_7;

        $i3_6 = staticinvoke <java.lang.Math: int round(float)>($f2_8);

(4)     goto label2;

     label7:
        $f0_8 = $f3_10 + $f2_1;

        $f0_9 = 255.0F * $f0_8;

        $i1_9 = staticinvoke <java.lang.Math: int round(float)>($f0_9);

        $f0_10 = 255.0F * $f2_1;

        $i2_7 = staticinvoke <java.lang.Math: int round(float)>($f0_10);

        $f2_9 = $f1_1 + $f2_1;

        $f2_10 = 255.0F * $f2_9;

        $i3_7 = staticinvoke <java.lang.Math: int round(float)>($f2_10);

(5)     goto label2;

     label8:
        $f1_11 = $f1_1 + $f2_1;

        $f1_12 = 255.0F * $f1_11;

        $i1_10 = staticinvoke <java.lang.Math: int round(float)>($f1_12);

        $f1_13 = 255.0F * $f2_1;

        $i2_8 = staticinvoke <java.lang.Math: int round(float)>($f1_13);

        $f2_11 = $f3_10 + $f2_1;

        $f2_12 = 255.0F * $f2_11;

        $i3_8 = staticinvoke <java.lang.Math: int round(float)>($f2_12);

(6)     goto label2;
    }

    public static void RGBToHSL(int, int, int, float[])
    {
        int $i0, $i1, $i2;
        float[] $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f1_1, $f1_2, $f1_3, $f1_4, $f1_5, $f1_6, $f6_1, $f2_1, $f3_1, $f6_2, $f2_2, $f2_3, $f2_4, $f2_5, $f2_6, $f2_7, $f6_3, $f1_7, $f2_8, $f2_9, $f2_10, $f2_11, $f3_2, $f3_3, $f3_4, $f3_5, $f6_4, $f2_12, $f2_13, $f2_14, $f2_15, $f2_16, $f2_17;
        byte $b3, $b3_1, $b3_2, $b3_3, $b3_4, $b3_5;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 := @parameter3: float[];

        $f1 = (float) $i0;

        $f2 = $f1 / 255.0F;

        $f1_1 = (float) $i1;

        $f3 = $f1_1 / 255.0F;

        $f1_2 = (float) $i2;

        $f0 = $f1_2 / 255.0F;

        $f1_3 = staticinvoke <java.lang.Math: float max(float,float)>($f3, $f0);

        $f4 = staticinvoke <java.lang.Math: float max(float,float)>($f2, $f1_3);

        $f1_4 = staticinvoke <java.lang.Math: float min(float,float)>($f3, $f0);

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f1_4);

        $f6 = $f4 - $f5;

        $f1_5 = $f4 + $f5;

        $f1_6 = $f1_5 / 2.0F;

        $b3 = $f4 cmpl $f5;

        if $b3 != 0 goto label3;

        $f6_1 = 0.0F;

(0)     $f2_1 = 0.0F;

     label1:
        $b3_1 = Phi($b3 #0, $b3_4 #4);

        $f3_1 = Phi($f3 #0, $f3_5 #4);

        $f6_2 = Phi($f6_1 #0, $f6_4 #4);

        $f2_2 = Phi($f2_1 #0, $f2_11 #4);

        $f2_3 = 60.0F * $f2_2;

        $f2_4 = $f2_3 % 360.0F;

        $b3_2 = $f2_4 cmpg 0.0F;

(1)     if $b3_2 >= 0 goto label2;

(2)     $f2_5 = $f2_4 + 360.0F;

     label2:
        $f2_6 = Phi($f2_4 #1, $f2_5 #2);

        $f2_7 = staticinvoke <android.support.v4.graphics.ColorUtils: float constrain(float,float,float)>($f2_6, 0.0F, 360.0F);

        $r0[0] = $f2_7;

        $f6_3 = staticinvoke <android.support.v4.graphics.ColorUtils: float constrain(float,float,float)>($f6_2, 0.0F, 1.0F);

        $r0[1] = $f6_3;

        $f1_7 = staticinvoke <android.support.v4.graphics.ColorUtils: float constrain(float,float,float)>($f1_6, 0.0F, 1.0F);

        $r0[2] = $f1_7;

        return;

     label3:
        $b3_3 = $f4 cmpl $f2;

        if $b3_3 != 0 goto label5;

        $f2_8 = $f3 - $f0;

        $f2_9 = $f2_8 / $f6;

(3)     $f2_10 = $f2_9 % 6.0F;

     label4:
        $b3_4 = Phi($b3_3 #3, $b3_5 #5, $b3_5 #6);

        $f2_11 = Phi($f2_10 #3, $f2_14 #5, $f2_17 #6);

        $f3_2 = 2.0F * $f1_6;

        $f3_3 = $f3_2 - 1.0F;

        $f3_4 = staticinvoke <java.lang.Math: float abs(float)>($f3_3);

        $f3_5 = 1.0F - $f3_4;

        $f6_4 = $f6 / $f3_5;

(4)     goto label1;

     label5:
        $b3_5 = $f4 cmpl $f3;

        if $b3_5 != 0 goto label6;

        $f2_12 = $f0 - $f2;

        $f2_13 = $f2_12 / $f6;

        $f2_14 = $f2_13 + 2.0F;

(5)     goto label4;

     label6:
        $f2_15 = $f2 - $f3;

        $f2_16 = $f2_15 / $f6;

        $f2_17 = $f2_16 + 4.0F;

(6)     goto label4;
    }

    public static double calculateContrast(int, int)
    {
        int $i0, $i1, $i2, $i2_1, $i1_1, $i1_2;
        java.lang.IllegalArgumentException $r0;
        double $d0, $d1, $d2, $d1_1, $d2_1, $d1_2, $d1_3;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        if $i2 == 255 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("background can not be translucent");

        throw $r0;

     label1:
        $i2_1 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

(0)     if $i2_1 >= 255 goto label2;

(1)     $i1_1 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

     label2:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        $d1 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateLuminance(int)>($i1_2);

        $d1_1 = $d1 + 0.05;

        $d2 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateLuminance(int)>($i0);

        $d0 = $d2 + 0.05;

        $d2_1 = staticinvoke <java.lang.Math: double max(double,double)>($d1_1, $d0);

        $d1_2 = staticinvoke <java.lang.Math: double min(double,double)>($d1_1, $d0);

        $d1_3 = $d2_1 / $d1_2;

        return $d1_3;
    }

    public static double calculateLuminance(int)
    {
        int $i0, $i1, $i1_1, $i0_1;
        double $d0, $d1, $d2, $d0_1, $d0_2, $d0_3, $d1_1, $d1_2, $d1_3, $d2_1, $d2_2, $d2_3, $d0_4, $d1_4, $d0_5, $d1_5, $d0_6, $d2_4, $d2_5, $d2_6, $d1_6, $d1_7, $d1_8, $d0_7, $d0_8, $d0_9;
        byte $b2, $b2_1, $b2_2;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $d0 = (double) $i1;

        $d0_1 = $d0 / 255.0;

        $b2 = $d0_1 cmpg 0.03928;

        if $b2 >= 0 goto label4;

(0)     $d0_2 = $d0_1 / 12.92;

     label1:
        $d0_3 = Phi($d0_2 #0, $d0_9 #3);

        $i1_1 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $d1 = (double) $i1_1;

        $d1_1 = $d1 / 255.0;

        $b2_1 = $d1_1 cmpg 0.03928;

        if $b2_1 >= 0 goto label5;

(1)     $d1_2 = $d1_1 / 12.92;

     label2:
        $d1_3 = Phi($d1_2 #1, $d1_8 #4);

        $i0_1 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        $d2 = (double) $i0_1;

        $d2_1 = $d2 / 255.0;

        $b2_2 = $d2_1 cmpg 0.03928;

        if $b2_2 >= 0 goto label6;

(2)     $d2_2 = $d2_1 / 12.92;

     label3:
        $d2_3 = Phi($d2_2 #2, $d2_6 #5);

        $d0_4 = 0.2126 * $d0_3;

        $d1_4 = 0.7152 * $d1_3;

        $d0_5 = $d0_4 + $d1_4;

        $d1_5 = 0.0722 * $d2_3;

        $d0_6 = $d0_5 + $d1_5;

        return $d0_6;

     label4:
        $d0_7 = 0.055 + $d0_1;

        $d0_8 = $d0_7 / 1.055;

        $d0_9 = staticinvoke <java.lang.Math: double pow(double,double)>($d0_8, 2.4);

(3)     goto label1;

     label5:
        $d1_6 = 0.055 + $d1_1;

        $d1_7 = $d1_6 / 1.055;

        $d1_8 = staticinvoke <java.lang.Math: double pow(double,double)>($d1_7, 2.4);

(4)     goto label2;

     label6:
        $d2_4 = 0.055 + $d2_1;

        $d2_5 = $d2_4 / 1.055;

        $d2_6 = staticinvoke <java.lang.Math: double pow(double,double)>($d2_5, 2.4);

(5)     goto label3;
    }

    public static int calculateMinimumAlpha(int, int, float)
    {
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i2_1, $i2_2, $i5_1, $i2_3, $i4_1, $i6_1, $i6_2, $i6_3, $i4_2, $i5_2, $i4_3, $i2_4, $i5_3, $i6_4;
        float $f0;
        java.lang.IllegalArgumentException $r0;
        double $d0, $d1, $d0_1, $d1_1, $d0_2, $d1_2;
        byte $b3, $b3_1, $b3_2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

        if $i2 == 255 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("background can not be translucent");

        throw $r0;

     label1:
        $i2_1 = staticinvoke <android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, 255);

        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>($i2_1, $i1);

        $d1 = (double) $f0;

        $b3 = $d0 cmpg $d1;

        if $b3 >= 0 goto label2;

        return -1;

     label2:
        $i2_2 = 0;

        $i4 = 0;

(0)     $i5 = 255;

     label3:
        $d0_1 = Phi($d0 #0, $d0_2 #4);

        $i5_1 = Phi($i5 #0, $i5_2 #4);

        $d1_1 = Phi($d1 #0, $d1_2 #4);

        $i6 = Phi($i6 #0, $i6_3 #4);

        $b3_1 = Phi($b3 #0, $b3_2 #4);

        $i2_3 = Phi($i2_2 #0, $i2_4 #4);

        $i4_1 = Phi($i4 #0, $i4_3 #4);

(1)     if $i2_3 > 10 goto label6;

        $i6_1 = $i5_1 - $i4_1;

(2)     if $i6_1 <= 10 goto label6;

        $i6_2 = $i4_1 + $i5_1;

        $i6_3 = $i6_2 / 2;

        $i7 = staticinvoke <android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, $i6_3);

        $d0_2 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>($i7, $i1);

        $d1_2 = (double) $f0;

        $b3_2 = $d0_2 cmpg $d1_2;

        if $b3_2 >= 0 goto label5;

(3)     $i4_2 = $i6_3;

     label4:
        $i5_2 = Phi($i5_1 #3, $i5_3 #5);

        $i4_3 = Phi($i4_2 #3, $i4_1 #5);

        $i2_4 = $i2_3 + 1;

(4)     goto label3;

     label5:
        $i5_3 = $i6_3;

(5)     goto label4;

     label6:
        $i6_4 = Phi($i6 #1, $i6_1 #2);

        return $i5_1;
    }

    public static void colorToHSL(int, float[])
    {
        float[] $r0;
        int $i0, $i1, $i2, $i0_1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: float[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i0_1 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        staticinvoke <android.support.v4.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])>($i1, $i2, $i0_1, $r0);

        return;
    }

    private static int compositeAlpha(int, int)
    {
        int $i0, $i1, $i1_1, $i0_1, $i0_2, $i0_3, $i0_4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1_1 = 255 - $i1;

        $i0_1 = 255 - $i0;

        $i0_2 = $i1_1 * $i0_1;

        $i0_3 = $i0_2 / 255;

        $i0_4 = 255 - $i0_3;

        return $i0_4;
    }

    public static int compositeColors(int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i5_1, $i6_1, $i6_2, $i0_1, $i1_1, $i0_2, $i0_3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i4 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeAlpha(int,int)>($i3, $i2);

        $i5 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i6 = staticinvoke <android.graphics.Color: int red(int)>($i1);

        $i5_1 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i5, $i3, $i6, $i2, $i4);

        $i6_1 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i7 = staticinvoke <android.graphics.Color: int green(int)>($i1);

        $i6_2 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i6_1, $i3, $i7, $i2, $i4);

        $i0_1 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        $i1_1 = staticinvoke <android.graphics.Color: int blue(int)>($i1);

        $i0_2 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i0_1, $i3, $i1_1, $i2, $i4);

        $i0_3 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i4, $i5_1, $i6_2, $i0_2);

        return $i0_3;
    }

    private static int compositeComponent(int, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i2_1, $i2_2, $i4_1, $i3_1, $i3_2, $i2_3, $i3_3, $i2_4;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $i4 := @parameter2: int;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i2_1 = $i2 * 255;

        $i2_2 = $i2_1 * $i3;

        $i4_1 = $i4 * $i0;

        $i3_1 = 255 - $i3;

        $i3_2 = $i4_1 * $i3_1;

        $i2_3 = $i2_2 + $i3_2;

        $i3_3 = $i1 * 255;

        $i2_4 = $i2_3 / $i3_3;

        return $i2_4;
    }

    private static float constrain(float, float, float)
    {
        float $f0, $f1, $f2;
        byte $b0, $b0_1;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        return $f1;

     label1:
        $b0_1 = $f0 cmpl $f2;

        if $b0_1 <= 0 goto label2;

        return $f2;

     label2:
        return $f0;
    }

    private static int constrain(int, int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i0 >= $i1 goto label1;

        return $i1;

     label1:
        if $i0 <= $i2 goto label2;

        return $i2;

     label2:
        return $i0;
    }

    public static int setAlphaComponent(int, int)
    {
        java.lang.IllegalArgumentException $r0;
        int $i0, $i1, $i0_1, $i1_1, $i0_2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 < 0 goto label1;

        if $i1 <= 255 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("alpha must be between 0 and 255.");

        throw $r0;

     label2:
        $i0_1 = 16777215 & $i0;

        $i1_1 = $i1 << 24;

        $i0_2 = $i0_1 | $i1_1;

        return $i0_2;
    }
}
