class ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater extends java.lang.Object
{
    private final ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory;

    void <init>()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        ch.boye.httpclientandroidlib.impl.client.cache.HeapResourceFactory $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 = new ch.boye.httpclientandroidlib.impl.client.cache.HeapResourceFactory;

        specialinvoke $r1.<ch.boye.httpclientandroidlib.impl.client.cache.HeapResourceFactory: void <init>()>();

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: void <init>(ch.boye.httpclientandroidlib.client.cache.ResourceFactory)>($r1);

        return;
    }

    void <init>(ch.boye.httpclientandroidlib.client.cache.ResourceFactory)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        ch.boye.httpclientandroidlib.client.cache.ResourceFactory $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.ResourceFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory> = $r1;

        return;
    }

    private boolean entryAndResponseHaveDateHeader(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        ch.boye.httpclientandroidlib.Header $r3, $r3_1, $r3_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $r3 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Date");

(0)     if $r3 == null goto label1;

        $r3_1 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Date");

(1)     if $r3_1 == null goto label1;

        return 1;

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        return 0;
    }

    private boolean entryDateHeaderNewerThenResponse(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        ch.boye.httpclientandroidlib.impl.cookie.DateParseException $r3;
        ch.boye.httpclientandroidlib.Header $r4, $r4_1, $r4_2;
        java.lang.String $r5, $r5_1, $r5_2;
        java.util.Date $r6, $r7;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

(0)     $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

     label1:
        $r4 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Date");

        $r5 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r6 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>($r5);

(1)     $r4_1 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header getFirstHeader(java.lang.String)>("Date");

(2)     $r5_1 = interfaceinvoke $r4_1.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r7 = staticinvoke <ch.boye.httpclientandroidlib.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>($r5_1);

        $z0 = virtualinvoke $r6.<java.util.Date: boolean after(java.util.Date)>($r7);

     label2:
        if $z0 != 0 goto label4;

        return 0;

     label3:
        $r3 := @caughtexception;

        $r5_2 = Phi($r5 #0, $r5_1 #2);

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return 0;

     label4:
        return 1;

        catch ch.boye.httpclientandroidlib.impl.cookie.DateParseException from label1 to label2 with label3;
    }

    private void removeCacheEntry1xxWarnings(java.util.List, ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        java.util.List $r1;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r2;
        java.lang.String $r3, $r7, $r3_1, $r3_2, $r3_3;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        java.util.ListIterator $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.lang.Object $r5;
        ch.boye.httpclientandroidlib.Header $r6, $r6_1, $r6_2, $r6_3;
        ch.boye.httpclientandroidlib.Header[] $r8;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

(0)     $r4 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $i1 = Phi($i1 #0, $i1 #1, $i1_2 #3);

        $r6 = Phi($r6 #0, $r6_1 #1, $r6_2 #3);

        $r3 = Phi($r3 #0, $r3_1 #1, $r3_2 #3);

        $z0 = Phi($z0 #0, $z0_2 #1, $z0_3 #3);

        $z0_1 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0_1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r6_1 = (ch.boye.httpclientandroidlib.Header) $r5;

        $r7 = interfaceinvoke $r6_1.<ch.boye.httpclientandroidlib.Header: java.lang.String getName()>();

        $r3_1 = "Warning";

        $z0_2 = virtualinvoke $r3_1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

(1)     if $z0_2 == 0 goto label1;

        $r8 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Warning");

        $i0 = lengthof $r8;

(2)     $i1_1 = 0;

     label2:
        $i1_2 = Phi($i1_1 #2, $i1_3 #4);

        $r6_2 = Phi($r6_1 #2, $r6_3 #4);

        $r3_2 = Phi($r3_1 #2, $r3_3 #4);

        $z0_3 = Phi($z0_2 #2, $z0_4 #4);

(3)     if $i1_2 >= $i0 goto label1;

        $r6_3 = $r8[$i1_2];

        $r3_3 = interfaceinvoke $r6_3.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $z0_4 = virtualinvoke $r3_3.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z0_4 == 0 goto label3;

        interfaceinvoke $r4.<java.util.ListIterator: void remove()>();

     label3:
        $i1_3 = $i1_2 + 1;

(4)     goto label2;

     label4:
        return;
    }

    private void removeCacheHeadersThatMatchResponse(java.util.List, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        java.util.List $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        int $i0, $i1, $i1_1, $i1_2;
        ch.boye.httpclientandroidlib.Header $r3, $r7;
        ch.boye.httpclientandroidlib.Header[] $r4;
        java.util.ListIterator $r5;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.Object $r6;
        java.lang.String $r8, $r9;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $r4 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header[] getAllHeaders()>();

        $i0 = lengthof $r4;

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #4);

        $z0 = Phi($z0 #0, $z0_2 #4);

        if $i1_1 >= $i0 goto label4;

        $r3 = $r4[$i1_1];

(1)     $r5 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z0_1 = Phi($z0 #1, $z0_3 #2, $z0_3 #3);

        $z0_2 = interfaceinvoke $r5.<java.util.ListIterator: boolean hasNext()>();

        if $z0_2 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = (ch.boye.httpclientandroidlib.Header) $r6;

        $r8 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.Header: java.lang.String getName()>();

        $r9 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: java.lang.String getName()>();

        $z0_3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

(2)     if $z0_3 == 0 goto label2;

        interfaceinvoke $r5.<java.util.ListIterator: void remove()>();

(3)     goto label2;

     label3:
        $i1_2 = $i1_1 + 1;

(4)     goto label1;

     label4:
        return;
    }

    protected ch.boye.httpclientandroidlib.Header[] mergeHeaders(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, ch.boye.httpclientandroidlib.HttpResponse)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r1;
        ch.boye.httpclientandroidlib.HttpResponse $r2;
        java.util.ArrayList $r3;
        boolean $z0, $z0_1, $z0_2;
        ch.boye.httpclientandroidlib.Header[] $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        java.util.List $r5, $r5_1;
        int $i0;
        java.lang.Object[] $r6;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpResponse;

        $z0 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: boolean entryAndResponseHaveDateHeader(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse)>($r1, $r2);

(0)     if $z0 == 0 goto label1;

        $z0_1 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: boolean entryDateHeaderNewerThenResponse(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse)>($r1, $r2);

(1)     if $z0_1 == 0 goto label1;

        $r4 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getAllHeaders()>();

        return $r4;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r3 = new java.util.ArrayList;

        $r4_1 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getAllHeaders()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4_1);

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: void removeCacheHeadersThatMatchResponse(java.util.List,ch.boye.httpclientandroidlib.HttpResponse)>($r3, $r2);

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: void removeCacheEntry1xxWarnings(java.util.List,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r3, $r1);

        $r4_2 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.Header[] getAllHeaders()>();

        $r5_1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4_2);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5_1);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4_3 = newarray (ch.boye.httpclientandroidlib.Header)[$i0];

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4_3);

        $r4_4 = (ch.boye.httpclientandroidlib.Header[]) $r6;

        return $r4_4;
    }

    public ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry updateCacheEntry(java.lang.String, ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry, java.util.Date, java.util.Date, ch.boye.httpclientandroidlib.HttpResponse) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater $r0;
        java.lang.String $r1;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r2, $r8;
        java.util.Date $r3, $r4;
        ch.boye.httpclientandroidlib.HttpResponse $r5;
        java.lang.IllegalArgumentException $r6;
        ch.boye.httpclientandroidlib.client.cache.ResourceFactory $r7;
        ch.boye.httpclientandroidlib.StatusLine $r9, $r9_1;
        int $i0;
        ch.boye.httpclientandroidlib.Header[] $r10;
        ch.boye.httpclientandroidlib.client.cache.Resource $r11, $r11_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r3 := @parameter2: java.util.Date;

        $r4 := @parameter3: java.util.Date;

        $r5 := @parameter4: ch.boye.httpclientandroidlib.HttpResponse;

        $r9 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.HttpResponse: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r9.<ch.boye.httpclientandroidlib.StatusLine: int getStatusCode()>();

        if $i0 == 304 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Response must have 304 status code");

        throw $r6;

     label1:
        $r10 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: ch.boye.httpclientandroidlib.Header[] mergeHeaders(ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry,ch.boye.httpclientandroidlib.HttpResponse)>($r2, $r5);

        $r7 = $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheEntryUpdater: ch.boye.httpclientandroidlib.client.cache.ResourceFactory resourceFactory>;

        $r11 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.client.cache.Resource getResource()>();

        $r11_1 = interfaceinvoke $r7.<ch.boye.httpclientandroidlib.client.cache.ResourceFactory: ch.boye.httpclientandroidlib.client.cache.Resource copy(java.lang.String,ch.boye.httpclientandroidlib.client.cache.Resource)>($r1, $r11);

        $r8 = new ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r9_1 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.StatusLine getStatusLine()>();

        specialinvoke $r8.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: void <init>(java.util.Date,java.util.Date,ch.boye.httpclientandroidlib.StatusLine,ch.boye.httpclientandroidlib.Header[],ch.boye.httpclientandroidlib.client.cache.Resource)>($r3, $r4, $r9_1, $r10, $r11_1);

        return $r8;
    }
}
