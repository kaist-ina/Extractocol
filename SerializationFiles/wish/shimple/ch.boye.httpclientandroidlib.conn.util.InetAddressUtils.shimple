public class ch.boye.httpclientandroidlib.conn.util.InetAddressUtils extends java.lang.Object
{
    private static final java.util.regex.Pattern IPV4_PATTERN;
    private static final java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN;
    private static final java.util.regex.Pattern IPV6_STD_PATTERN;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r0_1, $r0_2;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}$");

        <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: java.util.regex.Pattern IPV4_PATTERN> = $r0;

        $r0_1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$");

        <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: java.util.regex.Pattern IPV6_STD_PATTERN> = $r0_1;

        $r0_2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)$");

        <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN> = $r0_2;

        return;
    }

    private void <init>()
    {
        ch.boye.httpclientandroidlib.conn.util.InetAddressUtils $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.util.InetAddressUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isIPv4Address(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: java.util.regex.Pattern IPV4_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static boolean isIPv6Address(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: boolean isIPv6StdAddress(java.lang.String)>($r0);

(0)     if $z0 != 0 goto label1;

        $z0_1 = staticinvoke <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: boolean isIPv6HexCompressedAddress(java.lang.String)>($r0);

(1)     if $z0_1 == 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return 1;

     label2:
        return 0;
    }

    public static boolean isIPv6HexCompressedAddress(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static boolean isIPv6StdAddress(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <ch.boye.httpclientandroidlib.conn.util.InetAddressUtils: java.util.regex.Pattern IPV6_STD_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }
}
