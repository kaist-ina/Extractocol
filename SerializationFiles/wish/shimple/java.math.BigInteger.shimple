public class java.math.BigInteger extends java.lang.Number implements java.lang.Comparable, java.io.Serializable
{
    public static final java.math.BigInteger ONE;
    public static final java.math.BigInteger TEN;
    public static final java.math.BigInteger ZERO;

    public void <init>(int, java.util.Random)
    {
        java.math.BigInteger r0;
        int i0;
        java.util.Random r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Random;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(int, int, java.util.Random)
    {
        java.math.BigInteger r0;
        int i0, i1;
        java.util.Random r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.Random;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(java.lang.String)
    {
        java.math.BigInteger r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(java.lang.String, int)
    {
        java.math.BigInteger r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(int, byte[])
    {
        java.math.BigInteger r0;
        int i0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(byte[])
    {
        java.math.BigInteger r0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static java.math.BigInteger valueOf(long)
    {
        long l0;
        java.lang.RuntimeException $r0;

        l0 := @parameter0: long;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public byte[] toByteArray()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger abs()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger negate()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger add(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger subtract(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int signum()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger shiftRight(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger shiftLeft(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int bitLength()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean testBit(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger setBit(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger clearBit(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger flipBit(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getLowestSetBit()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int bitCount()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger not()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger and(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger or(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger xor(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger andNot(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int intValue()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long longValue()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public float floatValue()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public double doubleValue()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int compareTo(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger min(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger max(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public int hashCode()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.math.BigInteger r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.String toString()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger gcd(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger multiply(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger pow(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger divide(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger remainder(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger modInverse(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.math.BigInteger modPow(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger r0, r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public java.math.BigInteger mod(java.math.BigInteger)
    {
        java.math.BigInteger r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public boolean isProbablePrime(int)
    {
        java.math.BigInteger r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.math.BigInteger nextProbablePrime()
    {
        java.math.BigInteger r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.math.BigInteger;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.math.BigInteger probablePrime(int, java.util.Random)
    {
        int i0;
        java.util.Random r0;
        java.lang.RuntimeException $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Random;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.math.BigInteger r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.math.BigInteger;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.math.BigInteger) r1;

        $i0 = virtualinvoke r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        <java.math.BigInteger: java.math.BigInteger ONE> = null;

        <java.math.BigInteger: java.math.BigInteger TEN> = null;

        <java.math.BigInteger: java.math.BigInteger ZERO> = null;

        return;
    }
}
