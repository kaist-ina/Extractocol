public final class ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory extends java.lang.Object implements ch.boye.httpclientandroidlib.conn.scheme.SocketFactory
{
    private static final ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory DEFAULT_FACTORY;

    static void <clinit>()
    {
        ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory $r0;

        $r0 = new ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory: void <init>()>();

        <ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory: ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory DEFAULT_FACTORY> = $r0;

        return;
    }

    private void <init>()
    {
        ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory getSocketFactory()
    {
        ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory r0;

        r0 = <ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory: ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory DEFAULT_FACTORY>;

        return r0;
    }

    public java.net.Socket connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, ch.boye.httpclientandroidlib.params.HttpParams) throws java.io.IOException
    {
        ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory $r0;
        int $i0, $i1, $i2, $i1_1, $i1_2, $i1_3, $i1_4;
        ch.boye.httpclientandroidlib.params.HttpParams $r1;
        java.util.ArrayList $r2;
        java.net.SocketTimeoutException $r3;
        ch.boye.httpclientandroidlib.conn.ConnectTimeoutException $r4;
        java.net.Socket $r5, $r5_1, $r5_2, $r5_3, $r5_4;
        java.lang.String $r6, $r6_1;
        java.net.InetAddress $r7, $r7_1, $r7_2, $r7_3;
        java.lang.IllegalArgumentException $r8, $r8_1;
        java.net.InetSocketAddress $r9, $r9_1, $r9_2, $r9_3, $r9_4;
        java.net.InetAddress[] $r10;
        java.util.List $r11;
        java.io.IOException $r12, $r12_1, $r12_2;
        java.util.Iterator $r13;
        boolean $z0;
        java.lang.Object $r14;
        java.lang.StringBuilder $r15, $r15_1, $r15_2, $r15_3;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory;

        $r5 := @parameter0: java.net.Socket;

        $r6 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r7 := @parameter3: java.net.InetAddress;

        $i1 := @parameter4: int;

        $r1 := @parameter5: ch.boye.httpclientandroidlib.params.HttpParams;

        if $r6 != null goto label01;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host may not be null.");

        throw $r8;

     label01:
        if $r1 != null goto label02;

        $r8_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r8_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null.");

        throw $r8_1;

     label02:
(0)     if $r5 != null goto label03;

(1)     $r5_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory: java.net.Socket createSocket()>();

     label03:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        if $r7 != null goto label04;

(2)     if $i1 <= 0 goto label06;

     label04:
(3)     if $i1 >= 0 goto label05;

(4)     $i1_1 = 0;

     label05:
        $i1_2 = Phi($i1 #3, $i1_1 #4);

        $r9 = new java.net.InetSocketAddress;

        specialinvoke $r9.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r7, $i1_2);

(5)     virtualinvoke $r5_2.<java.net.Socket: void bind(java.net.SocketAddress)>($r9);

     label06:
        $r9_1 = Phi($r9 #2, $r9 #5);

        $i1_3 = Phi($i1 #2, $i1_2 #5);

        $i2 = staticinvoke <ch.boye.httpclientandroidlib.params.HttpConnectionParams: int getConnectionTimeout(ch.boye.httpclientandroidlib.params.HttpParams)>($r1);

        $r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r6);

        $r2 = new java.util.ArrayList;

        $i1_4 = lengthof $r10;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1_4);

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r11);

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r2);

        $r12 = null;

(6)     $r13 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $r9_2 = Phi($r9_1 #6, $r9_3 #9);

        $r7_1 = Phi($r7 #6, $r7_2 #9);

        $r12_1 = Phi($r12 #6, $r12_2 #9);

        $r5_3 = Phi($r5_2 #6, $r5_4 #9);

        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

(7)     if $z0 == 0 goto label09;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r7_2 = (java.net.InetAddress) $r14;

        $r9_3 = new java.net.InetSocketAddress;

     label08:
        specialinvoke $r9_3.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r7_2, $i0);

(8)     virtualinvoke $r5_3.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r9_3, $i2);

     label09:
        $r9_4 = Phi($r9_2 #7, $r9_3 #8);

        $r7_3 = Phi($r7_1 #7, $r7_2 #8);

        if $r12_1 == null goto label12;

        throw $r12_1;

     label10:
        $r3 := @caughtexception;

        $r4 = new ch.boye.httpclientandroidlib.conn.ConnectTimeoutException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15_1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connect to ");

        $r15_2 = virtualinvoke $r15_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7_2);

        $r15_3 = virtualinvoke $r15_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timed out");

        $r6_1 = virtualinvoke $r15_3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<ch.boye.httpclientandroidlib.conn.ConnectTimeoutException: void <init>(java.lang.String)>($r6_1);

        throw $r4;

     label11:
        $r12_2 := @caughtexception;

        $r5_4 = new java.net.Socket;

        specialinvoke $r5_4.<java.net.Socket: void <init>()>();

(9)     goto label07;

     label12:
        return $r5_3;

        catch java.net.SocketTimeoutException from label08 to label09 with label10;
        catch java.io.IOException from label08 to label09 with label11;
    }

    public java.net.Socket createSocket()
    {
        ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory $r0;
        java.net.Socket $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory;

        $r1 = new java.net.Socket;

        specialinvoke $r1.<java.net.Socket: void <init>()>();

        return $r1;
    }

    public final boolean isSecure(java.net.Socket) throws java.lang.IllegalArgumentException
    {
        ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.IllegalArgumentException $r2, $r2_1, $r2_2;
        java.lang.Class $r3;
        boolean $z0;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.MultihomePlainSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket may not be null.");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == class "java/net/Socket" goto label2;

        $r2_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r2_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket not created by this factory.");

        throw $r2_1;

     label2:
        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isClosed()>();

        if $z0 == 0 goto label3;

        $r2_2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2_2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket is closed.");

        throw $r2_2;

     label3:
        return 0;
    }
}
