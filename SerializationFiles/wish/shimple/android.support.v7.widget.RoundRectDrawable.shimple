class android.support.v7.widget.RoundRectDrawable extends android.graphics.drawable.Drawable
{
    private final android.graphics.RectF mBoundsF;
    private final android.graphics.Rect mBoundsI;
    private boolean mInsetForPadding;
    private boolean mInsetForRadius;
    private float mPadding;
    private final android.graphics.Paint mPaint;
    private float mRadius;

    public void <init>(int, float)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        int $i0;
        float $f0;
        android.graphics.RectF $r1;
        android.graphics.Rect $r2;
        android.graphics.Paint $r3, $r3_1;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForPadding> = 0;

        $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForRadius> = 1;

        $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius> = $f0;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(5);

        $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Paint mPaint> = $r3;

        $r3_1 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r3_1.<android.graphics.Paint: void setColor(int)>($i0);

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.RectF mBoundsF> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Rect mBoundsI> = $r2;

        return;
    }

    private void updateBounds(android.graphics.Rect)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        float $f0, $f1, $f2, $f3, $f0_1, $f1_1, $f0_2, $f1_2, $f2_1, $f1_3, $f0_3, $f1_4, $f2_2;
        android.graphics.Rect $r1, $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;
        android.graphics.RectF $r3, $r3_1, $r3_2;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        double $d0, $d0_1, $d0_2, $d0_3, $d0_4;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $r2 := @parameter0: android.graphics.Rect;

(0)     if $r2 != null goto label1;

(1)     $r2_1 = virtualinvoke $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Rect getBounds()>();

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r3 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.RectF mBoundsF>;

        $i0 = $r2_2.<android.graphics.Rect: int left>;

        $f1 = (float) $i0;

        $i0_1 = $r2_2.<android.graphics.Rect: int top>;

        $f2 = (float) $i0_1;

        $i0_2 = $r2_2.<android.graphics.Rect: int right>;

        $f3 = (float) $i0_2;

        $i0_3 = $r2_2.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i0_3;

        virtualinvoke $r3.<android.graphics.RectF: void set(float,float,float,float)>($f1, $f2, $f3, $f0);

        $r1 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Rect mBoundsI>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r2_2);

        $z0 = $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForPadding>;

(2)     if $z0 == 0 goto label2;

        $f0_1 = $r0.<android.support.v7.widget.RoundRectDrawable: float mPadding>;

        $f1_1 = $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius>;

        $z0_1 = $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForRadius>;

        $f0_2 = staticinvoke <android.support.v7.widget.RoundRectDrawableWithShadow: float calculateVerticalPadding(float,float,boolean)>($f0_1, $f1_1, $z0_1);

        $f1_2 = $r0.<android.support.v7.widget.RoundRectDrawable: float mPadding>;

        $f2_1 = $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius>;

        $z0_2 = $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForRadius>;

        $f1_3 = staticinvoke <android.support.v7.widget.RoundRectDrawableWithShadow: float calculateHorizontalPadding(float,float,boolean)>($f1_2, $f2_1, $z0_2);

        $r2_3 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Rect mBoundsI>;

        $d0 = (double) $f1_3;

        $d0_1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0_1;

        $d0_2 = (double) $f0_2;

        $d0_3 = staticinvoke <java.lang.Math: double ceil(double)>($d0_2);

        $i0_4 = (int) $d0_3;

        virtualinvoke $r2_3.<android.graphics.Rect: void inset(int,int)>($i1, $i0_4);

        $r3_1 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.RectF mBoundsF>;

        $r2_4 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Rect mBoundsI>;

(3)     virtualinvoke $r3_1.<android.graphics.RectF: void set(android.graphics.Rect)>($r2_4);

     label2:
        $r3_2 = Phi($r3 #2, $r3_1 #3);

        $d0_4 = Phi($d0 #2, $d0_3 #3);

        $r2_5 = Phi($r2_2 #2, $r2_4 #3);

        $z0_3 = Phi($z0 #2, $z0_2 #3);

        $f0_3 = Phi($f0 #2, $f0_2 #3);

        $f1_4 = Phi($f1 #2, $f1_3 #3);

        $i0_5 = Phi($i0_3 #2, $i0_4 #3);

        $f2_2 = Phi($f2 #2, $f2_1 #3);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        android.graphics.Canvas $r1;
        android.graphics.RectF $r2;
        float $f0, $f1;
        android.graphics.Paint $r3;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.RectF mBoundsF>;

        $f0 = $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius>;

        $f1 = $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius>;

        $r3 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r2, $f0, $f1, $r3);

        return;
    }

    public int getOpacity()
    {
        android.support.v7.widget.RoundRectDrawable $r0;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        return -3;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        android.graphics.Outline $r1;
        android.graphics.Rect $r2;
        float $f0;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $r1 := @parameter0: android.graphics.Outline;

        $r2 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Rect mBoundsI>;

        $f0 = $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius>;

        virtualinvoke $r1.<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>($r2, $f0);

        return;
    }

    float getPadding()
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        float f0;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        f0 = $r0.<android.support.v7.widget.RoundRectDrawable: float mPadding>;

        return f0;
    }

    public float getRadius()
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        float f0;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        f0 = $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius>;

        return f0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        android.graphics.Rect $r1;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($r1);

        specialinvoke $r0.<android.support.v7.widget.RoundRectDrawable: void updateBounds(android.graphics.Rect)>($r1);

        return;
    }

    public void setAlpha(int)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $i0 := @parameter0: int;

        return;
    }

    public void setColor(int)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v7.widget.RoundRectDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke $r0.<android.support.v7.widget.RoundRectDrawable: void invalidateSelf()>();

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        android.graphics.ColorFilter $r1;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        return;
    }

    void setPadding(float, boolean, boolean)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        float $f0, $f1;
        boolean $z0, $z1, $z2, $z2_1, $z2_2;
        byte $b0;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $f0 := @parameter0: float;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $f1 = $r0.<android.support.v7.widget.RoundRectDrawable: float mPadding>;

        $b0 = $f0 cmpl $f1;

(0)     if $b0 != 0 goto label1;

        $z2 = $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForPadding>;

(1)     if $z2 != $z0 goto label1;

        $z2_1 = $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForRadius>;

(2)     if $z2_1 != $z1 goto label1;

        return;

     label1:
        $z2_2 = Phi($z2 #0, $z2 #1, $z2_1 #2);

        $r0.<android.support.v7.widget.RoundRectDrawable: float mPadding> = $f0;

        $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForPadding> = $z0;

        $r0.<android.support.v7.widget.RoundRectDrawable: boolean mInsetForRadius> = $z1;

        specialinvoke $r0.<android.support.v7.widget.RoundRectDrawable: void updateBounds(android.graphics.Rect)>(null);

        virtualinvoke $r0.<android.support.v7.widget.RoundRectDrawable: void invalidateSelf()>();

        return;
    }

    void setRadius(float)
    {
        android.support.v7.widget.RoundRectDrawable $r0;
        float $f0, $f1;
        byte $b0;

        $r0 := @this: android.support.v7.widget.RoundRectDrawable;

        $f0 := @parameter0: float;

        $f1 = $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius>;

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r0.<android.support.v7.widget.RoundRectDrawable: float mRadius> = $f0;

        specialinvoke $r0.<android.support.v7.widget.RoundRectDrawable: void updateBounds(android.graphics.Rect)>(null);

        virtualinvoke $r0.<android.support.v7.widget.RoundRectDrawable: void invalidateSelf()>();

        return;
    }
}
