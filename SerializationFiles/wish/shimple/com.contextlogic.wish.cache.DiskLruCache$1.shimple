class com.contextlogic.wish.cache.DiskLruCache$1 extends java.lang.Object implements java.util.concurrent.Callable
{
    final com.contextlogic.wish.cache.DiskLruCache this$0;

    void <init>(com.contextlogic.wish.cache.DiskLruCache)
    {
        com.contextlogic.wish.cache.DiskLruCache$1 $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$1;

        $r1 := @parameter0: com.contextlogic.wish.cache.DiskLruCache;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$1: com.contextlogic.wish.cache.DiskLruCache this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        com.contextlogic.wish.cache.DiskLruCache$1 $r0;
        java.lang.Void $r1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$1;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$1: java.lang.Void call()>();

        return $r1;
    }

    public java.lang.Void call() throws java.lang.Exception
    {
        com.contextlogic.wish.cache.DiskLruCache$1 $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1, $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6;
        java.lang.Throwable $r2;
        java.io.Writer $r4;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$1;

        $r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$1: com.contextlogic.wish.cache.DiskLruCache this$0>;

(0)     entermonitor $r1;

     label1:
        $r3 = $r0.<com.contextlogic.wish.cache.DiskLruCache$1: com.contextlogic.wish.cache.DiskLruCache this$0>;

        $r4 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: java.io.Writer access$000(com.contextlogic.wish.cache.DiskLruCache)>($r3);

        if $r4 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
(1)     $r3_1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$1: com.contextlogic.wish.cache.DiskLruCache this$0>;

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$100(com.contextlogic.wish.cache.DiskLruCache)>($r3_1);

(2)     $r3_2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$1: com.contextlogic.wish.cache.DiskLruCache this$0>;

        $z0 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: boolean access$200(com.contextlogic.wish.cache.DiskLruCache)>($r3_2);

(3)     if $z0 == 0 goto label4;

(4)     $r3_3 = $r0.<com.contextlogic.wish.cache.DiskLruCache$1: com.contextlogic.wish.cache.DiskLruCache this$0>;

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$300(com.contextlogic.wish.cache.DiskLruCache)>($r3_3);

(5)     $r3_4 = $r0.<com.contextlogic.wish.cache.DiskLruCache$1: com.contextlogic.wish.cache.DiskLruCache this$0>;

(6)     staticinvoke <com.contextlogic.wish.cache.DiskLruCache: int access$402(com.contextlogic.wish.cache.DiskLruCache,int)>($r3_4, 0);

     label4:
        $r3_5 = Phi($r3_2 #3, $r3_4 #6);

(7)     exitmonitor $r1;

     label5:
        return null;

     label6:
        $r2 := @caughtexception;

(8)     $r3_6 = Phi($r3 #0, $r3_1 #1, $r3_2 #2, $r3_3 #4, $r3_4 #5, $r3_5 #7, $r3_6 #8);

        exitmonitor $r1;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
