public abstract class java.nio.channels.FileChannel extends java.nio.channels.spi.AbstractInterruptibleChannel implements java.nio.channels.ByteChannel, java.nio.channels.GatheringByteChannel, java.nio.channels.ScatteringByteChannel
{

    protected void <init>()
    {
        java.nio.channels.FileChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileChannel;

        specialinvoke r0.<java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract void force(boolean) throws java.io.IOException;

    public final java.nio.channels.FileLock lock() throws java.io.IOException
    {
        java.nio.channels.FileChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.nio.channels.FileLock lock(long, long, boolean) throws java.io.IOException;

    public abstract java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode, long, long) throws java.io.IOException;

    public abstract long position() throws java.io.IOException;

    public abstract java.nio.channels.FileChannel position(long) throws java.io.IOException;

    public abstract int read(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract int read(java.nio.ByteBuffer, long) throws java.io.IOException;

    public final long read(java.nio.ByteBuffer[]) throws java.io.IOException
    {
        java.nio.channels.FileChannel r0;
        java.nio.ByteBuffer[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.FileChannel;

        r1 := @parameter0: java.nio.ByteBuffer[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;

    public abstract long size() throws java.io.IOException;

    public abstract long transferFrom(java.nio.channels.ReadableByteChannel, long, long) throws java.io.IOException;

    public abstract long transferTo(long, long, java.nio.channels.WritableByteChannel) throws java.io.IOException;

    public abstract java.nio.channels.FileChannel truncate(long) throws java.io.IOException;

    public final java.nio.channels.FileLock tryLock() throws java.io.IOException
    {
        java.nio.channels.FileChannel r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.FileChannel;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract java.nio.channels.FileLock tryLock(long, long, boolean) throws java.io.IOException;

    public abstract int write(java.nio.ByteBuffer) throws java.io.IOException;

    public abstract int write(java.nio.ByteBuffer, long) throws java.io.IOException;

    public final long write(java.nio.ByteBuffer[]) throws java.io.IOException
    {
        java.nio.channels.FileChannel r0;
        java.nio.ByteBuffer[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.FileChannel;

        r1 := @parameter0: java.nio.ByteBuffer[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
}
