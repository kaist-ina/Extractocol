public final class com.contextlogic.wish.cache.DiskLruCache$Snapshot extends java.lang.Object implements java.io.Closeable
{
    private final java.io.InputStream[] ins;
    private final java.lang.String key;
    private long[] lengths;
    private final long sequenceNumber;
    final com.contextlogic.wish.cache.DiskLruCache this$0;
    private final long timestamp;

    private void <init>(com.contextlogic.wish.cache.DiskLruCache, java.lang.String, long, long, long[], java.io.InputStream[])
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        java.lang.String $r2;
        long $l0, $l1;
        long[] $r3;
        java.io.InputStream[] $r4;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        $r1 := @parameter0: com.contextlogic.wish.cache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $r3 := @parameter4: long[];

        $r4 := @parameter5: java.io.InputStream[];

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: com.contextlogic.wish.cache.DiskLruCache this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: java.lang.String key> = $r2;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long sequenceNumber> = $l0;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: java.io.InputStream[] ins> = $r4;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long timestamp> = $l1;

        $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long[] lengths> = $r3;

        return;
    }

    void <init>(com.contextlogic.wish.cache.DiskLruCache, java.lang.String, long, long, long[], java.io.InputStream[], com.contextlogic.wish.cache.DiskLruCache$1)
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        java.lang.String $r2;
        long $l0, $l1;
        long[] $r3;
        java.io.InputStream[] $r4;
        com.contextlogic.wish.cache.DiskLruCache$1 $r5;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        $r1 := @parameter0: com.contextlogic.wish.cache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $r3 := @parameter4: long[];

        $r4 := @parameter5: java.io.InputStream[];

        $r5 := @parameter6: com.contextlogic.wish.cache.DiskLruCache$1;

        specialinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: void <init>(com.contextlogic.wish.cache.DiskLruCache,java.lang.String,long,long,long[],java.io.InputStream[])>($r1, $r2, $l0, $l1, $r3, $r4);

        return;
    }

    public void close()
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        int $i0, $i1, $i1_1, $i1_2;
        java.io.InputStream $r1;
        java.io.InputStream[] $r2, $r2_1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        $r2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: java.io.InputStream[] ins>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2_1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: java.io.InputStream[] ins>;

        $i0 = lengthof $r2_1;

(0)     $i1 = 0;

     label2:
        $i1_1 = Phi($i1 #0, $i1_2 #1);

        if $i1_1 >= $i0 goto label3;

        $r1 = $r2_1[$i1_1];

        staticinvoke <com.contextlogic.wish.cache.DiskLruCache: void access$1900(java.io.Closeable)>($r1);

        $i1_2 = $i1_1 + 1;

(1)     goto label2;

     label3:
        return;
    }

    public com.contextlogic.wish.cache.DiskLruCache$Editor edit() throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        com.contextlogic.wish.cache.DiskLruCache $r1;
        java.lang.String $r2;
        long $l0;
        com.contextlogic.wish.cache.DiskLruCache$Editor $r3;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        $r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: com.contextlogic.wish.cache.DiskLruCache this$0>;

        $r2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: java.lang.String key>;

        $l0 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long sequenceNumber>;

        $r3 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: com.contextlogic.wish.cache.DiskLruCache$Editor access$1700(com.contextlogic.wish.cache.DiskLruCache,java.lang.String,long)>($r1, $r2, $l0);

        return $r3;
    }

    public java.io.InputStream getInputStream(int)
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        int $i0;
        java.io.InputStream[] $r1;
        java.io.InputStream $r2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: java.io.InputStream[] ins>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public long[] getLengths()
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        long[] r1;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        r1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long[] lengths>;

        return r1;
    }

    public long getSequenceNumber()
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        long l0;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        l0 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long sequenceNumber>;

        return l0;
    }

    public java.lang.String getString(int) throws java.io.IOException
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        int $i0;
        java.io.InputStream $r1;
        java.lang.String $r2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: java.io.InputStream getInputStream(int)>($i0);

        $r2 = staticinvoke <com.contextlogic.wish.cache.DiskLruCache: java.lang.String access$1800(java.io.InputStream)>($r1);

        return $r2;
    }

    public long getTimestamp()
    {
        com.contextlogic.wish.cache.DiskLruCache$Snapshot $r0;
        byte $b0;
        long $l1, $l1_1, $l1_2;

        $r0 := @this: com.contextlogic.wish.cache.DiskLruCache$Snapshot;

        $l1 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long timestamp>;

        $b0 = $l1 cmp 0L;

        if $b0 != 0 goto label1;

        $l1_1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l1_1;

     label1:
        $l1_2 = $r0.<com.contextlogic.wish.cache.DiskLruCache$Snapshot: long timestamp>;

        return $l1_2;
    }
}
