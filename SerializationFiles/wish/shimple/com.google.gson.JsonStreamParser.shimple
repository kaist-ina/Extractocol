public final class com.google.gson.JsonStreamParser extends java.lang.Object implements java.util.Iterator
{
    private final java.lang.Object lock;
    private final com.google.gson.stream.JsonReader parser;

    public void <init>(java.io.Reader)
    {
        com.google.gson.JsonStreamParser $r0;
        java.io.Reader $r1;
        java.lang.Object $r2;
        com.google.gson.stream.JsonReader $r3, $r3_1;

        $r0 := @this: com.google.gson.JsonStreamParser;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new com.google.gson.stream.JsonReader;

        specialinvoke $r3.<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>($r1);

        $r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser> = $r3;

        $r3_1 = $r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

        virtualinvoke $r3_1.<com.google.gson.stream.JsonReader: void setLenient(boolean)>(1);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<com.google.gson.JsonStreamParser: java.lang.Object lock> = $r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.google.gson.JsonStreamParser $r0;
        java.lang.String $r1;
        java.io.StringReader $r2;

        $r0 := @this: com.google.gson.JsonStreamParser;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r0.<com.google.gson.JsonStreamParser: void <init>(java.io.Reader)>($r2);

        return;
    }

    public boolean hasNext()
    {
        com.google.gson.JsonStreamParser $r0;
        java.lang.Object $r1;
        com.google.gson.stream.JsonReader $r2;
        com.google.gson.stream.JsonToken $r3, $r9;
        com.google.gson.stream.MalformedJsonException $r4;
        com.google.gson.JsonSyntaxException $r5;
        java.lang.Throwable $r6;
        java.io.IOException $r7;
        com.google.gson.JsonIOException $r8;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = $r0.<com.google.gson.JsonStreamParser: java.lang.Object lock>;

(0)     entermonitor $r1;

     label01:
        $r2 = $r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

     label02:
        $r9 = virtualinvoke $r2.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

     label03:
        $r3 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT>;

     label04:
        if $r9 == $r3 goto label07;

(1)     $z0 = 1;

     label05:
        $z0_1 = Phi($z0 #1, $z0_2 #4);

(2)     exitmonitor $r1;

     label06:
        return $z0_1;

     label07:
(3)     $z0_2 = 0;

(4)     goto label05;

     label08:
        $r4 := @caughtexception;

        $r5 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r5.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label09:
        $r6 := @caughtexception;

(5)     $z0_3 = Phi($z0 #0, $z0_1 #2, $z0_2 #3, $z0_3 #5);

        exitmonitor $r1;

     label10:
        throw $r6;

     label11:
        $r7 := @caughtexception;

     label12:
        $r8 = new com.google.gson.JsonIOException;

        specialinvoke $r8.<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label13:
        nop;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch com.google.gson.stream.MalformedJsonException from label02 to label03 with label08;
        catch java.io.IOException from label02 to label03 with label11;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label10 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public com.google.gson.JsonElement next() throws com.google.gson.JsonParseException
    {
        com.google.gson.JsonStreamParser $r0;
        java.util.NoSuchElementException $r1, $r1_1, $r1_2;
        com.google.gson.stream.JsonReader $r2;
        java.lang.StackOverflowError $r3;
        java.lang.OutOfMemoryError $r4;
        boolean $z0, $z0_1;
        com.google.gson.JsonElement $r5;
        com.google.gson.JsonParseException $r6, $r6_1, $r6_2;
        java.lang.RuntimeException $r7, $r7_1, $r7_2;
        java.lang.Throwable $r8;

        $r0 := @this: com.google.gson.JsonStreamParser;

        $z0 = virtualinvoke $r0.<com.google.gson.JsonStreamParser: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

     label2:
        $r5 = staticinvoke <com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)>($r2);

     label3:
        return $r5;

     label4:
        $r3 := @caughtexception;

        $r6 = new com.google.gson.JsonParseException;

        specialinvoke $r6.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>("Failed parsing JSON source to Json", $r3);

        throw $r6;

     label5:
        $r4 := @caughtexception;

        $r6_1 = new com.google.gson.JsonParseException;

        specialinvoke $r6_1.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>("Failed parsing JSON source to Json", $r4);

        throw $r6_1;

     label6:
        $r7 := @caughtexception;

        $r6_2 = (com.google.gson.JsonParseException) $r7;

        $r8 = virtualinvoke $r6_2.<com.google.gson.JsonParseException: java.lang.Throwable getCause()>();

        $z0_1 = $r8 instanceof java.io.EOFException;

(0)     if $z0_1 == 0 goto label7;

        $r1_1 = new java.util.NoSuchElementException;

        $r7_1 = $r1_1;

(1)     specialinvoke $r1_1.<java.util.NoSuchElementException: void <init>()>();

     label7:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $r7_2 = Phi($r7 #0, $r7_1 #1);

        throw $r7_2;

        catch java.lang.StackOverflowError from label2 to label3 with label4;
        catch java.lang.OutOfMemoryError from label2 to label3 with label5;
        catch com.google.gson.JsonParseException from label2 to label3 with label6;
    }

    public volatile java.lang.Object next()
    {
        com.google.gson.JsonStreamParser $r0;
        com.google.gson.JsonElement $r1;

        $r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = virtualinvoke $r0.<com.google.gson.JsonStreamParser: com.google.gson.JsonElement next()>();

        return $r1;
    }

    public void remove()
    {
        com.google.gson.JsonStreamParser $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
