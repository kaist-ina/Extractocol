class android.support.v4.graphics.drawable.DrawableWrapperDonut extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback, android.support.v4.graphics.drawable.DrawableWrapper
{
    static final android.graphics.PorterDuff$Mode DEFAULT_MODE;
    private boolean mColorFilterSet;
    private int mCurrentColor;
    private android.graphics.PorterDuff$Mode mCurrentMode;
    android.graphics.drawable.Drawable mDrawable;
    private android.content.res.ColorStateList mTintList;
    private android.graphics.PorterDuff$Mode mTintMode;

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0;

        return;
    }

    void <init>(android.graphics.drawable.Drawable)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.PorterDuff$Mode $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = <android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode mTintMode> = $r2;

        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void setWrappedDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    private boolean updateTint(int[])
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        int[] $r1;
        android.content.res.ColorStateList $r2, $r4, $r2_1, $r2_2;
        boolean $z0;
        int $i0, $i1, $i0_1, $i0_2, $i0_3;
        android.graphics.PorterDuff$Mode $r3, $r5, $r3_1, $r3_2, $r3_3;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: int[];

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.content.res.ColorStateList mTintList>;

(0)     if $r2 == null goto label2;

        $r3 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode mTintMode>;

(1)     if $r3 == null goto label2;

        $r4 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.content.res.ColorStateList mTintList>;

        $r2_1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.content.res.ColorStateList mTintList>;

        $i0 = virtualinvoke $r2_1.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i1 = virtualinvoke $r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r1, $i0);

        $r5 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode mTintMode>;

        $z0 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: boolean mColorFilterSet>;

(2)     if $z0 == 0 goto label1;

        $i0_1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: int mCurrentColor>;

(3)     if $i1 != $i0_1 goto label1;

        $r3_1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode mCurrentMode>;

(4)     if $r5 == $r3_1 goto label2;

     label1:
        $i0_2 = Phi($i0 #2, $i0_1 #3, $i0_1 #4);

        $r3_2 = Phi($r3 #2, $r3 #3, $r3_1 #4);

        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i1, $r5);

        $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: int mCurrentColor> = $i1;

        $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode mCurrentMode> = $r5;

        $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: boolean mColorFilterSet> = 1;

        return 1;

     label2:
        $i0_3 = Phi($i0 #0, $i0 #1, $i0_1 #4);

        $r3_3 = Phi($r3 #0, $r3 #1, $r3_1 #4);

        $r2_2 = Phi($r2 #0, $r2 #1, $r2_1 #4);

        return 0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    public int getChangingConfigurations()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        return $i0;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1, $r1_1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $r1_1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r1_1;
    }

    public int getIntrinsicHeight()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getMinimumHeight()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;
    }

    public int getMinimumWidth()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;
    }

    public int getOpacity()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }

    public int[] getState()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>();

        return $r2;
    }

    public android.graphics.Region getTransparentRegion()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Region $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $r2;
    }

    public android.graphics.drawable.Drawable getWrappedDrawable()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        return r1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void invalidateSelf()>();

        return;
    }

    public boolean isStateful()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        android.content.res.ColorStateList $r2, $r2_1, $r2_2, $r2_3;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.content.res.ColorStateList mTintList>;

(0)     if $r2 == null goto label1;

        $r2_1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.content.res.ColorStateList mTintList>;

        $z0 = virtualinvoke $r2_1.<android.content.res.ColorStateList: boolean isStateful()>();

(1)     if $z0 != 0 goto label2;

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $z0_1 = Phi($z0 #0, $z0 #1);

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $z0_2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

(2)     if $z0_2 == 0 goto label3;

     label2:
        $r2_3 = Phi($r2_1 #1, $r2_2 #2);

        $z0_3 = Phi($z0 #1, $z0_2 #2);

        return 1;

     label3:
        return 0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1, $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 == $r1 goto label1;

        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void setWrappedDrawable(android.graphics.drawable.Drawable)>($r2);

     label1:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

        return;
    }

    protected boolean onLevelChange(int)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        return $z0;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        long $l0;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void scheduleSelf(java.lang.Runnable,long)>($r2, $l0);

        return;
    }

    public void setAlpha(int)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        return;
    }

    public void setChangingConfigurations(int)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }

    public void setDither(boolean)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0);

        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>($z0);

        return;
    }

    public boolean setState(int[])
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: int[];

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        $z1 = specialinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: boolean updateTint(int[])>($r1);

        if $z1 != 0 goto label1;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void setTint(int)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        int $i0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void setTintList(android.content.res.ColorStateList)>($r1);

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.content.res.ColorStateList $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.content.res.ColorStateList mTintList> = $r1;

        $r2 = virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: int[] getState()>();

        specialinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: boolean updateTint(int[])>($r2);

        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.PorterDuff$Mode $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        $r2 = virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: int[] getState()>();

        specialinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: boolean updateTint(int[])>($r2);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        boolean $z0, $z1, $z2, $z1_1, $z1_2;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $z1 := @parameter0: boolean;

        $z0 := @parameter1: boolean;

        $z2 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0);

(0)     if $z2 != 0 goto label1;

        $r1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

        $z1_1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, $z0);

(1)     if $z1_1 == 0 goto label2;

     label1:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return 1;

     label2:
        return 0;
    }

    public void setWrappedDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1, $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

(0)     if $r2 == null goto label1;

        $r2_1 = $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable>;

(1)     virtualinvoke $r2_1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: android.graphics.drawable.Drawable mDrawable> = $r1;

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

     label2:
        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void invalidateSelf()>();

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.support.v4.graphics.drawable.DrawableWrapperDonut $r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;

        $r0 := @this: android.support.v4.graphics.drawable.DrawableWrapperDonut;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        virtualinvoke $r0.<android.support.v4.graphics.drawable.DrawableWrapperDonut: void unscheduleSelf(java.lang.Runnable)>($r2);

        return;
    }
}
