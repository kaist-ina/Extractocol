class android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong extends java.lang.Object implements android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
{
    public static final android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR;
    public static final android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL;
    private final boolean mLookForRtl;

    static void <clinit>()
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong $r0, $r0_1;

        $r0 = new android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong;

        specialinvoke $r0.<android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: void <init>(boolean)>(1);

        <android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL> = $r0;

        $r0_1 = new android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong;

        specialinvoke $r0_1.<android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: void <init>(boolean)>(0);

        <android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR> = $r0_1;

        return;
    }

    private void <init>(boolean)
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl> = $z0;

        return;
    }

    public int checkRtl(java.lang.CharSequence, int, int)
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i2_1, $i1_2, $i2_2, $i1_3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8;
        char $c3;
        byte $b4;

        $r0 := @this: android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = 0;

        $i2 = $i0;

(0)     $i0_1 = $i0 + $i1;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #2);

        $z0_1 = Phi($z0 #0, $z0_2 #2);

        $i2_1 = Phi($i2 #0, $i2_2 #2);

        if $i2_1 >= $i0_1 goto label7;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2_1);

        $b4 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($c3);

        $i1_2 = staticinvoke <android.support.v4.text.TextDirectionHeuristicsCompat: int access$200(int)>($b4);

        lookupswitch($i1_2)
        {
            case 0: goto label4;
            case 1: goto label6;
            default: goto label2;
        };

     label2:
(1)     goto label3;

     label3:
        $z0_2 = Phi($z0_1 #1, $z0_4 #3, $z0_6 #5);

        $i2_2 = $i2_1 + 1;

(2)     goto label1;

     label4:
        $z0_3 = $r0.<android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

        if $z0_3 == 0 goto label5;

        return 0;

     label5:
        $z0_4 = 1;

(3)     goto label3;

     label6:
        $z0_5 = $r0.<android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

(4)     if $z0_5 == 0 goto label9;

        $z0_6 = 1;

(5)     goto label3;

     label7:
        if $z0_1 == 0 goto label8;

        $z0_7 = $r0.<android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

(6)     if $z0_7 != 0 goto label9;

        return 0;

     label8:
        return 2;

     label9:
        $i1_3 = Phi($i1_2 #4, $i1_1 #6);

        $z0_8 = Phi($z0_5 #4, $z0_7 #6);

        return 1;
    }
}
