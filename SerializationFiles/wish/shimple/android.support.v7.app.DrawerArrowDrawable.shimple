abstract class android.support.v7.app.DrawerArrowDrawable extends android.graphics.drawable.Drawable
{
    private static final float ARROW_HEAD_ANGLE;
    private final float mBarGap;
    private final float mBarSize;
    private final float mBarThickness;
    private final float mMiddleArrowSize;
    private final android.graphics.Paint mPaint;
    private final android.graphics.Path mPath;
    private float mProgress;
    private final int mSize;
    private final boolean mSpin;
    private final float mTopBottomArrowSize;
    private boolean mVerticalMirror;

    static void <clinit>()
    {
        float $f0;
        double $d0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(45.0);

        $f0 = (float) $d0;

        <android.support.v7.app.DrawerArrowDrawable: float ARROW_HEAD_ANGLE> = $f0;

        return;
    }

    void <init>(android.content.Context)
    {
        android.content.Context $r0;
        android.graphics.Path $r1;
        int[] $r2;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10;
        android.graphics.Paint$Style $r3;
        android.graphics.Paint$Join $r4;
        android.graphics.Paint$Cap $r5;
        android.support.v7.app.DrawerArrowDrawable $r6;
        android.graphics.Paint $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6;
        android.content.res.Resources$Theme $r8;
        android.content.res.TypedArray $r9;
        float $f0, $f0_1, $f0_2, $f0_3, $f0_4, $f0_5;
        boolean $z0;

        $r6 := @this: android.support.v7.app.DrawerArrowDrawable;

        $r0 := @parameter0: android.content.Context;

        specialinvoke $r6.<android.graphics.drawable.Drawable: void <init>()>();

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>()>();

        $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint> = $r7;

        $r1 = new android.graphics.Path;

        specialinvoke $r1.<android.graphics.Path: void <init>()>();

        $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath> = $r1;

        $r6.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror> = 0;

        $r8 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r2 = <android.support.v7.appcompat.R$styleable: int[] DrawerArrowToggle>;

        $i1 = <android.support.v7.appcompat.R$attr: int drawerArrowStyle>;

        $i0 = <android.support.v7.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle>;

        $r9 = virtualinvoke $r8.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r2, $i1, $i0);

        $r7_1 = $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r7_1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r7_2 = $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i0_1 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_color>;

        $i0_2 = virtualinvoke $r9.<android.content.res.TypedArray: int getColor(int,int)>($i0_1, 0);

        virtualinvoke $r7_2.<android.graphics.Paint: void setColor(int)>($i0_2);

        $i0_3 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_drawableSize>;

        $i0_4 = virtualinvoke $r9.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0_3, 0);

        $r6.<android.support.v7.app.DrawerArrowDrawable: int mSize> = $i0_4;

        $i0_5 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_barSize>;

        $f0 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0_5, 0.0F);

        $r6.<android.support.v7.app.DrawerArrowDrawable: float mBarSize> = $f0;

        $i0_6 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_topBottomBarArrowSize>;

        $f0_1 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0_6, 0.0F);

        $r6.<android.support.v7.app.DrawerArrowDrawable: float mTopBottomArrowSize> = $f0_1;

        $i0_7 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_thickness>;

        $f0_2 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0_7, 0.0F);

        $r6.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness> = $f0_2;

        $i0_8 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars>;

        $f0_3 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0_8, 0.0F);

        $r6.<android.support.v7.app.DrawerArrowDrawable: float mBarGap> = $f0_3;

        $i0_9 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_spinBars>;

        $z0 = virtualinvoke $r9.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0_9, 1);

        $r6.<android.support.v7.app.DrawerArrowDrawable: boolean mSpin> = $z0;

        $i0_10 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_middleBarArrowSize>;

        $f0_4 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0_10, 0.0F);

        $r6.<android.support.v7.app.DrawerArrowDrawable: float mMiddleArrowSize> = $f0_4;

        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

        $r7_3 = $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r7_3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

        $r7_4 = $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r4 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r7_4.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r4);

        $r7_5 = $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r5 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        virtualinvoke $r7_5.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r5);

        $r7_6 = $r6.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f0_5 = $r6.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        virtualinvoke $r7_6.<android.graphics.Paint: void setStrokeWidth(float)>($f0_5);

        return;
    }

    private static float lerp(float, float, float)
    {
        float $f0, $f1, $f2, $f2_1, $f2_2, $f1_1;

        $f1 := @parameter0: float;

        $f2 := @parameter1: float;

        $f0 := @parameter2: float;

        $f2_1 = $f2 - $f1;

        $f2_2 = $f2_1 * $f0;

        $f1_1 = $f2_2 + $f1;

        return $f1_1;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f1_1, $f2_1, $f3_1, $f2_2, $f3_2, $f3_3, $f4_1, $f4_2, $f3_4, $f5_1, $f3_5, $f3_6, $f6_1, $f3_7, $f6_2, $f7_1, $f6_3, $f7_2, $f6_4, $f7_3, $f7_4, $f2_3, $f2_4, $f1_2, $f4_3, $f1_3, $f1_4, $f1_5, $f2_5, $f3_8, $f2_6, $f1_6, $f3_9, $f1_7, $f2_7, $f1_8, $f2_8, $f6_5, $f3_10;
        boolean $z0, $z1, $z1_1, $z0_1, $z0_2, $z1_2;
        android.graphics.Rect $r2;
        android.graphics.Path $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7, $r3_8, $r3_9;
        double $d0, $d1, $d1_1, $d0_1, $d0_2, $d1_2, $d1_3, $d0_3;
        long $l0, $l0_1;
        byte $b1, $b1_1, $b1_2, $b1_3;
        int $i2, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6;
        android.graphics.Paint $r4;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke $r0.<android.support.v7.app.DrawerArrowDrawable: boolean isLayoutRtl()>();

        $f1 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize>;

        $f2 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mTopBottomArrowSize>;

        $f3 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f1_1 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f1, $f2, $f3);

        $f2_1 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize>;

        $f3_1 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mMiddleArrowSize>;

        $f4 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f2_2 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f2_1, $f3_1, $f4);

        $f3_2 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        $f3_3 = $f3_2 / 2.0F;

        $f4_1 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f4_2 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f3_3, $f4_1);

        $f3_4 = <android.support.v7.app.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        $f5 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f5_1 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f3_4, $f5);

        if $z0 == 0 goto label5;

(0)     $f3_5 = 0.0F;

     label1:
        $f3_6 = Phi($f3_5 #0, $f3_10 #4);

        if $z0 == 0 goto label6;

(1)     $f6 = 180.0F;

     label2:
        $f6_1 = Phi($f6 #1, $f6_5 #5);

        $f7 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f3_7 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f3_6, $f6_1, $f7);

        $f6_2 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mBarGap>;

        $f7_1 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        $f6_3 = $f6_2 + $f7_1;

        $f7_2 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f6_4 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f6_3, 0.0F, $f7_2);

        $r3 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void rewind()>();

        $f7_3 = neg $f2_2;

        $f7_4 = $f7_3 / 2.0F;

        $r3_1 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f0 = $f7_4 + $f4_2;

        virtualinvoke $r3_1.<android.graphics.Path: void moveTo(float,float)>($f0, 0.0F);

        $r3_2 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f2_3 = $f2_2 - $f4_2;

        virtualinvoke $r3_2.<android.graphics.Path: void rLineTo(float,float)>($f2_3, 0.0F);

        $d0 = (double) $f1_1;

        $d1 = (double) $f5_1;

        $d1_1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0_1 = $d0 * $d1_1;

        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0_1);

        $f2_4 = (float) $l0;

        $d0_2 = (double) $f1_1;

        $d1_2 = (double) $f5_1;

        $d1_3 = staticinvoke <java.lang.Math: double sin(double)>($d1_2);

        $d0_3 = $d0_2 * $d1_3;

        $l0_1 = staticinvoke <java.lang.Math: long round(double)>($d0_3);

        $f1_2 = (float) $l0_1;

        $r3_3 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3_3.<android.graphics.Path: void moveTo(float,float)>($f7_4, $f6_4);

        $r3_4 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3_4.<android.graphics.Path: void rLineTo(float,float)>($f2_4, $f1_2);

        $r3_5 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f4_3 = neg $f6_4;

        virtualinvoke $r3_5.<android.graphics.Path: void moveTo(float,float)>($f7_4, $f4_3);

        $r3_6 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f1_3 = neg $f1_2;

        virtualinvoke $r3_6.<android.graphics.Path: void rLineTo(float,float)>($f2_4, $f1_3);

        $r3_7 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3_7.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        $r3_8 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3_8.<android.graphics.Path: void close()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z1 = $r0.<android.support.v7.app.DrawerArrowDrawable: boolean mSpin>;

        if $z1 == 0 goto label8;

        $z1_1 = $r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror>;

        $z0_1 = $z1_1 ^ $z0;

        if $z0_1 == 0 goto label7;

(2)     $b1 = -1;

     label3:
        $b1_1 = Phi($b1 #2, $b1_2 #6);

        $f1_4 = (float) $b1_1;

        $f1_5 = $f1_4 * $f3_7;

        $i2 = virtualinvoke $r2.<android.graphics.Rect: int centerX()>();

        $f2_5 = (float) $i2;

        $i2_1 = virtualinvoke $r2.<android.graphics.Rect: int centerY()>();

        $f3_8 = (float) $i2_1;

(3)     virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f1_5, $f2_5, $f3_8);

     label4:
        $z0_2 = Phi($z0_1 #3, $z0 #7, $z0 #8);

        $i2_2 = Phi($i2_1 #3, $i2 #7, $i2_6 #8);

        $f2_6 = Phi($f2_5 #3, $f2_4 #7, $f2_8 #8);

        $f1_6 = Phi($f1_5 #3, $f1_3 #7, $f1_8 #8);

        $f3_9 = Phi($f3_8 #3, $f3_7 #7, $f3_7 #8);

        $b1_3 = Phi($b1_1 #3, $b1 #7, $b1 #8);

        $z1_2 = Phi($z1_1 #3, $z1 #7, $z1 #8);

        $i2_3 = virtualinvoke $r2.<android.graphics.Rect: int centerX()>();

        $f1_7 = (float) $i2_3;

        $i2_4 = virtualinvoke $r2.<android.graphics.Rect: int centerY()>();

        $f2_7 = (float) $i2_4;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1_7, $f2_7);

        $r3_9 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $r4 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3_9, $r4);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label5:
        $f3_10 = -180.0F;

(4)     goto label1;

     label6:
        $f6_5 = 0.0F;

(5)     goto label2;

     label7:
        $b1_2 = 1;

(6)     goto label3;

     label8:
(7)     if $z0 == 0 goto label4;

        $i2_5 = virtualinvoke $r2.<android.graphics.Rect: int centerX()>();

        $f1_8 = (float) $i2_5;

        $i2_6 = virtualinvoke $r2.<android.graphics.Rect: int centerY()>();

        $f2_8 = (float) $i2_6;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f1_8, $f2_8);

(8)     goto label4;
    }

    public int getIntrinsicHeight()
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        int i0;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        i0 = $r0.<android.support.v7.app.DrawerArrowDrawable: int mSize>;

        return i0;
    }

    public int getIntrinsicWidth()
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        int i0;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        i0 = $r0.<android.support.v7.app.DrawerArrowDrawable: int mSize>;

        return i0;
    }

    public int getOpacity()
    {
        android.support.v7.app.DrawerArrowDrawable $r0;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        return -3;
    }

    public float getProgress()
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        float f0;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        f0 = $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        return f0;
    }

    public boolean isAutoMirrored()
    {
        android.support.v7.app.DrawerArrowDrawable $r0;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        return 1;
    }

    abstract boolean isLayoutRtl();

    public void setAlpha(int)
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }

    public void setProgress(float)
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        float $f0;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        $r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress> = $f0;

        virtualinvoke $r0.<android.support.v7.app.DrawerArrowDrawable: void invalidateSelf()>();

        return;
    }

    protected void setVerticalMirror(boolean)
    {
        android.support.v7.app.DrawerArrowDrawable $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $z0 := @parameter0: boolean;

        $r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror> = $z0;

        return;
    }
}
