public final enum class android.text.Layout$Alignment extends java.lang.Enum
{
    public static final enum android.text.Layout$Alignment ALIGN_CENTER;
    public static final enum android.text.Layout$Alignment ALIGN_NORMAL;
    public static final enum android.text.Layout$Alignment ALIGN_OPPOSITE;
    private static final android.text.Layout$Alignment[] $VALUES;

    public static android.text.Layout$Alignment[] values()
    {
        android.text.Layout$Alignment[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.text.Layout$Alignment: android.text.Layout$Alignment[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.text.Layout$Alignment[]) $r1;

        return $r2;
    }

    public static android.text.Layout$Alignment valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.text.Layout$Alignment $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "android/text/Layout$Alignment", r0);

        $r2 = (android.text.Layout$Alignment) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        android.text.Layout$Alignment r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.text.Layout$Alignment;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        android.text.Layout$Alignment $r0, $r1, $r2, $r4, $r5, $r6;
        android.text.Layout$Alignment[] $r3;

        $r0 = new android.text.Layout$Alignment;

        specialinvoke $r0.<android.text.Layout$Alignment: void <init>(java.lang.String,int)>("ALIGN_CENTER", 0);

        <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER> = $r0;

        $r1 = new android.text.Layout$Alignment;

        specialinvoke $r1.<android.text.Layout$Alignment: void <init>(java.lang.String,int)>("ALIGN_NORMAL", 1);

        <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL> = $r1;

        $r2 = new android.text.Layout$Alignment;

        specialinvoke $r2.<android.text.Layout$Alignment: void <init>(java.lang.String,int)>("ALIGN_OPPOSITE", 2);

        <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE> = $r2;

        $r3 = newarray (android.text.Layout$Alignment)[3];

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        $r3[0] = $r4;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        $r3[1] = $r5;

        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        $r3[2] = $r6;

        <android.text.Layout$Alignment: android.text.Layout$Alignment[] $VALUES> = $r3;

        return;
    }
}
