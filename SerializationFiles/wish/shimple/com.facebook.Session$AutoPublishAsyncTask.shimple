class com.facebook.Session$AutoPublishAsyncTask extends android.os.AsyncTask
{
    private final android.content.Context mApplicationContext;
    private final java.lang.String mApplicationId;
    final com.facebook.Session this$0;

    public void <init>(com.facebook.Session, java.lang.String, android.content.Context)
    {
        com.facebook.Session$AutoPublishAsyncTask $r0;
        com.facebook.Session $r1;
        java.lang.String $r2;
        android.content.Context $r3, $r3_1;

        $r0 := @this: com.facebook.Session$AutoPublishAsyncTask;

        $r1 := @parameter0: com.facebook.Session;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        $r0.<com.facebook.Session$AutoPublishAsyncTask: com.facebook.Session this$0> = $r1;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        $r0.<com.facebook.Session$AutoPublishAsyncTask: java.lang.String mApplicationId> = $r2;

        $r3_1 = virtualinvoke $r3.<android.content.Context: android.content.Context getApplicationContext()>();

        $r0.<com.facebook.Session$AutoPublishAsyncTask: android.content.Context mApplicationContext> = $r3_1;

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.facebook.Session$AutoPublishAsyncTask $r0;
        java.lang.Object[] $r1;
        java.lang.Void $r2;
        java.lang.Void[] $r3;

        $r0 := @this: com.facebook.Session$AutoPublishAsyncTask;

        $r1 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r1;

        $r2 = virtualinvoke $r0.<com.facebook.Session$AutoPublishAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>($r3);

        return $r2;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.facebook.Session$AutoPublishAsyncTask $r0;
        java.lang.Void[] $r1;
        android.content.Context $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;

        $r0 := @this: com.facebook.Session$AutoPublishAsyncTask;

        $r1 := @parameter0: java.lang.Void[];

     label1:
        $r2 = $r0.<com.facebook.Session$AutoPublishAsyncTask: android.content.Context mApplicationContext>;

        $r3 = $r0.<com.facebook.Session$AutoPublishAsyncTask: java.lang.String mApplicationId>;

        staticinvoke <com.facebook.Settings: com.facebook.Response publishInstallAndWaitForResponse(android.content.Context,java.lang.String,boolean)>($r2, $r3, 1);

     label2:
        return null;

     label3:
        $r4 := @caughtexception;

        staticinvoke <com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)>("Facebook-publish", $r4);

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.facebook.Session$AutoPublishAsyncTask $r0;
        java.lang.Object $r1;
        java.lang.Void $r2;

        $r0 := @this: com.facebook.Session$AutoPublishAsyncTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) $r1;

        virtualinvoke $r0.<com.facebook.Session$AutoPublishAsyncTask: void onPostExecute(java.lang.Void)>($r2);

        return;
    }

    protected void onPostExecute(java.lang.Void)
    {
        com.facebook.Session$AutoPublishAsyncTask $r0;
        java.lang.Void $r1;
        com.facebook.Session $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: com.facebook.Session$AutoPublishAsyncTask;

        $r1 := @parameter0: java.lang.Void;

        $r2 = $r0.<com.facebook.Session$AutoPublishAsyncTask: com.facebook.Session this$0>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.facebook.Session$AutoPublishAsyncTask: com.facebook.Session this$0>;

        staticinvoke <com.facebook.Session: com.facebook.Session$AutoPublishAsyncTask access$1802(com.facebook.Session,com.facebook.Session$AutoPublishAsyncTask)>($r3, null);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
