public class android.support.v4.media.session.ParcelableVolumeInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public int audioStream;
    public int controlType;
    public int currentVolume;
    public int maxVolume;
    public int volumeType;

    static void <clinit>()
    {
        android.support.v4.media.session.ParcelableVolumeInfo$1 $r0;

        $r0 = new android.support.v4.media.session.ParcelableVolumeInfo$1;

        specialinvoke $r0.<android.support.v4.media.session.ParcelableVolumeInfo$1: void <init>()>();

        <android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, int, int, int, int)
    {
        android.support.v4.media.session.ParcelableVolumeInfo $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.support.v4.media.session.ParcelableVolumeInfo;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int volumeType> = $i0;

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int audioStream> = $i1;

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int controlType> = $i2;

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int maxVolume> = $i3;

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int currentVolume> = $i4;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.support.v4.media.session.ParcelableVolumeInfo $r0;
        android.os.Parcel $r1;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4;

        $r0 := @this: android.support.v4.media.session.ParcelableVolumeInfo;

        $r1 := @parameter0: android.os.Parcel;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int volumeType> = $i0;

        $i0_1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int controlType> = $i0_1;

        $i0_2 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int maxVolume> = $i0_2;

        $i0_3 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int currentVolume> = $i0_3;

        $i0_4 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int audioStream> = $i0_4;

        return;
    }

    public int describeContents()
    {
        android.support.v4.media.session.ParcelableVolumeInfo $r0;

        $r0 := @this: android.support.v4.media.session.ParcelableVolumeInfo;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.support.v4.media.session.ParcelableVolumeInfo $r0;
        android.os.Parcel $r1;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;

        $r0 := @this: android.support.v4.media.session.ParcelableVolumeInfo;

        $r1 := @parameter0: android.os.Parcel;

        $i0 := @parameter1: int;

        $i0_1 = $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int volumeType>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0_1);

        $i0_2 = $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int controlType>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0_2);

        $i0_3 = $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int maxVolume>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0_3);

        $i0_4 = $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int currentVolume>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0_4);

        $i0_5 = $r0.<android.support.v4.media.session.ParcelableVolumeInfo: int audioStream>;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0_5);

        return;
    }
}
