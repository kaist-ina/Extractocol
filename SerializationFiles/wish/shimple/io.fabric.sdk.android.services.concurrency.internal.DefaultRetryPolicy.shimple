public class io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy extends java.lang.Object implements io.fabric.sdk.android.services.concurrency.internal.RetryPolicy
{
    private final int maxRetries;

    public void <init>()
    {
        io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy $r0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy;

        specialinvoke $r0.<io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy: void <init>(int)>(1);

        return;
    }

    public void <init>(int)
    {
        io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy: int maxRetries> = $i0;

        return;
    }

    public boolean shouldRetry(int, java.lang.Throwable)
    {
        io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy $r0;
        int $i0, $i1;
        java.lang.Throwable $r1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Throwable;

        $i1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.DefaultRetryPolicy: int maxRetries>;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
