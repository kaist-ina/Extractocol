public class ch.boye.httpclientandroidlib.protocol.UriPatternMatcher extends java.lang.Object
{
    private final java.util.Map map;

    public void <init>()
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.util.HashMap $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map> = $r1;

        return;
    }

    public java.util.Map getObjects()
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.lang.Throwable $r1;
        java.util.Map r2;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        entermonitor $r0;

     label1:
        r2 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object lookup(java.lang.String)
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Throwable $r2;
        java.lang.String $r3, $r7, $r10, $r3_1, $r3_2, $r3_3, $r7_1, $r7_2, $r7_3, $r7_4;
        int $i0, $i1, $i0_1, $i1_1, $i0_2, $i0_3, $i1_2, $i0_4, $i1_3, $i1_4, $i0_5, $i1_5, $i0_6;
        java.util.Map $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        java.lang.Object $r5, $r6, $r5_1, $r6_1, $r5_2, $r6_2, $r5_3, $r6_3, $r5_4, $r6_4;
        java.util.Set $r8;
        java.util.Iterator $r9;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        $r3 := @parameter0: java.lang.String;

        entermonitor $r0;

(0)     if $r3 != null goto label3;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request URI may not be null");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        $z0 = Phi($z0 #0, $z0_2 #11, $z0_3 #14, $z0_4 #23, $z0_5 #25);

        $r4 = Phi($r4 #0, $r4_1 #4, $r4_2 #9, $r4_3 #11, $r4_4 #25);

        $r7 = Phi($r7 #0, $r7_1 #8, $r7_3 #27, $r7_2 #11);

        $r5 = Phi($r5 #0, $r5_1 #5, $r5_2 #11, $r5_3 #13);

        $i1 = Phi($i1 #0, $i1_1 #11, $i1_2 #18, $i1_3 #21, $i1_4 #25);

        $i0 = Phi($i0 #0, $i0_1 #1, $i0_2 #11, $i0_3 #17, $i0_4 #20, $i0_5 #25);

        $r6 = Phi($r6 #0, $r6_1 #6, $r6_2 #11, $r6_3 #26);

        $r3_1 = Phi($r3 #0, $r3_2 #3, $r3_3 #4);

        exitmonitor $r0;

        throw $r2;

     label3:
(1)     $i0_1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("?");

(2)     if $i0_1 == -1 goto label4;

(3)     $r3_2 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0_1);

     label4:
        $r3_3 = Phi($r3 #2, $r3_2 #3);

(4)     $r4_1 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

(5)     $r5_1 = interfaceinvoke $r4_1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3_3);

(6)     $r6_1 = $r5_1;

(7)     if $r5_1 != null goto label8;

(8)     $r7_1 = null;

(9)     $r4_2 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

        $r8 = interfaceinvoke $r4_2.<java.util.Map: java.util.Set keySet()>();

(10)    $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0_1 = Phi($z0 #10, $z0_3 #15, $z0_3 #22, $z0_4 #24, $z0_5 #27);

        $r4_3 = Phi($r4_2 #10, $r4_3 #15, $r4_3 #22, $r4_3 #24, $r4_4 #27);

        $r7_2 = Phi($r7_1 #10, $r7_2 #15, $r7_2 #22, $r7_2 #24, $r7_3 #27);

        $r5_2 = Phi($r5_1 #10, $r5_3 #15, $r5_3 #22, $r5_3 #24, $r5_3 #27);

        $i1_1 = Phi($i1 #10, $i1_1 #15, $i1_3 #22, $i1_3 #24, $i1_4 #27);

        $i0_2 = Phi($i0_1 #10, $i0_2 #15, $i0_4 #22, $i0_4 #24, $i0_5 #27);

        $r6_2 = Phi($r6_1 #10, $r6_2 #15, $r6_2 #22, $r6_2 #24, $r6_3 #27);

(11)    $z0_2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

(12)    if $z0_2 == 0 goto label8;

(13)    $r5_3 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r5_3;

(14)    $z0_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: boolean matchUriRequestPattern(java.lang.String,java.lang.String)>($r10, $r3_3);

(15)    if $z0_3 == 0 goto label5;

(16)    if $r7_2 == null goto label6;

(17)    $i0_3 = virtualinvoke $r7_2.<java.lang.String: int length()>();

(18)    $i1_2 = virtualinvoke $r10.<java.lang.String: int length()>();

(19)    if $i0_3 < $i1_2 goto label6;

(20)    $i0_4 = virtualinvoke $r7_2.<java.lang.String: int length()>();

(21)    $i1_3 = virtualinvoke $r10.<java.lang.String: int length()>();

(22)    if $i0_4 != $i1_3 goto label5;

(23)    $z0_4 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("*");

(24)    if $z0_4 == 0 goto label5;

     label6:
        $z0_5 = Phi($z0_3 #16, $z0_3 #19, $z0_4 #24);

        $i1_4 = Phi($i1_1 #16, $i1_2 #19, $i1_3 #24);

        $i0_5 = Phi($i0_2 #16, $i0_3 #19, $i0_4 #24);

(25)    $r4_4 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

(26)    $r6_3 = interfaceinvoke $r4_4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

     label7:
        $r7_3 = $r10;

(27)    goto label5;

     label8:
        $z0_6 = Phi($z0 #7, $z0_2 #12);

        $r4_5 = Phi($r4_1 #7, $r4_3 #12);

        $r7_4 = Phi($r7 #7, $r7_2 #12);

        $r5_4 = Phi($r5_1 #7, $r5_2 #12);

        $i1_5 = Phi($i1 #7, $i1_1 #12);

        $i0_6 = Phi($i0_1 #7, $i0_2 #12);

        $r6_4 = Phi($r6_1 #7, $r6_2 #12);

        exitmonitor $r0;

        return $r6_4;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label7 with label2;
    }

    protected boolean matchUriRequestPattern(java.lang.String, java.lang.String)
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.lang.String $r1, $r2, $r3, $r2_1, $r2_2, $r2_3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0_1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("*");

(0)     if $z0_1 == 0 goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0_1 = $i0 + -1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0_1);

        $z0_2 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

(1)     if $z0_2 != 0 goto label3;

     label2:
        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $z0_3 = Phi($z0_1 #0, $z0_2 #1);

        $z0_4 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("*");

(2)     if $z0_4 == 0 goto label4;

        $i0_3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r2_1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i0_3);

        $z0_5 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r2_1);

(3)     if $z0_5 == 0 goto label4;

     label3:
        $i0_5 = Phi($i0_1 #1, $i0_3 #3);

        $r2_3 = Phi($r2 #1, $r2_1 #3);

        $z0_7 = Phi($z0_2 #1, $z0_5 #3);

        return 1;

     label4:
        $i0_4 = Phi($i0_2 #2, $i0_3 #3);

        $r2_2 = Phi($r2 #2, $r2_1 #3);

        $z0_6 = Phi($z0_4 #2, $z0_5 #3);

        return 0;
    }

    public void register(java.lang.String, java.lang.Object)
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Throwable $r4;
        java.util.Map $r5;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        entermonitor $r0;

        if $r1 != null goto label3;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI request pattern may not be null");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

     label3:
        $r5 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label4:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void setHandlers(java.util.Map)
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.util.Map $r1, $r4, $r4_1, $r4_2;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        $r1 := @parameter0: java.util.Map;

        entermonitor $r0;

(0)     if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Map of handlers may not be null");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        $r4 = Phi($r4 #0, $r4_1 #1, $r4_2 #2);

        exitmonitor $r0;

        throw $r3;

     label3:
(1)     $r4_1 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

        interfaceinvoke $r4_1.<java.util.Map: void clear()>();

(2)     $r4_2 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

        interfaceinvoke $r4_2.<java.util.Map: void putAll(java.util.Map)>($r1);

     label4:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void setObjects(java.util.Map)
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.util.Map $r1, $r4, $r4_1, $r4_2;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        $r1 := @parameter0: java.util.Map;

        entermonitor $r0;

(0)     if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Map of handlers may not be null");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        $r4 = Phi($r4 #0, $r4_1 #1, $r4_2 #2);

        exitmonitor $r0;

        throw $r3;

     label3:
(1)     $r4_1 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

        interfaceinvoke $r4_1.<java.util.Map: void clear()>();

(2)     $r4_2 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

        interfaceinvoke $r4_2.<java.util.Map: void putAll(java.util.Map)>($r1);

     label4:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void unregister(java.lang.String)
    {
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Throwable $r3;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

        if $r1 != null goto label2;

     label1:
        exitmonitor $r0;

        return;

     label2:
        $r2 = $r0.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map map>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label3:
        goto label1;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
