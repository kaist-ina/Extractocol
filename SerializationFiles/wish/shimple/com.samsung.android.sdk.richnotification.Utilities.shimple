final class com.samsung.android.sdk.richnotification.Utilities extends java.lang.Object
{
    private static int[] $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat;
    private static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DB_KEY_EXPIRY_TIME;
    public static final java.lang.String DB_KEY_HASH;
    public static final java.lang.String DB_KEY_IMAGE;
    public static final java.lang.String DB_KEY_IMAGE_NAME;
    public static final java.lang.String DB_KEY_IMAGE_TYPE;
    public static final java.lang.String DB_KEY_PACKAGE_NAME;
    private static final android.net.Uri IMAGE_CONTENT_URI;
    public static final java.lang.String IMAGE_TYPE_JPEG;
    public static final java.lang.String IMAGE_TYPE_PNG;
    private static final android.net.Uri STATIC_IMAGE_CONTENT_URI;
    public static final java.lang.String STATIC_QUERY_PARAMETER_KEY;
    private static final java.lang.String TAG;

    static int[] $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat()
    {
        java.lang.NoSuchFieldError $r0, $r1, $r2;
        int[] $r3, $r3_1;
        android.graphics.Bitmap$CompressFormat[] $r4;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9;
        android.graphics.Bitmap$CompressFormat $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8;

        $r3 = <com.samsung.android.sdk.richnotification.Utilities: int[] $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat>;

        if $r3 == null goto label01;

        return $r3;

     label01:
        $r4 = staticinvoke <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat[] values()>();

        $i0 = lengthof $r4;

(0)     $r3_1 = newarray (int)[$i0];

     label02:
        $r5 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

(1)     $i0_1 = virtualinvoke $r5.<android.graphics.Bitmap$CompressFormat: int ordinal()>();

     label03:
(2)     $r3_1[$i0_1] = 1;

     label04:
        $i0_2 = Phi($i0_1 #2, $i0_9 #11);

        $r5_1 = Phi($r5 #2, $r5_8 #11);

(3)     $r5_2 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

(4)     $i0_3 = virtualinvoke $r5_2.<android.graphics.Bitmap$CompressFormat: int ordinal()>();

     label05:
(5)     $r3_1[$i0_3] = 2;

     label06:
        $i0_4 = Phi($i0_3 #5, $i0_8 #10);

        $r5_3 = Phi($r5_2 #5, $r5_7 #10);

(6)     $r5_4 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat WEBP>;

(7)     $i0_5 = virtualinvoke $r5_4.<android.graphics.Bitmap$CompressFormat: int ordinal()>();

     label07:
(8)     $r3_1[$i0_5] = 3;

     label08:
        $i0_6 = Phi($i0_5 #8, $i0_7 #9);

        $r5_5 = Phi($r5_4 #8, $r5_6 #9);

        <com.samsung.android.sdk.richnotification.Utilities: int[] $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat> = $r3_1;

        return $r3_1;

     label09:
        $r0 := @caughtexception;

        $i0_7 = Phi($i0_3 #5, $i0_8 #10, $i0_4 #6, $i0_5 #7);

        $r5_6 = Phi($r5_2 #5, $r5_7 #10, $r5_4 #6);

(9)     goto label08;

     label10:
        $r1 := @caughtexception;

        $i0_8 = Phi($i0_1 #2, $i0_9 #11, $i0_2 #3, $i0_3 #4);

        $r5_7 = Phi($r5 #2, $r5_8 #11, $r5_2 #3);

(10)    goto label06;

     label11:
        $r2 := @caughtexception;

        $i0_9 = Phi($i0 #0, $i0_1 #1);

        $r5_8 = Phi($r5 #0);

(11)    goto label04;

        catch java.lang.NoSuchFieldError from label02 to label03 with label11;
        catch java.lang.NoSuchFieldError from label04 to label05 with label10;
        catch java.lang.NoSuchFieldError from label06 to label07 with label09;
    }

    static void <clinit>()
    {
        android.net.Uri $r0, $r0_1, $r0_2, $r0_3, $r0_4;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.samsung.accessory.goproviders.sanotificationservice.rich_notification");

        <com.samsung.android.sdk.richnotification.Utilities: android.net.Uri CONTENT_URI> = $r0;

        $r0_1 = <com.samsung.android.sdk.richnotification.Utilities: android.net.Uri CONTENT_URI>;

        $r0_2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r0_1, "image");

        <com.samsung.android.sdk.richnotification.Utilities: android.net.Uri IMAGE_CONTENT_URI> = $r0_2;

        $r0_3 = <com.samsung.android.sdk.richnotification.Utilities: android.net.Uri CONTENT_URI>;

        $r0_4 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r0_3, "static_image");

        <com.samsung.android.sdk.richnotification.Utilities: android.net.Uri STATIC_IMAGE_CONTENT_URI> = $r0_4;

        return;
    }

    private void <init>()
    {
        com.samsung.android.sdk.richnotification.Utilities $r0;

        $r0 := @this: com.samsung.android.sdk.richnotification.Utilities;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static byte[] convertResizedBinary(android.graphics.Bitmap, android.graphics.Bitmap$CompressFormat)
    {
        android.graphics.Bitmap $r0, $r6, $r6_1, $r6_2;
        android.graphics.Bitmap$CompressFormat $r1;
        java.io.ByteArrayOutputStream $r2;
        java.lang.Throwable $r3;
        java.io.IOException $r4, $r5;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i1_1, $i1_2, $i0_7;
        float $f0, $f1, $f0_1, $f1_1, $f0_2, $f1_2, $f1_3, $f1_4, $f0_3, $f1_5, $f0_4;
        byte[] $r7;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r1 := @parameter1: android.graphics.Bitmap$CompressFormat;

        $r6 = $r0;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

(0)     if $i0 > 360 goto label01;

        $i0_1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

(1)     if $i0_1 <= 480 goto label02;

     label01:
        $i0_2 = Phi($i0 #0, $i0_1 #1);

        $i0_3 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i0_3;

        $f0_1 = 360.0F / $f0;

        $i0_4 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i0_4;

        $f1_1 = 480.0F / $f1;

        $f0_2 = staticinvoke <java.lang.Math: float min(float,float)>($f0_1, $f1_1);

        $i0_5 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $f1_2 = (float) $i0_5;

        $f1_3 = $f1_2 * $f0_2;

        $i0_6 = (int) $f1_3;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $f1_4 = (float) $i1;

        $f0_3 = $f1_4 * $f0_2;

        $i1_1 = (int) $f0_3;

(2)     $r6_1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i0_6, $i1_1, 0);

     label02:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

        $i0_7 = Phi($i0_1 #1, $i0_6 #2);

        $r6_2 = Phi($r6 #1, $r6_1 #2);

        $f1_5 = Phi($f1 #1, $f1_4 #2);

        $f0_4 = Phi($f0 #1, $f0_3 #2);

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label03:
        virtualinvoke $r6_2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r1, 90, $r2);

        $r7 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label04:
        if $r6_2 == $r0 goto label05;

        virtualinvoke $r6_2.<android.graphics.Bitmap: void recycle()>();

     label05:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label06:
        return $r7;

     label07:
        $r3 := @caughtexception;

        if $r6_2 == $r0 goto label08;

        virtualinvoke $r6_2.<android.graphics.Bitmap: void recycle()>();

     label08:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label09:
        throw $r3;

     label10:
        $r4 := @caughtexception;

        return $r7;

     label11:
        $r5 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label11;
    }

    public static android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Canvas $r2;
        android.graphics.drawable.BitmapDrawable $r3;
        android.graphics.Bitmap $r4, $r4_1, $r4_2;
        int $i0, $i1, $i0_1, $i1_1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = $r0 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label1;

        $r3 = (android.graphics.drawable.BitmapDrawable) $r0;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $r4_1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>($r4);

        return $r4_1;

     label1:
        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4_2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        $r2 = new android.graphics.Canvas;

        specialinvoke $r2.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r4_2);

        $i0_1 = virtualinvoke $r2.<android.graphics.Canvas: int getWidth()>();

        $i1_1 = virtualinvoke $r2.<android.graphics.Canvas: int getHeight()>();

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0_1, $i1_1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r2);

        return $r4_2;
    }

    public static java.lang.String makeHash(byte[])
    {
        java.math.BigInteger $r0;
        java.security.NoSuchAlgorithmException $r1;
        java.lang.UnsupportedOperationException $r2;
        byte[] $r3, $r3_1, $r3_2;
        java.security.MessageDigest $r4;
        java.lang.String $r5;

(0)     $r3 := @parameter0: byte[];

     label1:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r3);

     label2:
        $r0 = new java.math.BigInteger;

     label3:
(1)     $r3_1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r0.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3_1);

        $r5 = virtualinvoke $r0.<java.math.BigInteger: java.lang.String toString(int)>(16);

     label4:
        return $r5;

     label5:
        $r1 := @caughtexception;

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }

    public static android.net.Uri toUri(android.content.Context, java.lang.String, android.graphics.Bitmap, android.graphics.Bitmap$CompressFormat, boolean)
    {
        android.content.Context $r0;
        android.graphics.Bitmap $r1;
        android.graphics.Bitmap$CompressFormat $r2;
        boolean $z0;
        android.content.ContentValues $r3;
        java.lang.String $r4, $r4_1, $r4_2, $r4_3;
        byte[] $r5;
        android.net.Uri $r6, $r6_1, $r6_2, $r6_3;
        int[] $r7;
        int $i0, $i0_1;
        android.content.ContentResolver $r8;

        $r0 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.lang.String;

        $r1 := @parameter2: android.graphics.Bitmap;

        $r2 := @parameter3: android.graphics.Bitmap$CompressFormat;

        $z0 := @parameter4: boolean;

        $r5 = staticinvoke <com.samsung.android.sdk.richnotification.Utilities: byte[] convertResizedBinary(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat)>($r1, $r2);

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        if $z0 == 0 goto label5;

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r4);

(0)     $r6 = <com.samsung.android.sdk.richnotification.Utilities: android.net.Uri STATIC_IMAGE_CONTENT_URI>;

     label1:
        $r6_1 = Phi($r6 #0, $r6_3 #1);

        $r4_1 = Phi($r4 #0, $r4_3 #1);

        $r4_2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("package_name", $r4_2);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,byte[])>("image", $r5);

        $r7 = staticinvoke <com.samsung.android.sdk.richnotification.Utilities: int[] $SWITCH_TABLE$android$graphics$Bitmap$CompressFormat()>();

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap$CompressFormat: int ordinal()>();

        $i0_1 = $r7[$i0];

        lookupswitch($i0_1)
        {
            case 1: goto label6;
            default: goto label2;
        };

     label2:
        goto label3;

     label3:
        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("image_type", "png");

     label4:
        $r8 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6_2 = virtualinvoke $r8.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r6_1, $r3);

        return $r6_2;

     label5:
        $r4_3 = staticinvoke <com.samsung.android.sdk.richnotification.Utilities: java.lang.String makeHash(byte[])>($r5);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("hash", $r4_3);

        $r6_3 = <com.samsung.android.sdk.richnotification.Utilities: android.net.Uri IMAGE_CONTENT_URI>;

(1)     goto label1;

     label6:
        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("image_type", "jpg");

        goto label4;
    }
}
