public abstract class com.seppius.i18n.plurals.PluralRules extends java.lang.Object
{
    static final int ID_OTHER;
    static final int ID_ZERO;
    static final int QUANTITY_FEW;
    static final int QUANTITY_MANY;
    static final int QUANTITY_ONE;
    static final int QUANTITY_OTHER;
    static final int QUANTITY_TWO;
    static final int QUANTITY_ZERO;
    private static java.util.Map allRules;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        com.seppius.i18n.plurals.PluralRules_One $r1;
        com.seppius.i18n.plurals.PluralRules_Czech $r2;
        com.seppius.i18n.plurals.PluralRules_French $r3;
        com.seppius.i18n.plurals.PluralRules_Balkan $r4;
        com.seppius.i18n.plurals.PluralRules_Latvian $r5;
        com.seppius.i18n.plurals.PluralRules_Lithuanian $r6;
        com.seppius.i18n.plurals.PluralRules_Polish $r7;
        com.seppius.i18n.plurals.PluralRules_Romanian $r8;
        com.seppius.i18n.plurals.PluralRules_Slovenian $r9;
        com.seppius.i18n.plurals.PluralRules_Arabic $r10;
        com.seppius.i18n.plurals.PluralRules_Macedonian $r11;
        com.seppius.i18n.plurals.PluralRules_Welsh $r12;
        com.seppius.i18n.plurals.PluralRules_Breton $r13;
        com.seppius.i18n.plurals.PluralRules_Langi $r14;
        com.seppius.i18n.plurals.PluralRules_Tachelhit $r15;
        com.seppius.i18n.plurals.PluralRules_Maltese $r16;
        com.seppius.i18n.plurals.PluralRules_Two $r17;
        com.seppius.i18n.plurals.PluralRules_Zero $r18;
        com.seppius.i18n.plurals.PluralRules_None $r19;
        java.lang.String[] $r20, $r20_1, $r20_2, $r20_3, $r20_4, $r20_5, $r20_6, $r20_7, $r20_8, $r20_9, $r20_10, $r20_11, $r20_12, $r20_13, $r20_14, $r20_15, $r20_16, $r20_17, $r20_18;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.seppius.i18n.plurals.PluralRules: java.util.Map allRules> = $r0;

        $r20 = newarray (java.lang.String)[54];

        $r20[0] = "bem";

        $r20[1] = "brx";

        $r20[2] = "da";

        $r20[3] = "de";

        $r20[4] = "el";

        $r20[5] = "en";

        $r20[6] = "eo";

        $r20[7] = "es";

        $r20[8] = "et";

        $r20[9] = "fi";

        $r20[10] = "fo";

        $r20[11] = "gl";

        $r20[12] = "he";

        $r20[13] = "iw";

        $r20[14] = "it";

        $r20[15] = "nb";

        $r20[16] = "nl";

        $r20[17] = "nn";

        $r20[18] = "no";

        $r20[19] = "sv";

        $r20[20] = "af";

        $r20[21] = "bg";

        $r20[22] = "bn";

        $r20[23] = "ca";

        $r20[24] = "eu";

        $r20[25] = "fur";

        $r20[26] = "fy";

        $r20[27] = "gu";

        $r20[28] = "ha";

        $r20[29] = "is";

        $r20[30] = "ku";

        $r20[31] = "lb";

        $r20[32] = "ml";

        $r20[33] = "mr";

        $r20[34] = "nah";

        $r20[35] = "ne";

        $r20[36] = "om";

        $r20[37] = "or";

        $r20[38] = "pa";

        $r20[39] = "pap";

        $r20[40] = "ps";

        $r20[41] = "so";

        $r20[42] = "sq";

        $r20[43] = "sw";

        $r20[44] = "ta";

        $r20[45] = "te";

        $r20[46] = "tk";

        $r20[47] = "ur";

        $r20[48] = "zu";

        $r20[49] = "mn";

        $r20[50] = "gsw";

        $r20[51] = "chr";

        $r20[52] = "rm";

        $r20[53] = "pt";

        $r1 = new com.seppius.i18n.plurals.PluralRules_One;

        specialinvoke $r1.<com.seppius.i18n.plurals.PluralRules_One: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20, $r1);

        $r20_1 = newarray (java.lang.String)[2];

        $r20_1[0] = "cs";

        $r20_1[1] = "sk";

        $r2 = new com.seppius.i18n.plurals.PluralRules_Czech;

        specialinvoke $r2.<com.seppius.i18n.plurals.PluralRules_Czech: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_1, $r2);

        $r20_2 = newarray (java.lang.String)[3];

        $r20_2[0] = "ff";

        $r20_2[1] = "fr";

        $r20_2[2] = "kab";

        $r3 = new com.seppius.i18n.plurals.PluralRules_French;

        specialinvoke $r3.<com.seppius.i18n.plurals.PluralRules_French: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_2, $r3);

        $r20_3 = newarray (java.lang.String)[7];

        $r20_3[0] = "hr";

        $r20_3[1] = "ru";

        $r20_3[2] = "sr";

        $r20_3[3] = "uk";

        $r20_3[4] = "be";

        $r20_3[5] = "bs";

        $r20_3[6] = "sh";

        $r4 = new com.seppius.i18n.plurals.PluralRules_Balkan;

        specialinvoke $r4.<com.seppius.i18n.plurals.PluralRules_Balkan: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_3, $r4);

        $r20_4 = newarray (java.lang.String)[1];

        $r20_4[0] = "lv";

        $r5 = new com.seppius.i18n.plurals.PluralRules_Latvian;

        specialinvoke $r5.<com.seppius.i18n.plurals.PluralRules_Latvian: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_4, $r5);

        $r20_5 = newarray (java.lang.String)[1];

        $r20_5[0] = "lt";

        $r6 = new com.seppius.i18n.plurals.PluralRules_Lithuanian;

        specialinvoke $r6.<com.seppius.i18n.plurals.PluralRules_Lithuanian: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_5, $r6);

        $r20_6 = newarray (java.lang.String)[1];

        $r20_6[0] = "pl";

        $r7 = new com.seppius.i18n.plurals.PluralRules_Polish;

        specialinvoke $r7.<com.seppius.i18n.plurals.PluralRules_Polish: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_6, $r7);

        $r20_7 = newarray (java.lang.String)[2];

        $r20_7[0] = "ro";

        $r20_7[1] = "mo";

        $r8 = new com.seppius.i18n.plurals.PluralRules_Romanian;

        specialinvoke $r8.<com.seppius.i18n.plurals.PluralRules_Romanian: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_7, $r8);

        $r20_8 = newarray (java.lang.String)[1];

        $r20_8[0] = "sl";

        $r9 = new com.seppius.i18n.plurals.PluralRules_Slovenian;

        specialinvoke $r9.<com.seppius.i18n.plurals.PluralRules_Slovenian: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_8, $r9);

        $r20_9 = newarray (java.lang.String)[1];

        $r20_9[0] = "ar";

        $r10 = new com.seppius.i18n.plurals.PluralRules_Arabic;

        specialinvoke $r10.<com.seppius.i18n.plurals.PluralRules_Arabic: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_9, $r10);

        $r20_10 = newarray (java.lang.String)[1];

        $r20_10[0] = "mk";

        $r11 = new com.seppius.i18n.plurals.PluralRules_Macedonian;

        specialinvoke $r11.<com.seppius.i18n.plurals.PluralRules_Macedonian: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_10, $r11);

        $r20_11 = newarray (java.lang.String)[1];

        $r20_11[0] = "cy";

        $r12 = new com.seppius.i18n.plurals.PluralRules_Welsh;

        specialinvoke $r12.<com.seppius.i18n.plurals.PluralRules_Welsh: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_11, $r12);

        $r20_12 = newarray (java.lang.String)[1];

        $r20_12[0] = "br";

        $r13 = new com.seppius.i18n.plurals.PluralRules_Breton;

        specialinvoke $r13.<com.seppius.i18n.plurals.PluralRules_Breton: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_12, $r13);

        $r20_13 = newarray (java.lang.String)[1];

        $r20_13[0] = "lag";

        $r14 = new com.seppius.i18n.plurals.PluralRules_Langi;

        specialinvoke $r14.<com.seppius.i18n.plurals.PluralRules_Langi: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_13, $r14);

        $r20_14 = newarray (java.lang.String)[1];

        $r20_14[0] = "shi";

        $r15 = new com.seppius.i18n.plurals.PluralRules_Tachelhit;

        specialinvoke $r15.<com.seppius.i18n.plurals.PluralRules_Tachelhit: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_14, $r15);

        $r20_15 = newarray (java.lang.String)[1];

        $r20_15[0] = "mt";

        $r16 = new com.seppius.i18n.plurals.PluralRules_Maltese;

        specialinvoke $r16.<com.seppius.i18n.plurals.PluralRules_Maltese: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_15, $r16);

        $r20_16 = newarray (java.lang.String)[7];

        $r20_16[0] = "ga";

        $r20_16[1] = "se";

        $r20_16[2] = "sma";

        $r20_16[3] = "smi";

        $r20_16[4] = "smj";

        $r20_16[5] = "smn";

        $r20_16[6] = "sms";

        $r17 = new com.seppius.i18n.plurals.PluralRules_Two;

        specialinvoke $r17.<com.seppius.i18n.plurals.PluralRules_Two: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_16, $r17);

        $r20_17 = newarray (java.lang.String)[12];

        $r20_17[0] = "ak";

        $r20_17[1] = "am";

        $r20_17[2] = "bh";

        $r20_17[3] = "fil";

        $r20_17[4] = "tl";

        $r20_17[5] = "guw";

        $r20_17[6] = "hi";

        $r20_17[7] = "ln";

        $r20_17[8] = "mg";

        $r20_17[9] = "nso";

        $r20_17[10] = "ti";

        $r20_17[11] = "wa";

        $r18 = new com.seppius.i18n.plurals.PluralRules_Zero;

        specialinvoke $r18.<com.seppius.i18n.plurals.PluralRules_Zero: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_17, $r18);

        $r20_18 = newarray (java.lang.String)[27];

        $r20_18[0] = "az";

        $r20_18[1] = "bm";

        $r20_18[2] = "fa";

        $r20_18[3] = "ig";

        $r20_18[4] = "hu";

        $r20_18[5] = "ja";

        $r20_18[6] = "kde";

        $r20_18[7] = "kea";

        $r20_18[8] = "ko";

        $r20_18[9] = "my";

        $r20_18[10] = "ses";

        $r20_18[11] = "sg";

        $r20_18[12] = "to";

        $r20_18[13] = "tr";

        $r20_18[14] = "vi";

        $r20_18[15] = "wo";

        $r20_18[16] = "yo";

        $r20_18[17] = "zh";

        $r20_18[18] = "bo";

        $r20_18[19] = "dz";

        $r20_18[20] = "id";

        $r20_18[21] = "jv";

        $r20_18[22] = "ka";

        $r20_18[23] = "km";

        $r20_18[24] = "kn";

        $r20_18[25] = "ms";

        $r20_18[26] = "th";

        $r19 = new com.seppius.i18n.plurals.PluralRules_None;

        specialinvoke $r19.<com.seppius.i18n.plurals.PluralRules_None: void <init>()>();

        staticinvoke <com.seppius.i18n.plurals.PluralRules: void addRules(java.lang.String[],com.seppius.i18n.plurals.PluralRules)>($r20_18, $r19);

        return;
    }

    public void <init>()
    {
        com.seppius.i18n.plurals.PluralRules $r0;

        $r0 := @this: com.seppius.i18n.plurals.PluralRules;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addRules(java.lang.String, com.seppius.i18n.plurals.PluralRules)
    {
        java.lang.String $r0;
        com.seppius.i18n.plurals.PluralRules $r1;
        java.util.Map $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.seppius.i18n.plurals.PluralRules;

        $r2 = <com.seppius.i18n.plurals.PluralRules: java.util.Map allRules>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        return;
    }

    public static void addRules(java.lang.String[], com.seppius.i18n.plurals.PluralRules)
    {
        java.lang.String[] $r0;
        com.seppius.i18n.plurals.PluralRules $r1;
        int $i0, $i1, $i1_1, $i1_2;
        java.lang.String $r2;
        java.util.Map $r3;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: com.seppius.i18n.plurals.PluralRules;

        $i0 = lengthof $r0;

(0)     $i1 = 0;

     label1:
        $i1_1 = Phi($i1 #0, $i1_2 #1);

        if $i1_1 >= $i0 goto label2;

        $r2 = $r0[$i1_1];

        $r3 = <com.seppius.i18n.plurals.PluralRules: java.util.Map allRules>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        $i1_2 = $i1_1 + 1;

(1)     goto label1;

     label2:
        return;
    }

    static final int attrForQuantity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 4: goto label5;
            case 8: goto label6;
            case 16: goto label7;
            default: goto label1;
        };

     label1:
        goto label2;

     label2:
        return 16777220;

     label3:
        return 16777221;

     label4:
        return 16777222;

     label5:
        return 16777223;

     label6:
        return 16777224;

     label7:
        return 16777225;
    }

    static final com.seppius.i18n.plurals.PluralRules ruleForLocale(java.util.Locale)
    {
        java.util.Locale $r0;
        java.util.Map $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        com.seppius.i18n.plurals.PluralRules $r4;

        $r0 := @parameter0: java.util.Locale;

        $r1 = <com.seppius.i18n.plurals.PluralRules: java.util.Map allRules>;

        $r2 = virtualinvoke $r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (com.seppius.i18n.plurals.PluralRules) $r3;

        return $r4;
    }

    static final java.lang.String stringForQuantity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 4: goto label5;
            case 8: goto label6;
            case 16: goto label7;
            default: goto label1;
        };

     label1:
        goto label2;

     label2:
        return "other";

     label3:
        return "zero";

     label4:
        return "one";

     label5:
        return "two";

     label6:
        return "few";

     label7:
        return "many";
    }

    final int attrForNumber(int)
    {
        com.seppius.i18n.plurals.PluralRules $r0;
        int $i0, $i0_1, $i0_2;

        $r0 := @this: com.seppius.i18n.plurals.PluralRules;

        $i0 := @parameter0: int;

        $i0_1 = virtualinvoke $r0.<com.seppius.i18n.plurals.PluralRules: int quantityForNumber(int)>($i0);

        $i0_2 = staticinvoke <com.seppius.i18n.plurals.PluralRules: int attrForQuantity(int)>($i0_1);

        return $i0_2;
    }

    abstract int quantityForNumber(int);
}
