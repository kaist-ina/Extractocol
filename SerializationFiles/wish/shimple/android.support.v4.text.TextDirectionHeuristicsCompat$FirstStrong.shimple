class android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong extends java.lang.Object implements android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
{
    public static final android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE;

    static void <clinit>()
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong $r0;

        $r0 = new android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong;

        specialinvoke $r0.<android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong: void <init>()>();

        <android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong: android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong $r0;

        $r0 := @this: android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int checkRtl(java.lang.CharSequence, int, int)
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3, $i1_1, $i3_1, $i2_1, $i2_2, $i3_2;
        char $c4;
        byte $b5;

        $r0 := @this: android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong;

        $r1 := @parameter0: java.lang.CharSequence;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 = 2;

        $i3 = $i1;

(0)     $i1_1 = $i1 + $i0;

     label1:
        $i3_1 = Phi($i3 #0, $i3_2 #1);

        $i2_1 = Phi($i2 #0, $i2_2 #1);

        if $i3_1 >= $i1_1 goto label2;

        if $i2_1 != 2 goto label2;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3_1);

        $b5 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($c4);

        $i2_2 = staticinvoke <android.support.v4.text.TextDirectionHeuristicsCompat: int access$100(int)>($b5);

        $i3_2 = $i3_1 + 1;

(1)     goto label1;

     label2:
        return $i2_1;
    }
}
