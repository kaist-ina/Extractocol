class ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator extends java.lang.Object
{

    void <init>()
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.lang.String canonicalizePath(java.lang.String)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        java.net.URI $r1;
        java.net.URISyntaxException $r2;
        java.io.UnsupportedEncodingException $r3;
        java.lang.String $r4, $r5, $r4_1, $r4_2, $r4_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

(0)     $r4 := @parameter0: java.lang.String;

     label1:
        $r5 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r4, "UTF-8");

     label2:
        $r1 = new java.net.URI;

     label3:
        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String)>($r5);

(1)     $r4_1 = virtualinvoke $r1.<java.net.URI: java.lang.String getPath()>();

     label4:
        return $r4_1;

     label5:
        $r2 := @caughtexception;

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return $r4_2;

     label6:
        $r3 := @caughtexception;

        $r4_3 = Phi($r4 #0, $r4_1 #1);

        return $r4_3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.net.URISyntaxException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
        catch java.net.URISyntaxException from label3 to label4 with label5;
    }

    private int canonicalizePort(int, java.lang.String)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        int $i0;
        java.lang.String $r1, $r2, $r2_1, $r2_2, $r2_3;
        boolean $z0, $z0_1, $z0_2, $z0_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

(0)     if $i0 != -1 goto label1;

        $r2 = "http";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

(1)     if $z0 == 0 goto label1;

        return 80;

     label1:
        $r2_1 = Phi($r2 #0, $r2 #1);

        $z0_1 = Phi($z0 #0, $z0 #1);

(2)     if $i0 != -1 goto label2;

        $r2_2 = "https";

        $z0_2 = virtualinvoke $r2_2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

(3)     if $z0_2 == 0 goto label2;

        return 443;

     label2:
        $r2_3 = Phi($r2_1 #2, $r2_2 #3);

        $z0_3 = Phi($z0_1 #2, $z0_2 #3);

        return $i0;
    }

    private boolean isRelativeRequest(ch.boye.httpclientandroidlib.HttpRequest)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        java.lang.String $r2, $r4;
        ch.boye.httpclientandroidlib.RequestLine $r3;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r3 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.RequestLine getRequestLine()>();

        $r4 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.RequestLine: java.lang.String getUri()>();

        $r2 = "*";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

(0)     if $z0 != 0 goto label1;

        $z0_1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

(1)     if $z0_1 == 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return 1;

     label2:
        return 0;
    }

    public java.lang.String canonicalizeUri(java.lang.String)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        java.lang.String $r1, $r3, $r5, $r6, $r7, $r8, $r5_1, $r6_1, $r7_1, $r7_2, $r7_3, $r1_1, $r7_4, $r7_5, $r3_1, $r7_6, $r5_2, $r1_2, $r3_2, $r6_2;
        java.net.MalformedURLException $r2;
        java.net.URL $r4, $r4_1, $r4_2;
        int $i0, $i0_1, $i0_2;
        boolean $z0;
        java.lang.StringBuilder $r9, $r9_1, $r9_2, $r9_3, $r9_4, $r9_5;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        $r3 := @parameter0: java.lang.String;

(0)     $r4 = new java.net.URL;

     label01:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getProtocol()>();

(1)     $r5_1 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>();

(2)     $r6_1 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r4.<java.net.URL: int getPort()>();

(3)     $i0_1 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: int canonicalizePort(int,java.lang.String)>($i0, $r5_1);

        $r7 = virtualinvoke $r4.<java.net.URL: java.lang.String getPath()>();

        $r8 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: java.lang.String canonicalizePath(java.lang.String)>($r7);

     label02:
        $r7_1 = $r8;

(4)     $r1 = "";

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label04:
(5)     if $z0 == 0 goto label05;

(6)     $r7_2 = "/";

     label05:
        $r7_3 = Phi($r7_1 #5, $r7_2 #6);

(7)     $r1_1 = virtualinvoke $r4.<java.net.URL: java.lang.String getQuery()>();

     label06:
(8)     if $r1_1 == null goto label08;

        $r9 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

(9)     $r9_1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7_3);

(10)    $r9_2 = virtualinvoke $r9_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

(11)    $r9_3 = virtualinvoke $r9_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1_1);

(12)    $r7_4 = virtualinvoke $r9_3.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r7_5 = Phi($r7_3 #8, $r7_4 #12);

        $r9_4 = Phi($r9 #8, $r9_3 #12);

(13)    $r4_1 = new java.net.URL;

     label09:
        specialinvoke $r4_1.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>($r5_1, $r6_1, $i0_1, $r7_5);

(14)    $r3_1 = virtualinvoke $r4_1.<java.net.URL: java.lang.String toString()>();

     label10:
        return $r3_1;

     label11:
        $r2 := @caughtexception;

        $r7_6 = Phi($r7 #0, $r7_1 #4, $r7_2 #6, $r7_3 #7, $r7_4 #12, $r7_5 #13);

        $r4_2 = Phi($r4 #0, $r4_1 #13);

        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r1_2 = Phi($r1 #0, $r1_1 #7);

        $r3_2 = Phi($r3 #0, $r3_1 #14);

        $r9_5 = Phi($r9 #0, $r9_1 #9, $r9_2 #10, $r9_3 #11, $r9_4 #13);

        $r6_2 = Phi($r6 #0, $r6_1 #2);

        $i0_2 = Phi($i0 #0, $i0_1 #3);

        return $r3_2;

        catch java.net.MalformedURLException from label01 to label02 with label11;
        catch java.net.MalformedURLException from label03 to label04 with label11;
        catch java.net.MalformedURLException from label05 to label06 with label11;
        catch java.net.MalformedURLException from label07 to label08 with label11;
        catch java.net.MalformedURLException from label09 to label10 with label11;
    }

    protected java.lang.String getFullHeaderValue(ch.boye.httpclientandroidlib.Header[])
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        ch.boye.httpclientandroidlib.Header[] $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i1_1, $i1_2;
        ch.boye.httpclientandroidlib.Header $r3;
        boolean $z0, $z0_1, $z0_2;
        java.lang.String $r4, $r4_1, $r4_2, $r4_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.Header[];

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        $z0 = 1;

        $i0 = lengthof $r1;

(0)     $i1 = 0;

     label2:
        $r4 = Phi($r4 #0, $r4_2 #1);

        $z0_1 = Phi($z0 #0, $z0_2 #1);

        $i1_1 = Phi($i1 #0, $i1_2 #1);

        if $i1_1 >= $i0 goto label4;

        $r3 = $r1[$i1_1];

        if $z0_1 != 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $r4_1 = interfaceinvoke $r3.<ch.boye.httpclientandroidlib.Header: java.lang.String getValue()>();

        $r4_2 = virtualinvoke $r4_1.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_2);

        $z0_2 = 0;

        $i1_2 = $i1_1 + 1;

(1)     goto label2;

     label4:
        $r4_3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4_3;
    }

    public java.lang.String getURI(ch.boye.httpclientandroidlib.HttpHost, ch.boye.httpclientandroidlib.HttpRequest)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        ch.boye.httpclientandroidlib.HttpHost $r1;
        ch.boye.httpclientandroidlib.HttpRequest $r2;
        java.lang.Object[] $r3;
        boolean $z0;
        java.lang.String $r4, $r4_1, $r4_2, $r4_3, $r4_4, $r4_5;
        ch.boye.httpclientandroidlib.RequestLine $r5, $r5_1;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpHost;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpRequest;

        $z0 = specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: boolean isRelativeRequest(ch.boye.httpclientandroidlib.HttpRequest)>($r2);

        if $z0 == 0 goto label1;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.HttpHost: java.lang.String toString()>();

        $r3[0] = $r4;

        $r5 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.RequestLine getRequestLine()>();

        $r4_1 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.RequestLine: java.lang.String getUri()>();

        $r3[1] = $r4_1;

        $r4_2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s", $r3);

        $r4_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: java.lang.String canonicalizeUri(java.lang.String)>($r4_2);

        return $r4_3;

     label1:
        $r5_1 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.RequestLine getRequestLine()>();

        $r4_4 = interfaceinvoke $r5_1.<ch.boye.httpclientandroidlib.RequestLine: java.lang.String getUri()>();

        $r4_5 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: java.lang.String canonicalizeUri(java.lang.String)>($r4_4);

        return $r4_5;
    }

    public java.lang.String getVariantKey(ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        ch.boye.httpclientandroidlib.HttpRequest $r1;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r2;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, $i3, $i2_1, $i3_1, $i3_2, $i3_3, $i2_2;
        ch.boye.httpclientandroidlib.Header $r4;
        ch.boye.httpclientandroidlib.HeaderElement $r5;
        java.lang.StringBuilder $r6;
        java.io.UnsupportedEncodingException $r7;
        java.lang.RuntimeException $r8;
        ch.boye.httpclientandroidlib.Header[] $r9, $r9_1, $r9_2, $r9_3;
        ch.boye.httpclientandroidlib.HeaderElement[] $r10;
        java.lang.String $r11, $r15, $r11_1, $r11_2, $r11_3, $r11_4, $r15_1, $r15_2, $r11_5, $r15_3, $r11_6, $r11_7, $r11_8, $r15_4;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        java.nio.charset.Charset $r14, $r14_1, $r14_2, $r14_3;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpRequest;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r9 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>("Vary");

        $i0 = lengthof $r9;

(0)     $i2 = 0;

     label01:
        $r11 = Phi($r11 #0, $r11_1 #3);

        $i2_1 = Phi($i2 #0, $i2_2 #3);

        $i3 = Phi($i3 #0, $i3_2 #3);

        if $i2_1 >= $i0 goto label04;

        $r4 = $r9[$i2_1];

        $r10 = interfaceinvoke $r4.<ch.boye.httpclientandroidlib.Header: ch.boye.httpclientandroidlib.HeaderElement[] getElements()>();

        $i1 = lengthof $r10;

(1)     $i3_1 = 0;

     label02:
        $r11_1 = Phi($r11 #1, $r11_2 #2);

        $i3_2 = Phi($i3_1 #1, $i3_3 #2);

        if $i3_2 >= $i1 goto label03;

        $r5 = $r10[$i3_2];

        $r11_2 = interfaceinvoke $r5.<ch.boye.httpclientandroidlib.HeaderElement: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r11_2);

        $i3_3 = $i3_2 + 1;

(2)     goto label02;

     label03:
        $i2_2 = $i2_1 + 1;

(3)     goto label01;

     label04:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r3);

(4)     $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

     label06:
        $z0 = 1;

     label07:
(5)     $r12 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $r11_3 = Phi($r11 #5, $r11_6 #16);

        $r15 = Phi($r15 #5, $r15_3 #16);

        $z0_1 = Phi($z0 #5, $z0_2 #16);

        $r9_1 = Phi($r9 #5, $r9_2 #16);

        $r14 = Phi($r14 #5, $r14_2 #16);

(6)     $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z1 == 0 goto label18;

     label10:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

     label11:
        $r11_4 = (java.lang.String) $r13;

(7)     if $z0_1 != 0 goto label13;

     label12:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label13:
(8)     $r14_1 = <ch.boye.httpclientandroidlib.Consts: java.nio.charset.Charset UTF_8>;

     label14:
(9)     $r15_1 = virtualinvoke $r14_1.<java.nio.charset.Charset: java.lang.String name()>();

(10)    $r15_2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r11_4, $r15_1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15_2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

(11)    $r9_2 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.HttpRequest: ch.boye.httpclientandroidlib.Header[] getHeaders(java.lang.String)>($r11_4);

(12)    $r11_5 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: java.lang.String getFullHeaderValue(ch.boye.httpclientandroidlib.Header[])>($r9_2);

     label15:
(13)    $r14_2 = <ch.boye.httpclientandroidlib.Consts: java.nio.charset.Charset UTF_8>;

     label16:
(14)    $r15_3 = virtualinvoke $r14_2.<java.nio.charset.Charset: java.lang.String name()>();

(15)    $r11_6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r11_5, $r15_3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11_6);

     label17:
        $z0_2 = 0;

(16)    goto label08;

     label18:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

     label19:
        $r11_7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11_7;

     label20:
        $r7 := @caughtexception;

        $r11_8 = Phi($r11 #4, $r11_3 #6, $r11_4 #7, $r11_5 #12, $r11_6 #15);

        $r15_4 = Phi($r15 #4, $r15_1 #9, $r15_2 #10, $r15_3 #14);

        $z0_3 = Phi($z0 #4, $z0_2 #16, $z0_1 #6);

        $r9_3 = Phi($r9 #4, $r9_1 #6, $r9_2 #11);

        $r14_3 = Phi($r14 #4, $r14_1 #8, $r14_2 #13);

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("couldn\'t encode to UTF-8", $r7);

        throw $r8;

        catch java.io.UnsupportedEncodingException from label05 to label06 with label20;
        catch java.io.UnsupportedEncodingException from label07 to label09 with label20;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label20;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label20;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label20;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label20;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label20;
    }

    public java.lang.String getVariantURI(ch.boye.httpclientandroidlib.HttpHost, ch.boye.httpclientandroidlib.HttpRequest, ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)
    {
        ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator $r0;
        ch.boye.httpclientandroidlib.HttpHost $r1;
        ch.boye.httpclientandroidlib.HttpRequest $r2;
        ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry $r3;
        boolean $z0;
        java.lang.String $r4, $r4_1, $r4_2, $r4_3;
        java.lang.StringBuilder $r5, $r5_1, $r5_2;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.HttpHost;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.HttpRequest;

        $r3 := @parameter2: ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry;

        $z0 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry: boolean hasVariants()>();

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: java.lang.String getURI(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest)>($r1, $r2);

        return $r4;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: java.lang.String getVariantKey(ch.boye.httpclientandroidlib.HttpRequest,ch.boye.httpclientandroidlib.client.cache.HttpCacheEntry)>($r2, $r3);

        $r5_1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_1);

        $r4_2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.impl.client.cache.CacheKeyGenerator: java.lang.String getURI(ch.boye.httpclientandroidlib.HttpHost,ch.boye.httpclientandroidlib.HttpRequest)>($r1, $r2);

        $r5_2 = virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_2);

        $r4_3 = virtualinvoke $r5_2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4_3;
    }
}
