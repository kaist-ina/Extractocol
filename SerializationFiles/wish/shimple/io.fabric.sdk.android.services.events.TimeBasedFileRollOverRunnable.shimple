public class io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final android.content.Context context;
    private final io.fabric.sdk.android.services.events.FileRollOverManager fileRollOverManager;

    public void <init>(android.content.Context, io.fabric.sdk.android.services.events.FileRollOverManager)
    {
        io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable $r0;
        android.content.Context $r1;
        io.fabric.sdk.android.services.events.FileRollOverManager $r2;

        $r0 := @this: io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: io.fabric.sdk.android.services.events.FileRollOverManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable: android.content.Context context> = $r1;

        $r0.<io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable: io.fabric.sdk.android.services.events.FileRollOverManager fileRollOverManager> = $r2;

        return;
    }

    public void run()
    {
        io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable $r0;
        java.lang.Exception $r1;
        boolean $z0;
        android.content.Context $r2, $r2_1, $r2_2, $r2_3;
        io.fabric.sdk.android.services.events.FileRollOverManager $r3, $r3_1, $r3_2, $r3_3;

(0)     $r0 := @this: io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable;

     label1:
        $r2 = $r0.<io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable: android.content.Context context>;

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void logControlled(android.content.Context,java.lang.String)>($r2, "Performing time based file roll over.");

        $r3 = $r0.<io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable: io.fabric.sdk.android.services.events.FileRollOverManager fileRollOverManager>;

        $z0 = interfaceinvoke $r3.<io.fabric.sdk.android.services.events.FileRollOverManager: boolean rollFileOver()>();

     label2:
(1)     if $z0 != 0 goto label6;

     label3:
(2)     $r3_1 = $r0.<io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable: io.fabric.sdk.android.services.events.FileRollOverManager fileRollOverManager>;

        interfaceinvoke $r3_1.<io.fabric.sdk.android.services.events.FileRollOverManager: void cancelTimeBasedFileRollOver()>();

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        $r2_1 = Phi($r2 #0);

        $r3_2 = Phi($r3 #0, $r3_1 #2);

        $r2_2 = $r0.<io.fabric.sdk.android.services.events.TimeBasedFileRollOverRunnable: android.content.Context context>;

(3)     staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void logControlledError(android.content.Context,java.lang.String,java.lang.Throwable)>($r2_2, "Failed to roll over file", $r1);

     label6:
        $r2_3 = Phi($r2 #1, $r2_2 #3);

        $r3_3 = Phi($r3 #1, $r3_2 #3);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
