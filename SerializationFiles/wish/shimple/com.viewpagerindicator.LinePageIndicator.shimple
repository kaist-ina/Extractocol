public class com.viewpagerindicator.LinePageIndicator extends android.view.View implements com.viewpagerindicator.PageIndicator
{
    private static final int INVALID_POINTER;
    private int mActivePointerId;
    private boolean mCentered;
    private int mCurrentPage;
    private float mGapWidth;
    private boolean mIsDragging;
    private float mLastMotionX;
    private float mLineWidth;
    private android.support.v4.view.ViewPager$OnPageChangeListener mListener;
    private final android.graphics.Paint mPaintSelected;
    private final android.graphics.Paint mPaintUnselected;
    private int mTouchSlop;
    private android.support.v4.view.ViewPager mViewPager;

    public void <init>(android.content.Context)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.content.Context $r1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.viewpagerindicator.R$attr: int vpiLinePageIndicatorStyle>;

        specialinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i1_1, $i2_1, $i3_1, $i3_2, $i3_3, $i0_1, $i0_2, $i0_3;
        android.graphics.Paint $r4, $r4_1, $r4_2, $r4_3;
        boolean $z0, $z0_1, $z0_2;
        android.content.res.Resources $r5;
        float $f0, $f1, $f2, $f0_1, $f1_1, $f2_1;
        android.content.res.TypedArray $r6;
        android.graphics.drawable.Drawable $r7;
        android.view.ViewConfiguration $r8;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected> = $r4;

        $r4_1 = new android.graphics.Paint;

        specialinvoke $r4_1.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected> = $r4_1;

        $r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = -1.0F;

        $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = -1;

        $z0 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: android.content.res.Resources getResources()>();

        $i1 = <com.viewpagerindicator.R$color: int default_line_indicator_selected_color>;

        $i1_1 = virtualinvoke $r5.<android.content.res.Resources: int getColor(int)>($i1);

        $i2 = <com.viewpagerindicator.R$color: int default_line_indicator_unselected_color>;

        $i2_1 = virtualinvoke $r5.<android.content.res.Resources: int getColor(int)>($i2);

        $i3 = <com.viewpagerindicator.R$dimen: int default_line_indicator_line_width>;

        $f0 = virtualinvoke $r5.<android.content.res.Resources: float getDimension(int)>($i3);

        $i3_1 = <com.viewpagerindicator.R$dimen: int default_line_indicator_gap_width>;

        $f1 = virtualinvoke $r5.<android.content.res.Resources: float getDimension(int)>($i3_1);

        $i3_2 = <com.viewpagerindicator.R$dimen: int default_line_indicator_stroke_width>;

        $f2 = virtualinvoke $r5.<android.content.res.Resources: float getDimension(int)>($i3_2);

        $i3_3 = <com.viewpagerindicator.R$bool: int default_line_indicator_centered>;

        $z0_1 = virtualinvoke $r5.<android.content.res.Resources: boolean getBoolean(int)>($i3_3);

        $r3 = <com.viewpagerindicator.R$styleable: int[] LinePageIndicator>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, 0);

        $z0_2 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, $z0_1);

        $r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered> = $z0_2;

        $f0_1 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(5, $f0);

        $r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth> = $f0_1;

        $f1_1 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(6, $f1);

        $r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth> = $f1_1;

        $f2_1 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(3, $f2);

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void setStrokeWidth(float)>($f2_1);

        $r4_2 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        $i0_1 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(4, $i2_1);

        virtualinvoke $r4_2.<android.graphics.Paint: void setColor(int)>($i0_1);

        $r4_3 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        $i0_2 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(2, $i1_1);

        virtualinvoke $r4_3.<android.graphics.Paint: void setColor(int)>($i0_2);

        $r7 = virtualinvoke $r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if $r7 == null goto label2;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r7);

     label2:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r8 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0_3 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>($r8);

        $r0.<com.viewpagerindicator.LinePageIndicator: int mTouchSlop> = $i0_3;

        return;
    }

    private int measureHeight(int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.graphics.Paint $r1;
        int $i0, $i1, $i2, $i0_1, $i0_2, $i2_1, $i2_2;
        float $f0, $f1, $f0_1, $f0_2, $f0_3, $f1_1, $f0_4, $f1_2, $f0_5, $f1_3, $f0_6;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0_1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        if $i1 != 1073741824 goto label2;

(0)     $f0 = (float) $i0_1;

     label1:
        $f1 = Phi($f1 #0, $f1_2 #1, $f1_3 #2);

        $f0_1 = Phi($f0 #0, $f0_5 #1, $f0_6 #2);

        $i2 = Phi($i2 #0, $i2_2 #1, $i2_2 #2);

        $f0_2 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0_1);

        $i0_2 = (int) $f0_2;

        return $i0_2;

     label2:
        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        $f0_3 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        $i2_1 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingTop()>();

        $f1_1 = (float) $i2_1;

        $f0_4 = $f0_3 + $f1_1;

        $i2_2 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingBottom()>();

        $f1_2 = (float) $i2_2;

        $f0_5 = $f0_4 + $f1_2;

(1)     if $i1 != -2147483648 goto label1;

        $f1_3 = (float) $i0_1;

        $f0_6 = staticinvoke <java.lang.Math: float min(float,float)>($f0_5, $f1_3);

(2)     goto label1;
    }

    private int measureWidth(int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0, $i1, $i2, $i3, $i4, $i0_1, $i3_1, $i2_1, $i3_2, $i2_2, $i0_2;
        android.support.v4.view.ViewPager $r1, $r1_1, $r1_2, $r1_3;
        float $f0, $f1, $f2, $f1_1, $f0_1, $f1_2, $f2_1, $f1_3, $f0_2, $f1_4, $f0_3, $f0_4, $f0_5, $f1_5, $f2_2, $f0_6;
        android.support.v4.view.PagerAdapter $r2;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0_1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

(0)     if $i1 == 1073741824 goto label1;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

(1)     if $r1 != null goto label3;

     label1:
        $r1_2 = Phi($r1 #0, $r1 #1);

(2)     $f0_4 = (float) $i0_1;

     label2:
        $f0_5 = Phi($f0_4 #2, $f0_2 #3, $f0_3 #4);

        $i3_2 = Phi($i3 #2, $i3_1 #3, $i3_1 #4);

        $f1_5 = Phi($f1 #2, $f1_3 #3, $f1_4 #4);

        $i2_2 = Phi($i2 #2, $i2_1 #3, $i2_1 #4);

        $r1_3 = Phi($r1_2 #2, $r1_1 #3, $r1_1 #4);

        $f2_2 = Phi($f2 #2, $f2_1 #3, $f2_1 #4);

        $f0_6 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0_5);

        $i0_2 = (int) $f0_6;

        return $i0_2;

     label3:
        $r1_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r2 = virtualinvoke $r1_1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i2 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingLeft()>();

        $i4 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingRight()>();

        $i3_1 = $i3 + $i4;

        $f0 = (float) $i3_1;

        $f1 = (float) $i2;

        $f2 = $r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        $f1_1 = $f1 * $f2;

        $f0_1 = $f0 + $f1_1;

        $i2_1 = $i2 + -1;

        $f1_2 = (float) $i2_1;

        $f2_1 = $r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        $f1_3 = $f1_2 * $f2_1;

        $f0_2 = $f0_1 + $f1_3;

(3)     if $i1 != -2147483648 goto label2;

        $f1_4 = (float) $i0_1;

        $f0_3 = staticinvoke <java.lang.Math: float min(float,float)>($f0_2, $f1_4);

(4)     goto label2;
    }

    public float getGapWidth()
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        float f0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        f0 = $r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        return f0;
    }

    public float getLineWidth()
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        float f0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        f0 = $r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        return f0;
    }

    public int getSelectedColor()
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }

    public float getStrokeWidth()
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.graphics.Paint $r1;
        float $f0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        return $f0;
    }

    public int getUnselectedColor()
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }

    public boolean isCentered()
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        boolean z0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        z0 = $r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered>;

        return z0;
    }

    public void notifyDataSetChanged()
    {
        com.viewpagerindicator.LinePageIndicator $r0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.graphics.Canvas $r1;
        android.support.v4.view.ViewPager $r2, $r2_1;
        android.support.v4.view.PagerAdapter $r3;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i1_2, $i1_3, $i1_4, $i1_5, $i1_6, $i1_7, $i1_8, $i1_9, $i1_10, $i1_11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f0_1, $f1_1, $f1_2, $f2_1, $f1_3, $f5_1, $f5_2, $f5_3, $f2_2, $f5_4, $f5_5, $f5_6, $f4_1, $f4_2, $f3_1, $f3_2, $f5_7, $f4_3, $f3_3, $f5_8, $f3_4, $f1_4, $f1_5, $f1_6, $f1_7, $f3_5, $f3_6, $f2_3, $f4_4, $f3_7, $f5_9, $f0_2, $f1_8;
        boolean $z0;
        android.graphics.Paint $r4, $r4_1, $r4_2, $r4_3, $r4_4;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2_1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

(0)     if $i0 == 0 goto label7;

        $i1 = $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        if $i1 < $i0 goto label2;

        $i0_1 = $i0 + -1;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void setCurrentItem(int)>($i0_1);

        return;

     label2:
        $f0 = $r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        $f1 = $r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        $f0_1 = $f0 + $f1;

        $f1_1 = (float) $i0;

        $f1_2 = $f1_1 * $f0_1;

        $f2 = $r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        $f3 = $f1_2 - $f2;

        $i1_1 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingTop()>();

        $f2_1 = (float) $i1_1;

        $i1_2 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingLeft()>();

        $f1_3 = (float) $i1_2;

        $i1_3 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingRight()>();

        $f4 = (float) $i1_3;

        $i1_4 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getHeight()>();

        $f5 = (float) $i1_4;

        $f5_1 = $f5 - $f2_1;

        $i1_5 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingBottom()>();

        $f6 = (float) $i1_5;

        $f5_2 = $f5_1 - $f6;

        $f5_3 = $f5_2 / 2.0F;

        $f2_2 = $f2_1 + $f5_3;

        $f5_4 = $f1_3;

        $z0 = $r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered>;

(1)     if $z0 == 0 goto label3;

        $i1_6 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getWidth()>();

        $f5_5 = (float) $i1_6;

        $f5_6 = $f5_5 - $f1_3;

        $f4_1 = $f5_6 - $f4;

        $f4_2 = $f4_1 / 2.0F;

        $f3_1 = $f3 / 2.0F;

        $f3_2 = $f4_2 - $f3_1;

(2)     $f5_7 = $f1_3 + $f3_2;

     label3:
        $i1_7 = Phi($i1_5 #1, $i1_6 #2);

        $f4_3 = Phi($f4 #1, $f4_2 #2);

        $f3_3 = Phi($f3 #1, $f3_2 #2);

        $f5_8 = Phi($f5_4 #1, $f5_7 #2);

(3)     $i1_8 = 0;

     label4:
        $i1_9 = Phi($i1_8 #3, $i1_10 #6);

        $r4 = Phi($r4 #3, $r4_2 #6);

        $f3_4 = Phi($f3_3 #3, $f3_6 #6);

        $f1_4 = Phi($f1_3 #3, $f1_7 #6);

(4)     if $i1_9 >= $i0 goto label7;

        $f1_5 = (float) $i1_9;

        $f1_6 = $f1_5 * $f0_1;

        $f1_7 = $f5_8 + $f1_6;

        $f3_5 = $r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        $f3_6 = $f1_7 + $f3_5;

        $i2 = $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        if $i1_9 != $i2 goto label6;

(5)     $r4_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

     label5:
        $r4_2 = Phi($r4_1 #5, $r4_3 #7);

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1_7, $f2_2, $f3_6, $f2_2, $r4_2);

        $i1_10 = $i1_9 + 1;

(6)     goto label4;

     label6:
        $r4_3 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

(7)     goto label5;

     label7:
        $f2_3 = Phi($f2 #0, $f2_2 #4);

        $i1_11 = Phi($i1 #0, $i1_9 #4);

        $f4_4 = Phi($f4 #0, $f4_3 #4);

        $r4_4 = Phi($r4 #0, $r4 #4);

        $f3_7 = Phi($f3 #0, $f3_4 #4);

        $f5_9 = Phi($f5 #0, $f5_8 #4);

        $f0_2 = Phi($f0 #0, $f0_1 #4);

        $f1_8 = Phi($f1 #0, $f1_4 #4);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0, $i1, $i0_1, $i1_1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0_1 = specialinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int measureWidth(int)>($i0);

        $i1_1 = specialinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int measureHeight(int)>($i1);

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void setMeasuredDimension(int,int)>($i0_1, $i1_1);

        return;
    }

    public void onPageScrollStateChanged(int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1, $r1_1, $r1_2;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

(1)     interfaceinvoke $r1_1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($i0);

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        return;
    }

    public void onPageScrolled(int, float, int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0, $i1;
        float $f0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1, $r1_1, $r1_2;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

(1)     interfaceinvoke $r1_1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        return;
    }

    public void onPageSelected(int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1, $r1_1, $r1_2;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

(0)     if $r1 == null goto label1;

        $r1_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

(1)     interfaceinvoke $r1_1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i0);

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0;
        android.os.Parcelable $r1, $r1_1;
        com.viewpagerindicator.LinePageIndicator$SavedState $r2;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = (com.viewpagerindicator.LinePageIndicator$SavedState) $r1;

        $r1_1 = virtualinvoke $r2.<com.viewpagerindicator.LinePageIndicator$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1_1);

        $i0 = $r2.<com.viewpagerindicator.LinePageIndicator$SavedState: int currentPage>;

        $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void requestLayout()>();

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        com.viewpagerindicator.LinePageIndicator$SavedState $r1;
        int $i0;
        android.os.Parcelable $r2;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r2 = specialinvoke $r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new com.viewpagerindicator.LinePageIndicator$SavedState;

        specialinvoke $r1.<com.viewpagerindicator.LinePageIndicator$SavedState: void <init>(android.os.Parcelable)>($r2);

        $i0 = $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        $r1.<com.viewpagerindicator.LinePageIndicator$SavedState: int currentPage> = $i0;

        return $r1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.view.MotionEvent $r1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8;
        android.support.v4.view.ViewPager $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7, $r2_8, $r2_9, $r2_10, $r2_11, $r2_12, $r2_13, $r2_14, $r2_15;
        android.support.v4.view.PagerAdapter $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        int $i0, $i2, $i3, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i2_1, $i3_1, $i3_2, $i0_9, $i0_10, $i0_11, $i3_3, $i2_2, $i0_12, $i0_13, $i0_14, $i3_4, $i2_3, $i0_15, $i0_16, $i0_17, $i2_4, $i3_5, $i0_18, $i0_19, $i0_20, $i0_21, $i0_22;
        float $f0, $f1, $f2, $f3, $f0_1, $f0_2, $f1_1, $f1_2, $f2_1, $f3_1, $f2_2, $f3_2, $f0_3, $f0_4, $f1_3, $f1_4, $f2_3, $f3_3, $f2_4, $f3_4, $f2_5, $f0_5, $f0_6, $f1_5, $f2_6, $f3_5, $f0_7, $f0_8;
        byte $b1, $b1_1, $b1_2, $b1_3, $b1_4, $b1_5, $b1_6, $b1_7, $b1_8, $b1_9, $b1_10;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke $r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r2 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

(0)     if $r2 == null goto label02;

        $r2_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2_1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

(1)     if $i0 != 0 goto label03;

     label02:
        $r2_15 = Phi($r2 #0, $r2_1 #1);

        $r3_4 = Phi($r3 #0, $r3 #1);

        $i0_22 = Phi($i0 #0, $i0 #1);

        return 0;

     label03:
        $i0_1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $i0_2 = $i0_1 & 255;

(2)     lookupswitch($i0_2)
        {
            case 0: goto label06;
            case 1: goto label10;
            case 2: goto label07;
            case 3: goto label10;
            case 4: goto label05;
            case 5: goto label15;
            case 6: goto label16;
            default: goto label04;
        };

     label04:
(3)     goto label05;

     label05:
        $f0 = Phi($f0 #2, $f0 #3, $f0_1 #4, $f0_2 #8, $f0_2 #10, $f0_2 #11, $f0_6 #21, $f0_6 #22, $f0_7 #23, $f0_8 #27);

        $r2_2 = Phi($r2_1 #2, $r2_1 #3, $r2_1 #4, $r2_1 #8, $r2_4 #10, $r2_6 #11, $r2_13 #21, $r2_14 #22, $r2_1 #23, $r2_1 #27);

        $z0_1 = Phi($z0 #2, $z0 #3, $z0 #4, $z0_3 #8, $z0_5 #10, $z0_6 #11, $z0_8 #21, $z0_8 #22, $z0 #23, $z0 #27);

        $r3_1 = Phi($r3 #2, $r3 #3, $r3 #4, $r3 #8, $r3 #10, $r3 #11, $r3_3 #21, $r3_3 #22, $r3 #23, $r3 #27);

        $f1 = Phi($f1 #2, $f1 #3, $f1 #4, $f1_2 #8, $f1_2 #10, $f1_2 #11, $f1_5 #21, $f1_5 #22, $f1 #23, $f1 #27);

        $f2 = Phi($f2 #2, $f2 #3, $f2 #4, $f2_2 #8, $f2_2 #10, $f2_2 #11, $f2_6 #21, $f2_6 #22, $f2 #23, $f2 #27);

        $b1 = Phi($b1 #2, $b1 #3, $b1 #4, $b1_2 #8, $b1_2 #10, $b1_2 #11, $b1_6 #21, $b1_6 #22, $b1 #23, $b1_10 #27);

        $i0_3 = Phi($i0_2 #2, $i0_2 #3, $i0_4 #4, $i0_8 #8, $i0_8 #10, $i0_8 #11, $i0_2 #21, $i0_2 #22, $i0_16 #23, $i0_21 #27);

        $f3 = Phi($f3 #2, $f3 #3, $f3 #4, $f3_2 #8, $f3_2 #10, $f3_2 #11, $f3_5 #21, $f3_5 #22, $f3 #23, $f3 #27);

        $i3 = Phi($i3 #2, $i3 #3, $i3 #4, $i3 #8, $i3 #10, $i3 #11, $i3_4 #21, $i3_4 #22, $i3 #23, $i3_5 #27);

        $i2 = Phi($i2 #2, $i2 #3, $i2 #4, $i2 #8, $i2 #10, $i2 #11, $i2_3 #21, $i2_3 #22, $i2 #23, $i2_4 #27);

        return 1;

     label06:
        $i0_4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = $i0_4;

        $f0_1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = $f0_1;

(4)     goto label05;

     label07:
        $i0_5 = $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId>;

        $i0_6 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0_5);

        $f0_2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i0_6);

        $f1_1 = $r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX>;

        $f1_2 = $f0_2 - $f1_1;

        $z0_2 = $r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging>;

(5)     if $z0_2 != 0 goto label08;

        $f2_1 = staticinvoke <java.lang.Math: float abs(float)>($f1_2);

        $i0_7 = $r0.<com.viewpagerindicator.LinePageIndicator: int mTouchSlop>;

        $f3_1 = (float) $i0_7;

        $b1_1 = $f2_1 cmpl $f3_1;

(6)     if $b1_1 <= 0 goto label08;

(7)     $r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging> = 1;

     label08:
        $f2_2 = Phi($f2 #5, $f2_1 #6, $f2_1 #7);

        $b1_2 = Phi($b1 #5, $b1_1 #6, $b1_1 #7);

        $i0_8 = Phi($i0_6 #5, $i0_7 #6, $i0_7 #7);

        $f3_2 = Phi($f3 #5, $f3_1 #6, $f3_1 #7);

        $z0_3 = $r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging>;

(8)     if $z0_3 == 0 goto label05;

        $r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = $f0_2;

        $r2_3 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0_4 = virtualinvoke $r2_3.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

(9)     if $z0_4 != 0 goto label09;

        $r2_4 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0_5 = virtualinvoke $r2_4.<android.support.v4.view.ViewPager: boolean beginFakeDrag()>();

(10)    if $z0_5 == 0 goto label05;

     label09:
        $r2_5 = Phi($r2_3 #9, $r2_4 #10);

        $z0_6 = Phi($z0_4 #9, $z0_5 #10);

        $r2_6 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2_6.<android.support.v4.view.ViewPager: void fakeDragBy(float)>($f1_2);

(11)    goto label05;

     label10:
        $z0_7 = $r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging>;

(12)    if $z0_7 != 0 goto label14;

        $r2_7 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3_2 = virtualinvoke $r2_7.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i2_1 = virtualinvoke $r3_2.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3_1 = virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: int getWidth()>();

        $f0_3 = (float) $i3_1;

        $f0_4 = $f0_3 / 2.0F;

        $f1_3 = (float) $i3_1;

        $f1_4 = $f1_3 / 6.0F;

        $i3_2 = $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

(13)    if $i3_2 <= 0 goto label12;

        $f2_3 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f3_3 = $f0_4 - $f1_4;

        $b1_3 = $f2_3 cmpg $f3_3;

(14)    if $b1_3 >= 0 goto label12;

(15)    if $i0_2 == 3 goto label11;

        $r2_8 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $i0_9 = $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        $i0_10 = $i0_9 + -1;

(16)    virtualinvoke $r2_8.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0_10);

     label11:
        $r2_9 = Phi($r2_7 #15, $r2_8 #16);

        $i0_11 = Phi($i0_2 #15, $i0_10 #16);

        return 1;

     label12:
        $f2_4 = Phi($f2 #13, $f2_3 #14);

        $b1_4 = Phi($b1 #13, $b1_3 #14);

        $f3_4 = Phi($f3 #13, $f3_3 #14);

        $i3_3 = $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        $i2_2 = $i2_1 + -1;

(17)    if $i3_3 >= $i2_2 goto label14;

        $f2_5 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f0_5 = $f0_4 + $f1_4;

        $b1_5 = $f2_5 cmpl $f0_5;

(18)    if $b1_5 <= 0 goto label14;

(19)    if $i0_2 == 3 goto label13;

        $r2_10 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $i0_12 = $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        $i0_13 = $i0_12 + 1;

(20)    virtualinvoke $r2_10.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0_13);

     label13:
        $r2_11 = Phi($r2_7 #19, $r2_10 #20);

        $i0_14 = Phi($i0_2 #19, $i0_13 #20);

        return 1;

     label14:
        $f0_6 = Phi($f0 #12, $f0_4 #17, $f0_5 #18);

        $r2_12 = Phi($r2_1 #12, $r2_7 #17, $r2_7 #18);

        $r3_3 = Phi($r3 #12, $r3_2 #17, $r3_2 #18);

        $f1_5 = Phi($f1 #12, $f1_4 #17, $f1_4 #18);

        $f2_6 = Phi($f2 #12, $f2_4 #17, $f2_5 #18);

        $b1_6 = Phi($b1 #12, $b1_4 #17, $b1_5 #18);

        $f3_5 = Phi($f3 #12, $f3_4 #17, $f3_4 #18);

        $i3_4 = Phi($i3 #12, $i3_3 #17, $i3_3 #18);

        $i2_3 = Phi($i2 #12, $i2_2 #17, $i2_2 #18);

        $r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging> = 0;

        $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = -1;

        $r2_13 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0_8 = virtualinvoke $r2_13.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

(21)    if $z0_8 == 0 goto label05;

        $r2_14 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2_14.<android.support.v4.view.ViewPager: void endFakeDrag()>();

(22)    goto label05;

     label15:
        $i0_15 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $f0_7 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i0_15);

        $r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = $f0_7;

        $i0_16 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0_15);

        $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = $i0_16;

(23)    goto label05;

     label16:
        $i0_17 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i2_4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0_17);

        $i3_5 = $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId>;

(24)    if $i2_4 != $i3_5 goto label18;

        if $i0_17 != 0 goto label19;

(25)    $b1_7 = 1;

     label17:
        $b1_8 = Phi($b1_7 #25, $b1_9 #28);

        $i0_18 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b1_8);

(26)    $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = $i0_18;

     label18:
        $b1_10 = Phi($b1 #24, $b1_8 #26);

        $i0_19 = Phi($i0_17 #24, $i0_18 #26);

        $i0_20 = $r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId>;

        $i0_21 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0_20);

        $f0_8 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i0_21);

        $r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = $f0_8;

(27)    goto label05;

     label19:
        $b1_9 = 0;

(28)    goto label17;
    }

    public void setCentered(boolean)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        boolean $z0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $z0 := @parameter0: boolean;

        $r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered> = $z0;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setCurrentItem(int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0;
        java.lang.IllegalStateException $r1;
        android.support.v4.view.ViewPager $r2, $r2_1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r2 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 != null goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager has not been bound.");

        throw $r1;

     label1:
        $r2_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2_1.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        $r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setGapWidth(float)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        float $f0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $f0 := @parameter0: float;

        $r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth> = $f0;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setLineWidth(float)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        float $f0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $f0 := @parameter0: float;

        $r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth> = $f0;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener> = $r1;

        return;
    }

    public void setSelectedColor(int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setStrokeWidth(float)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        float $f0;
        android.graphics.Paint $r1, $r1_1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $f0 := @parameter0: float;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r1_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        virtualinvoke $r1_1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setUnselectedColor(int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setViewPager(android.support.v4.view.ViewPager)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        java.lang.IllegalStateException $r1;
        android.support.v4.view.PagerAdapter $r2;
        android.support.v4.view.ViewPager $r3, $r4, $r4_1, $r4_2, $r4_3, $r3_1;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r3 := @parameter0: android.support.v4.view.ViewPager;

        $r4 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r4 != $r3 goto label1;

        return;

     label1:
        $r4_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

(0)     if $r4_1 == null goto label2;

        $r4_2 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

(1)     virtualinvoke $r4_2.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(null);

     label2:
        $r4_3 = Phi($r4_1 #0, $r4_2 #1);

        $r2 = virtualinvoke $r3.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        if $r2 != null goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager does not have adapter instance.");

        throw $r1;

     label3:
        $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager> = $r3;

        $r3_1 = $r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r3_1.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>($r0);

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }

    public void setViewPager(android.support.v4.view.ViewPager, int)
    {
        com.viewpagerindicator.LinePageIndicator $r0;
        android.support.v4.view.ViewPager $r1;
        int $i0;

        $r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void setViewPager(android.support.v4.view.ViewPager)>($r1);

        virtualinvoke $r0.<com.viewpagerindicator.LinePageIndicator: void setCurrentItem(int)>($i0);

        return;
    }
}
