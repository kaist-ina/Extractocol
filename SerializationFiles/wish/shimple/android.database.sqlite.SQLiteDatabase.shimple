public final class android.database.sqlite.SQLiteDatabase extends android.database.sqlite.SQLiteClosable
{
    public static final int CONFLICT_ABORT;
    public static final int CONFLICT_FAIL;
    public static final int CONFLICT_IGNORE;
    public static final int CONFLICT_NONE;
    public static final int CONFLICT_REPLACE;
    public static final int CONFLICT_ROLLBACK;
    public static final int CREATE_IF_NECESSARY;
    public static final int ENABLE_WRITE_AHEAD_LOGGING;
    public static final int MAX_SQL_CACHE_SIZE;
    public static final int NO_LOCALIZED_COLLATORS;
    public static final int OPEN_READONLY;
    public static final int OPEN_READWRITE;
    public static final int SQLITE_MAX_LIKE_PATTERN_LENGTH;

    void <init>()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected void onAllReferencesReleased()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int releaseMemory()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r0;
    }

    public void setLockingEnabled(boolean)
    {
        android.database.sqlite.SQLiteDatabase r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void beginTransaction()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void beginTransactionNonExclusive()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)
    {
        android.database.sqlite.SQLiteDatabase r0;
        android.database.sqlite.SQLiteTransactionListener r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteTransactionListener;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)
    {
        android.database.sqlite.SQLiteDatabase r0;
        android.database.sqlite.SQLiteTransactionListener r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteTransactionListener;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void endTransaction()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setTransactionSuccessful()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean inTransaction()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isDbLockedByCurrentThread()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isDbLockedByOtherThreads()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean yieldIfContended()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean yieldIfContendedSafely()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean yieldIfContendedSafely(long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.Map getSyncedTables()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, int)
    {
        java.lang.String r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase$CursorFactory;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, int, android.database.DatabaseErrorHandler)
    {
        java.lang.String r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        int i0;
        android.database.DatabaseErrorHandler r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase$CursorFactory;

        i0 := @parameter2: int;

        r2 := @parameter3: android.database.DatabaseErrorHandler;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File, android.database.sqlite.SQLiteDatabase$CursorFactory)
    {
        java.io.File r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase$CursorFactory;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory)
    {
        java.lang.String r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase$CursorFactory;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, android.database.DatabaseErrorHandler)
    {
        java.lang.String r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        android.database.DatabaseErrorHandler r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase$CursorFactory;

        r2 := @parameter2: android.database.DatabaseErrorHandler;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static boolean deleteDatabase(java.io.File)
    {
        java.io.File r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.io.File;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory)
    {
        android.database.sqlite.SQLiteDatabase$CursorFactory r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase$CursorFactory;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public int getVersion()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setVersion(int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long getMaximumSize()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long setMaximumSize(long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long getPageSize()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setPageSize(long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void markTableSyncable(java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public void markTableSyncable(java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2, r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public static java.lang.String findEditTable(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.database.sqlite.SQLiteStatement compileStatement(java.lang.String) throws android.database.SQLException
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public android.database.Cursor query(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        boolean z0;
        java.lang.String r1, r3, r5, r6, r7, r8;
        java.lang.String[] r2, r4;
        java.lang.RuntimeException $r9;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.lang.String;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r9;
    }

    public android.database.Cursor query(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.CancellationSignal)
    {
        android.database.sqlite.SQLiteDatabase r0;
        boolean z0;
        java.lang.String r1, r3, r5, r6, r7, r8;
        java.lang.String[] r2, r4;
        android.os.CancellationSignal r9;
        java.lang.RuntimeException $r10;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.lang.String;

        r9 := @parameter9: android.os.CancellationSignal;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r10;
    }

    public android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory, boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        boolean z0;
        java.lang.String r2, r4, r6, r7, r8, r9;
        java.lang.String[] r3, r5;
        java.lang.RuntimeException $r10;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase$CursorFactory;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String[];

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.lang.String;

        r9 := @parameter9: java.lang.String;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r10;
    }

    public android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory, boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.CancellationSignal)
    {
        android.database.sqlite.SQLiteDatabase r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        boolean z0;
        java.lang.String r2, r4, r6, r7, r8, r9;
        java.lang.String[] r3, r5;
        android.os.CancellationSignal r10;
        java.lang.RuntimeException $r11;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase$CursorFactory;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String[];

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.lang.String;

        r9 := @parameter9: java.lang.String;

        r10 := @parameter10: android.os.CancellationSignal;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r11;
    }

    public android.database.Cursor query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r3, r5, r6, r7;
        java.lang.String[] r2, r4;
        java.lang.RuntimeException $r8;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r8;
    }

    public android.database.Cursor query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r3, r5, r6, r7, r8;
        java.lang.String[] r2, r4;
        java.lang.RuntimeException $r9;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r9;
    }

    public android.database.Cursor rawQuery(java.lang.String, java.lang.String[])
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public android.database.Cursor rawQuery(java.lang.String, java.lang.String[], android.os.CancellationSignal)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        java.lang.String[] r2;
        android.os.CancellationSignal r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: android.os.CancellationSignal;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory, java.lang.String, java.lang.String[], java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        java.lang.String r2, r4;
        java.lang.String[] r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase$CursorFactory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r5;
    }

    public android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory, java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)
    {
        android.database.sqlite.SQLiteDatabase r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory r1;
        java.lang.String r2, r4;
        java.lang.String[] r3;
        android.os.CancellationSignal r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase$CursorFactory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.CancellationSignal;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r6;
    }

    public long insert(java.lang.String, java.lang.String, android.content.ContentValues)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        android.content.ContentValues r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ContentValues;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public long insertOrThrow(java.lang.String, java.lang.String, android.content.ContentValues) throws android.database.SQLException
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        android.content.ContentValues r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ContentValues;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public long replace(java.lang.String, java.lang.String, android.content.ContentValues)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        android.content.ContentValues r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ContentValues;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public long replaceOrThrow(java.lang.String, java.lang.String, android.content.ContentValues) throws android.database.SQLException
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        android.content.ContentValues r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ContentValues;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public long insertWithOnConflict(java.lang.String, java.lang.String, android.content.ContentValues, int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        android.content.ContentValues r3;
        int i0;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ContentValues;

        i0 := @parameter3: int;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public int delete(java.lang.String, java.lang.String, java.lang.String[])
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2;
        java.lang.String[] r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public int update(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r3;
        android.content.ContentValues r2;
        java.lang.String[] r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r5;
    }

    public int updateWithOnConflict(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[], int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r3;
        android.content.ContentValues r2;
        java.lang.String[] r4;
        int i0;
        java.lang.RuntimeException $r5;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r5;
    }

    public void execSQL(java.lang.String) throws android.database.SQLException
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void execSQL(java.lang.String, java.lang.Object[]) throws android.database.SQLException
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public boolean isReadOnly()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isOpen()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean needUpgrade(int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.String getPath()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setLocale(java.util.Locale)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.util.Locale r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter0: java.util.Locale;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void setMaxSqlCacheSize(int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void setForeignKeyConstraintsEnabled(boolean)
    {
        android.database.sqlite.SQLiteDatabase r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean enableWriteAheadLogging()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void disableWriteAheadLogging()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isWriteAheadLoggingEnabled()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.util.List getAttachedDbs()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public boolean isDatabaseIntegrityOk()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.database.sqlite.SQLiteDatabase;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
