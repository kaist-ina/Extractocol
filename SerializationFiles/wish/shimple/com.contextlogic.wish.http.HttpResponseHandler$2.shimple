class com.contextlogic.wish.http.HttpResponseHandler$2 extends java.lang.Object
{
    static final int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType;

    static void <clinit>()
    {
        java.lang.NoSuchFieldError $r0, $r1, $r2, $r3, $r4;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] $r5;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10, $i0_11, $i0_12, $i0_13, $i0_14;
        int[] $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6, $r6_7, $r6_8, $r6_9, $r6_10, $r6_11, $r6_12, $r6_13, $r6_14;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7, $r7_8, $r7_9, $r7_10, $r7_11, $r7_12, $r7_13;

        $r5 = staticinvoke <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] values()>();

        $i0 = lengthof $r5;

        $r6 = newarray (int)[$i0];

(0)     <com.contextlogic.wish.http.HttpResponseHandler$2: int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType> = $r6;

     label01:
(1)     $r6_1 = <com.contextlogic.wish.http.HttpResponseHandler$2: int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType>;

        $r7 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestStarted>;

(2)     $i0_1 = virtualinvoke $r7.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

     label02:
(3)     $r6_1[$i0_1] = 1;

     label03:
        $r7_1 = Phi($r7 #3, $r7_13 #22);

        $r6_2 = Phi($r6_1 #3, $r6_14 #22);

        $i0_2 = Phi($i0_1 #3, $i0_14 #22);

(4)     $r6_3 = <com.contextlogic.wish.http.HttpResponseHandler$2: int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType>;

(5)     $r7_2 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestFailed>;

(6)     $i0_3 = virtualinvoke $r7_2.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

     label04:
(7)     $r6_3[$i0_3] = 2;

     label05:
        $r7_3 = Phi($r7_2 #7, $r7_12 #21);

        $r6_4 = Phi($r6_3 #7, $r6_13 #21);

        $i0_4 = Phi($i0_3 #7, $i0_13 #21);

(8)     $r6_5 = <com.contextlogic.wish.http.HttpResponseHandler$2: int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType>;

(9)     $r7_4 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestSucceeded>;

(10)    $i0_5 = virtualinvoke $r7_4.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

     label06:
(11)    $r6_5[$i0_5] = 3;

     label07:
        $r7_5 = Phi($r7_4 #11, $r7_11 #20);

        $r6_6 = Phi($r6_5 #11, $r6_12 #20);

        $i0_6 = Phi($i0_5 #11, $i0_12 #20);

(12)    $r6_7 = <com.contextlogic.wish.http.HttpResponseHandler$2: int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType>;

(13)    $r7_6 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestFinished>;

(14)    $i0_7 = virtualinvoke $r7_6.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

     label08:
(15)    $r6_7[$i0_7] = 4;

     label09:
        $r7_7 = Phi($r7_6 #15, $r7_10 #19);

        $r6_8 = Phi($r6_7 #15, $r6_11 #19);

        $i0_8 = Phi($i0_7 #15, $i0_11 #19);

(16)    $r6_9 = <com.contextlogic.wish.http.HttpResponseHandler$2: int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType>;

(17)    $r7_8 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType CachedResponse>;

(18)    $i0_9 = virtualinvoke $r7_8.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

     label10:
        $r6_9[$i0_9] = 5;

        return;

     label11:
        $r0 := @caughtexception;

        $r7_9 = Phi($r7_6 #15, $r7_10 #19, $r7_7 #16, $r7_8 #17);

        $r6_10 = Phi($r6_7 #15, $r6_11 #19, $r6_9 #16);

        $i0_10 = Phi($i0_7 #15, $i0_11 #19, $i0_8 #16, $i0_9 #18);

        return;

     label12:
        $r1 := @caughtexception;

        $r7_10 = Phi($r7_4 #11, $r7_11 #20, $r7_5 #12, $r7_6 #13);

        $r6_11 = Phi($r6_5 #11, $r6_12 #20, $r6_7 #12);

        $i0_11 = Phi($i0_5 #11, $i0_12 #20, $i0_6 #12, $i0_7 #14);

(19)    goto label09;

     label13:
        $r2 := @caughtexception;

        $r7_11 = Phi($r7_2 #7, $r7_12 #21, $r7_3 #8, $r7_4 #9);

        $r6_12 = Phi($r6_3 #7, $r6_13 #21, $r6_5 #8);

        $i0_12 = Phi($i0_3 #7, $i0_13 #21, $i0_4 #8, $i0_5 #10);

(20)    goto label07;

     label14:
        $r3 := @caughtexception;

        $r7_12 = Phi($r7 #3, $r7_13 #22, $r7_1 #4, $r7_2 #5);

        $r6_13 = Phi($r6_1 #3, $r6_14 #22, $r6_3 #4);

        $i0_13 = Phi($i0_1 #3, $i0_14 #22, $i0_2 #4, $i0_3 #6);

(21)    goto label05;

     label15:
        $r4 := @caughtexception;

        $r7_13 = Phi($r7 #0);

        $r6_14 = Phi($r6 #0, $r6_1 #1);

        $i0_14 = Phi($i0 #0, $i0_1 #2);

(22)    goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label15;
        catch java.lang.NoSuchFieldError from label03 to label04 with label14;
        catch java.lang.NoSuchFieldError from label05 to label06 with label13;
        catch java.lang.NoSuchFieldError from label07 to label08 with label12;
        catch java.lang.NoSuchFieldError from label09 to label10 with label11;
    }
}
