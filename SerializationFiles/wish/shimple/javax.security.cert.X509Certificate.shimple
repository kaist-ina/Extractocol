public abstract class javax.security.cert.X509Certificate extends javax.security.cert.Certificate
{

    public void <init>()
    {
        javax.security.cert.X509Certificate r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.security.cert.X509Certificate;

        specialinvoke r0.<javax.security.cert.Certificate: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static final javax.security.cert.X509Certificate getInstance(java.io.InputStream) throws javax.security.cert.CertificateException
    {
        java.io.InputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static final javax.security.cert.X509Certificate getInstance(byte[]) throws javax.security.cert.CertificateException
    {
        byte[] r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: byte[];

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract void checkValidity() throws javax.security.cert.CertificateExpiredException, javax.security.cert.CertificateNotYetValidException;

    public abstract void checkValidity(java.util.Date) throws javax.security.cert.CertificateExpiredException, javax.security.cert.CertificateNotYetValidException;

    public abstract int getVersion();

    public abstract java.math.BigInteger getSerialNumber();

    public abstract java.security.Principal getIssuerDN();

    public abstract java.security.Principal getSubjectDN();

    public abstract java.util.Date getNotBefore();

    public abstract java.util.Date getNotAfter();

    public abstract java.lang.String getSigAlgName();

    public abstract java.lang.String getSigAlgOID();

    public abstract byte[] getSigAlgParams();
}
