public abstract class java.nio.channels.spi.AbstractSelector extends java.nio.channels.Selector
{

    protected void <init>(java.nio.channels.spi.SelectorProvider)
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.nio.channels.spi.SelectorProvider r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        r1 := @parameter0: java.nio.channels.spi.SelectorProvider;

        specialinvoke r0.<java.nio.channels.Selector: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void close() throws java.io.IOException
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected abstract void implCloseSelector() throws java.io.IOException;

    public final boolean isOpen()
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.nio.channels.spi.SelectorProvider provider()
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected final java.util.Set cancelledKeys()
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected abstract java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel, int, java.lang.Object);

    protected final void deregister(java.nio.channels.spi.AbstractSelectionKey)
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.nio.channels.spi.AbstractSelectionKey r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        r1 := @parameter0: java.nio.channels.spi.AbstractSelectionKey;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected final void begin()
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected final void end()
    {
        java.nio.channels.spi.AbstractSelector r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.nio.channels.spi.AbstractSelector;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
