public class com.contextlogic.wish.api.core.WishApiConfig extends java.lang.Object
{
    private java.lang.String apiBaseUrlString;
    private java.lang.String apiCountryCode;

    public void <init>()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        java.lang.String $r1, $r1_1, $r1_2, $r1_3, $r1_4, $r1_5, $r1_6, $r1_7, $r1_8, $r1_9;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8;
        com.contextlogic.wish.WishApplication $r2, $r2_1;
        com.contextlogic.wish.http.WishHttpClient $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.contextlogic.wish.user.UserPreferences: java.lang.String getApiRootPath()>();

        $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString> = $r1;

        $r1_1 = staticinvoke <com.contextlogic.wish.user.UserPreferences: java.lang.String getApiCountryCode()>();

        $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiCountryCode> = $r1_1;

        $r1_2 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

(0)     if $r1_2 == null goto label1;

        $r1_3 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

        $z0 = virtualinvoke $r1_3.<java.lang.String: boolean contains(java.lang.CharSequence)>("wishwall.me");

(1)     if $z0 == 0 goto label2;

     label1:
        $r1_4 = Phi($r1_2 #0, $r1_3 #1);

        $z0_1 = Phi($z0 #0, $z0 #1);

(2)     $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString> = "www.wish.com";

     label2:
        $r1_5 = Phi($r1_3 #1, $r1_4 #2);

        $z0_2 = Phi($z0 #1, $z0_1 #2);

        $r2 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

        $z0_3 = virtualinvoke $r2.<com.contextlogic.wish.WishApplication: boolean isGooglePlusBuild()>();

        if $z0_3 == 0 goto label3;

        $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString> = "www.wish.com";

     label3:
        $r2_1 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

        $z0_4 = virtualinvoke $r2_1.<com.contextlogic.wish.WishApplication: boolean isDeveloperBuild()>();

(3)     if $z0_4 == 0 goto label5;

        $r1_6 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

        $z0_5 = virtualinvoke $r1_6.<java.lang.String: boolean equals(java.lang.Object)>("testing.wish.com");

(4)     if $z0_5 == 0 goto label5;

        $r3 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

(5)     virtualinvoke $r3.<com.contextlogic.wish.http.WishHttpClient: void setTestingCredentials()>();

     label4:
        $r1_7 = Phi($r1_6 #5, $r1_9 #6, $r1_9 #7);

        $r3_1 = Phi($r3 #5, $r3 #6, $r3_2 #7);

        $z0_6 = Phi($z0_5 #5, $z0_8 #6, $z0_8 #7);

        virtualinvoke $r0.<com.contextlogic.wish.api.core.WishApiConfig: void clearSessionCookies()>();

        return;

     label5:
        $r1_8 = Phi($r1_5 #3, $r1_6 #4);

        $z0_7 = Phi($z0_4 #3, $z0_5 #4);

        $r1_9 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

        $z0_8 = virtualinvoke $r1_9.<java.lang.String: boolean equals(java.lang.Object)>("sandbox.wish.com");

(6)     if $z0_8 == 0 goto label4;

        $r3_2 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        virtualinvoke $r3_2.<com.contextlogic.wish.http.WishHttpClient: void setSandboxCredentials()>();

(7)     goto label4;
    }

    public void addSessionCookie(java.lang.String)
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        java.lang.String $r1, $r3;
        com.contextlogic.wish.http.WishHttpClient $r2;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        $r3 = virtualinvoke $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String getApiBaseUrlString()>();

        virtualinvoke $r2.<com.contextlogic.wish.http.WishHttpClient: void addSessionCookie(java.lang.String,java.lang.String)>($r1, $r3);

        return;
    }

    public void clearSessionCookies()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        com.contextlogic.wish.http.WishHttpClient $r1, $r1_1, $r1_2;
        java.lang.String $r2, $r4, $r2_1;
        java.util.Locale $r3;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        $r1 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        virtualinvoke $r1.<com.contextlogic.wish.http.WishHttpClient: void clearCookies()>();

        $r1_1 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        $r2 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

        virtualinvoke $r1_1.<com.contextlogic.wish.http.WishHttpClient: void setXsrfCookie(java.lang.String)>($r2);

        $r1_2 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2_1 = virtualinvoke $r3.<java.util.Locale: java.lang.String toString()>();

        $r4 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

        virtualinvoke $r1_2.<com.contextlogic.wish.http.WishHttpClient: void setLocaleCookie(java.lang.String,java.lang.String)>($r2_1, $r4);

        return;
    }

    public java.lang.String getApiBaseUrlString()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        java.lang.String r1;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        r1 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

        return r1;
    }

    public java.lang.String getApiCountryCode()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        java.lang.String r1;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        r1 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiCountryCode>;

        return r1;
    }

    public ch.boye.httpclientandroidlib.cookie.Cookie getBsidCookie()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        com.contextlogic.wish.http.WishHttpClient $r1;
        ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie $r2;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        $r1 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        $r2 = virtualinvoke $r1.<com.contextlogic.wish.http.WishHttpClient: ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie getBsidCookie()>();

        return $r2;
    }

    public ch.boye.httpclientandroidlib.cookie.Cookie getSessionCookie()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        com.contextlogic.wish.http.WishHttpClient $r1;
        ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie $r2;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        $r1 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        $r2 = virtualinvoke $r1.<com.contextlogic.wish.http.WishHttpClient: ch.boye.httpclientandroidlib.impl.cookie.BasicClientCookie getSessionCookie()>();

        return $r2;
    }

    public boolean hasSessionCookie()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        ch.boye.httpclientandroidlib.cookie.Cookie $r1;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        $r1 = virtualinvoke $r0.<com.contextlogic.wish.api.core.WishApiConfig: ch.boye.httpclientandroidlib.cookie.Cookie getSessionCookie()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void resetWebViewCookies()
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        java.lang.IllegalStateException $r1;
        java.lang.Exception $r2;
        android.webkit.CookieSyncManager $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;
        android.webkit.CookieManager $r4;
        com.contextlogic.wish.WishApplication $r5;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

(0)     $r3 = null;

     label1:
(1)     $r3_1 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

     label2:
        $r3_2 = Phi($r3_1 #1, $r3_4 #4, $r3_5 #5);

        $r4 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        if $r4 == null goto label7;

        if $r3_2 == null goto label7;

        virtualinvoke $r4.<android.webkit.CookieManager: void removeAllCookie()>();

        virtualinvoke $r3_2.<android.webkit.CookieSyncManager: void sync()>();

        return;

     label3:
        $r1 := @caughtexception;

(2)     $r3_3 = Phi($r3 #0, $r3_1 #1);

     label4:
        $r5 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

        staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>($r5);

(3)     $r3_4 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

     label5:
(4)     goto label2;

     label6:
        $r2 := @caughtexception;

        $r3_5 = Phi($r3_3 #2, $r3_4 #3);

(5)     goto label2;

     label7:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void setApiBaseUrlString(java.lang.String)
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        java.lang.String $r1, $r1_1;
        com.contextlogic.wish.WishApplication $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        com.contextlogic.wish.http.WishHttpClient $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString> = $r1;

        staticinvoke <com.contextlogic.wish.user.UserPreferences: void setApiRootPath(java.lang.String)>($r1);

        virtualinvoke $r0.<com.contextlogic.wish.api.core.WishApiConfig: void clearSessionCookies()>();

        $r2 = staticinvoke <com.contextlogic.wish.WishApplication: com.contextlogic.wish.WishApplication getAppInstance()>();

        $z0 = virtualinvoke $r2.<com.contextlogic.wish.WishApplication: boolean isDeveloperBuild()>();

(0)     if $z0 == 0 goto label1;

        $z0_1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("testing.wish.com");

(1)     if $z0_1 == 0 goto label1;

        $r3 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        virtualinvoke $r3.<com.contextlogic.wish.http.WishHttpClient: void setTestingCredentials()>();

        return;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r1_1 = $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiBaseUrlString>;

        $z0_3 = virtualinvoke $r1_1.<java.lang.String: boolean equals(java.lang.Object)>("sandbox.wish.com");

(2)     if $z0_3 == 0 goto label2;

        $r3_1 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

(3)     virtualinvoke $r3_1.<com.contextlogic.wish.http.WishHttpClient: void setSandboxCredentials()>();

     label2:
        $r3_2 = Phi($r3 #2, $r3_1 #3);

        return;
    }

    public void setApiCountryCode(java.lang.String)
    {
        com.contextlogic.wish.api.core.WishApiConfig $r0;
        java.lang.String $r1;

        $r0 := @this: com.contextlogic.wish.api.core.WishApiConfig;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.contextlogic.wish.api.core.WishApiConfig: java.lang.String apiCountryCode> = $r1;

        staticinvoke <com.contextlogic.wish.user.UserPreferences: void setApiCountryCode(java.lang.String)>($r1);

        return;
    }
}
