final class ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder extends java.lang.Object
{
    private static final java.lang.ThreadLocal THREADLOCAL_FORMATS;

    static void <clinit>()
    {
        ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder$1 $r0;

        $r0 = new ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder$1;

        specialinvoke $r0.<ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder$1: void <init>()>();

        <ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder: java.lang.ThreadLocal THREADLOCAL_FORMATS> = $r0;

        return;
    }

    void <init>()
    {
        ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.text.SimpleDateFormat formatFor(java.lang.String)
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        java.lang.ref.SoftReference $r2, $r2_1, $r2_2;
        java.text.SimpleDateFormat $r3, $r3_1, $r3_2;
        java.util.Locale $r4;
        java.lang.ThreadLocal $r5, $r5_1, $r5_2;
        java.lang.Object $r6, $r6_1, $r6_2;
        java.util.Map $r7, $r8, $r8_1, $r8_2;
        java.util.TimeZone $r9;

        $r0 := @parameter0: java.lang.String;

        $r5 = <ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder: java.lang.ThreadLocal THREADLOCAL_FORMATS>;

        $r6 = virtualinvoke $r5.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.lang.ref.SoftReference) $r6;

        $r6_1 = virtualinvoke $r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r7 = (java.util.Map) $r6_1;

        $r8 = $r7;

(0)     if $r7 != null goto label1;

        $r1 = new java.util.HashMap;

        $r8_1 = $r1;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r5_1 = <ch.boye.httpclientandroidlib.impl.cookie.DateUtils$DateFormatHolder: java.lang.ThreadLocal THREADLOCAL_FORMATS>;

        $r2_1 = new java.lang.ref.SoftReference;

        specialinvoke $r2_1.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r1);

(1)     virtualinvoke $r5_1.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2_1);

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r5_2 = Phi($r5 #0, $r5_1 #1);

        $r8_2 = Phi($r8 #0, $r8_1 #1);

        $r6_2 = interfaceinvoke $r8_2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (java.text.SimpleDateFormat) $r6_2;

(2)     if $r3 != null goto label2;

        $r3_1 = new java.text.SimpleDateFormat;

        $r4 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r3_1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r0, $r4);

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r3_1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r9);

(3)     interfaceinvoke $r8_2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3_1);

     label2:
        $r3_2 = Phi($r3 #2, $r3_1 #3);

        return $r3_2;
    }
}
