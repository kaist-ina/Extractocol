class com.crashlytics.android.core.CrashTest$1 extends android.os.AsyncTask
{
    final com.crashlytics.android.core.CrashTest this$0;
    final long val$delayMs;

    void <init>(com.crashlytics.android.core.CrashTest, long)
    {
        com.crashlytics.android.core.CrashTest$1 $r0;
        com.crashlytics.android.core.CrashTest $r1;
        long $l0;

        $r0 := @this: com.crashlytics.android.core.CrashTest$1;

        $r1 := @parameter0: com.crashlytics.android.core.CrashTest;

        $l0 := @parameter1: long;

        $r0.<com.crashlytics.android.core.CrashTest$1: com.crashlytics.android.core.CrashTest this$0> = $r1;

        $r0.<com.crashlytics.android.core.CrashTest$1: long val$delayMs> = $l0;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.crashlytics.android.core.CrashTest$1 $r0;
        java.lang.Object[] $r1;
        java.lang.Void $r2;
        java.lang.Void[] $r3;

        $r0 := @this: com.crashlytics.android.core.CrashTest$1;

        $r1 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r1;

        $r2 = virtualinvoke $r0.<com.crashlytics.android.core.CrashTest$1: java.lang.Void doInBackground(java.lang.Void[])>($r3);

        return $r2;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.crashlytics.android.core.CrashTest$1 $r0;
        java.lang.Void[] $r1;
        long $l0;
        com.crashlytics.android.core.CrashTest $r2;
        java.lang.InterruptedException $r3;

        $r0 := @this: com.crashlytics.android.core.CrashTest$1;

        $r1 := @parameter0: java.lang.Void[];

        $l0 = $r0.<com.crashlytics.android.core.CrashTest$1: long val$delayMs>;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label2:
        $r2 = $r0.<com.crashlytics.android.core.CrashTest$1: com.crashlytics.android.core.CrashTest this$0>;

        virtualinvoke $r2.<com.crashlytics.android.core.CrashTest: void throwRuntimeException(java.lang.String)>("Background thread crash");

        return null;

     label3:
        $r3 := @caughtexception;

        goto label2;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
