public class android.support.v7.internal.widget.ViewUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sComputeFitSystemWindowsMethod;

    static void <clinit>()
    {
        int $i0;
        java.lang.Class $r0;
        java.lang.Class[] $r1;
        java.lang.NoSuchMethodException $r2;
        java.lang.reflect.Method $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

(0)     if $i0 < 18 goto label8;

        $r0 = class "android/view/View";

        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "android/graphics/Rect";

(1)     $r1[1] = class "android/graphics/Rect";

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("computeFitSystemWindows", $r1);

     label2:
        <android.support.v7.internal.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod> = $r3;

(2)     $r3_1 = <android.support.v7.internal.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

     label3:
        $z0 = virtualinvoke $r3_1.<java.lang.reflect.Method: boolean isAccessible()>();

     label4:
(3)     if $z0 != 0 goto label8;

(4)     $r3_2 = <android.support.v7.internal.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

     label5:
        virtualinvoke $r3_2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label6:
        return;

     label7:
        $r2 := @caughtexception;

        $r3_3 = Phi($r3 #1, $r3_1 #2, $r3_2 #4);

(5)     staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewUtils", "Could not find method computeFitSystemWindows. Oh well.");

     label8:
        $r3_4 = Phi($r3 #0, $r3_1 #3, $r3_3 #5);

        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    private void <init>()
    {
        android.support.v7.internal.widget.ViewUtils $r0;

        $r0 := @this: android.support.v7.internal.widget.ViewUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int combineMeasuredStates(int, int)
    {
        int $i0, $i1, $i1_1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1_1 = $i1 | $i0;

        return $i1_1;
    }

    public static void computeFitSystemWindows(android.view.View, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.View $r0;
        android.graphics.Rect $r1, $r2;
        java.lang.Object[] $r3;
        java.lang.Exception $r4;
        java.lang.reflect.Method $r5, $r5_1, $r5_2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Rect;

        $r2 := @parameter2: android.graphics.Rect;

        $r5 = <android.support.v7.internal.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

(0)     if $r5 == null goto label4;

        $r5_1 = <android.support.v7.internal.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod>;

     label1:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        virtualinvoke $r5_1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

(1)     staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke computeFitSystemWindows", $r4);

     label4:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isLayoutRtl(android.view.View)
    {
        android.view.View $r0;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void makeOptionalFitsSystemWindows(android.view.View)
    {
        android.view.View $r0;
        int $i0;
        java.lang.Class[] $r1;
        java.lang.Object[] $r2;
        java.lang.NoSuchMethodException $r3;
        java.lang.reflect.InvocationTargetException $r4;
        java.lang.IllegalAccessException $r5;
        java.lang.Class $r6;
        java.lang.reflect.Method $r7;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label12;

     label01:
        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r1 = newarray (java.lang.Class)[0];

     label03:
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("makeOptionalFitsSystemWindows", $r1);

        $z0 = virtualinvoke $r7.<java.lang.reflect.Method: boolean isAccessible()>();

     label04:
        if $z0 != 0 goto label06;

     label05:
        virtualinvoke $r7.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label06:
        $r2 = newarray (java.lang.Object)[0];

     label07:
        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r2);

     label08:
        return;

     label09:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ViewUtils", "Could not find method makeOptionalFitsSystemWindows. Oh well...");

        return;

     label10:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", $r4);

        return;

     label11:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", $r5);

     label12:
        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
    }
}
