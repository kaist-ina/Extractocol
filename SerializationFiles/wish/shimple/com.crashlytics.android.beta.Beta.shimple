public class com.crashlytics.android.beta.Beta extends io.fabric.sdk.android.Kit implements io.fabric.sdk.android.services.common.DeviceIdentifierProvider
{
    private static final java.lang.String CRASHLYTICS_API_ENDPOINT;
    private static final java.lang.String CRASHLYTICS_BUILD_PROPERTIES;
    static final java.lang.String NO_DEVICE_TOKEN;
    public static final java.lang.String TAG;
    private final io.fabric.sdk.android.services.cache.MemoryValueCache deviceTokenCache;
    private final com.crashlytics.android.beta.DeviceTokenLoader deviceTokenLoader;
    private com.crashlytics.android.beta.UpdatesController updatesController;

    public void <init>()
    {
        com.crashlytics.android.beta.Beta $r0;
        io.fabric.sdk.android.services.cache.MemoryValueCache $r1;
        com.crashlytics.android.beta.DeviceTokenLoader $r2;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        specialinvoke $r0.<io.fabric.sdk.android.Kit: void <init>()>();

        $r1 = new io.fabric.sdk.android.services.cache.MemoryValueCache;

        specialinvoke $r1.<io.fabric.sdk.android.services.cache.MemoryValueCache: void <init>()>();

        $r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.cache.MemoryValueCache deviceTokenCache> = $r1;

        $r2 = new com.crashlytics.android.beta.DeviceTokenLoader;

        specialinvoke $r2.<com.crashlytics.android.beta.DeviceTokenLoader: void <init>()>();

        $r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.DeviceTokenLoader deviceTokenLoader> = $r2;

        return;
    }

    private java.lang.String getBetaDeviceToken(android.content.Context, java.lang.String)
    {
        com.crashlytics.android.beta.Beta $r0;
        android.content.Context $r1;
        int $i0;
        io.fabric.sdk.android.services.cache.MemoryValueCache $r2;
        com.crashlytics.android.beta.DeviceTokenLoader $r3;
        java.lang.String $r4, $r8, $r4_1, $r4_2;
        java.lang.Exception $r5;
        boolean $z0, $z0_1, $z0_2;
        io.fabric.sdk.android.Logger $r6, $r6_1, $r6_2;
        java.lang.Object $r7;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $z0 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: boolean isAppPossiblyInstalledByBeta(java.lang.String,int)>($r4, $i0);

        if $z0 == 0 goto label7;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

(0)     interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "App was possibly installed by Beta. Getting device token");

     label1:
        $r2 = $r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.cache.MemoryValueCache deviceTokenCache>;

        $r3 = $r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.DeviceTokenLoader deviceTokenLoader>;

        $r7 = virtualinvoke $r2.<io.fabric.sdk.android.services.cache.MemoryValueCache: java.lang.Object get(android.content.Context,io.fabric.sdk.android.services.cache.ValueLoader)>($r1, $r3);

        $r8 = (java.lang.String) $r7;

     label2:
(1)     $r4_1 = "";

     label3:
(2)     $z0_1 = virtualinvoke $r4_1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label4:
        if $z0_1 == 0 goto label5;

        return null;

     label5:
        return $r8;

     label6:
        $r5 := @caughtexception;

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $z0_2 = Phi($z0 #0, $z0_1 #2);

        $r6_1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6_1.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Failed to load the Beta device token", $r5);

        return null;

     label7:
        $r6_2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6_2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "App was not installed by Beta. Skipping device token");

        return null;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    private io.fabric.sdk.android.services.settings.BetaSettingsData getBetaSettingsData()
    {
        com.crashlytics.android.beta.Beta $r0;
        io.fabric.sdk.android.services.settings.Settings $r1;
        io.fabric.sdk.android.services.settings.SettingsData $r2;
        io.fabric.sdk.android.services.settings.BetaSettingsData r3;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = staticinvoke <io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings getInstance()>();

        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.SettingsData awaitSettingsData()>();

        if $r2 == null goto label1;

        r3 = $r2.<io.fabric.sdk.android.services.settings.SettingsData: io.fabric.sdk.android.services.settings.BetaSettingsData betaSettingsData>;

        return r3;

     label1:
        return null;
    }

    public static com.crashlytics.android.beta.Beta getInstance()
    {
        io.fabric.sdk.android.Kit $r0;
        com.crashlytics.android.beta.Beta $r1;

        $r0 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Kit getKit(java.lang.Class)>(class "com/crashlytics/android/beta/Beta");

        $r1 = (com.crashlytics.android.beta.Beta) $r0;

        return $r1;
    }

    private com.crashlytics.android.beta.BuildProperties loadBuildProperties(android.content.Context)
    {
        com.crashlytics.android.beta.Beta $r0;
        android.content.Context $r1;
        java.io.IOException $r2, $r4, $r6;
        java.lang.Exception $r3;
        java.lang.Throwable $r5;
        java.io.InputStream $r7, $r10, $r7_1, $r7_2, $r7_3, $r7_4;
        com.crashlytics.android.beta.BuildProperties $r8, $r11, $r8_1, $r8_2, $r8_3, $r8_4, $r8_5;
        android.content.res.AssetManager $r9;
        io.fabric.sdk.android.Logger $r12, $r12_1, $r12_2, $r12_3, $r12_4, $r12_5, $r12_6, $r12_7, $r12_8, $r12_9;
        java.lang.StringBuilder $r13, $r13_1, $r13_2, $r13_3, $r13_4, $r13_5, $r13_6, $r13_7, $r13_8, $r13_9, $r13_10, $r13_11, $r13_12;
        java.lang.String $r14, $r14_1, $r14_2, $r14_3, $r14_4, $r14_5, $r14_6, $r14_7, $r14_8;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 := @parameter0: android.content.Context;

        $r7 = null;

(0)     $r8 = null;

     label01:
        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r10 = virtualinvoke $r9.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("crashlytics-build.properties");

     label02:
        $r7_1 = $r10;

(1)     if $r10 == null goto label08;

     label03:
        $r11 = staticinvoke <com.crashlytics.android.beta.BuildProperties: com.crashlytics.android.beta.BuildProperties fromPropertiesStream(java.io.InputStream)>($r10);

     label04:
(2)     $r8_1 = $r11;

     label05:
        $r12 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label06:
        $r13 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = $r11.<com.crashlytics.android.beta.BuildProperties: java.lang.String packageName>;

(3)     $r13_1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

(4)     $r13_2 = virtualinvoke $r13_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" build properties: ");

(5)     $r14_1 = $r11.<com.crashlytics.android.beta.BuildProperties: java.lang.String versionName>;

(6)     $r13_3 = virtualinvoke $r13_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14_1);

(7)     $r13_4 = virtualinvoke $r13_3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

(8)     $r14_2 = $r11.<com.crashlytics.android.beta.BuildProperties: java.lang.String versionCode>;

(9)     $r13_5 = virtualinvoke $r13_4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14_2);

(10)    $r13_6 = virtualinvoke $r13_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

(11)    $r13_7 = virtualinvoke $r13_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

(12)    $r14_3 = $r11.<com.crashlytics.android.beta.BuildProperties: java.lang.String buildId>;

(13)    $r13_8 = virtualinvoke $r13_7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14_3);

(14)    $r14_4 = virtualinvoke $r13_8.<java.lang.StringBuilder: java.lang.String toString()>();

(15)    interfaceinvoke $r12.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r14_4);

     label08:
        $r12_1 = Phi($r12 #1, $r12 #15);

        $r13_9 = Phi($r13 #1, $r13_8 #15);

        $r8_2 = Phi($r8 #1, $r8_1 #15);

        $r14_5 = Phi($r14 #1, $r14_4 #15);

(16)    if $r10 == null goto label22;

     label09:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

     label10:
        return $r8_2;

     label11:
        $r2 := @caughtexception;

        $r12_2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r12_2.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error closing Beta build properties asset", $r2);

        return $r8_2;

     label12:
        $r3 := @caughtexception;

        $r12_3 = Phi($r12 #0);

        $r13_10 = Phi($r13 #0, $r13_1 #3, $r13_2 #4, $r13_3 #6, $r13_4 #7, $r13_5 #9, $r13_6 #10, $r13_7 #11, $r13_8 #13);

        $r8_3 = Phi($r8 #0, $r8_1 #2);

        $r14_6 = Phi($r14 #0, $r14_1 #5, $r14_2 #8, $r14_3 #12, $r14_4 #14);

(17)    $r7_2 = Phi($r7 #0, $r7_1 #1);

     label13:
(18)    $r12_4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r12_4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error reading Beta build properties", $r3);

     label14:
(19)    if $r7_2 == null goto label22;

     label15:
        virtualinvoke $r7_2.<java.io.InputStream: void close()>();

     label16:
        return $r8_3;

     label17:
        $r4 := @caughtexception;

        $r12_5 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r12_5.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error closing Beta build properties asset", $r4);

        return $r8_3;

     label18:
        $r5 := @caughtexception;

        $r12_6 = Phi($r12 #0, $r12_3 #17, $r12_4 #18);

        $r13_11 = Phi($r13 #0, $r13_1 #3, $r13_2 #4, $r13_3 #6, $r13_4 #7, $r13_5 #9, $r13_6 #10, $r13_7 #11, $r13_8 #13, $r13_10 #17);

        $r8_4 = Phi($r8 #0, $r8_1 #2, $r8_3 #17);

        $r14_7 = Phi($r14 #0, $r14_1 #5, $r14_2 #8, $r14_3 #12, $r14_4 #14, $r14_6 #17);

        $r7_3 = Phi($r7 #0, $r7_1 #1, $r7_2 #17);

(20)    if $r7_3 == null goto label20;

     label19:
(21)    virtualinvoke $r7_3.<java.io.InputStream: void close()>();

     label20:
        $r12_7 = Phi($r12_6 #20, $r12_6 #21, $r12_8 #22);

        throw $r5;

     label21:
        $r6 := @caughtexception;

        $r12_8 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r12_8.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", "Error closing Beta build properties asset", $r6);

(22)    goto label20;

     label22:
        $r12_9 = Phi($r12_1 #16, $r12_4 #19);

        $r13_12 = Phi($r13_9 #16, $r13_10 #19);

        $r8_5 = Phi($r8_2 #16, $r8_3 #19);

        $r14_8 = Phi($r14_5 #16, $r14_6 #19);

        $r7_4 = Phi($r7_1 #16, $r7_2 #19);

        return $r8_5;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label19 to label20 with label21;
    }

    boolean canCheckForUpdates(io.fabric.sdk.android.services.settings.BetaSettingsData, com.crashlytics.android.beta.BuildProperties)
    {
        com.crashlytics.android.beta.Beta $r0;
        io.fabric.sdk.android.services.settings.BetaSettingsData $r1;
        com.crashlytics.android.beta.BuildProperties $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.BetaSettingsData;

        $r2 := @parameter1: com.crashlytics.android.beta.BuildProperties;

        if $r1 == null goto label1;

        $r3 = $r1.<io.fabric.sdk.android.services.settings.BetaSettingsData: java.lang.String updateUrl>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    com.crashlytics.android.beta.UpdatesController createUpdatesController(int, android.app.Application)
    {
        com.crashlytics.android.beta.Beta $r0;
        int $i0;
        android.app.Application $r1;
        com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController $r2;
        com.crashlytics.android.beta.ImmediateCheckForUpdatesController $r3;
        io.fabric.sdk.android.Fabric $r4, $r4_1;
        io.fabric.sdk.android.ActivityLifecycleManager $r5;
        java.util.concurrent.ExecutorService $r6;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.app.Application;

        if $i0 < 14 goto label1;

        $r4 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.Fabric getFabric()>();

        $r5 = virtualinvoke $r4.<io.fabric.sdk.android.Fabric: io.fabric.sdk.android.ActivityLifecycleManager getActivityLifecycleManager()>();

        $r4_1 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.Fabric getFabric()>();

        $r6 = virtualinvoke $r4_1.<io.fabric.sdk.android.Fabric: java.util.concurrent.ExecutorService getExecutorService()>();

        $r2 = new com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController;

        specialinvoke $r2.<com.crashlytics.android.beta.ActivityLifecycleCheckForUpdatesController: void <init>(io.fabric.sdk.android.ActivityLifecycleManager,java.util.concurrent.ExecutorService)>($r5, $r6);

        return $r2;

     label1:
        $r3 = new com.crashlytics.android.beta.ImmediateCheckForUpdatesController;

        specialinvoke $r3.<com.crashlytics.android.beta.ImmediateCheckForUpdatesController: void <init>()>();

        return $r3;
    }

    protected java.lang.Boolean doInBackground()
    {
        com.crashlytics.android.beta.Beta $r0;
        io.fabric.sdk.android.services.persistence.PreferenceStoreImpl $r1;
        io.fabric.sdk.android.services.common.SystemCurrentTimeProvider $r2;
        io.fabric.sdk.android.services.network.DefaultHttpRequestFactory $r3;
        io.fabric.sdk.android.Logger $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        android.content.Context $r5;
        io.fabric.sdk.android.services.common.IdManager $r6;
        java.lang.String $r7, $r7_1;
        boolean $z0, $z0_1;
        java.lang.Boolean $r8, $r8_1;
        io.fabric.sdk.android.services.settings.BetaSettingsData $r9;
        com.crashlytics.android.beta.BuildProperties $r10;
        com.crashlytics.android.beta.UpdatesController $r11;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "Beta kit initializing...");

        $r5 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r6 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r7 = virtualinvoke $r6.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getInstallerPackageName()>();

        $r7_1 = specialinvoke $r0.<com.crashlytics.android.beta.Beta: java.lang.String getBetaDeviceToken(android.content.Context,java.lang.String)>($r5, $r7);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7_1);

        if $z0 == 0 goto label1;

        $r4_1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4_1.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "A Beta device token was not found for this app");

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r8;

     label1:
        $r4_2 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4_2.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "Beta device token is present, checking for app updates.");

        $r9 = specialinvoke $r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.settings.BetaSettingsData getBetaSettingsData()>();

        $r10 = specialinvoke $r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.BuildProperties loadBuildProperties(android.content.Context)>($r5);

        $z0_1 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: boolean canCheckForUpdates(io.fabric.sdk.android.services.settings.BetaSettingsData,com.crashlytics.android.beta.BuildProperties)>($r9, $r10);

(0)     if $z0_1 == 0 goto label2;

        $r11 = $r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.UpdatesController updatesController>;

        $r1 = new io.fabric.sdk.android.services.persistence.PreferenceStoreImpl;

        specialinvoke $r1.<io.fabric.sdk.android.services.persistence.PreferenceStoreImpl: void <init>(io.fabric.sdk.android.Kit)>($r0);

        $r2 = new io.fabric.sdk.android.services.common.SystemCurrentTimeProvider;

        specialinvoke $r2.<io.fabric.sdk.android.services.common.SystemCurrentTimeProvider: void <init>()>();

        $r3 = new io.fabric.sdk.android.services.network.DefaultHttpRequestFactory;

        $r4_3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        specialinvoke $r3.<io.fabric.sdk.android.services.network.DefaultHttpRequestFactory: void <init>(io.fabric.sdk.android.Logger)>($r4_3);

(1)     interfaceinvoke $r11.<com.crashlytics.android.beta.UpdatesController: void initialize(android.content.Context,com.crashlytics.android.beta.Beta,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.settings.BetaSettingsData,com.crashlytics.android.beta.BuildProperties,io.fabric.sdk.android.services.persistence.PreferenceStore,io.fabric.sdk.android.services.common.CurrentTimeProvider,io.fabric.sdk.android.services.network.HttpRequestFactory)>($r5, $r0, $r6, $r9, $r10, $r1, $r2, $r3);

     label2:
        $r4_4 = Phi($r4_2 #0, $r4_3 #1);

        $r8_1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r8_1;
    }

    protected volatile java.lang.Object doInBackground()
    {
        com.crashlytics.android.beta.Beta $r0;
        java.lang.Boolean $r1;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: java.lang.Boolean doInBackground()>();

        return $r1;
    }

    public java.util.Map getDeviceIdentifiers()
    {
        com.crashlytics.android.beta.Beta $r0;
        java.util.HashMap $r1;
        io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType $r2;
        io.fabric.sdk.android.services.common.IdManager $r3;
        java.lang.String $r4, $r4_1;
        android.content.Context $r5;
        boolean $z0;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r3 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: io.fabric.sdk.android.services.common.IdManager getIdManager()>();

        $r4 = virtualinvoke $r3.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getInstallerPackageName()>();

        $r5 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r4_1 = specialinvoke $r0.<com.crashlytics.android.beta.Beta: java.lang.String getBetaDeviceToken(android.content.Context,java.lang.String)>($r5, $r4);

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4_1);

        if $z0 != 0 goto label1;

        $r2 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType FONT_TOKEN>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4_1);

     label1:
        return $r1;
    }

    public java.lang.String getIdentifier()
    {
        com.crashlytics.android.beta.Beta $r0;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        return "com.crashlytics.sdk.android:beta";
    }

    java.lang.String getOverridenSpiEndpoint()
    {
        com.crashlytics.android.beta.Beta $r0;
        android.content.Context $r1;
        java.lang.String $r2;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r2 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String getStringsFileValue(android.content.Context,java.lang.String)>($r1, "com.crashlytics.ApiEndpoint");

        return $r2;
    }

    public java.lang.String getVersion()
    {
        com.crashlytics.android.beta.Beta $r0;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        return "1.1.3.61";
    }

    boolean isAppPossiblyInstalledByBeta(java.lang.String, int)
    {
        com.crashlytics.android.beta.Beta $r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $i0 >= 11 goto label2;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = "io.crash.air";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    protected boolean onPreExecute()
    {
        com.crashlytics.android.beta.Beta $r0;
        int $i0;
        android.content.Context $r1, $r1_1;
        android.app.Application $r2;
        com.crashlytics.android.beta.UpdatesController $r3;

        $r0 := @this: com.crashlytics.android.beta.Beta;

        $r1 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: android.content.Context getContext()>();

        $r1_1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = (android.app.Application) $r1_1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r3 = virtualinvoke $r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.UpdatesController createUpdatesController(int,android.app.Application)>($i0, $r2);

        $r0.<com.crashlytics.android.beta.Beta: com.crashlytics.android.beta.UpdatesController updatesController> = $r3;

        return 1;
    }
}
