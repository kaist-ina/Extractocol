public abstract class java.lang.Enum extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{

    protected void <init>(java.lang.String, int)
    {
        java.lang.Enum r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.lang.String name()
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int ordinal()
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        java.lang.Enum r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final int hashCode()
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    protected final java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int compareTo(java.lang.Enum)
    {
        java.lang.Enum r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.Enum;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.lang.Class getDeclaringClass()
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.Enum valueOf(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    protected final void finalize()
    {
        java.lang.Enum r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.lang.Enum r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Enum) r1;

        $i0 = virtualinvoke r0.<java.lang.Enum: int compareTo(java.lang.Enum)>($r2);

        return $i0;
    }
}
