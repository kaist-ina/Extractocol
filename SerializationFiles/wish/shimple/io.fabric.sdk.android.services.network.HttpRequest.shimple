public class io.fabric.sdk.android.services.network.HttpRequest extends java.lang.Object
{
    private static final java.lang.String BOUNDARY;
    public static final java.lang.String CHARSET_UTF8;
    private static io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY;
    public static final java.lang.String CONTENT_TYPE_FORM;
    public static final java.lang.String CONTENT_TYPE_JSON;
    private static final java.lang.String CONTENT_TYPE_MULTIPART;
    private static final java.lang.String CRLF;
    private static final java.lang.String[] EMPTY_STRINGS;
    public static final java.lang.String ENCODING_GZIP;
    public static final java.lang.String HEADER_ACCEPT;
    public static final java.lang.String HEADER_ACCEPT_CHARSET;
    public static final java.lang.String HEADER_ACCEPT_ENCODING;
    public static final java.lang.String HEADER_AUTHORIZATION;
    public static final java.lang.String HEADER_CACHE_CONTROL;
    public static final java.lang.String HEADER_CONTENT_ENCODING;
    public static final java.lang.String HEADER_CONTENT_LENGTH;
    public static final java.lang.String HEADER_CONTENT_TYPE;
    public static final java.lang.String HEADER_DATE;
    public static final java.lang.String HEADER_ETAG;
    public static final java.lang.String HEADER_EXPIRES;
    public static final java.lang.String HEADER_IF_NONE_MATCH;
    public static final java.lang.String HEADER_LAST_MODIFIED;
    public static final java.lang.String HEADER_LOCATION;
    public static final java.lang.String HEADER_PROXY_AUTHORIZATION;
    public static final java.lang.String HEADER_REFERER;
    public static final java.lang.String HEADER_SERVER;
    public static final java.lang.String HEADER_USER_AGENT;
    public static final java.lang.String METHOD_DELETE;
    public static final java.lang.String METHOD_GET;
    public static final java.lang.String METHOD_HEAD;
    public static final java.lang.String METHOD_OPTIONS;
    public static final java.lang.String METHOD_POST;
    public static final java.lang.String METHOD_PUT;
    public static final java.lang.String METHOD_TRACE;
    public static final java.lang.String PARAM_CHARSET;
    private int bufferSize;
    private java.net.HttpURLConnection connection;
    private boolean form;
    private java.lang.String httpProxyHost;
    private int httpProxyPort;
    private boolean ignoreCloseExceptions;
    private boolean multipart;
    private io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output;
    private final java.lang.String requestMethod;
    private boolean uncompress;
    public final java.net.URL url;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory $r1;

        $r0 = newarray (java.lang.String)[0];

        <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String[] EMPTY_STRINGS> = $r0;

        $r1 = <io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory DEFAULT>;

        <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY> = $r1;

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2, $r6;
        java.net.URL $r3;
        java.net.MalformedURLException $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection> = null;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions> = 1;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress> = 0;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize> = 8192;

        $r3 = new java.net.URL;

     label1:
        $r6 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r6);

     label2:
        $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url> = $r3;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String requestMethod> = $r2;

        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r4);

        throw $r5;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public void <init>(java.net.URL, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.net.URL $r1;
        java.lang.String $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection> = null;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions> = 1;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress> = 0;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize> = 8192;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url> = $r1;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String requestMethod> = $r2;

        return;
    }

    static java.lang.String access$000(java.lang.String)
    {
        java.lang.String $r0, $r0_1;

        $r0 := @parameter0: java.lang.String;

        $r0_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r0);

        return $r0_1;
    }

    static int access$100(io.fabric.sdk.android.services.network.HttpRequest)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int i0;

        $r0 := @parameter0: io.fabric.sdk.android.services.network.HttpRequest;

        i0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        return i0;
    }

    private static java.lang.StringBuilder addParamPrefix(java.lang.String, java.lang.StringBuilder)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i1_1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(63);

        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i1_1 = $i1 + -1;

        if $i0 != -1 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        return $r1;

     label1:
        if $i0 >= $i1_1 goto label2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1_1);

        if $c2 == 38 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

     label2:
        return $r1;
    }

    private static java.lang.StringBuilder addPathSeparator(java.lang.String, java.lang.StringBuilder)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i0_1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        $i0_1 = $i0 + 2;

        $i1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0_1 != $i1 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label1:
        return $r1;
    }

    public static java.lang.String append(java.lang.CharSequence, java.util.Map)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6, $r6_7;
        java.util.Map$Entry $r7, $r7_1, $r7_2, $r7_3;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.String toString()>();

(0)     if $r1 == null goto label4;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addPathSeparator(java.lang.String,java.lang.StringBuilder)>($r3, $r2);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addParamPrefix(java.lang.String,java.lang.StringBuilder)>($r3, $r2);

        $r4 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6_1 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3_1 = virtualinvoke $r6_1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3_1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6_2 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

(1)     if $r6_2 == null goto label2;

(2)     virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6_2);

     label2:
        $r7_1 = Phi($r7 #1, $r7 #2, $r7_2 #3, $r7_2 #4);

        $r3_2 = Phi($r3_1 #1, $r3_1 #2, $r3_3 #3, $r3_3 #4);

        $z0_1 = Phi($z0 #1, $z0 #2, $z0_2 #3, $z0_2 #4);

        $r6_3 = Phi($r6_2 #1, $r6_2 #2, $r6_6 #3, $r6_6 #4);

        $z0_2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0_2 == 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        $r6_4 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7_2 = (java.util.Map$Entry) $r6_4;

        $r6_5 = interfaceinvoke $r7_2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3_3 = virtualinvoke $r6_5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3_3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6_6 = interfaceinvoke $r7_2.<java.util.Map$Entry: java.lang.Object getValue()>();

(3)     if $r6_6 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6_6);

(4)     goto label2;

     label3:
(5)     $r3_4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r7_3 = Phi($r7 #0, $r7_1 #5);

        $r3_5 = Phi($r3 #0, $r3_4 #5);

        $z0_3 = Phi($z0 #0, $z0_2 #5);

        $r6_7 = Phi($r6 #0, $r6_3 #5);

        return $r3_5;
    }

    public static transient java.lang.String append(java.lang.CharSequence, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        java.lang.Object[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r4_1, $r4_2;
        int $i0, $i1, $i0_1, $i0_2, $i0_3, $i0_4, $i1_1, $i1_2, $i0_5, $i1_3, $i0_6;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.Object[];

        $r4 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.String toString()>();

(0)     if $r1 == null goto label7;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return $r4;

     label1:
        $i0_1 = lengthof $r1;

        $i0_2 = $i0_1 % 2;

        if $i0_2 == 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify an even number of parameter names/values");

        throw $r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addPathSeparator(java.lang.String,java.lang.StringBuilder)>($r4, $r3);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.StringBuilder addParamPrefix(java.lang.String,java.lang.StringBuilder)>($r4, $r3);

        $r5 = $r1[0];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r5_1 = $r1[1];

        if $r5_1 == null goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5_1);

     label3:
(1)     $i0_3 = 2;

     label4:
        $i1 = Phi($i1 #1, $i1_2 #2);

        $i0_4 = Phi($i0_3 #1, $i0_5 #2);

        $r5_2 = Phi($r5_1 #1, $r5_4 #2);

        $i1_1 = lengthof $r1;

        if $i0_4 >= $i1_1 goto label6;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        $r5_3 = $r1[$i0_4];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5_3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $i1_2 = $i0_4 + 1;

        $r5_4 = $r1[$i1_2];

        if $r5_4 == null goto label5;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5_4);

     label5:
        $i0_5 = $i0_4 + 2;

(2)     goto label4;

     label6:
(3)     $r4_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $i1_3 = Phi($i1 #0, $i1_1 #3);

        $i0_6 = Phi($i0 #0, $i0_4 #3);

        $r5_5 = Phi($r5 #0, $r5_2 #3);

        $r4_2 = Phi($r4 #0, $r4_1 #3);

        return $r4_2;
    }

    private java.net.HttpURLConnection createConnection()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.IOException $r1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r2;
        java.lang.String $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory $r4, $r4_1, $r4_2, $r4_3;
        java.net.URL $r5, $r5_1, $r5_2, $r5_3;
        java.net.Proxy $r6;
        java.net.HttpURLConnection $r7, $r7_1, $r7_2, $r7_3;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r3 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String httpProxyHost>;

        if $r3 == null goto label5;

        $r4 = <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY>;

(0)     $r5 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url>;

     label1:
        $r6 = specialinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.Proxy createProxy()>();

(1)     $r7 = interfaceinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: java.net.HttpURLConnection create(java.net.URL,java.net.Proxy)>($r5, $r6);

     label2:
        $r5_1 = Phi($r5 #1, $r5_2 #5);

        $r7_1 = Phi($r7 #1, $r7_2 #5);

        $r4_1 = Phi($r4 #1, $r4_2 #5);

(2)     $r3_1 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String requestMethod>;

     label3:
        virtualinvoke $r7_1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r3_1);

     label4:
        return $r7_1;

     label5:
        $r4_2 = <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY>;

(3)     $r5_2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url>;

     label6:
(4)     $r7_2 = interfaceinvoke $r4_2.<io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: java.net.HttpURLConnection create(java.net.URL)>($r5_2);

     label7:
(5)     goto label2;

     label8:
        $r1 := @caughtexception;

        $r5_3 = Phi($r5 #0, $r5_1 #2, $r5_2 #3);

        $r3_2 = Phi($r3 #0, $r3_1 #2, $r3 #3);

        $r7_3 = Phi($r7 #0, $r7_1 #2, $r7 #3, $r7_2 #4);

        $r4_3 = Phi($r4 #0, $r4_1 #2, $r4_2 #3);

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private java.net.Proxy createProxy()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.net.Proxy $r1;
        java.net.Proxy$Type $r2;
        java.net.InetSocketAddress $r3;
        java.lang.String $r4;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = new java.net.Proxy;

        $r2 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        $r3 = new java.net.InetSocketAddress;

        $r4 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String httpProxyHost>;

        $i0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: int httpProxyPort>;

        specialinvoke $r3.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r4, $i0);

        specialinvoke $r1.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r2, $r3);

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "DELETE");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static transient io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest delete(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest delete(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "DELETE");

        return $r1;
    }

    public static java.lang.String encode(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        java.net.URL $r1;
        java.net.URI $r2;
        java.net.URISyntaxException $r3;
        java.lang.String $r4, $r5, $r7, $r8, $r4_1, $r4_2, $r4_3, $r4_4, $r5_1, $r4_5, $r5_2, $r4_6, $r4_7, $r4_8, $r5_3, $r4_9, $r4_10;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i0_2, $i1_2, $i0_3, $i1_3;
        java.lang.StringBuilder $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5, $r6_6, $r6_7, $r6_8;
        java.io.IOException $r9, $r9_1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r10, $r10_1;

        $r0 := @parameter0: java.lang.CharSequence;

(0)     $r1 = new java.net.URL;

     label01:
        $r4 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r4);

     label02:
        $r5 = virtualinvoke $r1.<java.net.URL: java.lang.String getHost()>();

        $r4_1 = $r5;

        $i0 = virtualinvoke $r1.<java.net.URL: int getPort()>();

(1)     if $i0 == -1 goto label03;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6_1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6_2 = virtualinvoke $r6_1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4_2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r6_3 = virtualinvoke $r6_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_2);

(2)     $r4_3 = virtualinvoke $r6_3.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r6_4 = Phi($r6 #1, $r6_3 #2);

        $r4_4 = Phi($r4_1 #1, $r4_3 #2);

(3)     $r2 = new java.net.URI;

     label04:
(4)     $r5_1 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $r7 = virtualinvoke $r1.<java.net.URL: java.lang.String getPath()>();

        $r8 = virtualinvoke $r1.<java.net.URL: java.lang.String getQuery()>();

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5_1, $r4_4, $r7, $r8, null);

(5)     $r4_5 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>();

(6)     $i0_1 = virtualinvoke $r4_5.<java.lang.String: int indexOf(int)>(63);

     label05:
(7)     if $i0_1 <= 0 goto label16;

        $i1 = $i0_1 + 1;

     label06:
        $i2 = virtualinvoke $r4_5.<java.lang.String: int length()>();

     label07:
(8)     if $i1 >= $i2 goto label16;

(9)     $r6_5 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r6_5.<java.lang.StringBuilder: void <init>()>();

     label09:
(10)    $i1_1 = $i0_1 + 1;

     label10:
(11)    $r5_2 = virtualinvoke $r4_5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1_1);

(12)    $r6_6 = virtualinvoke $r6_5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5_2);

     label11:
(13)    $i0_2 = $i0_1 + 1;

     label12:
(14)    $r4_6 = virtualinvoke $r4_5.<java.lang.String: java.lang.String substring(int)>($i0_2);

(15)    $r4_7 = virtualinvoke $r4_6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "%2B");

(16)    $r6_7 = virtualinvoke $r6_6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4_7);

(17)    $r4_8 = virtualinvoke $r6_7.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        return $r4_8;

     label14:
        $r9_1 := @caughtexception;

        $r4_10 = Phi($r4 #0);

        $r10_1 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r10_1.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r9_1);

        throw $r10_1;

     label15:
        $r3 := @caughtexception;

        $r6_8 = Phi($r6_4 #3, $r6_5 #9, $r6_6 #12, $r6_7 #16);

        $r5_3 = Phi($r5 #3, $r5_1 #4, $r5_2 #11);

        $i0_3 = Phi($i0 #3, $i0_1 #6, $i0_2 #13);

        $i1_3 = Phi($i1 #3, $i1_1 #10);

        $r4_9 = Phi($r4_4 #3, $r4_5 #5, $r4_6 #14, $r4_7 #15, $r4_8 #17);

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Parsing URI failed");

        virtualinvoke $r9.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r3);

        $r10 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r10.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r9);

        throw $r10;

     label16:
        $i1_2 = Phi($i1 #7, $i1 #8);

        return $r4_5;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.net.URISyntaxException from label04 to label05 with label15;
        catch java.net.URISyntaxException from label06 to label07 with label15;
        catch java.net.URISyntaxException from label08 to label09 with label15;
        catch java.net.URISyntaxException from label10 to label11 with label15;
        catch java.net.URISyntaxException from label12 to label13 with label15;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "GET");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static transient io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest get(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest get(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "GET");

        return $r1;
    }

    private static java.lang.String getValidCharset(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return $r0;

     label1:
        return "UTF-8";
    }

    public static io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "HEAD");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static transient io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest head(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest head(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "HEAD");

        return $r1;
    }

    public static void keepAlive(boolean)
    {
        boolean $z0;
        java.lang.String $r0;

        $z0 := @parameter0: boolean;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.keepAlive", $r0);

        return;
    }

    public static transient void nonProxyHosts(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.lang.StringBuilder $r1, $r3;
        int $i0, $i1, $i0_1, $i0_2, $i1_1, $i1_2, $i0_3;
        java.lang.String $r2, $r2_1, $r2_2, $r2_3;

        $r0 := @parameter0: java.lang.String[];

(0)     if $r0 == null goto label3;

        $i0 = lengthof $r0;

(1)     if $i0 <= 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0_1 = lengthof $r0;

        $i0_2 = $i0_1 + -1;

(2)     $i1 = 0;

     label1:
        $r2 = Phi($r2 #2, $r2_1 #3);

        $i1_1 = Phi($i1 #2, $i1_2 #3);

        if $i1_1 >= $i0_2 goto label2;

        $r2_1 = $r0[$i1_1];

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $i1_2 = $i1_1 + 1;

(3)     goto label1;

     label2:
        $r2_2 = $r0[$i0_2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_2);

        $r2_3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.nonProxyHosts", $r2_3);

        return;

     label3:
        $i0_3 = Phi($i0 #0, $i0 #1);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.nonProxyHosts", null);

        return;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest options(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "OPTIONS");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest options(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "OPTIONS");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "POST");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static transient io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest post(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest post(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "POST");

        return $r1;
    }

    public static void proxyHost(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.proxyHost", $r0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("https.proxyHost", $r0);

        return;
    }

    public static void proxyPort(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.proxyPort", $r0);

        staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String setProperty(java.lang.String,java.lang.String)>("https.proxyPort", $r0);

        return;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "PUT");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence, java.util.Map, boolean)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.util.Map)>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static transient io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence, boolean, java.lang.Object[])
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r3_1, $r3_2;
        io.fabric.sdk.android.services.network.HttpRequest $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String append(java.lang.CharSequence,java.lang.Object[])>($r0, $r1);

        $r3 = $r2;

(0)     if $z0 == 0 goto label1;

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String encode(java.lang.CharSequence)>($r2);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r4 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest put(java.lang.CharSequence)>($r3_2);

        return $r4;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest put(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "PUT");

        return $r1;
    }

    public static void setConnectionFactory(io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory)
    {
        io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory $r0, $r0_1;

        $r0 := @parameter0: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory;

        if $r0 != null goto label1;

        $r0_1 = <io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory DEFAULT>;

        <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY> = $r0_1;

        return;

     label1:
        <io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$ConnectionFactory CONNECTION_FACTORY> = $r0;

        return;
    }

    private static java.lang.String setProperty(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r4, $r4_1;
        io.fabric.sdk.android.services.network.HttpRequest$1 $r1;
        io.fabric.sdk.android.services.network.HttpRequest$2 $r2;
        java.lang.Object $r3;
        java.security.PrivilegedAction $r5, $r5_1, $r5_2;

        $r4 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        if $r0 == null goto label2;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest$1;

        $r5 = $r1;

(0)     specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$1: void <init>(java.lang.String,java.lang.String)>($r4, $r0);

     label1:
        $r5_1 = Phi($r5 #0, $r5_2 #1);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5_1);

        $r4_1 = (java.lang.String) $r3;

        return $r4_1;

     label2:
        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$2;

        $r5_2 = $r2;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$2: void <init>(java.lang.String)>($r4);

(1)     goto label1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest trace(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.CharSequence $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.lang.CharSequence,java.lang.String)>($r0, "TRACE");

        return $r1;
    }

    public static io.fabric.sdk.android.services.network.HttpRequest trace(java.net.URL) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.net.URL $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;

        $r0 := @parameter0: java.net.URL;

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: void <init>(java.net.URL,java.lang.String)>($r0, "TRACE");

        return $r1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest accept(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Accept", $r0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest acceptCharset(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Accept-Charset", $r0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest acceptEncoding(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Accept-Encoding", $r0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest acceptGzipEncoding()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0, $r0_1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest acceptEncoding(java.lang.String)>("gzip");

        return $r0_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest acceptJson()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0, $r0_1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest accept(java.lang.String)>("application/json");

        return $r0_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest authorization(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Authorization", $r0);

        return $r1_1;
    }

    public boolean badRequest() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 400 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest basic(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2, $r2_1, $r2_2, $r2_3;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;
        java.lang.StringBuilder $r3, $r4, $r3_1, $r4_1, $r4_2, $r4_3, $r3_2;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2_1 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2_2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encode(java.lang.String)>($r2_1);

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_2);

        $r2_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest authorization(java.lang.String)>($r2_3);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest body(java.util.concurrent.atomic.AtomicReference) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.String $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body()>();

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r2);

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest body(java.util.concurrent.atomic.AtomicReference, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.String $r2, $r2_1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $r2 := @parameter1: java.lang.String;

        $r2_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>($r2);

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r2_1);

        return $r0;
    }

    public java.lang.String body() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r1_1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String charset()>();

        $r1_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body(java.lang.String)>($r1);

        return $r1_1;
    }

    public java.lang.String body(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.IOException $r1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r2;
        java.lang.String $r3, $r3_1, $r3_2, $r3_3;
        java.io.ByteArrayOutputStream $r4;
        java.io.BufferedInputStream $r5;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r3 := @parameter0: java.lang.String;

(0)     $r4 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.ByteArrayOutputStream byteStream()>();

     label1:
        $r5 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedInputStream buffer()>();

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r5, $r4);

(1)     $r3_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r3);

(2)     $r3_2 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r3_1);

     label2:
        return $r3_2;

     label3:
        $r1 := @caughtexception;

        $r3_3 = Phi($r3 #0, $r3_1 #1, $r3_2 #2);

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.io.BufferedInputStream buffer() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.BufferedInputStream $r1;
        int $i0;
        java.io.InputStream $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = new java.io.BufferedInputStream;

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>();

        $i0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r2, $i0);

        return $r1;
    }

    public int bufferSize()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        i0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        return i0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest bufferSize(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Size must be greater than zero");

        throw $r1;

     label1:
        $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize> = $i0;

        return $r0;
    }

    public java.io.BufferedReader bufferedReader() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        java.io.BufferedReader $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String charset()>();

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedReader bufferedReader(java.lang.String)>($r1);

        return $r2;
    }

    public java.io.BufferedReader bufferedReader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        java.io.BufferedReader $r2;
        int $i0;
        java.io.InputStreamReader $r3;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.BufferedReader;

        $r3 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStreamReader reader(java.lang.String)>($r1);

        $i0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, $i0);

        return $r2;
    }

    protected java.io.ByteArrayOutputStream byteStream()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;
        java.io.ByteArrayOutputStream $r1, $r1_1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int contentLength()>();

        if $i0 <= 0 goto label1;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        return $r1;

     label1:
        $r1_1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1_1.<java.io.ByteArrayOutputStream: void <init>()>();

        return $r1_1;
    }

    public byte[] bytes() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.IOException $r1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r2;
        java.io.ByteArrayOutputStream $r3;
        java.io.BufferedInputStream $r4;
        byte[] $r5;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r3 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.ByteArrayOutputStream byteStream()>();

     label1:
        $r4 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedInputStream buffer()>();

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r4, $r3);

     label2:
        $r5 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r5;

     label3:
        $r1 := @caughtexception;

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String cacheControl()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Cache-Control");

        return $r1;
    }

    public java.lang.String charset()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String parameter(java.lang.String,java.lang.String)>("Content-Type", "charset");

        return $r1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest chunk(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>($i0);

        return $r0;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest closeOutput() throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.IOException $r1;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5;
        boolean $z0, $z0_1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        if $r2 != null goto label1;

        return $r0;

     label1:
        $z0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean multipart>;

(0)     if $z0 == 0 goto label2;

        $r2_1 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

(1)     virtualinvoke $r2_1.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>("\r\n--00content0boundary00--\r\n");

     label2:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $z0_1 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        if $z0_1 == 0 goto label5;

        $r2_3 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
(2)     virtualinvoke $r2_3.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void close()>();

     label4:
        $r2_4 = Phi($r2_3 #2, $r2_5 #3, $r2_3 #4);

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output> = null;

        return $r0;

     label5:
        $r2_5 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        virtualinvoke $r2_5.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void close()>();

(3)     goto label4;

     label6:
        $r1 := @caughtexception;

(4)     goto label4;

        catch java.io.IOException from label3 to label4 with label6;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.io.IOException $r0;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1, $r2_2;

(0)     $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
(1)     $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutput()>();

     label2:
        return $r2_1;

     label3:
        $r0 := @caughtexception;

        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r0);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int code() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.IOException $r1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r2;
        java.net.HttpURLConnection $r3;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutput()>();

        $r3 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>();

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public io.fabric.sdk.android.services.network.HttpRequest code(java.util.concurrent.atomic.AtomicInteger) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.util.concurrent.atomic.AtomicInteger;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i0);

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest connectTimeout(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        return $r0;
    }

    public java.lang.String contentEncoding()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Content-Encoding");

        return $r1;
    }

    public int contentLength()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String)>("Content-Length");

        return $i0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest contentLength(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest contentLength(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;
        int $i0;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentLength(int)>($i0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String,java.lang.String)>($r0, null);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2, $r2_1;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1, $r1_2;
        int $i0;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=");

        $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2_1 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Content-Type", $r2_1);

        return $r1_1;

     label1:
        $r1_2 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Content-Type", $r2);

        return $r1_2;
    }

    public java.lang.String contentType()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Content-Type");

        return $r1;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        io.fabric.sdk.android.services.network.HttpRequest$6 $r2;
        boolean $z0;
        java.lang.Object $r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4, $r4_1;

        $r4 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$6;

        $z0 = $r4.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$6: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream)>($r4, $r0, $z0, $r0, $r1);

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$6: java.lang.Object call()>();

        $r4_1 = (io.fabric.sdk.android.services.network.HttpRequest) $r3;

        return $r4_1;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest copy(java.io.Reader, java.io.Writer) throws java.io.IOException
    {
        java.io.Reader $r0;
        java.io.Writer $r1;
        io.fabric.sdk.android.services.network.HttpRequest$7 $r2;
        boolean $z0;
        java.lang.Object $r3;
        io.fabric.sdk.android.services.network.HttpRequest $r4, $r4_1;

        $r4 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.io.Reader;

        $r1 := @parameter1: java.io.Writer;

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$7;

        $z0 = $r4.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$7: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.Reader,java.io.Writer)>($r4, $r0, $z0, $r0, $r1);

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$7: java.lang.Object call()>();

        $r4_1 = (io.fabric.sdk.android.services.network.HttpRequest) $r3;

        return $r4_1;
    }

    public boolean created() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 201 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public long date()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        long $l0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String)>("Date");

        return $l0;
    }

    public long dateHeader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        long $l0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $l0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String,long)>($r1, -1L);

        return $l0;
    }

    public long dateHeader(java.lang.String, long) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        long $l0, $l0_1;
        java.net.HttpURLConnection $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $l0_1 = virtualinvoke $r2.<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>($r1, $l0);

        return $l0_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest disconnect()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        return $r0;
    }

    public java.lang.String eTag()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("ETag");

        return $r1;
    }

    public long expires()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        long $l0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String)>("Expires");

        return $l0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest followRedirects(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        boolean $z0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z0);

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object, java.lang.Object) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.Object $r0, $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object,java.lang.Object,java.lang.String)>($r0, $r1, "UTF-8");

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object, java.lang.Object, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.Object $r1, $r2;
        java.io.IOException $r3;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r4;
        java.lang.String $r5, $r7, $r5_1, $r7_1, $r7_2, $r5_2, $r7_3, $r5_3;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r5 := @parameter2: java.lang.String;

        $z0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean form>;

        if $z0 != 0 goto label13;

(0)     $z0_1 = 1;

     label01:
        $z0_2 = Phi($z0_1 #0, $z0_3 #10);

        if $z0_2 == 0 goto label02;

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String,java.lang.String)>("application/x-www-form-urlencoded", $r5);

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean form> = 1;

     label02:
(1)     $r5_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r5);

     label03:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label04:
(2)     if $z0_2 != 0 goto label06;

        $r6 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label05:
(3)     virtualinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void write(int)>(38);

     label06:
        $r6_1 = Phi($r6 #2, $r6 #3);

(4)     $r6_2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label07:
        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

(5)     $r7_1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, $r5_1);

        virtualinvoke $r6_2.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r7_1);

     label08:
(6)     $r6_3 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label09:
        virtualinvoke $r6_3.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void write(int)>(61);

     label10:
        if $r2 == null goto label15;

(7)     $r6_4 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label11:
(8)     $r7_2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

(9)     $r5_2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7_2, $r5_1);

        virtualinvoke $r6_4.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r5_2);

     label12:
        return $r0;

     label13:
        $z0_3 = 0;

(10)    goto label01;

     label14:
        $r3 := @caughtexception;

        $r7_3 = Phi($r7 #1, $r7_1 #5, $r7_2 #8);

        $r5_3 = Phi($r5_1 #1, $r5_2 #9);

        $r6_5 = Phi($r6 #1, $r6_2 #4, $r6_3 #6, $r6_4 #7);

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r3);

        throw $r4;

     label15:
        return $r0;

        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label14;
    }

    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.util.Map$Entry $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.util.Map$Entry;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry,java.lang.String)>($r0, "UTF-8");

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.util.Map$Entry $r0;
        java.lang.String $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;
        java.lang.Object $r3, $r4;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.util.Map$Entry;

        $r1 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke $r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = interfaceinvoke $r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.lang.Object,java.lang.Object,java.lang.String)>($r3, $r4, $r1);

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.util.Map $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.util.Map;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map,java.lang.String)>($r0, "UTF-8");

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.util.Map $r1;
        java.lang.String $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

(0)     if $z0 != 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

(1)     $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0_1 = Phi($z0 #1, $z0_2 #3);

        $z0_2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

(2)     if $z0_2 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest form(java.util.Map$Entry,java.lang.String)>($r6, $r2);

(3)     goto label1;

     label2:
        $z0_3 = Phi($z0 #0, $z0_2 #2);

        return $r0;
    }

    public java.net.HttpURLConnection getConnection()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.net.HttpURLConnection $r1, $r1_1, $r1_2, $r1_3;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection>;

(0)     if $r1 != null goto label1;

        $r1_1 = specialinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection createConnection()>();

(1)     $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection> = $r1_1;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $r1_3 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection>;

        return $r1_3;
    }

    protected java.lang.String getParam(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r2, $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r2_1, $r3_5;
        int $i0, $i1, $i2, $i3, $i0_1, $i1_1, $i1_2, $i3_1, $i1_3, $i2_1, $i3_2, $i2_2, $i2_3, $i0_2, $i0_3, $i0_4, $i2_4, $i2_5, $i3_3, $i1_4, $i1_5, $i0_5;
        boolean $z0;
        char $c4, $c4_1, $c4_2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

(0)     if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

(1)     if $i0 != 0 goto label2;

     label1:
        $i0_5 = Phi($i0 #0, $i0 #1);

        return null;

     label2:
        $i0_1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(59);

        $i2 = $i1 + 1;

        if $i2 == 0 goto label3;

        if $i2 != $i0_1 goto label4;

     label3:
        return null;

     label4:
        $i3 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(59, $i2);

        $i1_1 = $i3;

(2)     if $i3 != -1 goto label5;

(3)     $i1_2 = $i0_1;

     label5:
        $i3_1 = Phi($i3 #2, $i3 #3, $i3_3 #11, $i3_3 #12);

        $i1_3 = Phi($i1_1 #2, $i1_2 #3, $i1_4 #11, $i1_5 #12);

        $r3 = Phi($r3 #2, $r3 #3, $r3_5 #11, $r3_5 #12);

        $i2_1 = Phi($i2 #2, $i2 #3, $i2_5 #11, $i2_5 #12);

        if $i2_1 >= $i1_3 goto label7;

        $i3_2 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(61, $i2_1);

(4)     if $i3_2 == -1 goto label6;

(5)     if $i3_2 >= $i1_3 goto label6;

        $r3_1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i2_1, $i3_2);

        $r3_2 = virtualinvoke $r3_1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3_2);

(6)     if $z0 == 0 goto label6;

        $i2_2 = $i3_2 + 1;

        $r3_3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i2_2, $i1_3);

        $r3_4 = virtualinvoke $r3_3.<java.lang.String: java.lang.String trim()>();

        $i2_3 = virtualinvoke $r3_4.<java.lang.String: int length()>();

(7)     if $i2_3 == 0 goto label6;

(8)     if $i2_3 <= 2 goto label8;

        $c4 = virtualinvoke $r3_4.<java.lang.String: char charAt(int)>(0);

(9)     if 34 != $c4 goto label8;

        $i0_2 = $i2_3 + -1;

        $c4_1 = virtualinvoke $r3_4.<java.lang.String: char charAt(int)>($i0_2);

(10)    if 34 != $c4_1 goto label8;

        $i0_3 = $i2_3 + -1;

        $r2_1 = virtualinvoke $r3_4.<java.lang.String: java.lang.String substring(int,int)>(1, $i0_3);

        return $r2_1;

     label6:
        $r3_5 = Phi($r3 #4, $r3 #5, $r3_2 #6, $r3_4 #7);

        $i2_4 = Phi($i2_1 #4, $i2_1 #5, $i2_1 #6, $i2_3 #7);

        $i2_5 = $i1_3 + 1;

        $i3_3 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(59, $i2_5);

        $i1_4 = $i3_3;

(11)    if $i3_3 != -1 goto label5;

        $i1_5 = $i0_1;

(12)    goto label5;

     label7:
        return null;

     label8:
        $i0_4 = Phi($i0_1 #8, $i0_1 #9, $i0_2 #10);

        $c4_2 = Phi($c4 #8, $c4 #9, $c4_1 #10);

        return $r3_4;
    }

    protected java.util.Map getParams(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r4, $r5, $r4_1, $r4_2, $r5_1, $r5_2, $r5_3, $r5_4, $r4_3;
        java.util.LinkedHashMap $r2;
        int $i0, $i1, $i2, $i3, $i0_1, $i1_1, $i1_2, $i1_3, $i3_1, $i1_4, $i2_1, $i3_2, $i2_2, $i2_3, $i2_4, $i3_3, $i2_5, $i3_4, $i3_5, $i2_6, $i2_7, $i3_6, $i1_5, $i1_6, $i0_2;
        java.util.Map $r3, $r3_1;
        char $c4, $c4_1, $c4_2, $c4_3, $c4_4;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

(0)     if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

(1)     if $i0 != 0 goto label2;

     label1:
        $i0_2 = Phi($i0 #0, $i0 #1);

        $r3_1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r3_1;

     label2:
        $i0_1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(59);

        $i2 = $i1 + 1;

        if $i2 == 0 goto label3;

        if $i2 != $i0_1 goto label4;

     label3:
        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r3;

     label4:
        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(59, $i2);

        $i1_1 = $i3;

(2)     if $i3 != -1 goto label5;

(3)     $i1_2 = $i0_1;

     label5:
        $i1_3 = Phi($i1_1 #2, $i1_2 #3);

        $r2 = new java.util.LinkedHashMap;

(4)     specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

     label6:
        $i3_1 = Phi($i3 #4, $i3_6 #13, $i3_6 #14);

        $r5 = Phi($r5 #4, $r5_4 #13, $r5_4 #14);

        $c4 = Phi($c4 #4, $c4_4 #13, $c4_4 #14);

        $r4 = Phi($r4 #4, $r4_3 #13, $r4_3 #14);

        $i1_4 = Phi($i1_3 #4, $i1_5 #13, $i1_6 #14);

        $i2_1 = Phi($i2 #4, $i2_7 #13, $i2_7 #14);

        if $i2_1 >= $i1_4 goto label9;

        $i3_2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(61, $i2_1);

(5)     if $i3_2 == -1 goto label7;

(6)     if $i3_2 >= $i1_4 goto label7;

        $r4_1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2_1, $i3_2);

        $r4_2 = virtualinvoke $r4_1.<java.lang.String: java.lang.String trim()>();

        $i2_2 = virtualinvoke $r4_2.<java.lang.String: int length()>();

(7)     if $i2_2 <= 0 goto label7;

        $i2_3 = $i3_2 + 1;

        $r5_1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2_3, $i1_4);

        $r5_2 = virtualinvoke $r5_1.<java.lang.String: java.lang.String trim()>();

        $i2_4 = virtualinvoke $r5_2.<java.lang.String: int length()>();

(8)     if $i2_4 == 0 goto label7;

(9)     if $i2_4 <= 2 goto label8;

        $c4_1 = virtualinvoke $r5_2.<java.lang.String: char charAt(int)>(0);

(10)    if 34 != $c4_1 goto label8;

        $i3_3 = $i2_4 + -1;

        $c4_2 = virtualinvoke $r5_2.<java.lang.String: char charAt(int)>($i3_3);

(11)    if 34 != $c4_2 goto label8;

        $i2_5 = $i2_4 + -1;

        $r5_3 = virtualinvoke $r5_2.<java.lang.String: java.lang.String substring(int,int)>(1, $i2_5);

(12)    interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4_2, $r5_3);

     label7:
        $i3_5 = Phi($i3_2 #5, $i3_2 #6, $i3_2 #7, $i3_2 #8, $i3_3 #12, $i3_4 #15);

        $r5_4 = Phi($r5 #5, $r5 #6, $r5 #7, $r5_2 #8, $r5_3 #12, $r5_2 #15);

        $c4_4 = Phi($c4 #5, $c4 #6, $c4 #7, $c4 #8, $c4_2 #12, $c4_3 #15);

        $r4_3 = Phi($r4 #5, $r4 #6, $r4_2 #7, $r4_2 #8, $r4_2 #12, $r4_2 #15);

        $i2_6 = Phi($i2_1 #5, $i2_1 #6, $i2_2 #7, $i2_4 #8, $i2_5 #12, $i2_4 #15);

        $i2_7 = $i1_4 + 1;

        $i3_6 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(59, $i2_7);

        $i1_5 = $i3_6;

(13)    if $i3_6 != -1 goto label6;

        $i1_6 = $i0_1;

(14)    goto label6;

     label8:
        $i3_4 = Phi($i3_2 #9, $i3_2 #10, $i3_3 #11);

        $c4_3 = Phi($c4 #9, $c4_1 #10, $c4_2 #11);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4_2, $r5_2);

(15)    goto label7;

     label9:
        return $r2;
    }

    public io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String, java.lang.Number)
    {
        java.lang.String $r0, $r3, $r3_1, $r3_2;
        java.lang.Number $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Number;

        if $r1 == null goto label2;

(0)     $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r3_1 = Phi($r3 #0, $r3_2 #1);

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>($r0, $r3_1);

        return $r2_1;

     label2:
        $r3_2 = null;

(1)     goto label1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r2;
        java.net.HttpURLConnection $r3;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2);

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest header(java.util.Map$Entry)
    {
        java.util.Map$Entry $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;
        java.lang.Object $r2, $r2_1;
        java.lang.String $r3, $r4;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke $r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r2_1 = interfaceinvoke $r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.String) $r2_1;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>($r3, $r4);

        return $r1_1;
    }

    public java.lang.String header(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r1_1;
        java.net.HttpURLConnection $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r1_1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest headers(java.util.Map)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.util.Map $r1;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

(0)     if $z0 != 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

(1)     $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0_1 = Phi($z0 #1, $z0_2 #3);

        $z0_2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

(2)     if $z0_2 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.util.Map$Entry)>($r5);

(3)     goto label1;

     label2:
        $z0_3 = Phi($z0 #0, $z0_2 #2);

        return $r0;
    }

    public java.util.Map headers() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.net.HttpURLConnection $r1;
        java.util.Map $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        return $r2;
    }

    public java.lang.String[] headers(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.Object $r3;
        java.util.List $r4;
        int $i0;
        java.lang.String[] $r5, $r5_1, $r5_2, $r5_3;
        java.lang.Object[] $r6;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.util.Map headers()>();

(0)     if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

(1)     if $z0 == 0 goto label2;

     label1:
        $z0_3 = Phi($z0 #0, $z0 #1);

        $r5_3 = <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String[] EMPTY_STRINGS>;

        return $r5_3;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.List) $r3;

(2)     if $r4 == null goto label3;

        $z0_1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

(3)     if $z0_1 != 0 goto label3;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5_1 = (java.lang.String[]) $r6;

        return $r5_1;

     label3:
        $z0_2 = Phi($z0 #2, $z0_1 #3);

        $r5_2 = <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String[] EMPTY_STRINGS>;

        return $r5_2;
    }

    public io.fabric.sdk.android.services.network.HttpRequest ifModifiedSince(long)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        long $l0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 := @parameter0: long;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setIfModifiedSince(long)>($l0);

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest ifNoneMatch(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("If-None-Match", $r0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest ignoreCloseExceptions(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions> = $z0;

        return $r0;
    }

    public boolean ignoreCloseExceptions()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        boolean z0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        z0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        return z0;
    }

    public int intHeader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int intHeader(java.lang.String,int)>($r1, -1);

        return $i0;
    }

    public int intHeader(java.lang.String, int) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        int $i0, $i0_1;
        java.net.HttpURLConnection $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutputQuietly()>();

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $i0_1 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>($r1, $i0);

        return $i0_1;
    }

    public boolean isBodyEmpty() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int contentLength()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public long lastModified()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        long $l0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $l0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: long dateHeader(java.lang.String)>("Last-Modified");

        return $l0;
    }

    public java.lang.String location()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Location");

        return $r1;
    }

    public java.lang.String message() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.IOException $r1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r2;
        java.net.HttpURLConnection $r3;
        java.lang.String $r4;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest closeOutput()>();

        $r3 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String method()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        return $r2;
    }

    public boolean notFound() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 404 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean notModified() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 304 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean ok() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 200 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest openOutput() throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r1, $r1_1;
        java.net.HttpURLConnection $r2, $r2_1, $r2_2;
        java.lang.String $r3, $r3_1;
        java.io.OutputStream $r4;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        if $r1 == null goto label1;

        return $r0;

     label1:
        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r2_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r3 = virtualinvoke $r2_1.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type");

        $r3_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getParam(java.lang.String,java.lang.String)>($r3, "charset");

        $r1_1 = new io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream;

        $r2_2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r4 = virtualinvoke $r2_2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $i0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

        specialinvoke $r1_1.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: void <init>(java.io.OutputStream,java.lang.String,int)>($r4, $r3_1, $i0);

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output> = $r1_1;

        return $r0;
    }

    public java.lang.String parameter(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r2, $r2_1, $r2_2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>($r2);

        $r2_2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getParam(java.lang.String,java.lang.String)>($r2_1, $r1);

        return $r2_2;
    }

    public java.util.Map parameters(java.lang.String)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r1_1;
        java.util.Map $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>($r1);

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.util.Map getParams(java.lang.String)>($r1_1);

        return $r2;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0;
        java.io.File $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.File;

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.io.File)>($r0, null, $r1);

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.io.InputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0;
        java.io.InputStream $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.InputStream;

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r0, null, null, $r1);

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.Number) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0;
        java.lang.Number $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Number;

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.Number)>($r0, null, $r1);

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String)>($r0, null, $r1);

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0, $r1;
        java.io.File $r2;
        io.fabric.sdk.android.services.network.HttpRequest $r3, $r3_1;

        $r3 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.File;

        $r3_1 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.io.File)>($r0, $r1, null, $r2);

        return $r3_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.Number) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0, $r1, $r4, $r4_1, $r4_2;
        java.lang.Number $r2;
        io.fabric.sdk.android.services.network.HttpRequest $r3, $r3_1;

        $r3 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Number;

        if $r2 == null goto label2;

(0)     $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r4_1 = Phi($r4 #0, $r4_2 #1);

        $r3_1 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r4_1);

        return $r3_1;

     label2:
        $r4_2 = null;

(1)     goto label1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0, $r1, $r2;
        io.fabric.sdk.android.services.network.HttpRequest $r3, $r3_1;

        $r3 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3_1 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, null, $r2);

        return $r3_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String, java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0, $r1, $r2;
        java.io.File $r3;
        java.io.BufferedInputStream $r4, $r10, $r10_1, $r10_2, $r10_3, $r10_4, $r10_5;
        java.io.FileInputStream $r5;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r6;
        java.io.IOException $r7, $r8, $r11, $r11_1, $r11_2, $r11_3, $r11_4;
        io.fabric.sdk.android.services.network.HttpRequest $r9, $r9_1, $r9_2, $r9_3, $r9_4, $r9_5, $r9_6;
        java.lang.Throwable $r12, $r12_1, $r12_2;

        $r9 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.io.File;

        $r10 = null;

        $r4 = new java.io.BufferedInputStream;

(0)     $r5 = new java.io.FileInputStream;

     label01:
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

(1)     specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

     label02:
(2)     $r9_1 = virtualinvoke $r9.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r0, $r1, $r2, $r4);

     label03:
        if $r4 == null goto label16;

     label04:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label05:
        return $r9_1;

     label06:
(3)     $r11_1 := @caughtexception;

     label07:
        $r11_2 = Phi($r11_1 #3, $r11 #7);

        $r10_3 = Phi($r10 #3, $r10_2 #7);

        $r9_4 = Phi($r9 #3, $r9_3 #7);

(4)     $r6 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r11_2);

        throw $r6;

     label08:
        $r12_1 := @caughtexception;

        $r11_3 = Phi($r11 #0, $r11_1 #3, $r11_2 #4);

        $r10_4 = Phi($r10 #0, $r10_2 #7, $r10_3 #4);

(5)     $r9_5 = Phi($r9 #0, $r9_3 #7, $r9_4 #4);

     label09:
        $r12_2 = Phi($r12_1 #5, $r12 #6);

        $r11_4 = Phi($r11_3 #5, $r11 #6);

        $r10_5 = Phi($r10_4 #5, $r10_1 #6);

        $r9_6 = Phi($r9_5 #5, $r9_2 #6);

        if $r10_5 == null goto label11;

     label10:
        virtualinvoke $r10_5.<java.io.InputStream: void close()>();

     label11:
        throw $r12_2;

     label12:
        $r7 := @caughtexception;

        return $r9_1;

     label13:
        $r8 := @caughtexception;

        goto label11;

     label14:
        $r12 := @caughtexception;

        $r9_2 = Phi($r9 #1, $r9_1 #2);

        $r10_1 = $r4;

(6)     goto label09;

     label15:
        $r11 := @caughtexception;

        $r9_3 = Phi($r9 #1, $r9_1 #2);

        $r10_2 = $r4;

(7)     goto label07;

     label16:
        return $r9_1;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.io.IOException from label02 to label03 with label15;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.io.IOException from label10 to label11 with label13;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r2, $r3;
        java.io.InputStream $r4;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r5;
        java.io.IOException $r6;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.io.InputStream;

     label1:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest startPart()>();

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        $r5 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r4, $r5);

     label4:
        return $r0;

     label5:
        $r6 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r6);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r5;
        java.io.IOException $r6;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r7;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

     label1:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest startPart()>();

        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        $r5 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        virtualinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r4);

     label4:
        return $r0;

     label5:
        $r6 := @caughtexception;

        $r7 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r6);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public io.fabric.sdk.android.services.network.HttpRequest partHeader(java.lang.String, java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.String $r0, $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1, $r2_2, $r2_3, $r2_4;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>($r0);

        $r2_2 = virtualinvoke $r2_1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>(": ");

        $r2_3 = virtualinvoke $r2_2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>($r1);

        $r2_4 = virtualinvoke $r2_3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>("\r\n");

        return $r2_4;
    }

    public io.fabric.sdk.android.services.network.HttpRequest proxyAuthorization(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Proxy-Authorization", $r0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest proxyBasic(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2, $r2_1, $r2_2, $r2_3;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;
        java.lang.StringBuilder $r3, $r4, $r3_1, $r4_1, $r4_2, $r4_3, $r3_2;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4_1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4_2 = virtualinvoke $r4_1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4_3 = virtualinvoke $r4_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2_1 = virtualinvoke $r4_3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2_2 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$Base64: java.lang.String encode(java.lang.String)>($r2_1);

        $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2_2);

        $r2_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest proxyAuthorization(java.lang.String)>($r2_3);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest readTimeout(int)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        return $r0;
    }

    public java.io.InputStreamReader reader() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        java.io.InputStreamReader $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String charset()>();

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStreamReader reader(java.lang.String)>($r1);

        return $r2;
    }

    public java.io.InputStreamReader reader(java.lang.String) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.InputStreamReader $r1;
        java.io.UnsupportedEncodingException $r2;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r3;
        java.lang.String $r4, $r4_1, $r4_2;
        java.io.InputStream $r5;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r4 := @parameter0: java.lang.String;

(0)     $r1 = new java.io.InputStreamReader;

     label1:
        $r5 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.io.InputStream stream()>();

(1)     $r4_1 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest: java.lang.String getValidCharset(java.lang.String)>($r4);

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, $r4_1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r3 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.io.File $r0;
        java.io.BufferedOutputStream $r1;
        java.io.FileOutputStream $r2;
        int $i0;
        io.fabric.sdk.android.services.network.HttpRequest$3 $r3;
        boolean $z0;
        java.io.FileNotFoundException $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;
        java.lang.Object $r6;
        io.fabric.sdk.android.services.network.HttpRequest $r7, $r7_1;

        $r7 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.io.File;

        $r1 = new java.io.BufferedOutputStream;

        $r2 = new java.io.FileOutputStream;

     label1:
        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

     label2:
        $i0 = $r7.<io.fabric.sdk.android.services.network.HttpRequest: int bufferSize>;

     label3:
        specialinvoke $r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r2, $i0);

     label4:
        $r3 = new io.fabric.sdk.android.services.network.HttpRequest$3;

        $z0 = $r7.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$3: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.OutputStream)>($r7, $r1, $z0, $r1);

        $r6 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest$3: java.lang.Object call()>();

        $r7_1 = (io.fabric.sdk.android.services.network.HttpRequest) $r6;

        return $r7_1;

     label5:
        $r4 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r4);

        throw $r5;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
    }

    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.OutputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.io.OutputStream $r0;
        java.io.IOException $r1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r2;
        io.fabric.sdk.android.services.network.HttpRequest $r3, $r3_1, $r3_2;
        java.io.BufferedInputStream $r4;

        $r3 := @this: io.fabric.sdk.android.services.network.HttpRequest;

(0)     $r0 := @parameter0: java.io.OutputStream;

     label1:
        $r4 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedInputStream buffer()>();

(1)     $r3_1 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r4, $r0);

     label2:
        return $r3_1;

     label3:
        $r1 := @caughtexception;

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r1);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.PrintStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.io.PrintStream $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.io.PrintStream;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest receive(java.io.OutputStream)>($r0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest receive(java.io.Writer) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.io.Writer $r0;
        io.fabric.sdk.android.services.network.HttpRequest$5 $r1;
        boolean $z0;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;
        java.io.BufferedReader $r3;
        java.lang.Object $r4;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.io.Writer;

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedReader bufferedReader()>();

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest$5;

        $z0 = $r2.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$5: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.BufferedReader,java.io.Writer)>($r2, $r3, $z0, $r3, $r0);

        $r4 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$5: java.lang.Object call()>();

        $r2_1 = (io.fabric.sdk.android.services.network.HttpRequest) $r4;

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest receive(java.lang.Appendable) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.lang.Appendable $r0;
        io.fabric.sdk.android.services.network.HttpRequest$4 $r1;
        boolean $z0;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;
        java.io.BufferedReader $r3;
        java.lang.Object $r4;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.Appendable;

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: java.io.BufferedReader bufferedReader()>();

        $r1 = new io.fabric.sdk.android.services.network.HttpRequest$4;

        $z0 = $r2.<io.fabric.sdk.android.services.network.HttpRequest: boolean ignoreCloseExceptions>;

        specialinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$4: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Closeable,boolean,java.io.BufferedReader,java.lang.Appendable)>($r2, $r3, $z0, $r3, $r0);

        $r4 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest$4: java.lang.Object call()>();

        $r2_1 = (io.fabric.sdk.android.services.network.HttpRequest) $r4;

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest referer(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Referer", $r0);

        return $r1_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest send(java.io.File) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.io.File $r0;
        java.io.BufferedInputStream $r1;
        java.io.FileInputStream $r2;
        java.io.FileNotFoundException $r3;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r4;
        io.fabric.sdk.android.services.network.HttpRequest $r5, $r5_1;

        $r5 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.io.File;

        $r1 = new java.io.BufferedInputStream;

        $r2 = new java.io.FileInputStream;

     label1:
        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

     label2:
        $r5_1 = virtualinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.io.InputStream)>($r1);

        return $r5_1;

     label3:
        $r3 := @caughtexception;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r3);

        throw $r4;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public io.fabric.sdk.android.services.network.HttpRequest send(java.io.InputStream) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.InputStream $r1;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2;
        java.io.IOException $r3;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r4;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.io.InputStream;

     label1:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        $r2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest copy(java.io.InputStream,java.io.OutputStream)>($r1, $r2);

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public io.fabric.sdk.android.services.network.HttpRequest send(java.io.Reader) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        java.io.Reader $r0;
        java.io.OutputStreamWriter $r1;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2, $r3;
        io.fabric.sdk.android.services.network.HttpRequest$8 $r4;
        java.io.IOException $r5;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r6;
        io.fabric.sdk.android.services.network.HttpRequest $r7, $r7_1;
        java.nio.charset.CharsetEncoder $r8;
        java.nio.charset.Charset $r9;
        java.lang.Object $r10;

        $r7 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.io.Reader;

     label1:
        virtualinvoke $r7.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        $r1 = new java.io.OutputStreamWriter;

        $r2 = $r7.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        $r3 = $r7.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        $r8 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: java.nio.charset.CharsetEncoder access$200(io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream)>($r3);

        $r9 = virtualinvoke $r8.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r2, $r9);

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$8;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$8: void <init>(io.fabric.sdk.android.services.network.HttpRequest,java.io.Flushable,java.io.Reader,java.io.Writer)>($r7, $r1, $r0, $r1);

        $r10 = virtualinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$8: java.lang.Object call()>();

        $r7_1 = (io.fabric.sdk.android.services.network.HttpRequest) $r10;

        return $r7_1;

     label3:
        $r5 := @caughtexception;

        $r6 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r6.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.CharSequence $r1;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2;
        java.io.IOException $r3;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r4;
        java.lang.String $r5;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.CharSequence;

     label1:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        $r2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        $r5 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>($r5);

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        $r4 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r4.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public io.fabric.sdk.android.services.network.HttpRequest send(byte[]) throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        byte[] $r0;
        java.io.ByteArrayInputStream $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.io.InputStream)>($r1);

        return $r2_1;
    }

    public java.lang.String server()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("Server");

        return $r1;
    }

    public boolean serverError() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        if 500 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest startPart() throws java.io.IOException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0, $r1;
        boolean $z0;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2, $r2_1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean multipart>;

        if $z0 != 0 goto label1;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean multipart> = 1;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest contentType(java.lang.String)>("multipart/form-data; boundary=00content0boundary00");

        virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

        $r2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>("--00content0boundary00\r\n");

        return $r0;

     label1:
        $r2_1 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        virtualinvoke $r2_1.<io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream write(java.lang.String)>("\r\n--00content0boundary00\r\n");

        return $r0;
    }

    public java.io.InputStream stream() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1, $r8;
        java.io.IOException $r2, $r3, $r5;
        java.util.zip.GZIPInputStream $r4;
        int $i0;
        java.net.HttpURLConnection $r6, $r6_1, $r6_2, $r6_3, $r6_4, $r6_5;
        java.io.InputStream $r7, $r10, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5;
        boolean $z0, $z0_1;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r9, $r9_1, $r9_2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $i0 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

(0)     if $i0 >= 400 goto label04;

     label01:
        $r6 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

(1)     $r7 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label02:
        $r6_1 = Phi($r6 #1, $r6_3 #2, $r6_4 #5);

        $r7_1 = Phi($r7 #1, $r7_3 #2, $r7_4 #5);

        $z0 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress>;

        if $z0 == 0 goto label12;

        $r1 = "gzip";

        $r8 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String contentEncoding()>();

        $z0_1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0_1 != 0 goto label08;

        return $r7_1;

     label03:
        $r2 := @caughtexception;

        $r6_2 = Phi($r6 #0);

        $r7_2 = Phi($r7 #0);

        $r9_1 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r9_1.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r2);

        throw $r9_1;

     label04:
        $r6_3 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r10 = virtualinvoke $r6_3.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r7_3 = $r10;

(2)     if $r10 != null goto label02;

     label05:
(3)     $r6_4 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

(4)     $r7_4 = virtualinvoke $r6_4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label06:
(5)     goto label02;

     label07:
        $r3 := @caughtexception;

        $r6_5 = Phi($r6_3 #2, $r6_4 #3);

        $r7_5 = Phi($r7_3 #2, $r7_4 #4);

        $r9_2 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r9_2.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r3);

        throw $r9_2;

     label08:
        $r4 = new java.util.zip.GZIPInputStream;

     label09:
        specialinvoke $r4.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r7_1);

     label10:
        return $r4;

     label11:
        $r5 := @caughtexception;

        $r9 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r9.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r5);

        throw $r9;

     label12:
        return $r7_1;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public java.lang.String toString()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.StringBuilder $r1, $r1_1, $r1_2, $r1_3;
        java.lang.String $r2, $r2_1;
        java.net.URL $r3;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String method()>();

        $r1_1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1_2 = virtualinvoke $r1_1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r3 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.URL url()>();

        $r1_3 = virtualinvoke $r1_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2_1 = virtualinvoke $r1_3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2_1;
    }

    public io.fabric.sdk.android.services.network.HttpRequest trustAllCerts() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest trustAllHosts()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest uncompress(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: boolean uncompress> = $z0;

        return $r0;
    }

    public java.net.URL url()
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.net.HttpURLConnection $r1;
        java.net.URL $r2;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        return $r2;
    }

    public io.fabric.sdk.android.services.network.HttpRequest useCaches(boolean)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        boolean $z0;
        java.net.HttpURLConnection $r1;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection getConnection()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>($z0);

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest useProxy(java.lang.String, int)
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.lang.String $r1;
        int $i0;
        java.net.HttpURLConnection $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.net.HttpURLConnection connection>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The connection has already been created. This method must be called before reading or writing to the request.");

        throw $r3;

     label1:
        $r0.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String httpProxyHost> = $r1;

        $r0.<io.fabric.sdk.android.services.network.HttpRequest: int httpProxyPort> = $i0;

        return $r0;
    }

    public io.fabric.sdk.android.services.network.HttpRequest userAgent(java.lang.String)
    {
        java.lang.String $r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1, $r1_1;

        $r1 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1_1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("User-Agent", $r0);

        return $r1_1;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2, $r2_1;

        $r2 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2_1 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, null);

        return $r2_1;
    }

    protected io.fabric.sdk.android.services.network.HttpRequest writePartHeader(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1, $r4, $r4_1;
        java.lang.StringBuilder $r2, $r5, $r5_1, $r5_2;
        io.fabric.sdk.android.services.network.HttpRequest $r3, $r3_1;

        $r3 := @this: io.fabric.sdk.android.services.network.HttpRequest;

        $r4 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("form-data; name=\"");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

(0)     if $r0 == null goto label1;

        $r5_1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; filename=\"");

(1)     virtualinvoke $r5_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label1:
        $r5_2 = Phi($r5 #0, $r5_1 #1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r4_1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest partHeader(java.lang.String,java.lang.String)>("Content-Disposition", $r4_1);

        if $r1 == null goto label2;

        virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest partHeader(java.lang.String,java.lang.String)>("Content-Type", $r1);

     label2:
        $r3_1 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest send(java.lang.CharSequence)>("\r\n");

        return $r3_1;
    }

    public java.io.OutputStreamWriter writer() throws io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException
    {
        io.fabric.sdk.android.services.network.HttpRequest $r0;
        java.io.OutputStreamWriter $r1;
        io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream $r2, $r3;
        java.io.IOException $r4;
        io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException $r5;
        java.nio.charset.CharsetEncoder $r6;
        java.nio.charset.Charset $r7;

        $r0 := @this: io.fabric.sdk.android.services.network.HttpRequest;

     label1:
        virtualinvoke $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest openOutput()>();

     label2:
        $r1 = new java.io.OutputStreamWriter;

        $r2 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

        $r3 = $r0.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream output>;

     label3:
        $r6 = staticinvoke <io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream: java.nio.charset.CharsetEncoder access$200(io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream)>($r3);

        $r7 = virtualinvoke $r6.<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>();

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r2, $r7);

     label4:
        return $r1;

     label5:
        $r4 := @caughtexception;

        $r5 = new io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException;

        specialinvoke $r5.<io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: void <init>(java.io.IOException)>($r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
}
