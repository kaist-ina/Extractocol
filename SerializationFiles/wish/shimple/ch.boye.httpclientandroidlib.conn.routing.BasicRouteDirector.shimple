public class ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector extends java.lang.Object implements ch.boye.httpclientandroidlib.conn.routing.HttpRouteDirector
{

    public void <init>()
    {
        ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector $r0;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected int directStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo, ch.boye.httpclientandroidlib.conn.routing.RouteInfo)
    {
        ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector $r0;
        ch.boye.httpclientandroidlib.conn.routing.RouteInfo $r1, $r2;
        int $i0;
        ch.boye.httpclientandroidlib.HttpHost $r3, $r4;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3, $z0_4;
        java.net.InetAddress $r5, $r6, $r5_1, $r5_2, $r5_3;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.RouteInfo;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.conn.routing.RouteInfo;

        $i0 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 <= 1 goto label1;

        return -1;

     label1:
        $r3 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: ch.boye.httpclientandroidlib.HttpHost getTargetHost()>();

        $r4 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: ch.boye.httpclientandroidlib.HttpHost getTargetHost()>();

        $z0 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.HttpHost: boolean equals(java.lang.Object)>($r4);

(0)     if $z0 == 0 goto label3;

        $z0_1 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isSecure()>();

        $z1 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isSecure()>();

(1)     if $z0_1 != $z1 goto label3;

        $r5 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

(2)     if $r5 == null goto label2;

        $r5_1 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        $r6 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        $z0_2 = virtualinvoke $r5_1.<java.net.InetAddress: boolean equals(java.lang.Object)>($r6);

(3)     if $z0_2 == 0 goto label3;

     label2:
        $r5_2 = Phi($r5 #2, $r5_1 #3);

        $z0_3 = Phi($z0_1 #2, $z0_2 #3);

        return 0;

     label3:
        $r5_3 = Phi($r5 #0, $r5 #1, $r5_1 #3);

        $z0_4 = Phi($z0 #0, $z0_1 #1, $z0_2 #3);

        return -1;
    }

    protected int firstStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo)
    {
        ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector $r0;
        ch.boye.httpclientandroidlib.conn.routing.RouteInfo $r1;
        int $i0;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.RouteInfo;

        $i0 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 <= 1 goto label1;

        return 2;

     label1:
        return 1;
    }

    public int nextStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo, ch.boye.httpclientandroidlib.conn.routing.RouteInfo)
    {
        ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector $r0;
        ch.boye.httpclientandroidlib.conn.routing.RouteInfo $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.RouteInfo;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.conn.routing.RouteInfo;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Planned route may not be null.");

        throw $r3;

     label1:
(0)     if $r2 == null goto label2;

        $i0 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: int getHopCount()>();

(1)     if $i0 >= 1 goto label3;

     label2:
        $i0_4 = Phi($i0 #0, $i0 #1);

        $i0_5 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector: int firstStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo)>($r1);

        return $i0_5;

     label3:
        $i0_1 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: int getHopCount()>();

        if $i0_1 <= 1 goto label4;

        $i0_2 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector: int proxiedStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo,ch.boye.httpclientandroidlib.conn.routing.RouteInfo)>($r1, $r2);

        return $i0_2;

     label4:
        $i0_3 = virtualinvoke $r0.<ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector: int directStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo,ch.boye.httpclientandroidlib.conn.routing.RouteInfo)>($r1, $r2);

        return $i0_3;
    }

    protected int proxiedStep(ch.boye.httpclientandroidlib.conn.routing.RouteInfo, ch.boye.httpclientandroidlib.conn.routing.RouteInfo)
    {
        ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector $r0;
        ch.boye.httpclientandroidlib.conn.routing.RouteInfo $r1, $r2;
        int $i0, $i1, $i2, $i3, $i3_1, $i0_1, $i0_2, $i3_2, $i3_3, $i0_3;
        ch.boye.httpclientandroidlib.HttpHost $r3, $r4, $r4_1, $r3_1, $r3_2, $r4_2, $r4_3, $r3_3;
        boolean $z0, $z1, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11, $z0_12, $z0_13, $z0_14, $z0_15, $z0_16;

        $r0 := @this: ch.boye.httpclientandroidlib.conn.routing.BasicRouteDirector;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.conn.routing.RouteInfo;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.conn.routing.RouteInfo;

        $i0 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 > 1 goto label1;

        return -1;

     label1:
        $r3 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: ch.boye.httpclientandroidlib.HttpHost getTargetHost()>();

        $r4 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: ch.boye.httpclientandroidlib.HttpHost getTargetHost()>();

        $z0 = virtualinvoke $r3.<ch.boye.httpclientandroidlib.HttpHost: boolean equals(java.lang.Object)>($r4);

(0)     if $z0 == 0 goto label9;

        $i1 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: int getHopCount()>();

        $i2 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: int getHopCount()>();

(1)     if $i1 < $i2 goto label9;

(2)     $i3 = 0;

     label2:
        $i3_1 = Phi($i3 #2, $i3_2 #4);

        $r4_1 = Phi($r4 #2, $r4_2 #4);

        $z0_1 = Phi($z0 #2, $z0_2 #4);

        $r3_1 = Phi($r3 #2, $r3_2 #4);

        $i0_1 = Phi($i0 #2, $i0_2 #4);

        $i0_2 = $i2 + -1;

        if $i3_1 >= $i0_2 goto label3;

        $r3_2 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: ch.boye.httpclientandroidlib.HttpHost getHopTarget(int)>($i3_1);

        $r4_2 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: ch.boye.httpclientandroidlib.HttpHost getHopTarget(int)>($i3_1);

        $z0_2 = virtualinvoke $r3_2.<ch.boye.httpclientandroidlib.HttpHost: boolean equals(java.lang.Object)>($r4_2);

(3)     if $z0_2 == 0 goto label9;

        $i3_2 = $i3_1 + 1;

(4)     goto label2;

     label3:
        if $i1 <= $i2 goto label4;

        return 4;

     label4:
        $z0_3 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isTunnelled()>();

(5)     if $z0_3 == 0 goto label5;

        $z0_4 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isTunnelled()>();

(6)     if $z0_4 == 0 goto label9;

     label5:
        $z0_5 = Phi($z0_3 #5, $z0_4 #6);

        $z0_6 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isLayered()>();

(7)     if $z0_6 == 0 goto label6;

        $z0_7 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isLayered()>();

(8)     if $z0_7 == 0 goto label9;

     label6:
        $z0_8 = Phi($z0_6 #7, $z0_7 #8);

        $z0_9 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isTunnelled()>();

(9)     if $z0_9 == 0 goto label7;

        $z0_10 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isTunnelled()>();

(10)    if $z0_10 != 0 goto label7;

        return 3;

     label7:
        $z0_11 = Phi($z0_9 #9, $z0_10 #10);

        $z0_12 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isLayered()>();

(11)    if $z0_12 == 0 goto label8;

        $z0_13 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isLayered()>();

(12)    if $z0_13 != 0 goto label8;

        return 5;

     label8:
        $z0_14 = Phi($z0_12 #11, $z0_13 #12);

        $z0_15 = interfaceinvoke $r1.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isSecure()>();

        $z1 = interfaceinvoke $r2.<ch.boye.httpclientandroidlib.conn.routing.RouteInfo: boolean isSecure()>();

(13)    if $z0_15 != $z1 goto label9;

        return 0;

     label9:
        $i3_3 = Phi($i3 #0, $i3 #1, $i3_1 #3, $i3_1 #6, $i3_1 #8, $i3_1 #13);

        $r4_3 = Phi($r4 #0, $r4 #1, $r4_2 #3, $r4_1 #6, $r4_1 #8, $r4_1 #13);

        $z0_16 = Phi($z0 #0, $z0 #1, $z0_2 #3, $z0_4 #6, $z0_7 #8, $z0_15 #13);

        $r3_3 = Phi($r3 #0, $r3 #1, $r3_2 #3, $r3_1 #6, $r3_1 #8, $r3_1 #13);

        $i0_3 = Phi($i0 #0, $i0 #1, $i0_2 #3, $i0_2 #6, $i0_2 #8, $i0_2 #13);

        return -1;
    }
}
