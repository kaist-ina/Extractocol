class bolts.Task$1 extends java.lang.Object implements bolts.Continuation
{
    final bolts.Task this$0;

    void <init>(bolts.Task)
    {
        bolts.Task$1 $r0;
        bolts.Task $r1;

        $r0 := @this: bolts.Task$1;

        $r1 := @parameter0: bolts.Task;

        $r0.<bolts.Task$1: bolts.Task this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public bolts.Task then(bolts.Task) throws java.lang.Exception
    {
        bolts.Task$1 $r0;
        bolts.Task $r1, $r1_1, $r1_2, $r1_3;
        boolean $z0, $z0_1;
        java.lang.Exception $r2;

        $r0 := @this: bolts.Task$1;

        $r1 := @parameter0: bolts.Task;

        $z0 = virtualinvoke $r1.<bolts.Task: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        $r1_1 = staticinvoke <bolts.Task: bolts.Task cancelled()>();

        return $r1_1;

     label1:
        $z0_1 = virtualinvoke $r1.<bolts.Task: boolean isFaulted()>();

        if $z0_1 == 0 goto label2;

        $r2 = virtualinvoke $r1.<bolts.Task: java.lang.Exception getError()>();

        $r1_2 = staticinvoke <bolts.Task: bolts.Task forError(java.lang.Exception)>($r2);

        return $r1_2;

     label2:
        $r1_3 = staticinvoke <bolts.Task: bolts.Task forResult(java.lang.Object)>(null);

        return $r1_3;
    }

    public volatile java.lang.Object then(bolts.Task) throws java.lang.Exception
    {
        bolts.Task$1 $r0;
        bolts.Task $r1, $r1_1;

        $r0 := @this: bolts.Task$1;

        $r1 := @parameter0: bolts.Task;

        $r1_1 = virtualinvoke $r0.<bolts.Task$1: bolts.Task then(bolts.Task)>($r1);

        return $r1_1;
    }
}
