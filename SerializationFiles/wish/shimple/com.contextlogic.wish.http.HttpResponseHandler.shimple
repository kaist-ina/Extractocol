public abstract class com.contextlogic.wish.http.HttpResponseHandler extends java.lang.Object
{
    private android.os.Handler handler;
    private final com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] messageTypeValues;
    private java.util.HashMap responseCookies;
    private boolean responseReceived;

    public void <init>()
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        java.util.HashMap $r1;
        com.contextlogic.wish.http.HttpResponseHandler$1 $r2;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] $r3;
        android.os.Looper $r4, $r4_1, $r4_2;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] values()>();

        $r0.<com.contextlogic.wish.http.HttpResponseHandler: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] messageTypeValues> = $r3;

        $r0.<com.contextlogic.wish.http.HttpResponseHandler: boolean responseReceived> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<com.contextlogic.wish.http.HttpResponseHandler: java.util.HashMap responseCookies> = $r1;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

(0)     if $r4 == null goto label1;

        $r2 = new com.contextlogic.wish.http.HttpResponseHandler$1;

        $r4_1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<com.contextlogic.wish.http.HttpResponseHandler$1: void <init>(com.contextlogic.wish.http.HttpResponseHandler,android.os.Looper)>($r0, $r4_1);

(1)     $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Handler handler> = $r2;

     label1:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return;
    }

    private void sendMessage(android.os.Message)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        android.os.Message $r1;
        java.lang.Thread $r2;
        boolean $z0;
        android.os.Handler $r3, $r3_1;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: android.os.Message;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z0 = virtualinvoke $r2.<java.lang.Thread: boolean isInterrupted()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Handler handler>;

        if $r3 == null goto label2;

        $r3_1 = $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Handler handler>;

        virtualinvoke $r3_1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;

     label2:
        virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void handleMessage(android.os.Message)>($r1);

        return;
    }

    public java.util.HashMap getResponseCookies()
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        java.util.HashMap r1;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        r1 = $r0.<com.contextlogic.wish.http.HttpResponseHandler: java.util.HashMap responseCookies>;

        return r1;
    }

    public abstract void handleCachedResponse(java.lang.Object);

    public abstract void handleFailure(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest, java.lang.Throwable, java.lang.Object);

    protected void handleMessage(android.os.Message)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        android.os.Message $r1;
        int[] $r2;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] $r3;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r4;
        int $i0, $i0_1, $i0_2;
        java.lang.Object $r5, $r5_1, $r5_2, $r5_3, $r5_4, $r5_5, $r5_6, $r5_7, $r5_8, $r5_9;
        ch.boye.httpclientandroidlib.client.methods.HttpUriRequest $r6, $r6_1, $r6_2;
        java.lang.Object[] $r7, $r7_1;
        java.lang.Throwable $r8;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: android.os.Message;

        $r2 = <com.contextlogic.wish.http.HttpResponseHandler$2: int[] $SwitchMap$com$contextlogic$wish$http$HttpResponseHandler$ResponseMessageType>;

        $r3 = $r0.<com.contextlogic.wish.http.HttpResponseHandler: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType[] messageTypeValues>;

        $i0 = $r1.<android.os.Message: int what>;

        $r4 = $r3[$i0];

        $i0_1 = virtualinvoke $r4.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

        $i0_2 = $r2[$i0_1];

        lookupswitch($i0_2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r5 = $r1.<android.os.Message: java.lang.Object obj>;

        $r6 = (ch.boye.httpclientandroidlib.client.methods.HttpUriRequest) $r5;

        virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void handleStart(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest)>($r6);

        return;

     label3:
        $r0.<com.contextlogic.wish.http.HttpResponseHandler: boolean responseReceived> = 1;

        $r5_1 = $r1.<android.os.Message: java.lang.Object obj>;

        $r7 = (java.lang.Object[]) $r5_1;

        $r5_2 = $r7[0];

        $r6_1 = (ch.boye.httpclientandroidlib.client.methods.HttpUriRequest) $r5_2;

        $r5_3 = $r7[1];

        $r8 = (java.lang.Throwable) $r5_3;

        $r5_4 = $r7[2];

        virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void handleFailure(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest,java.lang.Throwable,java.lang.Object)>($r6_1, $r8, $r5_4);

        return;

     label4:
        $r0.<com.contextlogic.wish.http.HttpResponseHandler: boolean responseReceived> = 1;

        $r5_5 = $r1.<android.os.Message: java.lang.Object obj>;

        $r7_1 = (java.lang.Object[]) $r5_5;

        $r5_6 = $r7_1[0];

        $r6_2 = (ch.boye.httpclientandroidlib.client.methods.HttpUriRequest) $r5_6;

        $r5_7 = $r7_1[1];

        virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void handleSuccess(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest,java.lang.Object)>($r6_2, $r5_7);

        return;

     label5:
        $z0 = $r0.<com.contextlogic.wish.http.HttpResponseHandler: boolean responseReceived>;

(0)     if $z0 != 0 goto label7;

        virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void onCancelled()>();

        return;

     label6:
        $r5_8 = $r1.<android.os.Message: java.lang.Object obj>;

(1)     virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void handleCachedResponse(java.lang.Object)>($r5_8);

     label7:
        $r5_9 = Phi($r5 #0, $r5_8 #1);

        return;
    }

    public abstract void handleStart(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest);

    public abstract void handleSuccess(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest, java.lang.Object);

    public boolean hasCachedResponse(java.lang.String)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        java.lang.String $r1;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean loadResponseFromCache(java.lang.String)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        java.lang.String $r1;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: java.lang.String;

        return 0;
    }

    protected android.os.Message obtainMessage(com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType, java.lang.Object)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r1;
        java.lang.Object $r2;
        android.os.Handler $r3, $r3_1;
        int $i0, $i0_1;
        android.os.Message $r4, $r4_1;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Handler handler>;

        if $r3 == null goto label1;

        $r3_1 = $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Handler handler>;

        $i0 = virtualinvoke $r1.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

        $r4 = virtualinvoke $r3_1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>($i0, $r2);

        return $r4;

     label1:
        $r4_1 = new android.os.Message;

        specialinvoke $r4_1.<android.os.Message: void <init>()>();

        $i0_1 = virtualinvoke $r1.<com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: int ordinal()>();

        $r4_1.<android.os.Message: int what> = $i0_1;

        $r4_1.<android.os.Message: java.lang.Object obj> = $r2;

        return $r4_1;
    }

    public void onCancelled()
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        return;
    }

    public abstract java.lang.Object preprocessFailure(java.lang.Throwable, java.lang.Object);

    public abstract java.lang.Object preprocessSuccess(java.lang.Object);

    public abstract void receiveResponse(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest, ch.boye.httpclientandroidlib.HttpResponse);

    public void requestFailed(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest, java.lang.Throwable, java.lang.Object)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        ch.boye.httpclientandroidlib.client.methods.HttpUriRequest $r1;
        java.lang.Throwable $r2;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5, $r5_1;
        android.os.Message $r6;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.methods.HttpUriRequest;

        $r2 := @parameter1: java.lang.Throwable;

        $r5 := @parameter2: java.lang.Object;

        $r5_1 = virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: java.lang.Object preprocessFailure(java.lang.Throwable,java.lang.Object)>($r2, $r5);

        $r3 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestFailed>;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r4[2] = $r5_1;

        $r6 = virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Message obtainMessage(com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType,java.lang.Object)>($r3, $r4);

        specialinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void sendMessage(android.os.Message)>($r6);

        return;
    }

    public void requestFinished(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        ch.boye.httpclientandroidlib.client.methods.HttpUriRequest $r1;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r2;
        android.os.Message $r3;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.methods.HttpUriRequest;

        $r2 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestFinished>;

        $r3 = virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Message obtainMessage(com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType,java.lang.Object)>($r2, $r1);

        specialinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void sendMessage(android.os.Message)>($r3);

        return;
    }

    public void requestStarted(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        ch.boye.httpclientandroidlib.client.methods.HttpUriRequest $r1;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r2;
        android.os.Message $r3;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.methods.HttpUriRequest;

        $r2 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestStarted>;

        $r3 = virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Message obtainMessage(com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType,java.lang.Object)>($r2, $r1);

        specialinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void sendMessage(android.os.Message)>($r3);

        return;
    }

    public void requestSucceeded(ch.boye.httpclientandroidlib.client.methods.HttpUriRequest, java.lang.Object)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        ch.boye.httpclientandroidlib.client.methods.HttpUriRequest $r1;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4, $r4_1;
        android.os.Message $r5;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: ch.boye.httpclientandroidlib.client.methods.HttpUriRequest;

        $r4 := @parameter1: java.lang.Object;

        $r4_1 = virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: java.lang.Object preprocessSuccess(java.lang.Object)>($r4);

        $r2 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType RequestSucceeded>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r3[1] = $r4_1;

        $r5 = virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Message obtainMessage(com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType,java.lang.Object)>($r2, $r3);

        specialinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void sendMessage(android.os.Message)>($r5);

        return;
    }

    public void responseLoadedFromCache(java.lang.Object)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        java.lang.Object $r1;
        com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType $r2;
        android.os.Message $r3;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: java.lang.Object;

        $r2 = <com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType: com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType CachedResponse>;

        $r3 = virtualinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: android.os.Message obtainMessage(com.contextlogic.wish.http.HttpResponseHandler$ResponseMessageType,java.lang.Object)>($r2, $r1);

        specialinvoke $r0.<com.contextlogic.wish.http.HttpResponseHandler: void sendMessage(android.os.Message)>($r3);

        return;
    }

    public void setResponseCookies(java.util.HashMap)
    {
        com.contextlogic.wish.http.HttpResponseHandler $r0;
        java.util.HashMap $r1;

        $r0 := @this: com.contextlogic.wish.http.HttpResponseHandler;

        $r1 := @parameter0: java.util.HashMap;

        $r0.<com.contextlogic.wish.http.HttpResponseHandler: java.util.HashMap responseCookies> = $r1;

        return;
    }
}
