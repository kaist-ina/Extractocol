class io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1 extends java.lang.Object implements java.lang.Runnable
{
    final io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor this$0;
    final java.lang.Runnable val$r;

    void <init>(io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor, java.lang.Runnable)
    {
        io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1 $r0;
        io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor $r1;
        java.lang.Runnable $r2;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1;

        $r1 := @parameter0: io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor;

        $r2 := @parameter1: java.lang.Runnable;

        $r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor this$0> = $r1;

        $r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: java.lang.Runnable val$r> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1 $r0;
        java.lang.Runnable $r1;
        java.lang.Throwable $r2;
        io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor $r3, $r3_1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1;

     label1:
        $r1 = $r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: java.lang.Runnable val$r>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label2:
        $r3 = $r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor this$0>;

        virtualinvoke $r3.<io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor: void scheduleNext()>();

        return;

     label3:
        $r2 := @caughtexception;

        $r3_1 = $r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor this$0>;

        virtualinvoke $r3_1.<io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor: void scheduleNext()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
