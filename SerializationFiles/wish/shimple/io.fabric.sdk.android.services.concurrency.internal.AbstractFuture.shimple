public abstract class io.fabric.sdk.android.services.concurrency.internal.AbstractFuture extends java.lang.Object implements java.util.concurrent.Future
{
    private final io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync;

    protected void <init>()
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync;

        specialinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: void <init>()>();

        $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync> = $r1;

        return;
    }

    static final java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        java.util.concurrent.CancellationException $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = new java.util.concurrent.CancellationException;

        specialinvoke $r2.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>($r0);

        virtualinvoke $r2.<java.util.concurrent.CancellationException: java.lang.Throwable initCause(java.lang.Throwable)>($r1);

        return $r2;
    }

    public boolean cancel(boolean)
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        boolean $z0, $z1;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r1;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $z1 = virtualinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: boolean cancel(boolean)>($z0);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        if $z0 == 0 goto label2;

        virtualinvoke $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: void interruptTask()>();

     label2:
        return 1;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r1;
        java.lang.Object $r2;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $r2 = virtualinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: java.lang.Object get()>();

        return $r2;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException, java.util.concurrent.ExecutionException
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        java.util.concurrent.TimeUnit $r1;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r2;
        long $l0, $l0_1;
        java.lang.Object $r3;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $l0_1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l0);

        $r3 = virtualinvoke $r2.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: java.lang.Object get(long)>($l0_1);

        return $r3;
    }

    protected void interruptTask()
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        return;
    }

    public boolean isCancelled()
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r1;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: boolean isCancelled()>();

        return $z0;
    }

    public boolean isDone()
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r1;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: boolean isDone()>();

        return $z0;
    }

    protected boolean set(java.lang.Object)
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        java.lang.Object $r1;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r2;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r2.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: boolean set(java.lang.Object)>($r1);

        return $z0;
    }

    protected boolean setException(java.lang.Throwable)
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        java.lang.Throwable $r1;
        java.lang.NullPointerException $r2;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r3;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $r1 := @parameter0: java.lang.Throwable;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $r3 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r3.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: boolean setException(java.lang.Throwable)>($r1);

        return $z0;
    }

    protected final boolean wasInterrupted()
    {
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture $r0;
        io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync $r1;
        boolean $z0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture;

        $r1 = $r0.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r1.<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture$Sync: boolean wasInterrupted()>();

        return $z0;
    }
}
