public class com.paypal.android.sdk.onetouch.core.df extends java.lang.Object
{

    static void <clinit>()
    {
        java.lang.Class $r0;

        $r0 = class "com/paypal/android/sdk/onetouch/core/df";

        virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        return;
    }

    public void <init>()
    {
        com.paypal.android.sdk.onetouch.core.df $r0;

        $r0 := @this: com.paypal.android.sdk.onetouch.core.df;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] a()
    {
        byte[] $r0;

        $r0 = staticinvoke <com.paypal.android.sdk.onetouch.core.dd: byte[] a(int)>(32);

        return $r0;
    }

    public static byte[] a(byte[], java.security.cert.Certificate)
    {
        java.security.cert.Certificate $r0;
        int $i0;
        com.paypal.android.sdk.onetouch.core.de $r1;
        byte[] $r2, $r2_1;
        java.security.PublicKey $r3;
        javax.crypto.Cipher $r4;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.security.cert.Certificate;

        $i0 = lengthof $r2;

        if $i0 <= 256 goto label1;

        $r1 = new com.paypal.android.sdk.onetouch.core.de;

        specialinvoke $r1.<com.paypal.android.sdk.onetouch.core.de: void <init>()>();

        throw $r1;

     label1:
        $r3 = virtualinvoke $r0.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/OAEPWithSHA1AndMGF1Padding");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r3);

        $r2_1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

        return $r2_1;
    }

    public final byte[] a(byte[], byte[])
    {
        com.paypal.android.sdk.onetouch.core.df $r0;
        com.paypal.android.sdk.onetouch.core.de $r1;
        byte[] $r2, $r3, $r4, $r7, $r8, $r8_1, $r7_1, $r7_2, $r7_3;
        java.lang.IllegalArgumentException $r5;
        javax.crypto.spec.IvParameterSpec $r6;
        int $i0, $i0_1, $i0_2, $i0_3, $i0_4, $i0_5, $i0_6;
        javax.crypto.Mac $r9;
        javax.crypto.spec.SecretKeySpec $r10, $r10_1;
        boolean $z0;
        javax.crypto.Cipher $r11;

        $r0 := @this: com.paypal.android.sdk.onetouch.core.df;

        $r7 := @parameter0: byte[];

        $r8 := @parameter1: byte[];

        $i0 = lengthof $r7;

        if $i0 >= 48 goto label1;

        $r1 = new com.paypal.android.sdk.onetouch.core.de;

        specialinvoke $r1.<com.paypal.android.sdk.onetouch.core.de: void <init>()>();

        throw $r1;

     label1:
        $r2 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r2, 0, 16);

        $r3 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 16, $r3, 0, 16);

        $r4 = newarray (byte)[32];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r4, 0, 32);

        $i0_1 = lengthof $r7;

        $i0_2 = $i0_1 + -32;

        $r8_1 = newarray (byte)[$i0_2];

        $i0_3 = lengthof $r7;

        $i0_4 = $i0_3 + -32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 32, $r8_1, 0, $i0_4);

        $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA256");

        $r10 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "HmacSHA256");

        virtualinvoke $r9.<javax.crypto.Mac: void init(java.security.Key)>($r10);

        $r7_1 = virtualinvoke $r9.<javax.crypto.Mac: byte[] doFinal(byte[])>($r8_1);

        $z0 = staticinvoke <com.paypal.android.sdk.onetouch.core.dd: boolean a(byte[],byte[])>($r7_1, $r4);

        if $z0 != 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Signature mismatch");

        throw $r5;

     label2:
        $r7_2 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8_1, 0, $r7_2, 0, 16);

        $r6 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7_2);

        $r10_1 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r10_1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, "AES");

        $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CTR/NoPadding");

        virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r10_1, $r6);

        $i0_5 = lengthof $r8_1;

        $i0_6 = $i0_5 + -16;

        $r7_3 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r8_1, 16, $i0_6);

        return $r7_3;
    }
}
