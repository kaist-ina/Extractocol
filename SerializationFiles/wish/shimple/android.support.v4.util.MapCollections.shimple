abstract class android.support.v4.util.MapCollections extends java.lang.Object
{
    android.support.v4.util.MapCollections$EntrySet mEntrySet;
    android.support.v4.util.MapCollections$KeySet mKeySet;
    android.support.v4.util.MapCollections$ValuesCollection mValues;

    void <init>()
    {
        android.support.v4.util.MapCollections $r0;

        $r0 := @this: android.support.v4.util.MapCollections;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean containsAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Map $r0;
        java.util.Collection $r1;
        java.util.Iterator $r2;
        boolean $z0, $z0_1, $z0_2;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Collection;

(0)     $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = Phi($z0 #0, $z0_2 #1);

        $z0_1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0_2 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

(1)     if $z0_2 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public static boolean equalsSetHelper(java.util.Set, java.lang.Object)
    {
        java.util.Set $r0, $r4;
        java.lang.Object $r1;
        java.lang.NullPointerException $r2;
        java.lang.ClassCastException $r3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        int $i0, $i1;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof java.util.Set;

(0)     if $z0 == 0 goto label9;

(1)     $r4 = (java.util.Set) $r1;

     label2:
        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $i1 = interfaceinvoke $r4.<java.util.Set: int size()>();

     label3:
(2)     if $i0 != $i1 goto label6;

     label4:
(3)     $z0_1 = interfaceinvoke $r0.<java.util.Set: boolean containsAll(java.util.Collection)>($r4);

     label5:
(4)     if $z0_1 == 0 goto label6;

        return 1;

     label6:
        $z0_2 = Phi($z0 #2, $z0_1 #4);

        return 0;

     label7:
        $r2 := @caughtexception;

        $z0_3 = Phi($z0 #1, $z0_1 #3);

        return 0;

     label8:
        $r3 := @caughtexception;

(5)     $z0_4 = Phi($z0 #1, $z0_1 #3);

     label9:
        $z0_5 = Phi($z0 #0, $z0_4 #5);

        return 0;

        catch java.lang.NullPointerException from label2 to label3 with label7;
        catch java.lang.ClassCastException from label2 to label3 with label8;
        catch java.lang.NullPointerException from label4 to label5 with label7;
        catch java.lang.ClassCastException from label4 to label5 with label8;
    }

    public static boolean removeAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Map $r0;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Collection;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        goto label1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 == $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static boolean retainAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Map $r0;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0, $z0_1, $z0_2;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Collection;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

(0)     $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = Phi($z0 #0, $z0_2 #1, $z0_2 #2);

        $z0_1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0_2 = interfaceinvoke $r1.<java.util.Collection: boolean contains(java.lang.Object)>($r4);

(1)     if $z0_2 != 0 goto label1;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

(2)     goto label1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 == $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    protected abstract void colClear();

    protected abstract java.lang.Object colGetEntry(int, int);

    protected abstract java.util.Map colGetMap();

    protected abstract int colGetSize();

    protected abstract int colIndexOfKey(java.lang.Object);

    protected abstract int colIndexOfValue(java.lang.Object);

    protected abstract void colPut(java.lang.Object, java.lang.Object);

    protected abstract void colRemoveAt(int);

    protected abstract java.lang.Object colSetValue(int, java.lang.Object);

    public java.util.Set getEntrySet()
    {
        android.support.v4.util.MapCollections $r0;
        android.support.v4.util.MapCollections$EntrySet $r1, $r1_1, $r1_2, $r1_3;

        $r0 := @this: android.support.v4.util.MapCollections;

        $r1 = $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$EntrySet mEntrySet>;

(0)     if $r1 != null goto label1;

        $r1_1 = new android.support.v4.util.MapCollections$EntrySet;

        specialinvoke $r1_1.<android.support.v4.util.MapCollections$EntrySet: void <init>(android.support.v4.util.MapCollections)>($r0);

(1)     $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$EntrySet mEntrySet> = $r1_1;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $r1_3 = $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$EntrySet mEntrySet>;

        return $r1_3;
    }

    public java.util.Set getKeySet()
    {
        android.support.v4.util.MapCollections $r0;
        android.support.v4.util.MapCollections$KeySet $r1, $r1_1, $r1_2, $r1_3;

        $r0 := @this: android.support.v4.util.MapCollections;

        $r1 = $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$KeySet mKeySet>;

(0)     if $r1 != null goto label1;

        $r1_1 = new android.support.v4.util.MapCollections$KeySet;

        specialinvoke $r1_1.<android.support.v4.util.MapCollections$KeySet: void <init>(android.support.v4.util.MapCollections)>($r0);

(1)     $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$KeySet mKeySet> = $r1_1;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $r1_3 = $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$KeySet mKeySet>;

        return $r1_3;
    }

    public java.util.Collection getValues()
    {
        android.support.v4.util.MapCollections $r0;
        android.support.v4.util.MapCollections$ValuesCollection $r1, $r1_1, $r1_2, $r1_3;

        $r0 := @this: android.support.v4.util.MapCollections;

        $r1 = $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$ValuesCollection mValues>;

(0)     if $r1 != null goto label1;

        $r1_1 = new android.support.v4.util.MapCollections$ValuesCollection;

        specialinvoke $r1_1.<android.support.v4.util.MapCollections$ValuesCollection: void <init>(android.support.v4.util.MapCollections)>($r0);

(1)     $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$ValuesCollection mValues> = $r1_1;

     label1:
        $r1_2 = Phi($r1 #0, $r1_1 #1);

        $r1_3 = $r0.<android.support.v4.util.MapCollections: android.support.v4.util.MapCollections$ValuesCollection mValues>;

        return $r1_3;
    }

    public java.lang.Object[] toArrayHelper(int)
    {
        android.support.v4.util.MapCollections $r0;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        $r0 := @this: android.support.v4.util.MapCollections;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.support.v4.util.MapCollections: int colGetSize()>();

        $r1 = newarray (java.lang.Object)[$i1];

(0)     $i2 = 0;

     label1:
        $i2_1 = Phi($i2 #0, $i2_2 #1);

        if $i2_1 >= $i1 goto label2;

        $r2 = virtualinvoke $r0.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i2_1, $i0);

        $r1[$i2_1] = $r2;

        $i2_2 = $i2_1 + 1;

(1)     goto label1;

     label2:
        return $r1;
    }

    public java.lang.Object[] toArrayHelper(java.lang.Object[], int)
    {
        android.support.v4.util.MapCollections $r0;
        java.lang.Object[] $r1, $r1_1, $r1_2;
        int $i0, $i1, $i2, $i2_1, $i2_2, $i2_3, $i0_1;
        java.lang.Class $r2, $r2_1, $r2_2;
        java.lang.Object $r3, $r3_1, $r3_2, $r3_3;

        $r0 := @this: android.support.v4.util.MapCollections;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<android.support.v4.util.MapCollections: int colGetSize()>();

        $i2 = lengthof $r1;

(0)     if $i2 >= $i1 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2_1 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2_1, $i1);

(1)     $r1_1 = (java.lang.Object[]) $r3;

     label1:
        $r3_1 = Phi($r3 #0, $r3 #1);

        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r1_2 = Phi($r1 #0, $r1_1 #1);

(2)     $i2_1 = 0;

     label2:
        $r3_2 = Phi($r3_1 #2, $r3_3 #3);

        $i2_2 = Phi($i2_1 #2, $i2_3 #3);

        if $i2_2 >= $i1 goto label3;

        $r3_3 = virtualinvoke $r0.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i2_2, $i0);

        $r1_2[$i2_2] = $r3_3;

        $i2_3 = $i2_2 + 1;

(3)     goto label2;

     label3:
        $i0_1 = lengthof $r1_2;

        if $i0_1 <= $i1 goto label4;

        $r1_2[$i1] = null;

     label4:
        return $r1_2;
    }
}
