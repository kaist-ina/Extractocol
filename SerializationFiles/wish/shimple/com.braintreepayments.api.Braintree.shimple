public class com.braintreepayments.api.Braintree extends java.lang.Object
{
    protected static final java.lang.String INTEGRATION_DROPIN;
    private static final java.lang.String KEY_CLIENT_TOKEN;
    private static final java.lang.String KEY_CONFIGURATION;
    protected static final java.util.Map sInstances;
    private final com.braintreepayments.api.BraintreeApi mBraintreeApi;
    private android.content.BroadcastReceiver mBraintreeBroadcastReceiver;
    private java.util.List mCachedPaymentMethods;
    private final java.util.List mCallbackQueue;
    private java.lang.String mClientTokenKey;
    private final java.util.Set mCreatedListeners;
    private android.app.Activity mCurrentPayPalActivity;
    private final java.util.Set mErrorListeners;
    private final java.util.concurrent.ExecutorService mExecutorService;
    private java.lang.String mIntegrationType;
    private final android.os.Handler mListenerHandler;
    private boolean mListenersLocked;
    private final java.util.Set mNonceListeners;
    private final java.util.Set mUpdatedListeners;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.braintreepayments.api.Braintree: java.util.Map sInstances> = $r0;

        return;
    }

    protected void <init>(android.content.Context, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.Braintree$1 $r1;
        android.os.Handler $r2;
        java.util.LinkedList $r3;
        com.braintreepayments.api.BraintreeApi $r4;
        java.util.Map $r5;
        android.content.Context $r6, $r6_1;
        java.lang.String $r7, $r7_1;
        android.os.Looper $r8;
        java.util.HashSet $r9, $r9_1, $r9_2, $r9_3;
        com.braintreepayments.api.models.ClientToken $r10;
        java.util.concurrent.ExecutorService $r11;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r6 := @parameter0: android.content.Context;

        $r7 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new com.braintreepayments.api.Braintree$1;

        specialinvoke $r1.<com.braintreepayments.api.Braintree$1: void <init>(com.braintreepayments.api.Braintree)>($r0);

        $r0.<com.braintreepayments.api.Braintree: android.content.BroadcastReceiver mBraintreeBroadcastReceiver> = $r1;

        $r2 = new android.os.Handler;

        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r8);

        $r0.<com.braintreepayments.api.Braintree: android.os.Handler mListenerHandler> = $r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.List mCallbackQueue> = $r3;

        $r0.<com.braintreepayments.api.Braintree: boolean mListenersLocked> = 0;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mUpdatedListeners> = $r9;

        $r9_1 = new java.util.HashSet;

        specialinvoke $r9_1.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mCreatedListeners> = $r9_1;

        $r9_2 = new java.util.HashSet;

        specialinvoke $r9_2.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mNonceListeners> = $r9_2;

        $r9_3 = new java.util.HashSet;

        specialinvoke $r9_3.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mErrorListeners> = $r9_3;

        $r4 = new com.braintreepayments.api.BraintreeApi;

        $r6_1 = virtualinvoke $r6.<android.content.Context: android.content.Context getApplicationContext()>();

        $r10 = staticinvoke <com.braintreepayments.api.models.ClientToken: com.braintreepayments.api.models.ClientToken fromString(java.lang.String)>($r7);

        specialinvoke $r4.<com.braintreepayments.api.BraintreeApi: void <init>(android.content.Context,com.braintreepayments.api.models.ClientToken)>($r6_1, $r10);

        $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi> = $r4;

        $r11 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService> = $r11;

        $r0.<com.braintreepayments.api.Braintree: java.lang.String mIntegrationType> = "custom";

        $r0.<com.braintreepayments.api.Braintree: java.lang.String mClientTokenKey> = $r7;

        $r5 = <com.braintreepayments.api.Braintree: java.util.Map sInstances>;

        $r7_1 = $r0.<com.braintreepayments.api.Braintree: java.lang.String mClientTokenKey>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7_1, $r0);

        return;
    }

    protected void <init>(java.lang.String, com.braintreepayments.api.BraintreeApi)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        com.braintreepayments.api.Braintree$1 $r2;
        android.os.Handler $r3;
        java.util.LinkedList $r4;
        java.util.Map $r5;
        java.lang.String $r6, $r6_1;
        android.os.Looper $r7;
        java.util.HashSet $r8, $r8_1, $r8_2, $r8_3;
        java.util.concurrent.ExecutorService $r9;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r6 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.braintreepayments.api.BraintreeApi;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new com.braintreepayments.api.Braintree$1;

        specialinvoke $r2.<com.braintreepayments.api.Braintree$1: void <init>(com.braintreepayments.api.Braintree)>($r0);

        $r0.<com.braintreepayments.api.Braintree: android.content.BroadcastReceiver mBraintreeBroadcastReceiver> = $r2;

        $r3 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        $r0.<com.braintreepayments.api.Braintree: android.os.Handler mListenerHandler> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.List mCallbackQueue> = $r4;

        $r0.<com.braintreepayments.api.Braintree: boolean mListenersLocked> = 0;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mUpdatedListeners> = $r8;

        $r8_1 = new java.util.HashSet;

        specialinvoke $r8_1.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mCreatedListeners> = $r8_1;

        $r8_2 = new java.util.HashSet;

        specialinvoke $r8_2.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mNonceListeners> = $r8_2;

        $r8_3 = new java.util.HashSet;

        specialinvoke $r8_3.<java.util.HashSet: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.Set mErrorListeners> = $r8_3;

        $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi> = $r1;

        $r9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService> = $r9;

        $r0.<com.braintreepayments.api.Braintree: java.lang.String mIntegrationType> = "custom";

        $r0.<com.braintreepayments.api.Braintree: java.lang.String mClientTokenKey> = $r6;

        $r5 = <com.braintreepayments.api.Braintree: java.util.Map sInstances>;

        $r6_1 = $r0.<com.braintreepayments.api.Braintree: java.lang.String mClientTokenKey>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6_1, $r0);

        return;
    }

    static android.app.Activity access$000(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: android.app.Activity mCurrentPayPalActivity>;

        return r1;
    }

    static boolean access$100(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        boolean $z0;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $z0 = specialinvoke $r0.<com.braintreepayments.api.Braintree: boolean isSetup()>();

        return $z0;
    }

    static void access$1000(com.braintreepayments.api.Braintree, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void postCreatedNonceToListeners(java.lang.String)>($r1);

        return;
    }

    static java.util.Set access$1100(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.Set r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mUpdatedListeners>;

        return r1;
    }

    static android.os.Handler access$1200(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: android.os.Handler mListenerHandler>;

        return r1;
    }

    static java.util.Set access$1300(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.Set r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mCreatedListeners>;

        return r1;
    }

    static java.util.Set access$1400(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.Set r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mNonceListeners>;

        return r1;
    }

    static java.util.Set access$1500(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.Set r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mErrorListeners>;

        return r1;
    }

    static void access$200(com.braintreepayments.api.Braintree) throws com.braintreepayments.api.exceptions.ErrorWithResponse, com.braintreepayments.api.exceptions.BraintreeException
    {
        com.braintreepayments.api.Braintree $r0;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void setup()>();

        return;
    }

    static com.braintreepayments.api.BraintreeApi access$300(com.braintreepayments.api.Braintree)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        return r1;
    }

    static java.util.List access$402(com.braintreepayments.api.Braintree, java.util.List)
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.List $r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $r1 := @parameter1: java.util.List;

        $r0.<com.braintreepayments.api.Braintree: java.util.List mCachedPaymentMethods> = $r1;

        return $r1;
    }

    static void access$500(com.braintreepayments.api.Braintree, java.util.List)
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.List $r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $r1 := @parameter1: java.util.List;

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void postPaymentMethodsToListeners(java.util.List)>($r1);

        return;
    }

    static void access$600(com.braintreepayments.api.Braintree, com.braintreepayments.api.exceptions.ErrorWithResponse)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.exceptions.ErrorWithResponse $r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $r1 := @parameter1: com.braintreepayments.api.exceptions.ErrorWithResponse;

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void postRecoverableErrorToListeners(com.braintreepayments.api.exceptions.ErrorWithResponse)>($r1);

        return;
    }

    static void access$700(com.braintreepayments.api.Braintree, com.paypal.android.sdk.onetouch.core.PerformRequestStatus, java.lang.Boolean)
    {
        com.braintreepayments.api.Braintree $r0;
        com.paypal.android.sdk.onetouch.core.PerformRequestStatus $r1;
        java.lang.Boolean $r2;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $r1 := @parameter1: com.paypal.android.sdk.onetouch.core.PerformRequestStatus;

        $r2 := @parameter2: java.lang.Boolean;

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsForPayPalPerformRequestStatus(com.paypal.android.sdk.onetouch.core.PerformRequestStatus,java.lang.Boolean)>($r1, $r2);

        return;
    }

    static void access$800(com.braintreepayments.api.Braintree, com.braintreepayments.api.models.PaymentMethod)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod $r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $r1 := @parameter1: com.braintreepayments.api.models.PaymentMethod;

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void addPaymentMethodToCache(com.braintreepayments.api.models.PaymentMethod)>($r1);

        return;
    }

    static void access$900(com.braintreepayments.api.Braintree, com.braintreepayments.api.models.PaymentMethod)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod $r1;

        $r0 := @parameter0: com.braintreepayments.api.Braintree;

        $r1 := @parameter1: com.braintreepayments.api.models.PaymentMethod;

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void postCreatedMethodToListeners(com.braintreepayments.api.models.PaymentMethod)>($r1);

        return;
    }

    private void addPaymentMethodToCache(com.braintreepayments.api.models.PaymentMethod)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod $r1;
        java.util.ArrayList $r2;
        java.util.List $r3, $r3_1;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.models.PaymentMethod;

        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCachedPaymentMethods>;

        if $r3 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.braintreepayments.api.Braintree: java.util.List mCachedPaymentMethods> = $r2;

     label1:
        $r3_1 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCachedPaymentMethods>;

        interfaceinvoke $r3_1.<java.util.List: void add(int,java.lang.Object)>(0, $r1);

        return;
    }

    public static com.braintreepayments.api.Braintree getInstance(android.content.Context, java.lang.String)
    {
        java.lang.String $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        android.content.Context $r2, $r2_1;
        java.util.Map $r3, $r3_1;
        boolean $z0;
        java.lang.Object $r4;
        com.braintreepayments.api.Braintree $r5, $r5_1;

        $r2 := @parameter0: android.content.Context;

        $r0 := @parameter1: java.lang.String;

        $r3 = <com.braintreepayments.api.Braintree: java.util.Map sInstances>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        $r3_1 = <com.braintreepayments.api.Braintree: java.util.Map sInstances>;

        $r4 = interfaceinvoke $r3_1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r5 = (com.braintreepayments.api.Braintree) $r4;

        return $r5;

     label1:
        $r5_1 = new com.braintreepayments.api.Braintree;

        $r1 = new com.braintreepayments.api.BraintreeApi;

        $r2_1 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r1.<com.braintreepayments.api.BraintreeApi: void <init>(android.content.Context,java.lang.String)>($r2_1, $r0);

        specialinvoke $r5_1.<com.braintreepayments.api.Braintree: void <init>(java.lang.String,com.braintreepayments.api.BraintreeApi)>($r0, $r1);

        return $r5_1;
    }

    private boolean isSetup()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: boolean isSetup()>();

        return $z0;
    }

    private void postCreatedMethodToListeners(com.braintreepayments.api.models.PaymentMethod)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod $r1;
        com.braintreepayments.api.Braintree$15 $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.models.PaymentMethod;

        entermonitor $r0;

     label1:
        $r2 = new com.braintreepayments.api.Braintree$15;

        specialinvoke $r2.<com.braintreepayments.api.Braintree$15: void <init>(com.braintreepayments.api.Braintree,com.braintreepayments.api.models.PaymentMethod)>($r0, $r1);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postOrQueueCallback(com.braintreepayments.api.Braintree$ListenerCallback)>($r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void postCreatedNonceToListeners(java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.String $r1;
        com.braintreepayments.api.Braintree$16 $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = new com.braintreepayments.api.Braintree$16;

        specialinvoke $r2.<com.braintreepayments.api.Braintree$16: void <init>(com.braintreepayments.api.Braintree,java.lang.String)>($r0, $r1);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postOrQueueCallback(com.braintreepayments.api.Braintree$ListenerCallback)>($r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void postPaymentMethodsToListeners(java.util.List)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.Braintree$14 $r1;
        java.lang.Throwable $r2;
        java.util.List $r3, $r3_1, $r3_2;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r3 := @parameter0: java.util.List;

(0)     entermonitor $r0;

     label1:
(1)     $r3_1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        $r1 = new com.braintreepayments.api.Braintree$14;

        specialinvoke $r1.<com.braintreepayments.api.Braintree$14: void <init>(com.braintreepayments.api.Braintree,java.util.List)>($r0, $r3_1);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postOrQueueCallback(com.braintreepayments.api.Braintree$ListenerCallback)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        $r3_2 = Phi($r3 #0, $r3_1 #1);

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void postRecoverableErrorToListeners(com.braintreepayments.api.exceptions.ErrorWithResponse)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.exceptions.ErrorWithResponse $r1;
        com.braintreepayments.api.Braintree$18 $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.exceptions.ErrorWithResponse;

        entermonitor $r0;

     label1:
        $r2 = new com.braintreepayments.api.Braintree$18;

        specialinvoke $r2.<com.braintreepayments.api.Braintree$18: void <init>(com.braintreepayments.api.Braintree,com.braintreepayments.api.exceptions.ErrorWithResponse)>($r0, $r1);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postOrQueueCallback(com.braintreepayments.api.Braintree$ListenerCallback)>($r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void reset()
    {
        java.util.Map $r0;

        $r0 = <com.braintreepayments.api.Braintree: java.util.Map sInstances>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        return;
    }

    public static com.braintreepayments.api.Braintree restoreSavedInstanceState(android.content.Context, android.os.Bundle)
    {
        android.os.Bundle $r0;
        java.util.Map $r1;
        com.braintreepayments.api.BraintreeApi $r2;
        android.content.Context $r3, $r3_1;
        java.lang.String $r4, $r5;
        java.lang.Object $r6;
        com.braintreepayments.api.Braintree $r7, $r7_1;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;

        $r3 := @parameter0: android.content.Context;

        $r0 := @parameter1: android.os.Bundle;

        if $r0 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.braintreepayments.api.KEY_CLIENT_TOKEN");

        $r5 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.braintreepayments.api.KEY_CONFIGURATION");

        $r1 = <com.braintreepayments.api.Braintree: java.util.Map sInstances>;

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (com.braintreepayments.api.Braintree) $r6;

(0)     if $r7 == null goto label2;

        $z0 = specialinvoke $r7.<com.braintreepayments.api.Braintree: boolean isSetup()>();

(1)     if $z0 != 0 goto label4;

     label2:
        $z0_1 = Phi($z0 #0, $z0 #1);

        $z0_2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

(2)     if $z0_2 != 0 goto label3;

        $z0_3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

(3)     if $z0_3 != 0 goto label3;

        $r7_1 = new com.braintreepayments.api.Braintree;

        $r2 = new com.braintreepayments.api.BraintreeApi;

        $r3_1 = virtualinvoke $r3.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r2.<com.braintreepayments.api.BraintreeApi: void <init>(android.content.Context,java.lang.String,java.lang.String)>($r3_1, $r4, $r5);

        specialinvoke $r7_1.<com.braintreepayments.api.Braintree: void <init>(java.lang.String,com.braintreepayments.api.BraintreeApi)>($r4, $r2);

        return $r7_1;

     label3:
        $z0_4 = Phi($z0_2 #2, $z0_3 #3);

        return null;

     label4:
        return $r7;
    }

    private void sendAnalyticsForPayPalPerformRequestStatus(com.paypal.android.sdk.onetouch.core.PerformRequestStatus, java.lang.Boolean)
    {
        com.braintreepayments.api.Braintree $r0;
        com.paypal.android.sdk.onetouch.core.PerformRequestStatus $r1;
        java.lang.Boolean $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9;
        com.paypal.android.sdk.onetouch.core.RequestTarget $r3, $r4, $r3_1, $r4_1, $r3_2, $r4_2, $r3_3, $r4_3, $r3_4, $r4_4, $r3_5, $r4_5, $r3_6, $r4_6, $r3_7, $r4_7, $r3_8, $r4_8, $r3_9, $r4_9, $r3_10, $r4_10, $r3_11, $r4_11, $r3_12, $r4_12, $r3_13, $r4_13, $r3_14, $r4_14;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.paypal.android.sdk.onetouch.core.PerformRequestStatus;

        $r2 := @parameter1: java.lang.Boolean;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label05;

        if $r1 != null goto label01;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.none.initiate.failed");

        return;

     label01:
        $z0_1 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(0)     if $z0_1 == 0 goto label02;

        $r3 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget browser>;

(1)     if $r3 != $r4 goto label02;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.webswitch.initiate.started");

        return;

     label02:
        $r3_1 = Phi($r3 #0, $r3 #1);

        $r4_1 = Phi($r4 #0, $r4 #1);

        $z0_2 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(2)     if $z0_2 != 0 goto label03;

        $r3_2 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4_2 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget browser>;

(3)     if $r3_2 != $r4_2 goto label03;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.webswitch.initiate.failed");

        return;

     label03:
        $r3_3 = Phi($r3_1 #2, $r3_2 #3);

        $r4_3 = Phi($r4_1 #2, $r4_2 #3);

        $z0_3 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(4)     if $z0_3 == 0 goto label04;

        $r3_4 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4_4 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget wallet>;

(5)     if $r3_4 != $r4_4 goto label04;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.appswitch.initiate.started");

        return;

     label04:
        $r3_5 = Phi($r3_3 #4, $r3_4 #5);

        $r4_5 = Phi($r4_3 #4, $r4_4 #5);

        $z0_4 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(6)     if $z0_4 != 0 goto label10;

        $r3_6 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4_6 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget wallet>;

(7)     if $r3_6 != $r4_6 goto label10;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.appswitch.initiate.failed");

        return;

     label05:
        if $r1 != null goto label06;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.none.initiate.failed");

        return;

     label06:
        $z0_5 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(8)     if $z0_5 == 0 goto label07;

        $r3_7 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4_7 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget browser>;

(9)     if $r3_7 != $r4_7 goto label07;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.webswitch.initiate.started");

        return;

     label07:
        $r3_8 = Phi($r3 #8, $r3_7 #9);

        $r4_8 = Phi($r4 #8, $r4_7 #9);

        $z0_6 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(10)    if $z0_6 != 0 goto label08;

        $r3_9 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4_9 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget browser>;

(11)    if $r3_9 != $r4_9 goto label08;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.webswitch.initiate.failed");

        return;

     label08:
        $r3_10 = Phi($r3_8 #10, $r3_9 #11);

        $r4_10 = Phi($r4_8 #10, $r4_9 #11);

        $z0_7 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(12)    if $z0_7 == 0 goto label09;

        $r3_11 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4_11 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget wallet>;

(13)    if $r3_11 != $r4_11 goto label09;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.appswitch.initiate.started");

        return;

     label09:
        $r3_12 = Phi($r3_10 #12, $r3_11 #13);

        $r4_12 = Phi($r4_10 #12, $r4_11 #13);

        $z0_8 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: boolean isSuccess()>();

(14)    if $z0_8 != 0 goto label10;

        $r3_13 = virtualinvoke $r1.<com.paypal.android.sdk.onetouch.core.PerformRequestStatus: com.paypal.android.sdk.onetouch.core.RequestTarget getTarget()>();

        $r4_13 = <com.paypal.android.sdk.onetouch.core.RequestTarget: com.paypal.android.sdk.onetouch.core.RequestTarget wallet>;

(15)    if $r3_13 != $r4_13 goto label10;

(16)    virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.appswitch.initiate.failed");

     label10:
        $r3_14 = Phi($r3_5 #6, $r3_6 #7, $r3_12 #14, $r3_13 #15, $r3_13 #16);

        $r4_14 = Phi($r4_5 #6, $r4_6 #7, $r4_12 #14, $r4_13 #15, $r4_13 #16);

        $z0_9 = Phi($z0_4 #6, $z0_4 #7, $z0_8 #14, $z0_8 #15, $z0_8 #16);

        return;
    }

    private void setup() throws com.braintreepayments.api.exceptions.ErrorWithResponse, com.braintreepayments.api.exceptions.BraintreeException
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: void setup()>();

        return;
    }

    public static void setup(android.content.Context, java.lang.String, com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener;

        staticinvoke <com.braintreepayments.api.Braintree: java.util.concurrent.Future setupHelper(android.content.Context,java.lang.String,com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener)>($r0, $r1, $r2);

        return;
    }

    protected static java.util.concurrent.Future setupHelper(android.content.Context, java.lang.String, com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener $r2;
        com.braintreepayments.api.Braintree$2 $r3;
        java.util.concurrent.ExecutorService $r4;
        java.util.concurrent.Future $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r3 = new com.braintreepayments.api.Braintree$2;

        specialinvoke $r3.<com.braintreepayments.api.Braintree$2: void <init>(java.lang.String,android.content.Context,com.braintreepayments.api.Braintree$BraintreeSetupFinishedListener)>($r1, $r0, $r2);

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

        return $r5;
    }

    public void addListener(com.braintreepayments.api.Braintree$Listener)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.Braintree$Listener $r1;
        java.lang.Throwable $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.util.Set $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7, $r3_8;
        com.braintreepayments.api.Braintree$PaymentMethodsUpdatedListener $r4;
        com.braintreepayments.api.Braintree$PaymentMethodCreatedListener $r5;
        com.braintreepayments.api.Braintree$PaymentMethodNonceListener $r6;
        com.braintreepayments.api.Braintree$ErrorListener $r7;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.Braintree$Listener;

(0)     entermonitor $r0;

     label1:
        $z0 = $r1 instanceof com.braintreepayments.api.Braintree$PaymentMethodsUpdatedListener;

(1)     if $z0 == 0 goto label2;

        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mUpdatedListeners>;

        $r4 = (com.braintreepayments.api.Braintree$PaymentMethodsUpdatedListener) $r1;

(2)     interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        $r3_1 = Phi($r3 #1, $r3 #2);

(3)     $z0_1 = $r1 instanceof com.braintreepayments.api.Braintree$PaymentMethodCreatedListener;

(4)     if $z0_1 == 0 goto label3;

(5)     $r3_2 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mCreatedListeners>;

        $r5 = (com.braintreepayments.api.Braintree$PaymentMethodCreatedListener) $r1;

(6)     interfaceinvoke $r3_2.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label3:
        $r3_3 = Phi($r3_1 #4, $r3_2 #6);

(7)     $z0_2 = $r1 instanceof com.braintreepayments.api.Braintree$PaymentMethodNonceListener;

(8)     if $z0_2 == 0 goto label4;

(9)     $r3_4 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mNonceListeners>;

        $r6 = (com.braintreepayments.api.Braintree$PaymentMethodNonceListener) $r1;

(10)    interfaceinvoke $r3_4.<java.util.Set: boolean add(java.lang.Object)>($r6);

     label4:
        $r3_5 = Phi($r3_3 #8, $r3_4 #10);

(11)    $z0_3 = $r1 instanceof com.braintreepayments.api.Braintree$ErrorListener;

(12)    if $z0_3 == 0 goto label5;

(13)    $r3_6 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mErrorListeners>;

        $r7 = (com.braintreepayments.api.Braintree$ErrorListener) $r1;

(14)    interfaceinvoke $r3_6.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label5:
        $r3_7 = Phi($r3_5 #12, $r3_6 #14);

        exitmonitor $r0;

        return;

     label6:
        $r2 := @caughtexception;

        $r3_8 = Phi($r3 #0, $r3_1 #3, $r3_2 #5, $r3_3 #7, $r3_4 #9, $r3_5 #11, $r3_6 #13);

        $z0_4 = Phi($z0 #0, $z0_1 #3, $z0_2 #7, $z0_3 #11);

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    protected java.lang.String analyticsPrefix()
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.StringBuilder $r1, $r1_1, $r1_2;
        java.lang.String $r2, $r2_1;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<com.braintreepayments.api.Braintree: java.lang.String mIntegrationType>;

        $r1_1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1_2 = virtualinvoke $r1_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".android");

        $r2_1 = virtualinvoke $r1_2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2_1;
    }

    public java.lang.String collectDeviceData(android.app.Activity, com.braintreepayments.api.data.BraintreeEnvironment)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        com.braintreepayments.api.data.BraintreeEnvironment $r2;
        com.braintreepayments.api.BraintreeApi $r3;
        java.lang.String $r4;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: com.braintreepayments.api.data.BraintreeEnvironment;

        $r3 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $r4 = virtualinvoke $r3.<com.braintreepayments.api.BraintreeApi: java.lang.String collectDeviceData(android.app.Activity,com.braintreepayments.api.data.BraintreeEnvironment)>($r1, $r2);

        return $r4;
    }

    public java.lang.String collectDeviceData(android.app.Activity, java.lang.String, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        java.lang.String $r2, $r4, $r4_1;
        com.braintreepayments.api.BraintreeApi $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $r4 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $r4_1 = virtualinvoke $r3.<com.braintreepayments.api.BraintreeApi: java.lang.String collectDeviceData(android.app.Activity,java.lang.String,java.lang.String)>($r1, $r4, $r2);

        return $r4_1;
    }

    public void create(com.braintreepayments.api.models.PaymentMethod$Builder)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod$Builder $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.models.PaymentMethod$Builder;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.Future createHelper(com.braintreepayments.api.models.PaymentMethod$Builder)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.util.concurrent.Future createHelper(com.braintreepayments.api.models.PaymentMethod$Builder)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod$Builder $r1;
        java.util.concurrent.ExecutorService $r2;
        com.braintreepayments.api.Braintree$11 $r3;
        java.lang.Throwable $r4;
        java.util.concurrent.Future $r5;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.models.PaymentMethod$Builder;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r3 = new com.braintreepayments.api.Braintree$11;

        specialinvoke $r3.<com.braintreepayments.api.Braintree$11: void <init>(com.braintreepayments.api.Braintree,com.braintreepayments.api.models.PaymentMethod$Builder)>($r0, $r1);

        $r5 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

     label2:
        exitmonitor $r0;

        return $r5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void finishPayWithPayPal(int, android.content.Intent)
    {
        com.braintreepayments.api.Braintree $r0;
        int $i0;
        android.content.Intent $r1;
        com.braintreepayments.api.BraintreeApi $r2;
        com.braintreepayments.api.exceptions.ConfigurationException $r3;
        java.lang.Throwable $r4;
        com.braintreepayments.api.models.PayPalAccountBuilder $r5;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Intent;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

     label2:
        $r5 = virtualinvoke $r2.<com.braintreepayments.api.BraintreeApi: com.braintreepayments.api.models.PayPalAccountBuilder handlePayPalResponse(android.app.Activity,int,android.content.Intent)>(null, $i0, $r1);

     label3:
        if $r5 == null goto label5;

     label4:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void create(com.braintreepayments.api.models.PaymentMethod$Builder)>($r5);

     label5:
        exitmonitor $r0;

        return;

     label6:
        $r3 := @caughtexception;

     label7:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r3);

     label8:
        goto label5;

     label9:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label2 to label3 with label6;
        catch java.lang.Throwable from label2 to label3 with label9;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label4 to label5 with label6;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void finishPayWithPayPal(android.app.Activity, int, android.content.Intent)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4;
        android.content.Intent $r2;
        android.content.BroadcastReceiver $r3;
        int[] $r4;
        com.braintreepayments.api.exceptions.ConfigurationException $r5;
        com.braintreepayments.api.BraintreeApi $r6;
        com.braintreepayments.api.BraintreeBroadcastManager $r7;
        com.paypal.android.sdk.onetouch.core.Result $r8;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7, $z0_8, $z0_9, $z0_10, $z0_11, $z0_12, $z0_13, $z0_14, $z0_15, $z0_16, $z0_17, $z0_18, $z0_19, $z0_20, $z0_21, $z0_22, $z0_23, $z0_24, $z0_25, $z0_26, $z0_27, $z0_28, $z0_29, $z0_30, $z0_31, $z0_32, $z0_33, $z0_34, $z0_35, $z0_36, $z0_37;
        java.lang.Boolean $r9, $r10;
        com.paypal.android.sdk.onetouch.core.ResultType $r11;
        java.lang.Throwable $r12, $r12_1, $r12_2, $r12_3, $r12_4, $r12_5, $r12_6, $r12_7;
        com.braintreepayments.api.models.PayPalAccountBuilder $r13;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.Intent;

        entermonitor $r0;

(0)     if $r1 == null goto label002;

     label001:
        $r7 = staticinvoke <com.braintreepayments.api.BraintreeBroadcastManager: com.braintreepayments.api.BraintreeBroadcastManager getInstance(android.content.Context)>($r1);

        $r3 = $r0.<com.braintreepayments.api.Braintree: android.content.BroadcastReceiver mBraintreeBroadcastReceiver>;

        virtualinvoke $r7.<com.braintreepayments.api.BraintreeBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);

     label002:
        $r8 = staticinvoke <com.braintreepayments.api.PayPal: com.paypal.android.sdk.onetouch.core.Result getResultFromActivity(android.content.Context,int,android.content.Intent)>($r1, $i0, $r2);

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasExtra(java.lang.String)>("com.paypal.android.sdk.onetouch.core.EXTRA_ONE_TOUCH_RESULT");

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r10 = staticinvoke <com.braintreepayments.api.PayPal: java.lang.Boolean isCheckoutRequest()>();

        $r11 = virtualinvoke $r8.<com.paypal.android.sdk.onetouch.core.Result: com.paypal.android.sdk.onetouch.core.ResultType getResultType()>();

     label003:
        $r4 = <com.braintreepayments.api.Braintree$19: int[] $SwitchMap$com$paypal$android$sdk$onetouch$core$ResultType>;

     label004:
        $i1 = virtualinvoke $r11.<com.paypal.android.sdk.onetouch.core.ResultType: int ordinal()>();

     label005:
(1)     $i1_1 = $r4[$i1];

     label006:
(2)     lookupswitch($i1_1)
        {
            case 1: goto label009;
            case 2: goto label037;
            case 3: goto label077;
            default: goto label007;
        };

     label007:
(3)     goto label008;

     label008:
        $r12_4 = Phi($r12 #3, $r12 #8, $r12_5 #10, $r12 #15, $r12 #20, $r12 #22, $r12 #24, $r12 #25, $r12 #30, $r12 #31, $r12_1 #37, $r12_1 #38, $r12_2 #44, $r12_2 #45, $r12 #47, $r12 #49, $r12_3 #51, $r12_3 #52, $r12 #59, $r12 #60);

        $i1_2 = Phi($i1_1 #3, $i1_1 #8, $i1_3 #10, $i1_1 #15, $i1_1 #20, $i1_1 #22, $i1_1 #24, $i1_1 #25, $i1_1 #30, $i1_1 #31, $i1_1 #37, $i1_1 #38, $i1_1 #44, $i1_1 #45, $i1_1 #47, $i1_1 #49, $i1_1 #51, $i1_1 #52, $i1_1 #59, $i1_1 #60);

        $z0_35 = Phi($z0 #3, $z0_2 #8, $z0_36 #10, $z0_5 #15, $z0_8 #20, $z0_10 #22, $z0_11 #24, $z0_11 #25, $z0_13 #30, $z0_13 #31, $z0_16 #37, $z0_16 #38, $z0_19 #44, $z0_19 #45, $z0_21 #47, $z0_22 #49, $z0_22 #51, $z0_22 #52, $z0_25 #59, $z0_25 #60);

        exitmonitor $r0;

        return;

     label009:
(4)     $z0_1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label010:
(5)     if $z0_1 == 0 goto label019;

     label011:
(6)     $z0_2 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label012:
(7)     if $z0_2 == 0 goto label019;

     label013:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.appswitch.failed");

     label014:
(8)     goto label008;

     label015:
        $r5 := @caughtexception;

        $r12_5 = Phi($r12 #0, $r12_1 #36, $r12_2 #43, $r12_3 #50);

        $i1_3 = Phi($i1 #0, $i1_1 #2);

(9)     $z0_36 = Phi($z0 #0, $z0_1 #4, $z0_2 #6, $z0_4 #11, $z0_5 #13, $z0_7 #16, $z0_8 #18, $z0_10 #21, $z0_11 #23, $z0_12 #26, $z0_13 #28, $z0_15 #32, $z0_16 #34, $z0_18 #39, $z0_19 #41, $z0_21 #46, $z0_22 #48, $z0_23 #53, $z0_24 #55, $z0_25 #58, $z0_27 #61, $z0_28 #63, $z0_30 #66, $z0_31 #68, $z0_33 #71, $z0_34 #73);

     label016:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r5);

     label017:
(10)    goto label008;

     label018:
        $r12_6 := @caughtexception;

        $r12_7 = Phi($r12 #0, $r12_5 #9, $r12_1 #36, $r12_2 #43, $r12_3 #50);

        $i1_4 = Phi($i1 #0, $i1_1 #1, $i1_3 #9);

        $z0_37 = Phi($z0 #0, $z0_1 #4, $z0_2 #6, $z0_36 #9, $z0_4 #11, $z0_5 #13, $z0_7 #16, $z0_8 #18, $z0_10 #21, $z0_11 #23, $z0_12 #26, $z0_13 #28, $z0_15 #32, $z0_16 #34, $z0_18 #39, $z0_19 #41, $z0_21 #46, $z0_22 #48, $z0_23 #53, $z0_24 #55, $z0_25 #58, $z0_27 #61, $z0_28 #63, $z0_30 #66, $z0_31 #68, $z0_33 #71, $z0_34 #73);

        exitmonitor $r0;

        throw $r12_7;

     label019:
        $z0_3 = Phi($z0_1 #5, $z0_2 #7);

(11)    $z0_4 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label020:
(12)    if $z0_4 == 0 goto label025;

     label021:
(13)    $z0_5 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label022:
(14)    if $z0_5 != 0 goto label025;

     label023:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.appswitch.failed");

     label024:
(15)    goto label008;

     label025:
        $z0_6 = Phi($z0_4 #12, $z0_5 #14);

(16)    $z0_7 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label026:
(17)    if $z0_7 != 0 goto label031;

     label027:
(18)    $z0_8 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label028:
(19)    if $z0_8 == 0 goto label031;

     label029:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.webswitch.failed");

     label030:
(20)    goto label008;

     label031:
        $z0_9 = Phi($z0_7 #17, $z0_8 #19);

(21)    $z0_10 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label032:
(22)    if $z0_10 != 0 goto label008;

     label033:
(23)    $z0_11 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label034:
(24)    if $z0_11 != 0 goto label008;

     label035:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.webswitch.failed");

     label036:
(25)    goto label008;

     label037:
(26)    $z0_12 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label038:
(27)    if $z0_12 == 0 goto label047;

     label039:
(28)    $z0_13 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label040:
(29)    if $z0_13 == 0 goto label047;

     label041:
        $r12 = virtualinvoke $r8.<com.paypal.android.sdk.onetouch.core.Result: java.lang.Throwable getError()>();

     label042:
        if $r12 != null goto label045;

     label043:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.appswitch.canceled");

     label044:
(30)    goto label008;

     label045:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.appswitch.canceled-with-error");

     label046:
(31)    goto label008;

     label047:
        $z0_14 = Phi($z0_12 #27, $z0_13 #29);

(32)    $z0_15 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label048:
(33)    if $z0_15 == 0 goto label057;

     label049:
(34)    $z0_16 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label050:
(35)    if $z0_16 != 0 goto label057;

     label051:
(36)    $r12_1 = virtualinvoke $r8.<com.paypal.android.sdk.onetouch.core.Result: java.lang.Throwable getError()>();

     label052:
        if $r12_1 != null goto label055;

     label053:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.appswitch.canceled");

     label054:
(37)    goto label008;

     label055:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.appswitch.canceled-with-error");

     label056:
(38)    goto label008;

     label057:
        $z0_17 = Phi($z0_15 #33, $z0_16 #35);

(39)    $z0_18 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label058:
(40)    if $z0_18 != 0 goto label067;

     label059:
(41)    $z0_19 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label060:
(42)    if $z0_19 == 0 goto label067;

     label061:
(43)    $r12_2 = virtualinvoke $r8.<com.paypal.android.sdk.onetouch.core.Result: java.lang.Throwable getError()>();

     label062:
        if $r12_2 != null goto label065;

     label063:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.webswitch.canceled");

     label064:
(44)    goto label008;

     label065:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.webswitch.canceled-with-error");

     label066:
(45)    goto label008;

     label067:
        $z0_20 = Phi($z0_18 #40, $z0_19 #42);

(46)    $z0_21 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label068:
(47)    if $z0_21 != 0 goto label008;

     label069:
(48)    $z0_22 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label070:
(49)    if $z0_22 != 0 goto label008;

     label071:
(50)    $r12_3 = virtualinvoke $r8.<com.paypal.android.sdk.onetouch.core.Result: java.lang.Throwable getError()>();

     label072:
        if $r12_3 != null goto label075;

     label073:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.webswitch.canceled");

     label074:
(51)    goto label008;

     label075:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.webswitch.canceled-with-error");

     label076:
(52)    goto label008;

     label077:
(53)    $z0_23 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label078:
(54)    if $z0_23 == 0 goto label087;

     label079:
(55)    $z0_24 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label080:
(56)    if $z0_24 == 0 goto label087;

     label081:
(57)    virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.appswitch.succeeded");

     label082:
        $z0_25 = Phi($z0_24 #57, $z0_28 #65, $z0_31 #70, $z0_33 #72, $z0_34 #74, $z0_34 #75);

(58)    $r6 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

     label083:
        $r13 = virtualinvoke $r6.<com.braintreepayments.api.BraintreeApi: com.braintreepayments.api.models.PayPalAccountBuilder handlePayPalResponse(android.app.Activity,int,android.content.Intent)>($r1, $i0, $r2);

     label084:
(59)    if $r13 == null goto label008;

     label085:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void create(com.braintreepayments.api.models.PaymentMethod$Builder)>($r13);

     label086:
(60)    goto label008;

     label087:
        $z0_26 = Phi($z0_23 #54, $z0_24 #56);

(61)    $z0_27 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label088:
(62)    if $z0_27 == 0 goto label093;

     label089:
(63)    $z0_28 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label090:
(64)    if $z0_28 != 0 goto label093;

     label091:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.appswitch.succeeded");

     label092:
(65)    goto label082;

     label093:
        $z0_29 = Phi($z0_27 #62, $z0_28 #64);

(66)    $z0_30 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label094:
(67)    if $z0_30 != 0 goto label099;

     label095:
(68)    $z0_31 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label096:
(69)    if $z0_31 == 0 goto label099;

     label097:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-single-payment.webswitch.succeeded");

     label098:
(70)    goto label082;

     label099:
        $z0_32 = Phi($z0_30 #67, $z0_31 #69);

(71)    $z0_33 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label100:
(72)    if $z0_33 != 0 goto label082;

     label101:
(73)    $z0_34 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label102:
(74)    if $z0_34 != 0 goto label082;

     label103:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("paypal-future-payments.webswitch.succeeded");

     label104:
(75)    goto label082;

        catch java.lang.Throwable from label001 to label002 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label002 to label003 with label015;
        catch java.lang.Throwable from label002 to label003 with label018;
        catch java.lang.Throwable from label003 to label004 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label004 to label005 with label015;
        catch java.lang.Throwable from label004 to label005 with label018;
        catch java.lang.Throwable from label005 to label006 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label009 to label010 with label015;
        catch java.lang.Throwable from label009 to label010 with label018;
        catch java.lang.Throwable from label010 to label011 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label011 to label012 with label015;
        catch java.lang.Throwable from label011 to label012 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label013 to label014 with label015;
        catch java.lang.Throwable from label013 to label014 with label018;
        catch java.lang.Throwable from label016 to label017 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label019 to label020 with label015;
        catch java.lang.Throwable from label019 to label020 with label018;
        catch java.lang.Throwable from label020 to label021 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label021 to label022 with label015;
        catch java.lang.Throwable from label021 to label022 with label018;
        catch java.lang.Throwable from label022 to label023 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label023 to label024 with label015;
        catch java.lang.Throwable from label023 to label024 with label018;
        catch java.lang.Throwable from label024 to label025 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label025 to label026 with label015;
        catch java.lang.Throwable from label025 to label026 with label018;
        catch java.lang.Throwable from label026 to label027 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label027 to label028 with label015;
        catch java.lang.Throwable from label027 to label028 with label018;
        catch java.lang.Throwable from label028 to label029 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label029 to label030 with label015;
        catch java.lang.Throwable from label029 to label030 with label018;
        catch java.lang.Throwable from label030 to label031 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label031 to label032 with label015;
        catch java.lang.Throwable from label031 to label032 with label018;
        catch java.lang.Throwable from label032 to label033 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label033 to label034 with label015;
        catch java.lang.Throwable from label033 to label034 with label018;
        catch java.lang.Throwable from label034 to label035 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label035 to label036 with label015;
        catch java.lang.Throwable from label035 to label036 with label018;
        catch java.lang.Throwable from label036 to label037 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label037 to label038 with label015;
        catch java.lang.Throwable from label037 to label038 with label018;
        catch java.lang.Throwable from label038 to label039 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label039 to label040 with label015;
        catch java.lang.Throwable from label039 to label040 with label018;
        catch java.lang.Throwable from label040 to label041 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label041 to label042 with label015;
        catch java.lang.Throwable from label041 to label042 with label018;
        catch java.lang.Throwable from label042 to label043 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label043 to label044 with label015;
        catch java.lang.Throwable from label043 to label044 with label018;
        catch java.lang.Throwable from label044 to label045 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label045 to label046 with label015;
        catch java.lang.Throwable from label045 to label046 with label018;
        catch java.lang.Throwable from label046 to label047 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label047 to label048 with label015;
        catch java.lang.Throwable from label047 to label048 with label018;
        catch java.lang.Throwable from label048 to label049 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label049 to label050 with label015;
        catch java.lang.Throwable from label049 to label050 with label018;
        catch java.lang.Throwable from label050 to label051 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label051 to label052 with label015;
        catch java.lang.Throwable from label051 to label052 with label018;
        catch java.lang.Throwable from label052 to label053 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label053 to label054 with label015;
        catch java.lang.Throwable from label053 to label054 with label018;
        catch java.lang.Throwable from label054 to label055 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label055 to label056 with label015;
        catch java.lang.Throwable from label055 to label056 with label018;
        catch java.lang.Throwable from label056 to label057 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label057 to label058 with label015;
        catch java.lang.Throwable from label057 to label058 with label018;
        catch java.lang.Throwable from label058 to label059 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label059 to label060 with label015;
        catch java.lang.Throwable from label059 to label060 with label018;
        catch java.lang.Throwable from label060 to label061 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label061 to label062 with label015;
        catch java.lang.Throwable from label061 to label062 with label018;
        catch java.lang.Throwable from label062 to label063 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label063 to label064 with label015;
        catch java.lang.Throwable from label063 to label064 with label018;
        catch java.lang.Throwable from label064 to label065 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label065 to label066 with label015;
        catch java.lang.Throwable from label065 to label066 with label018;
        catch java.lang.Throwable from label066 to label067 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label067 to label068 with label015;
        catch java.lang.Throwable from label067 to label068 with label018;
        catch java.lang.Throwable from label068 to label069 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label069 to label070 with label015;
        catch java.lang.Throwable from label069 to label070 with label018;
        catch java.lang.Throwable from label070 to label071 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label071 to label072 with label015;
        catch java.lang.Throwable from label071 to label072 with label018;
        catch java.lang.Throwable from label072 to label073 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label073 to label074 with label015;
        catch java.lang.Throwable from label073 to label074 with label018;
        catch java.lang.Throwable from label074 to label075 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label075 to label076 with label015;
        catch java.lang.Throwable from label075 to label076 with label018;
        catch java.lang.Throwable from label076 to label077 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label077 to label078 with label015;
        catch java.lang.Throwable from label077 to label078 with label018;
        catch java.lang.Throwable from label078 to label079 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label079 to label080 with label015;
        catch java.lang.Throwable from label079 to label080 with label018;
        catch java.lang.Throwable from label080 to label081 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label081 to label082 with label015;
        catch java.lang.Throwable from label081 to label082 with label018;
        catch java.lang.Throwable from label082 to label083 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label083 to label084 with label015;
        catch java.lang.Throwable from label083 to label084 with label018;
        catch java.lang.Throwable from label084 to label085 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label085 to label086 with label015;
        catch java.lang.Throwable from label085 to label086 with label018;
        catch java.lang.Throwable from label086 to label087 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label087 to label088 with label015;
        catch java.lang.Throwable from label087 to label088 with label018;
        catch java.lang.Throwable from label088 to label089 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label089 to label090 with label015;
        catch java.lang.Throwable from label089 to label090 with label018;
        catch java.lang.Throwable from label090 to label091 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label091 to label092 with label015;
        catch java.lang.Throwable from label091 to label092 with label018;
        catch java.lang.Throwable from label092 to label093 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label093 to label094 with label015;
        catch java.lang.Throwable from label093 to label094 with label018;
        catch java.lang.Throwable from label094 to label095 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label095 to label096 with label015;
        catch java.lang.Throwable from label095 to label096 with label018;
        catch java.lang.Throwable from label096 to label097 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label097 to label098 with label015;
        catch java.lang.Throwable from label097 to label098 with label018;
        catch java.lang.Throwable from label098 to label099 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label099 to label100 with label015;
        catch java.lang.Throwable from label099 to label100 with label018;
        catch java.lang.Throwable from label100 to label101 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label101 to label102 with label015;
        catch java.lang.Throwable from label101 to label102 with label018;
        catch com.braintreepayments.api.exceptions.ConfigurationException from label103 to label104 with label015;
        catch java.lang.Throwable from label103 to label104 with label018;
    }

    public void finishPayWithVenmo(int, android.content.Intent)
    {
        com.braintreepayments.api.Braintree $r0;
        int $i0;
        android.content.Intent $r1;
        com.braintreepayments.api.BraintreeApi $r2;
        java.util.concurrent.ExecutorService $r3;
        com.braintreepayments.api.Braintree$5 $r4;
        java.lang.Throwable $r5;
        java.lang.String $r6;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Intent;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $r6 = virtualinvoke $r2.<com.braintreepayments.api.BraintreeApi: java.lang.String finishPayWithVenmo(int,android.content.Intent)>($i0, $r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z0 != 0 goto label3;

        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r4 = new com.braintreepayments.api.Braintree$5;

        specialinvoke $r4.<com.braintreepayments.api.Braintree$5: void <init>(com.braintreepayments.api.Braintree,java.lang.String)>($r0, $r6);

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4);

     label2:
        exitmonitor $r0;

        return;

     label3:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("venmo-app.fail");

     label4:
        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void finishThreeDSecureVerification(int, android.content.Intent)
    {
        com.braintreepayments.api.Braintree $r0;
        int $i0;
        android.content.Intent $r1;
        com.braintreepayments.api.exceptions.BraintreeException $r2;
        java.lang.Throwable $r3;
        com.braintreepayments.api.exceptions.ErrorWithResponse $r4;
        android.os.Parcelable $r5;
        com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse $r6;
        boolean $z0;
        com.braintreepayments.api.models.Card $r7, $r7_1, $r7_2, $r7_3;
        java.lang.String $r8, $r8_1, $r8_2, $r8_3, $r8_4;
        com.braintreepayments.api.exceptions.ErrorWithResponse$BraintreeErrors $r9;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Intent;

        entermonitor $r0;

(0)     if $i0 != -1 goto label2;

     label1:
        $r5 = virtualinvoke $r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("com.braintreepayments.api.EXTRA_THREE_D_SECURE_RESULT");

        $r6 = (com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse) $r5;

        $z0 = virtualinvoke $r6.<com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse: boolean isSuccess()>();

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke $r6.<com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse: com.braintreepayments.api.models.Card getCard()>();

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void postCreatedMethodToListeners(com.braintreepayments.api.models.PaymentMethod)>($r7);

(1)     $r7_1 = virtualinvoke $r6.<com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse: com.braintreepayments.api.models.Card getCard()>();

        $r8 = virtualinvoke $r7_1.<com.braintreepayments.api.models.Card: java.lang.String getNonce()>();

(2)     specialinvoke $r0.<com.braintreepayments.api.Braintree: void postCreatedNonceToListeners(java.lang.String)>($r8);

     label2:
        $r7_2 = Phi($r7 #0, $r7_1 #2, $r7 #5, $r7 #6);

        $r8_3 = Phi($r8 #0, $r8 #2, $r8_2 #5, $r8_1 #6);

        exitmonitor $r0;

        return;

     label3:
(3)     $r8_1 = virtualinvoke $r6.<com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse: java.lang.String getException()>();

        if $r8_1 == null goto label6;

        $r2 = new com.braintreepayments.api.exceptions.BraintreeException;

(4)     $r8_2 = virtualinvoke $r6.<com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse: java.lang.String getException()>();

        specialinvoke $r2.<com.braintreepayments.api.exceptions.BraintreeException: void <init>(java.lang.String)>($r8_2);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r2);

     label4:
(5)     goto label2;

     label5:
        $r3 := @caughtexception;

        $r7_3 = Phi($r7 #0, $r7_1 #1);

        $r8_4 = Phi($r8 #0, $r8_1 #3, $r8_2 #4);

        exitmonitor $r0;

        throw $r3;

     label6:
        $r4 = new com.braintreepayments.api.exceptions.ErrorWithResponse;

        $r9 = virtualinvoke $r6.<com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse: com.braintreepayments.api.exceptions.ErrorWithResponse$BraintreeErrors getErrors()>();

        specialinvoke $r4.<com.braintreepayments.api.exceptions.ErrorWithResponse: void <init>(int,com.braintreepayments.api.exceptions.ErrorWithResponse$BraintreeErrors)>(422, $r9);

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void postRecoverableErrorToListeners(com.braintreepayments.api.exceptions.ErrorWithResponse)>($r4);

     label7:
(6)     goto label2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.lang.String getAndroidPayGoogleTransactionId(android.content.Intent)
    {
        com.braintreepayments.api.Braintree $r0;
        android.content.Intent $r1;
        boolean $z0, $z0_1;
        android.os.Parcelable $r2, $r2_1;
        com.google.android.gms.wallet.MaskedWallet $r3;
        java.lang.String $r4, $r4_1;
        com.google.android.gms.wallet.FullWallet $r5;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.content.Intent;

        $z0 = staticinvoke <com.braintreepayments.api.AndroidPay: boolean isMaskedWalletResponse(android.content.Intent)>($r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("com.google.android.gms.wallet.EXTRA_MASKED_WALLET");

        $r3 = (com.google.android.gms.wallet.MaskedWallet) $r2;

        $r4 = virtualinvoke $r3.<com.google.android.gms.wallet.MaskedWallet: java.lang.String getGoogleTransactionId()>();

        return $r4;

     label1:
        $z0_1 = staticinvoke <com.braintreepayments.api.AndroidPay: boolean isFullWalletResponse(android.content.Intent)>($r1);

        if $z0_1 == 0 goto label2;

        $r2_1 = virtualinvoke $r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("com.google.android.gms.wallet.EXTRA_FULL_WALLET");

        $r5 = (com.google.android.gms.wallet.FullWallet) $r2_1;

        $r4_1 = virtualinvoke $r5.<com.google.android.gms.wallet.FullWallet: java.lang.String getGoogleTransactionId()>();

        return $r4_1;

     label2:
        return null;
    }

    public com.google.android.gms.wallet.PaymentMethodTokenizationParameters getAndroidPayTokenizationParameters()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        com.google.android.gms.wallet.PaymentMethodTokenizationParameters $r2;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $r2 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: com.google.android.gms.wallet.PaymentMethodTokenizationParameters getAndroidPayTokenizationParameters()>();

        return $r2;
    }

    public java.util.List getCachedPaymentMethods()
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.Throwable $r1;
        java.util.List $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5;

        $r0 := @this: com.braintreepayments.api.Braintree;

(0)     entermonitor $r0;

     label1:
        $r2 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCachedPaymentMethods>;

        if $r2 != null goto label3;

(1)     $r2_1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label2:
        $r2_2 = Phi($r2_1 #1, $r2_4 #4);

        exitmonitor $r0;

        return $r2_2;

     label3:
(2)     $r2_3 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCachedPaymentMethods>;

(3)     $r2_4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2_3);

     label4:
(4)     goto label2;

     label5:
        $r1 := @caughtexception;

        $r2_5 = Phi($r2 #0, $r2_1 #1, $r2_3 #2, $r2_4 #3);

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected java.lang.String getIntegrationType()
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.String r1;

        $r0 := @this: com.braintreepayments.api.Braintree;

        r1 = $r0.<com.braintreepayments.api.Braintree: java.lang.String mIntegrationType>;

        return r1;
    }

    public void getNonceFromAndroidPayFullWalletResponse(int, android.content.Intent)
    {
        com.braintreepayments.api.Braintree $r0;
        int $i0;
        android.content.Intent $r1;
        org.json.JSONException $r2;
        java.lang.Throwable $r3;
        com.braintreepayments.api.BraintreeApi $r4, $r4_1, $r4_2, $r4_3, $r4_4;
        com.braintreepayments.api.models.AndroidPayCard $r5;
        java.lang.String $r6;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Intent;

        entermonitor $r0;

(0)     if $i0 != -1 goto label07;

     label01:
(1)     $r4 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

     label02:
        virtualinvoke $r4.<com.braintreepayments.api.BraintreeApi: void disconnectGoogleApiClient()>();

     label03:
(2)     $r4_1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

     label04:
        $r5 = virtualinvoke $r4_1.<com.braintreepayments.api.BraintreeApi: com.braintreepayments.api.models.AndroidPayCard getNonceFromAndroidPayFullWalletResponse(android.content.Intent)>($r1);

     label05:
(3)     if $r5 == null goto label07;

     label06:
        specialinvoke $r0.<com.braintreepayments.api.Braintree: void addPaymentMethodToCache(com.braintreepayments.api.models.PaymentMethod)>($r5);

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void postCreatedMethodToListeners(com.braintreepayments.api.models.PaymentMethod)>($r5);

        $r6 = virtualinvoke $r5.<com.braintreepayments.api.models.AndroidPayCard: java.lang.String getNonce()>();

(4)     specialinvoke $r0.<com.braintreepayments.api.Braintree: void postCreatedNonceToListeners(java.lang.String)>($r6);

     label07:
        $r4_3 = Phi($r4 #0, $r4_1 #3, $r4_1 #4, $r4_2 #6);

        exitmonitor $r0;

        return;

     label08:
        $r2 := @caughtexception;

(5)     $r4_2 = Phi($r4 #1, $r4_1 #2);

     label09:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r2);

     label10:
(6)     goto label07;

     label11:
        $r3 := @caughtexception;

        $r4_4 = Phi($r4 #0, $r4_1 #2, $r4_2 #5);

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch org.json.JSONException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch org.json.JSONException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch org.json.JSONException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void getPaymentMethods()
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.braintreepayments.api.Braintree;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.Future getPaymentMethodsHelper()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.util.concurrent.Future getPaymentMethodsHelper()
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.concurrent.ExecutorService $r1;
        com.braintreepayments.api.Braintree$3 $r2;
        java.lang.Throwable $r3;
        java.util.concurrent.Future $r4;

        $r0 := @this: com.braintreepayments.api.Braintree;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r2 = new com.braintreepayments.api.Braintree$3;

        specialinvoke $r2.<com.braintreepayments.api.Braintree$3: void <init>(com.braintreepayments.api.Braintree)>($r0);

        $r4 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r2);

     label2:
        exitmonitor $r0;

        return $r4;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean hasCachedCards()
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.List $r1;
        java.lang.Throwable $r2;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: com.braintreepayments.api.Braintree;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCachedPaymentMethods>;

     label2:
        if $r1 == null goto label4;

(0)     $z0 = 1;

     label3:
        $z0_1 = Phi($z0 #0, $z0_2 #1);

        exitmonitor $r0;

        return $z0_1;

     label4:
        $z0_2 = 0;

(1)     goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public boolean isAndroidPayEnabled()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: boolean isAndroidPayEnabled()>();

        return $z0;
    }

    public boolean isCvvChallenegePresent()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: boolean isCvvChallengePresent()>();

        return $z0;
    }

    public boolean isPayPalEnabled()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: boolean isPayPalEnabled()>();

        return $z0;
    }

    public boolean isPostalCodeChallengePresent()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: boolean isPostalCodeChallengePresent()>();

        return $z0;
    }

    public boolean isThreeDSecureEnabled()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: boolean isThreeDSecureEnabled()>();

        return $z0;
    }

    public boolean isVenmoEnabled()
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.BraintreeApi $r1;
        boolean $z0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r1.<com.braintreepayments.api.BraintreeApi: boolean isVenmoEnabled()>();

        return $z0;
    }

    public void lockListeners()
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.braintreepayments.api.Braintree;

        entermonitor $r0;

     label1:
        $r0.<com.braintreepayments.api.Braintree: boolean mListenersLocked> = 1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onActivityResult(android.app.Activity, int, int, android.content.Intent)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0, $i1;
        android.content.Intent $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5;
        java.lang.String $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.content.Intent;

(0)     if $i1 != -1 goto label5;

(1)     if $r2 == null goto label5;

        $z0 = staticinvoke <com.braintreepayments.api.PayPal: boolean isPayPalIntent(android.content.Intent)>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void finishPayWithPayPal(android.app.Activity,int,android.content.Intent)>($r1, $i1, $r2);

        return;

     label1:
        $z0_1 = staticinvoke <com.braintreepayments.api.AndroidPay: boolean isMaskedWalletResponse(android.content.Intent)>($r2);

        if $z0_1 == 0 goto label2;

        $r3 = virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.lang.String getAndroidPayGoogleTransactionId(android.content.Intent)>($r2);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void performAndroidPayFullWalletRequest(android.app.Activity,int,com.google.android.gms.wallet.Cart,java.lang.String)>($r1, $i0, null, $r3);

        return;

     label2:
        $z0_2 = staticinvoke <com.braintreepayments.api.AndroidPay: boolean isFullWalletResponse(android.content.Intent)>($r2);

        if $z0_2 == 0 goto label3;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void getNonceFromAndroidPayFullWalletResponse(int,android.content.Intent)>($i1, $r2);

        return;

     label3:
        $z0_3 = staticinvoke <com.braintreepayments.api.VenmoAppSwitch: boolean isVenmoAppSwitchResponse(android.content.Intent)>($r2);

        if $z0_3 == 0 goto label4;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void finishPayWithVenmo(int,android.content.Intent)>($i1, $r2);

        return;

     label4:
        $z0_4 = staticinvoke <com.braintreepayments.api.models.ThreeDSecureAuthenticationResponse: boolean isThreeDSecureAuthenticationResponse(android.content.Intent)>($r2);

(2)     if $z0_4 == 0 goto label5;

(3)     virtualinvoke $r0.<com.braintreepayments.api.Braintree: void finishThreeDSecureVerification(int,android.content.Intent)>($i1, $r2);

     label5:
        $z0_5 = Phi($z0 #0, $z0 #1, $z0_4 #2, $z0_4 #3);

        return;
    }

    public void onPause(android.app.Activity)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        boolean $z0;
        com.braintreepayments.api.BraintreeApi $r2;
        java.lang.Throwable $r3;
        com.braintreepayments.api.Braintree$Listener $r4;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void lockListeners()>();

        $z0 = $r1 instanceof com.braintreepayments.api.Braintree$Listener;

        if $z0 == 0 goto label2;

        $r4 = (com.braintreepayments.api.Braintree$Listener) $r1;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void removeListener(com.braintreepayments.api.Braintree$Listener)>($r4);

     label2:
        $r2 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        virtualinvoke $r2.<com.braintreepayments.api.BraintreeApi: void disconnectGoogleApiClient()>();

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void onResume(android.app.Activity)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.braintreepayments.api.Braintree$Listener $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        entermonitor $r0;

     label1:
        $z0 = $r1 instanceof com.braintreepayments.api.Braintree$Listener;

        if $z0 == 0 goto label2;

        $r3 = (com.braintreepayments.api.Braintree$Listener) $r1;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void addListener(com.braintreepayments.api.Braintree$Listener)>($r3);

     label2:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void unlockListeners()>();

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.braintreepayments.api.Braintree $r0;
        android.os.Bundle $r1;
        com.braintreepayments.api.BraintreeApi $r2;
        java.lang.String $r3, $r3_1;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.os.Bundle;

        $r3 = $r0.<com.braintreepayments.api.Braintree: java.lang.String mClientTokenKey>;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.braintreepayments.api.KEY_CLIENT_TOKEN", $r3);

        $r2 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $r3_1 = virtualinvoke $r2.<com.braintreepayments.api.BraintreeApi: java.lang.String getConfigurationString()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.braintreepayments.api.KEY_CONFIGURATION", $r3_1);

        return;
    }

    public void performAndroidPayChangeMaskedWalletRequest(android.app.Activity, int, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        java.lang.String $r2;
        java.util.concurrent.ExecutorService $r3;
        com.braintreepayments.api.Braintree$7 $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r4 = new com.braintreepayments.api.Braintree$7;

        specialinvoke $r4.<com.braintreepayments.api.Braintree$7: void <init>(com.braintreepayments.api.Braintree,android.app.Activity,int,java.lang.String)>($r0, $r1, $i0, $r2);

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void performAndroidPayFullWalletRequest(android.app.Activity, int, com.google.android.gms.wallet.Cart, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        com.google.android.gms.wallet.Cart $r2;
        java.lang.String $r3;
        java.util.concurrent.ExecutorService $r4;
        com.braintreepayments.api.Braintree$8 $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.android.gms.wallet.Cart;

        $r3 := @parameter3: java.lang.String;

        entermonitor $r0;

     label1:
        $r4 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r5 = new com.braintreepayments.api.Braintree$8;

        specialinvoke $r5.<com.braintreepayments.api.Braintree$8: void <init>(com.braintreepayments.api.Braintree,android.app.Activity,int,com.google.android.gms.wallet.Cart,java.lang.String)>($r0, $r1, $i0, $r2, $r3);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void performAndroidPayMaskedWalletRequest(android.app.Activity, int, com.google.android.gms.wallet.Cart)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        com.google.android.gms.wallet.Cart $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.android.gms.wallet.Cart;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void performAndroidPayMaskedWalletRequest(android.app.Activity,int,com.google.android.gms.wallet.Cart,boolean,boolean,boolean)>($r1, $i0, $r2, 0, 0, 0);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void performAndroidPayMaskedWalletRequest(android.app.Activity, int, com.google.android.gms.wallet.Cart, boolean, boolean, boolean)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        com.google.android.gms.wallet.Cart $r2;
        boolean $z0, $z1, $z2;
        java.util.concurrent.ExecutorService $r3;
        com.braintreepayments.api.Braintree$6 $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.android.gms.wallet.Cart;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $z2 := @parameter5: boolean;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r4 = new com.braintreepayments.api.Braintree$6;

        specialinvoke $r4.<com.braintreepayments.api.Braintree$6: void <init>(com.braintreepayments.api.Braintree,android.app.Activity,int,com.google.android.gms.wallet.Cart,boolean,boolean,boolean)>($r0, $r1, $i0, $r2, $z0, $z1, $z2);

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void postOrQueueCallback(com.braintreepayments.api.Braintree$ListenerCallback)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.Braintree$ListenerCallback $r1;
        java.util.List $r2;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.Braintree$ListenerCallback;

        $z0 = $r0.<com.braintreepayments.api.Braintree: boolean mListenersLocked>;

(0)     if $z0 != 0 goto label1;

        $z0_1 = interfaceinvoke $r1.<com.braintreepayments.api.Braintree$ListenerCallback: boolean hasListeners()>();

(1)     if $z0_1 != 0 goto label2;

     label1:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        $r2 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCallbackQueue>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;

     label2:
        interfaceinvoke $r1.<com.braintreepayments.api.Braintree$ListenerCallback: void execute()>();

        return;
    }

    protected void postUnrecoverableErrorToListeners(java.lang.Throwable)
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.Throwable $r1, $r3;
        com.braintreepayments.api.Braintree$17 $r2;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: java.lang.Throwable;

        entermonitor $r0;

     label1:
        $r2 = new com.braintreepayments.api.Braintree$17;

        specialinvoke $r2.<com.braintreepayments.api.Braintree$17: void <init>(com.braintreepayments.api.Braintree,java.lang.Throwable)>($r0, $r1);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postOrQueueCallback(com.braintreepayments.api.Braintree$ListenerCallback)>($r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeListener(com.braintreepayments.api.Braintree$Listener)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.Braintree$Listener $r1;
        java.lang.Throwable $r2;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4;
        java.util.Set $r3, $r3_1, $r3_2, $r3_3, $r3_4, $r3_5, $r3_6, $r3_7, $r3_8;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.Braintree$Listener;

(0)     entermonitor $r0;

     label1:
        $z0 = $r1 instanceof com.braintreepayments.api.Braintree$PaymentMethodsUpdatedListener;

(1)     if $z0 == 0 goto label2;

        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mUpdatedListeners>;

(2)     interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r1);

     label2:
        $r3_1 = Phi($r3 #1, $r3 #2);

(3)     $z0_1 = $r1 instanceof com.braintreepayments.api.Braintree$PaymentMethodCreatedListener;

(4)     if $z0_1 == 0 goto label3;

(5)     $r3_2 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mCreatedListeners>;

(6)     interfaceinvoke $r3_2.<java.util.Set: boolean remove(java.lang.Object)>($r1);

     label3:
        $r3_3 = Phi($r3_1 #4, $r3_2 #6);

(7)     $z0_2 = $r1 instanceof com.braintreepayments.api.Braintree$PaymentMethodNonceListener;

(8)     if $z0_2 == 0 goto label4;

(9)     $r3_4 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mNonceListeners>;

(10)    interfaceinvoke $r3_4.<java.util.Set: boolean remove(java.lang.Object)>($r1);

     label4:
        $r3_5 = Phi($r3_3 #8, $r3_4 #10);

(11)    $z0_3 = $r1 instanceof com.braintreepayments.api.Braintree$ErrorListener;

(12)    if $z0_3 == 0 goto label5;

(13)    $r3_6 = $r0.<com.braintreepayments.api.Braintree: java.util.Set mErrorListeners>;

(14)    interfaceinvoke $r3_6.<java.util.Set: boolean remove(java.lang.Object)>($r1);

     label5:
        $r3_7 = Phi($r3_5 #12, $r3_6 #14);

        exitmonitor $r0;

        return;

     label6:
        $r2 := @caughtexception;

        $z0_4 = Phi($z0 #0, $z0_1 #3, $z0_2 #7, $z0_3 #11);

        $r3_8 = Phi($r3 #0, $r3_1 #3, $r3_2 #5, $r3_3 #7, $r3_4 #9, $r3_5 #11, $r3_6 #13);

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public void sendAnalyticsEvent(java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4, $r2_1, $r4_1, $r4_2, $r2_2;
        java.lang.StringBuilder $r3, $r3_1, $r3_2, $r3_3, $r3_4;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r2 := @parameter0: java.lang.String;

(0)     entermonitor $r0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.lang.String analyticsPrefix()>();

(1)     $r3_1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

(2)     $r3_2 = virtualinvoke $r3_1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

(3)     $r3_3 = virtualinvoke $r3_2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

(4)     $r2_1 = virtualinvoke $r3_3.<java.lang.StringBuilder: java.lang.String toString()>();

(5)     $r4_1 = virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.lang.String getIntegrationType()>();

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.Future sendAnalyticsEventHelper(java.lang.String,java.lang.String)>($r2_1, $r4_1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        $r3_4 = Phi($r3 #0, $r3_1 #1, $r3_2 #2, $r3_3 #3);

        $r4_2 = Phi($r4 #0, $r4_1 #5);

        $r2_2 = Phi($r2 #0, $r2_1 #4);

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void sendAnalyticsEvent(java.lang.String, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.String $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.Future sendAnalyticsEventHelper(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.util.concurrent.Future sendAnalyticsEventHelper(java.lang.String, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        java.lang.String $r1, $r2;
        java.util.concurrent.ExecutorService $r3;
        com.braintreepayments.api.Braintree$13 $r4;
        java.lang.Throwable $r5;
        java.util.concurrent.Future $r6;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r4 = new com.braintreepayments.api.Braintree$13;

        specialinvoke $r4.<com.braintreepayments.api.Braintree$13: void <init>(com.braintreepayments.api.Braintree,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        $r6 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4);

     label2:
        exitmonitor $r0;

        return $r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setIntegrationDropin()
    {
        com.braintreepayments.api.Braintree $r0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r0.<com.braintreepayments.api.Braintree: java.lang.String mIntegrationType> = "dropin";

        return;
    }

    public void startCheckoutWithPayPal(android.app.Activity, int, com.braintreepayments.api.PayPalCheckout)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        com.braintreepayments.api.PayPalCheckout $r2;
        android.content.BroadcastReceiver $r3;
        android.content.IntentFilter $r4;
        java.util.concurrent.ExecutorService $r5;
        com.braintreepayments.api.Braintree$4 $r6;
        com.braintreepayments.api.BraintreeBroadcastManager $r7;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.braintreepayments.api.PayPalCheckout;

        $r0.<com.braintreepayments.api.Braintree: android.app.Activity mCurrentPayPalActivity> = $r1;

        $r7 = staticinvoke <com.braintreepayments.api.BraintreeBroadcastManager: com.braintreepayments.api.BraintreeBroadcastManager getInstance(android.content.Context)>($r1);

        $r3 = $r0.<com.braintreepayments.api.Braintree: android.content.BroadcastReceiver mBraintreeBroadcastReceiver>;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("com.braintreepayments.api.messages.LOCAL_BROADCAST_BROWSER_SWITCH_COMPLETED");

        virtualinvoke $r7.<com.braintreepayments.api.BraintreeBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r4);

        $r5 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r6 = new com.braintreepayments.api.Braintree$4;

        specialinvoke $r6.<com.braintreepayments.api.Braintree$4: void <init>(com.braintreepayments.api.Braintree,com.braintreepayments.api.PayPalCheckout,android.app.Activity,int)>($r0, $r2, $r1, $i0);

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r6);

        return;
    }

    public void startPayWithPayPal(android.app.Activity, int)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void startPayWithPayPal(android.app.Activity,int,java.util.List)>($r1, $i0, null);

        return;
    }

    public void startPayWithPayPal(android.app.Activity, int, java.util.List)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        java.util.List $r2;
        com.braintreepayments.api.PayPalCheckout $r3;
        android.content.BroadcastReceiver $r4;
        android.content.IntentFilter $r5;
        com.braintreepayments.api.exceptions.BraintreeException $r6;
        com.braintreepayments.api.BraintreeApi $r7, $r7_1;
        boolean $z0;
        java.lang.Boolean $r8, $r8_1, $r8_2;
        com.braintreepayments.api.BraintreeBroadcastManager $r9;
        com.paypal.android.sdk.onetouch.core.PerformRequestStatus $r10;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.util.List;

        $r7 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

        $z0 = virtualinvoke $r7.<com.braintreepayments.api.BraintreeApi: boolean billingAgreementsEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = new com.braintreepayments.api.PayPalCheckout;

        specialinvoke $r3.<com.braintreepayments.api.PayPalCheckout: void <init>()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r3.<com.braintreepayments.api.PayPalCheckout: void setSingleUse(java.lang.Boolean)>($r8);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void startCheckoutWithPayPal(android.app.Activity,int,com.braintreepayments.api.PayPalCheckout)>($r1, $i0, $r3);

        return;

     label1:
        $r0.<com.braintreepayments.api.Braintree: android.app.Activity mCurrentPayPalActivity> = $r1;

        if $r1 == null goto label2;

        $r9 = staticinvoke <com.braintreepayments.api.BraintreeBroadcastManager: com.braintreepayments.api.BraintreeBroadcastManager getInstance(android.content.Context)>($r1);

        $r4 = $r0.<com.braintreepayments.api.Braintree: android.content.BroadcastReceiver mBraintreeBroadcastReceiver>;

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>(java.lang.String)>("com.braintreepayments.api.messages.LOCAL_BROADCAST_BROWSER_SWITCH_COMPLETED");

        virtualinvoke $r9.<com.braintreepayments.api.BraintreeBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, $r5);

     label2:
(0)     $r7_1 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

     label3:
        $r10 = virtualinvoke $r7_1.<com.braintreepayments.api.BraintreeApi: com.paypal.android.sdk.onetouch.core.PerformRequestStatus startPayWithPayPal(android.app.Activity,int,java.util.List)>($r1, $i0, $r2);

(1)     $r8_1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        specialinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsForPayPalPerformRequestStatus(com.paypal.android.sdk.onetouch.core.PerformRequestStatus,java.lang.Boolean)>($r10, $r8_1);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r8_2 = Phi($r8 #0, $r8_1 #1);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r6);

        return;

        catch com.braintreepayments.api.exceptions.BraintreeException from label3 to label4 with label5;
    }

    public void startPayWithVenmo(android.app.Activity, int)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        com.braintreepayments.api.BraintreeApi $r2;
        com.braintreepayments.api.exceptions.AppSwitchNotAvailableException $r3;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.braintreepayments.api.Braintree: com.braintreepayments.api.BraintreeApi mBraintreeApi>;

     label1:
        virtualinvoke $r2.<com.braintreepayments.api.BraintreeApi: void startPayWithVenmo(android.app.Activity,int)>($r1, $i0);

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("add-venmo.start");

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void sendAnalyticsEvent(java.lang.String)>("add-venmo.unavailable");

        virtualinvoke $r0.<com.braintreepayments.api.Braintree: void postUnrecoverableErrorToListeners(java.lang.Throwable)>($r3);

        return;

        catch com.braintreepayments.api.exceptions.AppSwitchNotAvailableException from label1 to label2 with label3;
    }

    public void startThreeDSecureVerification(android.app.Activity, int, com.braintreepayments.api.models.CardBuilder, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        com.braintreepayments.api.models.CardBuilder $r2;
        java.lang.String $r3;
        java.util.concurrent.ExecutorService $r4;
        com.braintreepayments.api.Braintree$9 $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.braintreepayments.api.models.CardBuilder;

        $r3 := @parameter3: java.lang.String;

        entermonitor $r0;

     label1:
        $r4 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r5 = new com.braintreepayments.api.Braintree$9;

        specialinvoke $r5.<com.braintreepayments.api.Braintree$9: void <init>(com.braintreepayments.api.Braintree,com.braintreepayments.api.models.CardBuilder,android.app.Activity,int,java.lang.String)>($r0, $r2, $r1, $i0, $r3);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void startThreeDSecureVerification(android.app.Activity, int, java.lang.String, java.lang.String)
    {
        com.braintreepayments.api.Braintree $r0;
        android.app.Activity $r1;
        int $i0;
        java.lang.String $r2, $r3;
        java.util.concurrent.ExecutorService $r4;
        com.braintreepayments.api.Braintree$10 $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        entermonitor $r0;

     label1:
        $r4 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r5 = new com.braintreepayments.api.Braintree$10;

        specialinvoke $r5.<com.braintreepayments.api.Braintree$10: void <init>(com.braintreepayments.api.Braintree,java.lang.String,java.lang.String,android.app.Activity,int)>($r0, $r2, $r3, $r1, $i0);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void tokenize(com.braintreepayments.api.models.PaymentMethod$Builder)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod$Builder $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.models.PaymentMethod$Builder;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.Future tokenizeHelper(com.braintreepayments.api.models.PaymentMethod$Builder)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.util.concurrent.Future tokenizeHelper(com.braintreepayments.api.models.PaymentMethod$Builder)
    {
        com.braintreepayments.api.Braintree $r0;
        com.braintreepayments.api.models.PaymentMethod$Builder $r1;
        java.util.concurrent.ExecutorService $r2;
        com.braintreepayments.api.Braintree$12 $r3;
        java.lang.Throwable $r4;
        java.util.concurrent.Future $r5;

        $r0 := @this: com.braintreepayments.api.Braintree;

        $r1 := @parameter0: com.braintreepayments.api.models.PaymentMethod$Builder;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.braintreepayments.api.Braintree: java.util.concurrent.ExecutorService mExecutorService>;

        $r3 = new com.braintreepayments.api.Braintree$12;

        specialinvoke $r3.<com.braintreepayments.api.Braintree$12: void <init>(com.braintreepayments.api.Braintree,com.braintreepayments.api.models.PaymentMethod$Builder)>($r0, $r1);

        $r5 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

     label2:
        exitmonitor $r0;

        return $r5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unlockListeners()
    {
        com.braintreepayments.api.Braintree $r0;
        java.util.ArrayList $r1;
        java.lang.Throwable $r2;
        java.util.List $r3, $r3_1, $r3_2, $r3_3;
        java.util.Iterator $r4;
        boolean $z0, $z0_1, $z0_2, $z0_3;
        java.lang.Object $r5;
        com.braintreepayments.api.Braintree$ListenerCallback $r6;

        $r0 := @this: com.braintreepayments.api.Braintree;

(0)     entermonitor $r0;

     label1:
        $r0.<com.braintreepayments.api.Braintree: boolean mListenersLocked> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCallbackQueue>;

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r3);

(1)     $r4 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $r3_1 = Phi($r3 #1, $r3_1 #4, $r3_2 #6);

        $z0 = Phi($z0 #1, $z0_2 #4, $z0_2 #6);

(2)     $z0_1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0_1 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.braintreepayments.api.Braintree$ListenerCallback) $r5;

(3)     $z0_2 = interfaceinvoke $r6.<com.braintreepayments.api.Braintree$ListenerCallback: boolean hasListeners()>();

(4)     if $z0_2 == 0 goto label2;

        interfaceinvoke $r6.<com.braintreepayments.api.Braintree$ListenerCallback: void execute()>();

(5)     $r3_2 = $r0.<com.braintreepayments.api.Braintree: java.util.List mCallbackQueue>;

        interfaceinvoke $r3_2.<java.util.List: boolean remove(java.lang.Object)>($r6);

     label3:
(6)     goto label2;

     label4:
        $r2 := @caughtexception;

        $r3_3 = Phi($r3 #0, $r3_1 #2, $r3_2 #5);

        $z0_3 = Phi($z0 #0, $z0_1 #2, $z0_2 #3);

        exitmonitor $r0;

        throw $r2;

     label5:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
}
