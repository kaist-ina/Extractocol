final class com.facebook.internal.FileLruCache$CopyingInputStream extends java.io.InputStream
{
    final java.io.InputStream input;
    final java.io.OutputStream output;

    void <init>(java.io.InputStream, java.io.OutputStream)
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.InputStream input> = $r1;

        $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.OutputStream output> = $r2;

        return;
    }

    public int available() throws java.io.IOException
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        java.io.InputStream $r1;
        int $i0;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        $r1 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.InputStream input>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        java.io.InputStream $r1;
        java.lang.Throwable $r2;
        java.io.OutputStream $r3, $r3_1;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

     label1:
        $r1 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.InputStream input>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label2:
        $r3 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.OutputStream output>;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        return;

     label3:
        $r2 := @caughtexception;

        $r3_1 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.OutputStream output>;

        virtualinvoke $r3_1.<java.io.OutputStream: void close()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void mark(int)
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean markSupported()
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        return 0;
    }

    public int read() throws java.io.IOException
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        int $i0;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        $r1 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.InputStream input>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 < 0 goto label1;

        $r2 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.OutputStream output>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i0);

     label1:
        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        byte[] $r1;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;
        int $i0;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.InputStream input>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1);

        if $i0 <= 0 goto label1;

        $r3 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.OutputStream output>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label1:
        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i1_1;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.InputStream input>;

        $i1_1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        if $i1_1 <= 0 goto label1;

        $r3 = $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: java.io.OutputStream output>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1_1);

     label1:
        return $i1_1;
    }

    public void reset()
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        entermonitor $r0;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public long skip(long) throws java.io.IOException
    {
        com.facebook.internal.FileLruCache$CopyingInputStream $r0;
        long $l0, $l2, $l3, $l5, $l3_1, $l2_1, $l2_2, $l2_3, $l3_2;
        byte[] $r1;
        byte $b1;
        int $i4, $i4_1, $i4_2, $i4_3;

        $r0 := @this: com.facebook.internal.FileLruCache$CopyingInputStream;

        $l0 := @parameter0: long;

        $r1 = newarray (byte)[1024];

(0)     $l3 = 0L;

     label1:
        $i4 = Phi($i4 #0, $i4_3 #1);

        $l2 = Phi($l2 #0, $l2_3 #1);

        $l3_1 = Phi($l3 #0, $l3_2 #1);

        $b1 = $l3_1 cmp $l0;

        if $b1 >= 0 goto label3;

        $l2_1 = $l0 - $l3_1;

        $i4_1 = lengthof $r1;

        $l5 = (long) $i4_1;

        $l2_2 = staticinvoke <java.lang.Math: long min(long,long)>($l2_1, $l5);

        $i4_2 = (int) $l2_2;

        $i4_3 = virtualinvoke $r0.<com.facebook.internal.FileLruCache$CopyingInputStream: int read(byte[],int,int)>($r1, 0, $i4_2);

        if $i4_3 >= 0 goto label2;

        return $l3_1;

     label2:
        $l2_3 = (long) $i4_3;

        $l3_2 = $l3_1 + $l2_3;

(1)     goto label1;

     label3:
        return $l3_1;
    }
}
