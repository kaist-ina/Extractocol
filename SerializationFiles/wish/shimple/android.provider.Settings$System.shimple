public final class android.provider.Settings$System extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ACCELEROMETER_ROTATION;
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String AIRPLANE_MODE_ON;
    public static final java.lang.String AIRPLANE_MODE_RADIOS;
    public static final java.lang.String ALARM_ALERT;
    public static final java.lang.String ALWAYS_FINISH_ACTIVITIES;
    public static final java.lang.String ANDROID_ID;
    public static final java.lang.String ANIMATOR_DURATION_SCALE;
    public static final java.lang.String APPEND_FOR_LAST_AUDIBLE;
    public static final java.lang.String AUTO_TIME;
    public static final java.lang.String AUTO_TIME_ZONE;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT;
    public static final java.lang.String BLUETOOTH_ON;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DATE_FORMAT;
    public static final java.lang.String DEBUG_APP;
    public static final android.net.Uri DEFAULT_ALARM_ALERT_URI;
    public static final android.net.Uri DEFAULT_NOTIFICATION_URI;
    public static final android.net.Uri DEFAULT_RINGTONE_URI;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String DIM_SCREEN;
    public static final java.lang.String DTMF_TONE_WHEN_DIALING;
    public static final java.lang.String END_BUTTON_BEHAVIOR;
    public static final java.lang.String FONT_SCALE;
    public static final java.lang.String HAPTIC_FEEDBACK_ENABLED;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.lang.String LOCATION_PROVIDERS_ALLOWED;
    public static final java.lang.String LOCK_PATTERN_ENABLED;
    public static final java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED;
    public static final java.lang.String LOCK_PATTERN_VISIBLE;
    public static final java.lang.String LOGGING_ID;
    public static final java.lang.String MODE_RINGER;
    public static final java.lang.String MODE_RINGER_STREAMS_AFFECTED;
    public static final java.lang.String MUTE_STREAMS_AFFECTED;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String NEXT_ALARM_FORMATTED;
    public static final java.lang.String NOTIFICATION_SOUND;
    public static final java.lang.String PARENTAL_CONTROL_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_LAST_UPDATE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_URL;
    public static final java.lang.String RADIO_BLUETOOTH;
    public static final java.lang.String RADIO_CELL;
    public static final java.lang.String RADIO_NFC;
    public static final java.lang.String RADIO_WIFI;
    public static final java.lang.String RINGTONE;
    public static final java.lang.String SCREEN_BRIGHTNESS;
    public static final java.lang.String SCREEN_BRIGHTNESS_MODE;
    public static final int SCREEN_BRIGHTNESS_MODE_AUTOMATIC;
    public static final int SCREEN_BRIGHTNESS_MODE_MANUAL;
    public static final java.lang.String SCREEN_OFF_TIMEOUT;
    public static final java.lang.String SETTINGS_CLASSNAME;
    public static final java.lang.String SETUP_WIZARD_HAS_RUN;
    public static final java.lang.String SHOW_GTALK_SERVICE_STATUS;
    public static final java.lang.String SHOW_PROCESSES;
    public static final java.lang.String SHOW_WEB_SUGGESTIONS;
    public static final java.lang.String SOUND_EFFECTS_ENABLED;
    public static final java.lang.String STAY_ON_WHILE_PLUGGED_IN;
    public static final java.lang.String SYS_PROP_SETTING_VERSION;
    public static final java.lang.String TEXT_AUTO_CAPS;
    public static final java.lang.String TEXT_AUTO_PUNCTUATE;
    public static final java.lang.String TEXT_AUTO_REPLACE;
    public static final java.lang.String TEXT_SHOW_PASSWORD;
    public static final java.lang.String TIME_12_24;
    public static final java.lang.String TRANSITION_ANIMATION_SCALE;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USER_ROTATION;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String VIBRATE_ON;
    public static final java.lang.String VOLUME_ALARM;
    public static final java.lang.String VOLUME_BLUETOOTH_SCO;
    public static final java.lang.String VOLUME_MUSIC;
    public static final java.lang.String VOLUME_NOTIFICATION;
    public static final java.lang.String VOLUME_RING;
    public static final java.lang.String[] VOLUME_SETTINGS;
    public static final java.lang.String VOLUME_SYSTEM;
    public static final java.lang.String VOLUME_VOICE;
    public static final java.lang.String WAIT_FOR_DEBUGGER;
    public static final java.lang.String WALLPAPER_ACTIVITY;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_SLEEP_POLICY;
    public static final int WIFI_SLEEP_POLICY_DEFAULT;
    public static final int WIFI_SLEEP_POLICY_NEVER;
    public static final int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED;
    public static final java.lang.String WIFI_STATIC_DNS1;
    public static final java.lang.String WIFI_STATIC_DNS2;
    public static final java.lang.String WIFI_STATIC_GATEWAY;
    public static final java.lang.String WIFI_STATIC_IP;
    public static final java.lang.String WIFI_STATIC_NETMASK;
    public static final java.lang.String WIFI_USE_STATIC_IP;
    public static final java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE;
    public static final java.lang.String WIFI_WATCHDOG_AP_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_PING_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS;
    public static final java.lang.String WINDOW_ANIMATION_SCALE;

    public void <init>()
    {
        android.provider.Settings$System r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.provider.Settings$System;

        specialinvoke r0.<android.provider.Settings$NameValueTable: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static void getConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean getShowGTalkServiceStatus(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.content.ContentResolver;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void setShowGTalkServiceStatus(android.content.ContentResolver, boolean)
    {
        android.content.ContentResolver r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: android.content.ContentResolver;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    static void <clinit>()
    {
        <android.provider.Settings$System: java.lang.String[] VOLUME_SETTINGS> = null;

        <android.provider.Settings$System: android.net.Uri CONTENT_URI> = null;

        <android.provider.Settings$System: android.net.Uri DEFAULT_ALARM_ALERT_URI> = null;

        <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI> = null;

        <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI> = null;

        return;
    }
}
