class android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate extends android.support.v4.view.AccessibilityDelegateCompat
{
    private final android.graphics.Rect mTmpRect;
    final android.support.v4.widget.SlidingPaneLayout this$0;

    void <init>(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r0;
        android.support.v4.widget.SlidingPaneLayout $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0> = $r1;

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect> = $r2;

        return;
    }

    private void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1, $r2;
        android.graphics.Rect $r3;
        boolean $z0, $z0_1, $z0_2, $z0_3, $z0_4, $z0_5, $z0_6, $z0_7;
        java.lang.CharSequence $r4, $r4_1, $r4_2;
        int $i0, $i0_1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect>;

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r3);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>($r3);

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>($r3);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r3);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>($z0);

        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r4);

        $r4_1 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r4_1);

        $r4_2 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($r4_2);

        $z0_1 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($z0_1);

        $z0_2 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>($z0_2);

        $z0_3 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>($z0_3);

        $z0_4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>($z0_4);

        $z0_5 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>($z0_5);

        $z0_6 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>($z0_6);

        $z0_7 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>($z0_7);

        $i0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>($i0);

        $i0_1 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)>($i0_1);

        return;
    }

    public boolean filter(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r0;
        android.view.View $r1;
        android.support.v4.widget.SlidingPaneLayout $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>($r1);

        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2);

        $r3 = class "android/support/v4/widget/SlidingPaneLayout";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1, $r4;
        java.lang.Class $r2;
        android.view.View $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.String $r5;
        android.view.ViewParent $r6;
        boolean $z0, $z0_1, $z0_2;
        android.support.v4.widget.SlidingPaneLayout $r7, $r7_1, $r7_2;
        int $i0, $i1, $i2, $i1_1, $i1_2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        $r3 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r4 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r1);

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r3, $r4);

        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r1, $r4);

        virtualinvoke $r4.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

        $r2 = class "android/support/v4/widget/SlidingPaneLayout";

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r5);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)>($r3);

        $r6 = staticinvoke <android.support.v4.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>($r3);

        $z0 = $r6 instanceof android.view.View;

(0)     if $z0 == 0 goto label1;

        $r3_1 = (android.view.View) $r6;

(1)     virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r3_1);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        $r7 = $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0>;

        $i0 = virtualinvoke $r7.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

(2)     $i1 = 0;

     label2:
        $r7_1 = Phi($r7 #2, $r7_2 #3);

        $r3_3 = Phi($r3_2 #2, $r3_4 #3);

        $z0_1 = Phi($z0 #2, $z0_2 #3);

        $i1_1 = Phi($i1 #2, $i1_2 #3);

        if $i1_1 >= $i0 goto label4;

        $r7_2 = $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0>;

        $r3_4 = virtualinvoke $r7_2.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i1_1);

        $z0_2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: boolean filter(android.view.View)>($r3_4);

        if $z0_2 != 0 goto label3;

        $i2 = virtualinvoke $r3_4.<android.view.View: int getVisibility()>();

        if $i2 != 0 goto label3;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r3_4, 1);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)>($r3_4);

     label3:
        $i1_2 = $i1_1 + 1;

(3)     goto label2;

     label4:
        return;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r0;
        android.view.ViewGroup $r1;
        android.view.View $r2;
        android.view.accessibility.AccessibilityEvent $r3;
        boolean $z0, $z0_1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: boolean filter(android.view.View)>($r2);

        if $z0 != 0 goto label1;

        $z0_1 = specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2, $r3);

        return $z0_1;

     label1:
        return 0;
    }
}
