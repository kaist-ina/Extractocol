class com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper extends java.lang.Object
{
    private final java.util.concurrent.ExecutorService executorService;

    public void <init>(java.util.concurrent.ExecutorService)
    {
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r0;
        java.util.concurrent.ExecutorService $r1;

        $r0 := @this: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper;

        $r1 := @parameter0: java.util.concurrent.ExecutorService;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.ExecutorService executorService> = $r1;

        return;
    }

    java.util.concurrent.Future executeAsync(java.lang.Runnable)
    {
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r0;
        java.lang.Runnable $r1;
        java.util.concurrent.ExecutorService $r2;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper$1 $r3;
        java.util.concurrent.RejectedExecutionException $r4;
        java.util.concurrent.Future $r5;
        io.fabric.sdk.android.Logger $r6;

        $r0 := @this: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = $r0.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.ExecutorService executorService>;

        $r3 = new com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper$1;

     label1:
        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper$1: void <init>(com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper,java.lang.Runnable)>($r0, $r1);

        $r5 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

     label2:
        return $r5;

     label3:
        $r4 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    java.util.concurrent.Future executeAsync(java.util.concurrent.Callable)
    {
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r0;
        java.util.concurrent.Callable $r1;
        java.util.concurrent.ExecutorService $r2;
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper$2 $r3;
        java.util.concurrent.RejectedExecutionException $r4;
        java.util.concurrent.Future $r5;
        io.fabric.sdk.android.Logger $r6;

        $r0 := @this: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper;

        $r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = $r0.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.ExecutorService executorService>;

        $r3 = new com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper$2;

     label1:
        specialinvoke $r3.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper$2: void <init>(com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper,java.util.concurrent.Callable)>($r0, $r1);

        $r5 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

     label2:
        return $r5;

     label3:
        $r4 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    java.lang.Object executeSyncLoggingException(java.util.concurrent.Callable)
    {
        com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper $r0;
        java.util.concurrent.Callable $r1;
        java.util.concurrent.TimeUnit $r2;
        java.util.concurrent.RejectedExecutionException $r3;
        java.lang.Exception $r4;
        android.os.Looper $r5, $r6;
        java.util.concurrent.ExecutorService $r7, $r7_1, $r7_2, $r7_3;
        java.util.concurrent.Future $r8, $r8_1, $r8_2, $r8_3;
        java.lang.Object $r9, $r9_1, $r9_2, $r9_3;
        io.fabric.sdk.android.Logger $r10, $r10_1;

        $r0 := @this: com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper;

(0)     $r1 := @parameter0: java.util.concurrent.Callable;

     label01:
        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

     label02:
        if $r5 != $r6 goto label07;

        $r7 = $r0.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.ExecutorService executorService>;

     label03:
        $r8 = interfaceinvoke $r7.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r1);

     label04:
        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label05:
        $r9 = interfaceinvoke $r8.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(4L, $r2);

     label06:
        return $r9;

     label07:
(1)     $r7_1 = $r0.<com.crashlytics.android.core.CrashlyticsExecutorServiceWrapper: java.util.concurrent.ExecutorService executorService>;

     label08:
(2)     $r8_1 = interfaceinvoke $r7_1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r1);

(3)     $r9_1 = interfaceinvoke $r8_1.<java.util.concurrent.Future: java.lang.Object get()>();

     label09:
        return $r9_1;

     label10:
        $r3 := @caughtexception;

        $r9_2 = Phi($r9 #0, $r9_1 #3);

        $r8_2 = Phi($r8 #0, $r8_1 #2);

        $r7_2 = Phi($r7 #0, $r7_1 #1);

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("CrashlyticsCore", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

     label11:
        $r4 := @caughtexception;

        $r9_3 = Phi($r9 #0, $r9_1 #3);

        $r8_3 = Phi($r8 #0, $r8_1 #2);

        $r7_3 = Phi($r7 #0, $r7_1 #1);

        $r10_1 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10_1.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Failed to execute task.", $r4);

        return null;

        catch java.util.concurrent.RejectedExecutionException from label01 to label02 with label10;
        catch java.lang.Exception from label01 to label02 with label11;
        catch java.util.concurrent.RejectedExecutionException from label03 to label04 with label10;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.util.concurrent.RejectedExecutionException from label05 to label06 with label10;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.util.concurrent.RejectedExecutionException from label08 to label09 with label10;
        catch java.lang.Exception from label08 to label09 with label11;
    }
}
