class android.support.v4.widget.DrawerLayout$ViewDragCallback extends android.support.v4.widget.ViewDragHelper$Callback
{
    private final int mAbsGravity;
    private android.support.v4.widget.ViewDragHelper mDragger;
    private final java.lang.Runnable mPeekRunnable;
    final android.support.v4.widget.DrawerLayout this$0;

    public void <init>(android.support.v4.widget.DrawerLayout, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.support.v4.widget.DrawerLayout $r1;
        int $i0;
        android.support.v4.widget.DrawerLayout$ViewDragCallback$1 $r2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.support.v4.widget.DrawerLayout;

        $i0 := @parameter1: int;

        $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0> = $r1;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper$Callback: void <init>()>();

        $r2 = new android.support.v4.widget.DrawerLayout$ViewDragCallback$1;

        specialinvoke $r2.<android.support.v4.widget.DrawerLayout$ViewDragCallback$1: void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback)>($r0);

        $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable> = $r2;

        $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity> = $i0;

        return;
    }

    static void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;

        $r0 := @parameter0: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        specialinvoke $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void peekDrawer()>();

        return;
    }

    private void closeOtherDrawer()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        int $i0;
        android.view.View $r1;
        byte $b1, $b1_1, $b1_2;
        android.support.v4.widget.DrawerLayout $r2, $r2_1, $r2_2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $b1 = 3;

        $i0 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

(0)     if $i0 != 3 goto label1;

(1)     $b1_1 = 5;

     label1:
        $b1_2 = Phi($b1 #0, $b1_1 #1);

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r1 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($b1_2);

(2)     if $r1 == null goto label2;

        $r2_1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

(3)     virtualinvoke $r2_1.<android.support.v4.widget.DrawerLayout: void closeDrawer(android.view.View)>($r1);

     label2:
        $r2_2 = Phi($r2 #2, $r2_1 #3);

        return;
    }

    private void peekDrawer()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        int $i0, $i1, $i2, $i0_1, $i1_1, $i0_2, $i1_2, $i2_1, $i0_3, $i1_3, $i2_2, $i0_4, $i0_5, $i0_6, $i0_7, $i0_8, $i0_9, $i0_10, $i0_11, $i2_3;
        android.support.v4.widget.ViewDragHelper $r1, $r1_1;
        boolean $z0, $z0_1, $z0_2;
        android.support.v4.widget.DrawerLayout $r2, $r2_1, $r2_2, $r2_3, $r2_4, $r2_5, $r2_6, $r2_7;
        android.view.View $r3, $r4, $r4_1, $r4_2;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.v4.widget.DrawerLayout$LayoutParams $r6;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i1 = 0;

        $r1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $i2 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: int getEdgeSize()>();

        $i0 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        if $i0 != 3 goto label6;

(0)     $z0 = 1;

     label1:
        $z0_1 = Phi($z0 #0, $z0_2 #10);

        if $z0_1 == 0 goto label7;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r3 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(3);

        $r4 = $r3;

(1)     if $r3 == null goto label2;

        $i0_1 = virtualinvoke $r3.<android.view.View: int getWidth()>();

(2)     $i1_1 = neg $i0_1;

     label2:
        $i0_2 = Phi($i0 #1, $i0_1 #2);

        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     $i2_1 = $i1_2 + $i2;

     label3:
        $r2_1 = Phi($r2 #3, $r2_7 #11);

        $i0_3 = Phi($i0_2 #3, $i0_11 #11);

        $i1_3 = Phi($i1_2 #3, $i1 #11);

        $i2_2 = Phi($i2_1 #3, $i2_3 #11);

        $r4_1 = Phi($r4 #3, $r4_2 #11);

(4)     if $r4_1 == null goto label8;

(5)     if $z0_1 == 0 goto label4;

        $i0_4 = virtualinvoke $r4_1.<android.view.View: int getLeft()>();

(6)     if $i0_4 < $i2_2 goto label5;

     label4:
        $i0_5 = Phi($i0_3 #5, $i0_4 #6);

(7)     if $z0_1 != 0 goto label8;

        $i0_6 = virtualinvoke $r4_1.<android.view.View: int getLeft()>();

(8)     if $i0_6 <= $i2_2 goto label8;

     label5:
        $i0_7 = Phi($i0_4 #6, $i0_6 #8);

        $r2_2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i0_8 = virtualinvoke $r2_2.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>($r4_1);

(9)     if $i0_8 != 0 goto label8;

        $r5 = virtualinvoke $r4_1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r5;

        $r1_1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $i0_9 = virtualinvoke $r4_1.<android.view.View: int getTop()>();

        virtualinvoke $r1_1.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r4_1, $i2_2, $i0_9);

        $r6.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 1;

        $r2_3 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2_3.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        specialinvoke $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()>();

        $r2_4 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2_4.<android.support.v4.widget.DrawerLayout: void cancelChildViewTouch()>();

        return;

     label6:
        $z0_2 = 0;

(10)    goto label1;

     label7:
        $r2_6 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r4_2 = virtualinvoke $r2_6.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(5);

        $r2_7 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i0_11 = virtualinvoke $r2_7.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i2_3 = $i0_11 - $i2;

(11)    goto label3;

     label8:
        $r2_5 = Phi($r2_1 #4, $r2_1 #7, $r2_1 #8, $r2_2 #9);

        $i0_10 = Phi($i0_3 #4, $i0_5 #7, $i0_6 #8, $i0_8 #9);

        return;
    }

    public int clampViewPositionHorizontal(android.view.View, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i1_1, $i1_2, $i0_1, $i0_2, $i1_3, $i2_1, $i0_3, $i0_4;
        android.support.v4.widget.DrawerLayout $r2, $r2_1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, 3);

        if $z0 == 0 goto label1;

        $i1_1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i1_2 = neg $i1_1;

        $i0_1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 0);

        $i0_2 = staticinvoke <java.lang.Math: int max(int,int)>($i1_2, $i0_1);

        return $i0_2;

     label1:
        $r2_1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i1_3 = virtualinvoke $r2_1.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2_1 = $i1_3 - $i2;

        $i0_3 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1_3);

        $i0_4 = staticinvoke <java.lang.Math: int max(int,int)>($i2_1, $i0_3);

        return $i0_4;
    }

    public int clampViewPositionVertical(android.view.View, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.view.View $r1;
        int $i0, $i1, $i1_1;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1_1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        return $i1_1;
    }

    public int getViewHorizontalDragRange(android.view.View)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.view.View $r1;
        android.support.v4.widget.DrawerLayout $r2;
        boolean $z0;
        int $i0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        return $i0;

     label1:
        return 0;
    }

    public void onEdgeDragStarted(int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        android.support.v4.widget.ViewDragHelper $r1;
        android.support.v4.widget.DrawerLayout $r2, $r2_1, $r2_2, $r2_3, $r2_4;
        android.view.View $r3, $r3_1, $r3_2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1_1 = $i1 & 1;

        if $i1_1 != 1 goto label2;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

(0)     $r3 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(3);

     label1:
        $r3_1 = Phi($r3 #0, $r3_2 #3);

        $r2_1 = Phi($r2 #0, $r2_4 #3);

(1)     if $r3_1 == null goto label3;

        $r2_2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i1_2 = virtualinvoke $r2_2.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>($r3_1);

(2)     if $i1_2 != 0 goto label3;

        $r1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>($r3_1, $i0);

        return;

     label2:
        $r2_4 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r3_2 = virtualinvoke $r2_4.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(5);

(3)     goto label1;

     label3:
        $r2_3 = Phi($r2_1 #1, $r2_2 #2);

        $i1_3 = Phi($i1_1 #1, $i1_2 #2);

        return;
    }

    public boolean onEdgeLock(int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i0 := @parameter0: int;

        return 0;
    }

    public void onEdgeTouched(int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        int $i0, $i1;
        android.support.v4.widget.DrawerLayout $r1;
        java.lang.Runnable $r2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: boolean postDelayed(java.lang.Runnable,long)>($r2, 160L);

        return;
    }

    public void onViewCaptured(android.view.View, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 0;

        specialinvoke $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()>();

        return;
    }

    public void onViewDragStateChanged(int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        int $i0, $i1;
        android.support.v4.widget.DrawerLayout $r1;
        android.support.v4.widget.ViewDragHelper $r2;
        android.view.View $r3;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $r3 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: android.view.View getCapturedView()>();

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)>($i1, $i0, $r3);

        return;
    }

    public void onViewPositionChanged(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i2_1, $i1_1, $i1_2, $i3_1, $i3_2, $i1_3;
        android.support.v4.widget.DrawerLayout $r2, $r2_1, $r2_2, $r2_3, $r2_4;
        boolean $z0;
        float $f0, $f1, $f0_1, $f0_2, $f1_1, $f0_3, $f1_2, $f0_4;
        byte $b4, $b4_1, $b4_2, $b4_3;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i0 := @parameter4: int;

        $i2_1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, 3);

        if $z0 == 0 goto label3;

        $i1_1 = $i2_1 + $i1;

        $f0 = (float) $i1_1;

        $f1 = (float) $i2_1;

(0)     $f0_1 = $f0 / $f1;

     label1:
        $r2_1 = Phi($r2 #0, $r2_4 #2);

        $f0_2 = Phi($f0_1 #0, $f0_4 #2);

        $i1_2 = Phi($i1_1 #0, $i1_3 #2);

        $i3_1 = Phi($i3 #0, $i3_2 #2);

        $f1_1 = Phi($f1 #0, $f1_2 #2);

        $r2_2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2_2.<android.support.v4.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>($r1, $f0_2);

        $b4 = $f0_2 cmpl 0.0F;

        if $b4 != 0 goto label4;

(1)     $b4_1 = 4;

     label2:
        $b4_2 = Phi($b4_1 #1, $b4_3 #3);

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($b4_2);

        $r2_3 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r2_3.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;

     label3:
        $r2_4 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i3_2 = virtualinvoke $r2_4.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i1_3 = $i3_2 - $i1;

        $f0_3 = (float) $i1_3;

        $f1_2 = (float) $i2_1;

        $f0_4 = $f0_3 / $f1_2;

(2)     goto label1;

     label4:
        $b4_3 = 0;

(3)     goto label2;
    }

    public void onViewReleased(android.view.View, float, float)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.view.View $r1;
        float $f0, $f1, $f1_1;
        android.support.v4.widget.ViewDragHelper $r2;
        android.support.v4.widget.DrawerLayout $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        int $i0, $i2, $i0_1, $i0_2, $i0_3, $i2_1, $i2_2, $i0_4, $i0_5;
        boolean $z0;
        byte $b1, $b1_1, $b1_2, $b1_3, $b1_4, $b1_5, $b1_6, $b1_7, $b1_8, $b1_9, $b1_10;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r3 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $f1_1 = virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)>($r1);

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $r3_1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r3_1.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, 3);

        if $z0 == 0 goto label4;

        $b1 = $f0 cmpl 0.0F;

(0)     if $b1 > 0 goto label1;

        $b1_1 = $f0 cmpl 0.0F;

(1)     if $b1_1 != 0 goto label3;

        $b1_2 = $f1_1 cmpl 0.5F;

(2)     if $b1_2 <= 0 goto label3;

     label1:
        $b1_4 = Phi($b1 #0, $b1_2 #2);

(3)     $i0_2 = 0;

     label2:
        $i0_3 = Phi($i0_2 #3, $i0_1 #4, $i0_5 #8, $i0_4 #9);

        $i2 = Phi($i2 #3, $i2 #4, $i2_2 #8, $i2_2 #9);

        $r3_2 = Phi($r3_1 #3, $r3_1 #4, $r3_4 #8, $r3_4 #9);

        $b1_5 = Phi($b1_4 #3, $b1_3 #4, $b1_10 #8, $b1_9 #9);

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger>;

        $i2_1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)>($i0_3, $i2_1);

        $r3_3 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        virtualinvoke $r3_3.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;

     label3:
        $b1_3 = Phi($b1_1 #1, $b1_2 #2);

        $i0_1 = neg $i0;

(4)     goto label2;

     label4:
        $r3_4 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i2_2 = virtualinvoke $r3_4.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $b1_6 = $f0 cmpg 0.0F;

(5)     if $b1_6 < 0 goto label5;

        $b1_7 = $f0 cmpl 0.0F;

(6)     if $b1_7 != 0 goto label6;

        $b1_8 = $f1_1 cmpl 0.5F;

(7)     if $b1_8 <= 0 goto label6;

     label5:
        $b1_10 = Phi($b1_6 #5, $b1_8 #7);

        $i0_5 = $i2_2 - $i0;

(8)     goto label2;

     label6:
        $b1_9 = Phi($b1_7 #6, $b1_8 #7);

        $i0_4 = $i2_2;

(9)     goto label2;
    }

    public void removeCallbacks()
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.support.v4.widget.DrawerLayout $r1;
        java.lang.Runnable $r2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: boolean removeCallbacks(java.lang.Runnable)>($r2);

        return;
    }

    public void setDragger(android.support.v4.widget.ViewDragHelper)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.support.v4.widget.ViewDragHelper $r1;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.support.v4.widget.ViewDragHelper;

        $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.ViewDragHelper mDragger> = $r1;

        return;
    }

    public boolean tryCaptureView(android.view.View, int)
    {
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r0;
        android.view.View $r1;
        int $i0, $i0_1, $i0_2, $i0_3;
        android.support.v4.widget.DrawerLayout $r2, $r2_1, $r2_2, $r2_3;
        boolean $z0, $z0_1, $z0_2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$ViewDragCallback;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>($r1);

(0)     if $z0 == 0 goto label1;

        $r2_1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i0_1 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: int mAbsGravity>;

        $z0_1 = virtualinvoke $r2_1.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>($r1, $i0_1);

(1)     if $z0_1 == 0 goto label1;

        $r2_2 = $r0.<android.support.v4.widget.DrawerLayout$ViewDragCallback: android.support.v4.widget.DrawerLayout this$0>;

        $i0_2 = virtualinvoke $r2_2.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>($r1);

(2)     if $i0_2 != 0 goto label1;

        return 1;

     label1:
        $i0_3 = Phi($i0 #0, $i0_1 #1, $i0_2 #2);

        $z0_2 = Phi($z0 #0, $z0_1 #1, $z0_1 #2);

        $r2_3 = Phi($r2 #0, $r2_1 #1, $r2_2 #2);

        return 0;
    }
}
