public class android.support.v4.media.session.MediaSessionCompatApi18 extends java.lang.Object
{
    private static final long ACTION_SEEK_TO;

    public void <init>()
    {
        android.support.v4.media.session.MediaSessionCompatApi18 $r0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompatApi18;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi14$Callback $r0;
        android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi14$Callback;

        $r1 = new android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener;

        specialinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener: void <init>(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>($r0);

        return $r1;
    }

    static int getRccTransportControlFlagsFromActions(long)
    {
        byte $b0;
        int $i1, $i1_1, $i1_2;
        long $l2, $l2_1;

        $l2 := @parameter0: long;

        $i1 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: int getRccTransportControlFlagsFromActions(long)>($l2);

        $l2_1 = 256L & $l2;

        $b0 = $l2_1 cmp 0L;

(0)     if $b0 == 0 goto label1;

(1)     $i1_1 = $i1 | 256;

     label1:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        return $i1_2;
    }

    public static void registerMediaButtonEventReceiver(android.content.Context, android.app.PendingIntent)
    {
        android.content.Context $r0;
        android.app.PendingIntent $r1;
        java.lang.Object $r2;
        android.media.AudioManager $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.app.PendingIntent;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r3 = (android.media.AudioManager) $r2;

        virtualinvoke $r3.<android.media.AudioManager: void registerMediaButtonEventReceiver(android.app.PendingIntent)>($r1);

        return;
    }

    public static void setOnPlaybackPositionUpdateListener(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        android.media.RemoteControlClient $r2;
        android.media.RemoteControlClient$OnPlaybackPositionUpdateListener $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (android.media.RemoteControlClient) $r0;

        $r3 = (android.media.RemoteControlClient$OnPlaybackPositionUpdateListener) $r1;

        virtualinvoke $r2.<android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient$OnPlaybackPositionUpdateListener)>($r3);

        return;
    }

    public static void setState(java.lang.Object, int, long, float, long)
    {
        java.lang.Object $r0;
        float $f0, $f1, $f1_1, $f1_2, $f1_3;
        long $l0, $l2, $l3, $l5, $l5_1, $l5_2, $l5_3, $l2_1, $l2_2, $l5_4;
        int $i1, $i1_1;
        byte $b4, $b4_1, $b4_2, $b4_3, $b4_4, $b4_5;
        android.media.RemoteControlClient $r1;

        $r0 := @parameter0: java.lang.Object;

        $i1 := @parameter1: int;

        $l2 := @parameter2: long;

        $f0 := @parameter3: float;

        $l0 := @parameter4: long;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

(0)     if $i1 != 3 goto label2;

        $b4 = $l2 cmp 0L;

(1)     if $b4 <= 0 goto label2;

        $l5 = 0L;

        $b4_1 = $l0 cmp 0L;

(2)     if $b4_1 <= 0 goto label1;

        $l5_1 = $l3 - $l0;

        $b4_2 = $f0 cmpl 0.0F;

(3)     if $b4_2 <= 0 goto label1;

        $b4_3 = $f0 cmpl 1.0F;

(4)     if $b4_3 == 0 goto label1;

        $f1 = (float) $l5_1;

        $f1_1 = $f1 * $f0;

(5)     $l5_2 = (long) $f1_1;

     label1:
        $f1_2 = Phi($f1 #2, $f1 #3, $f1 #4, $f1_1 #5);

        $l5_3 = Phi($l5 #2, $l5_1 #3, $l5_1 #4, $l5_2 #5);

        $b4_4 = Phi($b4_1 #2, $b4_2 #3, $b4_3 #4, $b4_3 #5);

(6)     $l2_1 = $l2 + $l5_3;

     label2:
        $f1_3 = Phi($f1 #0, $f1 #1, $f1_2 #6);

        $l2_2 = Phi($l2 #0, $l2 #1, $l2_1 #6);

        $l5_4 = Phi($l5 #0, $l5 #1, $l5_3 #6);

        $b4_5 = Phi($b4 #0, $b4 #1, $b4_4 #6);

        $i1_1 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: int getRccStateFromState(int)>($i1);

        $r1 = (android.media.RemoteControlClient) $r0;

        virtualinvoke $r1.<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>($i1_1, $l2_2, $f0);

        return;
    }

    public static void setTransportControlFlags(java.lang.Object, long)
    {
        java.lang.Object $r0;
        long $l0;
        int $i1;
        android.media.RemoteControlClient $r1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r1 = (android.media.RemoteControlClient) $r0;

        $i1 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: int getRccTransportControlFlagsFromActions(long)>($l0);

        virtualinvoke $r1.<android.media.RemoteControlClient: void setTransportControlFlags(int)>($i1);

        return;
    }

    public static void unregisterMediaButtonEventReceiver(android.content.Context, android.app.PendingIntent)
    {
        android.content.Context $r0;
        android.app.PendingIntent $r1;
        java.lang.Object $r2;
        android.media.AudioManager $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.app.PendingIntent;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r3 = (android.media.AudioManager) $r2;

        virtualinvoke $r3.<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.app.PendingIntent)>($r1);

        return;
    }
}
