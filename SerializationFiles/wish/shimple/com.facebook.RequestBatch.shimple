public class com.facebook.RequestBatch extends java.util.AbstractList
{
    private static java.util.concurrent.atomic.AtomicInteger idGenerator;
    private java.lang.String batchApplicationId;
    private android.os.Handler callbackHandler;
    private java.util.List callbacks;
    private final java.lang.String id;
    private java.util.List requests;
    private int timeoutInMilliseconds;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <com.facebook.RequestBatch: java.util.concurrent.atomic.AtomicInteger idGenerator> = $r0;

        return;
    }

    public void <init>()
    {
        com.facebook.RequestBatch $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        java.util.ArrayList $r2, $r2_1, $r2_2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.String $r4;

        $r0 := @this: com.facebook.RequestBatch;

        specialinvoke $r0.<java.util.AbstractList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r2;

        $r0.<com.facebook.RequestBatch: int timeoutInMilliseconds> = 0;

        $r1 = <com.facebook.RequestBatch: java.util.concurrent.atomic.AtomicInteger idGenerator>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.Integer: java.lang.String toString()>();

        $r0.<com.facebook.RequestBatch: java.lang.String id> = $r4;

        $r2_1 = new java.util.ArrayList;

        specialinvoke $r2_1.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List callbacks> = $r2_1;

        $r2_2 = new java.util.ArrayList;

        specialinvoke $r2_2.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r2_2;

        return;
    }

    public void <init>(com.facebook.RequestBatch)
    {
        com.facebook.RequestBatch $r0, $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        android.os.Handler $r3;
        java.util.List $r4;
        java.util.ArrayList $r5, $r5_1, $r5_2, $r5_3;
        int $i0, $i0_1;
        java.lang.Integer $r6;
        java.lang.String $r7;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: com.facebook.RequestBatch;

        specialinvoke $r0.<java.util.AbstractList: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r5;

        $r0.<com.facebook.RequestBatch: int timeoutInMilliseconds> = 0;

        $r2 = <com.facebook.RequestBatch: java.util.concurrent.atomic.AtomicInteger idGenerator>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.Integer: java.lang.String toString()>();

        $r0.<com.facebook.RequestBatch: java.lang.String id> = $r7;

        $r5_1 = new java.util.ArrayList;

        specialinvoke $r5_1.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List callbacks> = $r5_1;

        $r5_2 = new java.util.ArrayList;

        specialinvoke $r5_2.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r5_2;

        $r3 = $r1.<com.facebook.RequestBatch: android.os.Handler callbackHandler>;

        $r0.<com.facebook.RequestBatch: android.os.Handler callbackHandler> = $r3;

        $i0_1 = $r1.<com.facebook.RequestBatch: int timeoutInMilliseconds>;

        $r0.<com.facebook.RequestBatch: int timeoutInMilliseconds> = $i0_1;

        $r5_3 = new java.util.ArrayList;

        $r4 = $r1.<com.facebook.RequestBatch: java.util.List callbacks>;

        specialinvoke $r5_3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r0.<com.facebook.RequestBatch: java.util.List callbacks> = $r5_3;

        return;
    }

    public void <init>(java.util.Collection)
    {
        com.facebook.RequestBatch $r0;
        java.util.Collection $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.util.ArrayList $r3, $r3_1, $r3_2;
        int $i0;
        java.lang.Integer $r4;
        java.lang.String $r5;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: java.util.Collection;

        specialinvoke $r0.<java.util.AbstractList: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r3;

        $r0.<com.facebook.RequestBatch: int timeoutInMilliseconds> = 0;

        $r2 = <com.facebook.RequestBatch: java.util.concurrent.atomic.AtomicInteger idGenerator>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.Integer: java.lang.String toString()>();

        $r0.<com.facebook.RequestBatch: java.lang.String id> = $r5;

        $r3_1 = new java.util.ArrayList;

        specialinvoke $r3_1.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List callbacks> = $r3_1;

        $r3_2 = new java.util.ArrayList;

        specialinvoke $r3_2.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r3_2;

        return;
    }

    public transient void <init>(com.facebook.Request[])
    {
        com.facebook.RequestBatch $r0;
        com.facebook.Request[] $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.util.ArrayList $r3, $r3_1;
        int $i0;
        java.lang.Integer $r4;
        java.lang.String $r5;
        java.util.List $r6;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: com.facebook.Request[];

        specialinvoke $r0.<java.util.AbstractList: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r3;

        $r0.<com.facebook.RequestBatch: int timeoutInMilliseconds> = 0;

        $r2 = <com.facebook.RequestBatch: java.util.concurrent.atomic.AtomicInteger idGenerator>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.Integer: java.lang.String toString()>();

        $r0.<com.facebook.RequestBatch: java.lang.String id> = $r5;

        $r3_1 = new java.util.ArrayList;

        specialinvoke $r3_1.<java.util.ArrayList: void <init>()>();

        $r0.<com.facebook.RequestBatch: java.util.List callbacks> = $r3_1;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r0.<com.facebook.RequestBatch: java.util.List requests> = $r6;

        return;
    }

    public final void add(int, com.facebook.Request)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        com.facebook.Request $r1;
        java.util.List $r2;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.facebook.Request;

        $r2 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i0, $r1);

        return;
    }

    public volatile void add(int, java.lang.Object)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        java.lang.Object $r1;
        com.facebook.Request $r2;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (com.facebook.Request) $r1;

        virtualinvoke $r0.<com.facebook.RequestBatch: void add(int,com.facebook.Request)>($i0, $r2);

        return;
    }

    public final boolean add(com.facebook.Request)
    {
        com.facebook.RequestBatch $r0;
        com.facebook.Request $r1;
        java.util.List $r2;
        boolean $z0;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: com.facebook.Request;

        $r2 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile boolean add(java.lang.Object)
    {
        com.facebook.RequestBatch $r0;
        java.lang.Object $r1;
        boolean $z0;
        com.facebook.Request $r2;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.facebook.Request) $r1;

        $z0 = virtualinvoke $r0.<com.facebook.RequestBatch: boolean add(com.facebook.Request)>($r2);

        return $z0;
    }

    public void addCallback(com.facebook.RequestBatch$Callback)
    {
        com.facebook.RequestBatch $r0;
        com.facebook.RequestBatch$Callback $r1;
        boolean $z0;
        java.util.List $r2, $r2_1, $r2_2;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: com.facebook.RequestBatch$Callback;

        $r2 = $r0.<com.facebook.RequestBatch: java.util.List callbacks>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

(0)     if $z0 != 0 goto label1;

        $r2_1 = $r0.<com.facebook.RequestBatch: java.util.List callbacks>;

(1)     interfaceinvoke $r2_1.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        return;
    }

    public final void clear()
    {
        com.facebook.RequestBatch $r0;
        java.util.List $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public final java.util.List executeAndWait()
    {
        com.facebook.RequestBatch $r0;
        java.util.List $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 = virtualinvoke $r0.<com.facebook.RequestBatch: java.util.List executeAndWaitImpl()>();

        return $r1;
    }

    java.util.List executeAndWaitImpl()
    {
        com.facebook.RequestBatch $r0;
        java.util.List $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 = staticinvoke <com.facebook.Request: java.util.List executeBatchAndWait(com.facebook.RequestBatch)>($r0);

        return $r1;
    }

    public final com.facebook.RequestAsyncTask executeAsync()
    {
        com.facebook.RequestBatch $r0;
        com.facebook.RequestAsyncTask $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 = virtualinvoke $r0.<com.facebook.RequestBatch: com.facebook.RequestAsyncTask executeAsyncImpl()>();

        return $r1;
    }

    com.facebook.RequestAsyncTask executeAsyncImpl()
    {
        com.facebook.RequestBatch $r0;
        com.facebook.RequestAsyncTask $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 = staticinvoke <com.facebook.Request: com.facebook.RequestAsyncTask executeBatchAsync(com.facebook.RequestBatch)>($r0);

        return $r1;
    }

    public final com.facebook.Request get(int)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;
        com.facebook.Request $r3;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.facebook.Request) $r2;

        return $r3;
    }

    public volatile java.lang.Object get(int)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        com.facebook.Request $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.facebook.RequestBatch: com.facebook.Request get(int)>($i0);

        return $r1;
    }

    final java.lang.String getBatchApplicationId()
    {
        com.facebook.RequestBatch $r0;
        java.lang.String r1;

        $r0 := @this: com.facebook.RequestBatch;

        r1 = $r0.<com.facebook.RequestBatch: java.lang.String batchApplicationId>;

        return r1;
    }

    final android.os.Handler getCallbackHandler()
    {
        com.facebook.RequestBatch $r0;
        android.os.Handler r1;

        $r0 := @this: com.facebook.RequestBatch;

        r1 = $r0.<com.facebook.RequestBatch: android.os.Handler callbackHandler>;

        return r1;
    }

    final java.util.List getCallbacks()
    {
        com.facebook.RequestBatch $r0;
        java.util.List r1;

        $r0 := @this: com.facebook.RequestBatch;

        r1 = $r0.<com.facebook.RequestBatch: java.util.List callbacks>;

        return r1;
    }

    final java.lang.String getId()
    {
        com.facebook.RequestBatch $r0;
        java.lang.String r1;

        $r0 := @this: com.facebook.RequestBatch;

        r1 = $r0.<com.facebook.RequestBatch: java.lang.String id>;

        return r1;
    }

    final java.util.List getRequests()
    {
        com.facebook.RequestBatch $r0;
        java.util.List r1;

        $r0 := @this: com.facebook.RequestBatch;

        r1 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        return r1;
    }

    public int getTimeout()
    {
        com.facebook.RequestBatch $r0;
        int i0;

        $r0 := @this: com.facebook.RequestBatch;

        i0 = $r0.<com.facebook.RequestBatch: int timeoutInMilliseconds>;

        return i0;
    }

    public final com.facebook.Request remove(int)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;
        com.facebook.Request $r3;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $r3 = (com.facebook.Request) $r2;

        return $r3;
    }

    public volatile java.lang.Object remove(int)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        com.facebook.Request $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<com.facebook.RequestBatch: com.facebook.Request remove(int)>($i0);

        return $r1;
    }

    public void removeCallback(com.facebook.RequestBatch$Callback)
    {
        com.facebook.RequestBatch $r0;
        com.facebook.RequestBatch$Callback $r1;
        java.util.List $r2;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: com.facebook.RequestBatch$Callback;

        $r2 = $r0.<com.facebook.RequestBatch: java.util.List callbacks>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public final com.facebook.Request set(int, com.facebook.Request)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;
        com.facebook.Request $r3, $r3_1;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r3 := @parameter1: com.facebook.Request;

        $r1 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r3);

        $r3_1 = (com.facebook.Request) $r2;

        return $r3_1;
    }

    public volatile java.lang.Object set(int, java.lang.Object)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        java.lang.Object $r1;
        com.facebook.Request $r2, $r2_1;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (com.facebook.Request) $r1;

        $r2_1 = virtualinvoke $r0.<com.facebook.RequestBatch: com.facebook.Request set(int,com.facebook.Request)>($i0, $r2);

        return $r2_1;
    }

    final void setBatchApplicationId(java.lang.String)
    {
        com.facebook.RequestBatch $r0;
        java.lang.String $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.facebook.RequestBatch: java.lang.String batchApplicationId> = $r1;

        return;
    }

    final void setCallbackHandler(android.os.Handler)
    {
        com.facebook.RequestBatch $r0;
        android.os.Handler $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 := @parameter0: android.os.Handler;

        $r0.<com.facebook.RequestBatch: android.os.Handler callbackHandler> = $r1;

        return;
    }

    public void setTimeout(int)
    {
        com.facebook.RequestBatch $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: com.facebook.RequestBatch;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument timeoutInMilliseconds must be >= 0.");

        throw $r1;

     label1:
        $r0.<com.facebook.RequestBatch: int timeoutInMilliseconds> = $i0;

        return;
    }

    public final int size()
    {
        com.facebook.RequestBatch $r0;
        java.util.List $r1;
        int $i0;

        $r0 := @this: com.facebook.RequestBatch;

        $r1 = $r0.<com.facebook.RequestBatch: java.util.List requests>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
}
