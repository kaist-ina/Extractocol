public class ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry extends java.lang.Object implements ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerResolver
{
    private final ch.boye.httpclientandroidlib.protocol.UriPatternMatcher matcher;

    public void <init>()
    {
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry $r0;
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r1;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new ch.boye.httpclientandroidlib.protocol.UriPatternMatcher;

        specialinvoke $r1.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: void <init>()>();

        $r0.<ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher matcher> = $r1;

        return;
    }

    public java.util.Map getHandlers()
    {
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry $r0;
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r1;
        java.util.Map $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry;

        $r1 = $r0.<ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher matcher>;

        $r2 = virtualinvoke $r1.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.util.Map getObjects()>();

        return $r2;
    }

    public ch.boye.httpclientandroidlib.protocol.HttpRequestHandler lookup(java.lang.String)
    {
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry $r0;
        java.lang.String $r1;
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r2;
        java.lang.Object $r3;
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandler $r4;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher matcher>;

        $r3 = virtualinvoke $r2.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: java.lang.Object lookup(java.lang.String)>($r1);

        $r4 = (ch.boye.httpclientandroidlib.protocol.HttpRequestHandler) $r3;

        return $r4;
    }

    public void register(java.lang.String, ch.boye.httpclientandroidlib.protocol.HttpRequestHandler)
    {
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry $r0;
        java.lang.String $r1;
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandler $r2;
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r3;
        java.lang.IllegalArgumentException $r4, $r4_1;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: ch.boye.httpclientandroidlib.protocol.HttpRequestHandler;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI request pattern may not be null");

        throw $r4;

     label1:
        if $r2 != null goto label2;

        $r4_1 = new java.lang.IllegalArgumentException;

        specialinvoke $r4_1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request handler may not be null");

        throw $r4_1;

     label2:
        $r3 = $r0.<ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher matcher>;

        virtualinvoke $r3.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: void register(java.lang.String,java.lang.Object)>($r1, $r2);

        return;
    }

    public void setHandlers(java.util.Map)
    {
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry $r0;
        java.util.Map $r1;
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry;

        $r1 := @parameter0: java.util.Map;

        $r2 = $r0.<ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher matcher>;

        virtualinvoke $r2.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: void setObjects(java.util.Map)>($r1);

        return;
    }

    public void unregister(java.lang.String)
    {
        ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry $r0;
        java.lang.String $r1;
        ch.boye.httpclientandroidlib.protocol.UriPatternMatcher $r2;

        $r0 := @this: ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<ch.boye.httpclientandroidlib.protocol.HttpRequestHandlerRegistry: ch.boye.httpclientandroidlib.protocol.UriPatternMatcher matcher>;

        virtualinvoke $r2.<ch.boye.httpclientandroidlib.protocol.UriPatternMatcher: void unregister(java.lang.String)>($r1);

        return;
    }
}
