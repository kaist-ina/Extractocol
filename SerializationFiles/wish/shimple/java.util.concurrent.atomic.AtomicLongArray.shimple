public class java.util.concurrent.atomic.AtomicLongArray extends java.lang.Object implements java.io.Serializable
{

    public void <init>(int)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(long[])
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        long[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        r1 := @parameter0: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final int length()
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long get(int)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void set(int, long)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        long l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void lazySet(int, long)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        long l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndSet(int, long)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        long l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean compareAndSet(int, long, long)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        long l1, l2;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final boolean weakCompareAndSet(int, long, long)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        long l1, l2;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndIncrement(int)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndDecrement(int)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long getAndAdd(int, long)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        long l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long incrementAndGet(int)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final long decrementAndGet(int)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public long addAndGet(int, long)
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        int i0;
        long l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.util.concurrent.atomic.AtomicLongArray r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.util.concurrent.atomic.AtomicLongArray;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
