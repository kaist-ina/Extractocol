public final class io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private final int threadPriority;

    public void <init>(int)
    {
        io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory $r0;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory: int threadPriority> = $i0;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory $r0;
        java.lang.Runnable $r1;
        java.lang.Thread $r2;
        int $i0;

        $r0 := @this: io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        $i0 = $r0.<io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory: int threadPriority>;

        virtualinvoke $r2.<java.lang.Thread: void setPriority(int)>($i0);

        virtualinvoke $r2.<java.lang.Thread: void setName(java.lang.String)>("Queue");

        return $r2;
    }
}
