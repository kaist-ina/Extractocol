class bolts.Task$4 extends java.lang.Object implements bolts.Continuation
{
    final bolts.Task this$0;
    final bolts.Continuation val$continuation;
    final java.util.concurrent.Executor val$executor;
    final java.util.concurrent.Callable val$predicate;
    final bolts.Capture val$predicateContinuation;

    void <init>(bolts.Task, java.util.concurrent.Callable, bolts.Continuation, java.util.concurrent.Executor, bolts.Capture)
    {
        bolts.Task$4 $r0;
        bolts.Task $r1;
        java.util.concurrent.Callable $r2;
        bolts.Continuation $r3;
        java.util.concurrent.Executor $r4;
        bolts.Capture $r5;

        $r0 := @this: bolts.Task$4;

        $r1 := @parameter0: bolts.Task;

        $r2 := @parameter1: java.util.concurrent.Callable;

        $r3 := @parameter2: bolts.Continuation;

        $r4 := @parameter3: java.util.concurrent.Executor;

        $r5 := @parameter4: bolts.Capture;

        $r0.<bolts.Task$4: bolts.Task this$0> = $r1;

        $r0.<bolts.Task$4: java.util.concurrent.Callable val$predicate> = $r2;

        $r0.<bolts.Task$4: bolts.Continuation val$continuation> = $r3;

        $r0.<bolts.Task$4: java.util.concurrent.Executor val$executor> = $r4;

        $r0.<bolts.Task$4: bolts.Capture val$predicateContinuation> = $r5;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public bolts.Task then(bolts.Task) throws java.lang.Exception
    {
        bolts.Task$4 $r0;
        java.util.concurrent.Callable $r1;
        bolts.Capture $r2;
        bolts.Task $r3, $r3_1, $r3_2, $r3_3, $r3_4;
        java.lang.Object $r4, $r4_1;
        java.lang.Boolean $r5;
        boolean $z0;
        bolts.Continuation $r6, $r6_1;
        java.util.concurrent.Executor $r7, $r7_1;

        $r0 := @this: bolts.Task$4;

        $r3 := @parameter0: bolts.Task;

        $r1 = $r0.<bolts.Task$4: java.util.concurrent.Callable val$predicate>;

        $r4 = interfaceinvoke $r1.<java.util.concurrent.Callable: java.lang.Object call()>();

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r3_1 = staticinvoke <bolts.Task: bolts.Task forResult(java.lang.Object)>(null);

        $r6 = $r0.<bolts.Task$4: bolts.Continuation val$continuation>;

        $r7 = $r0.<bolts.Task$4: java.util.concurrent.Executor val$executor>;

        $r3_2 = virtualinvoke $r3_1.<bolts.Task: bolts.Task onSuccessTask(bolts.Continuation,java.util.concurrent.Executor)>($r6, $r7);

        $r2 = $r0.<bolts.Task$4: bolts.Capture val$predicateContinuation>;

        $r4_1 = virtualinvoke $r2.<bolts.Capture: java.lang.Object get()>();

        $r6_1 = (bolts.Continuation) $r4_1;

        $r7_1 = $r0.<bolts.Task$4: java.util.concurrent.Executor val$executor>;

        $r3_3 = virtualinvoke $r3_2.<bolts.Task: bolts.Task onSuccessTask(bolts.Continuation,java.util.concurrent.Executor)>($r6_1, $r7_1);

        return $r3_3;

     label1:
        $r3_4 = staticinvoke <bolts.Task: bolts.Task forResult(java.lang.Object)>(null);

        return $r3_4;
    }

    public volatile java.lang.Object then(bolts.Task) throws java.lang.Exception
    {
        bolts.Task$4 $r0;
        bolts.Task $r1, $r1_1;

        $r0 := @this: bolts.Task$4;

        $r1 := @parameter0: bolts.Task;

        $r1_1 = virtualinvoke $r0.<bolts.Task$4: bolts.Task then(bolts.Task)>($r1);

        return $r1_1;
    }
}
