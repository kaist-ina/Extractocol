public class com.contextlogic.wish.cache.CachedImageFetcher extends java.lang.Object
{
    private static final java.util.regex.Pattern CONTEST_ID_REGEX;
    public static final long DEFAULT_CACHE_EXPIRY;
    private static final long DEFAULT_FACEBOOK_CACHE_EXPIRY;
    public static final int MODE_CENTER_CROP;
    public static final int MODE_CENTER_FIT;
    public static final int MODE_DEFAULT;
    private boolean cacheOnly;
    private com.contextlogic.wish.cache.CachedImageFetcherCallback callback;
    private boolean cancelled;
    private boolean forceNoImageResize;
    private java.lang.Object imageTag;
    private int mode;
    private java.lang.Object requestTag;
    private int requestedImageHeight;
    private int requestedImageWidth;
    private com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler;
    private boolean useDynamicScaling;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("/[0-9,a-f]{24}(-[0-9]+)?");

        <com.contextlogic.wish.cache.CachedImageFetcher: java.util.regex.Pattern CONTEST_ID_REGEX> = $r0;

        return;
    }

    public void <init>(com.contextlogic.wish.cache.CachedImageFetcherCallback)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        com.contextlogic.wish.cache.CachedImageFetcherCallback $r1;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $r1 := @parameter0: com.contextlogic.wish.cache.CachedImageFetcherCallback;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcherCallback callback> = $r1;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean cacheOnly> = 0;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageWidth> = -1;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageHeight> = -1;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean cancelled> = 0;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean useDynamicScaling> = 0;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int mode> = -1;

        return;
    }

    static void access$000(com.contextlogic.wish.cache.CachedImageFetcher, android.graphics.Bitmap)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: com.contextlogic.wish.cache.CachedImageFetcher;

        $r1 := @parameter1: android.graphics.Bitmap;

        specialinvoke $r0.<com.contextlogic.wish.cache.CachedImageFetcher: void loadedImage(android.graphics.Bitmap)>($r1);

        return;
    }

    static void access$100(com.contextlogic.wish.cache.CachedImageFetcher)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;

        $r0 := @parameter0: com.contextlogic.wish.cache.CachedImageFetcher;

        specialinvoke $r0.<com.contextlogic.wish.cache.CachedImageFetcher: void failedLoadImage()>();

        return;
    }

    private void failedLoadImage()
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        java.lang.Object $r1;
        com.contextlogic.wish.cache.CachedImageFetcherCallback $r2, $r2_1, $r2_2;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag> = null;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler> = null;

        $r2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcherCallback callback>;

(0)     if $r2 == null goto label1;

        $r2_1 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcherCallback callback>;

        $r1 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object imageTag>;

(1)     interfaceinvoke $r2_1.<com.contextlogic.wish.cache.CachedImageFetcherCallback: void onImageLoadFailed(java.lang.Object)>($r1);

     label1:
        $r2_2 = Phi($r2 #0, $r2_1 #1);

        return;
    }

    private void loadedImage(android.graphics.Bitmap)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        android.graphics.Bitmap $r1;
        java.lang.Object $r2;
        com.contextlogic.wish.cache.CachedImageFetcherCallback $r3, $r3_1, $r3_2;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag> = null;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler> = null;

        $r3 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcherCallback callback>;

(0)     if $r3 == null goto label1;

        $r3_1 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcherCallback callback>;

        $r2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object imageTag>;

(1)     interfaceinvoke $r3_1.<com.contextlogic.wish.cache.CachedImageFetcherCallback: void onImageLoaded(java.lang.Object,android.graphics.Bitmap)>($r2, $r1);

     label1:
        $r3_2 = Phi($r3 #0, $r3_1 #1);

        return;
    }

    public void cancel()
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        com.contextlogic.wish.http.WishHttpClient $r1;
        java.lang.Object $r2, $r2_1, $r2_2;
        com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler $r3, $r3_1, $r3_2, $r3_3;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean cancelled> = 1;

        $r2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag>;

(0)     if $r2 == null goto label2;

        $r1 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        $r2_1 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag>;

        virtualinvoke $r1.<com.contextlogic.wish.http.WishHttpClient: void cancelRequests(java.lang.Object)>($r2_1);

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag> = null;

        $r3 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

(1)     if $r3 == null goto label1;

        $r3_1 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

(2)     virtualinvoke $r3_1.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void markCancelled()>();

     label1:
        $r3_2 = Phi($r3 #1, $r3_1 #2);

(3)     $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler> = null;

     label2:
        $r3_3 = Phi($r3 #0, $r3_2 #3);

        $r2_2 = Phi($r2 #0, $r2_1 #3);

        return;
    }

    public void fetchImage(java.lang.String, java.lang.Object)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.contextlogic.wish.http.WishHttpClient$RequestPool $r3;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.contextlogic.wish.http.WishHttpClient$RequestPool: com.contextlogic.wish.http.WishHttpClient$RequestPool Image>;

        virtualinvoke $r0.<com.contextlogic.wish.cache.CachedImageFetcher: void fetchImage(java.lang.String,java.lang.Object,com.contextlogic.wish.http.WishHttpClient$RequestPool)>($r1, $r2, $r3);

        return;
    }

    public void fetchImage(java.lang.String, java.lang.Object, com.contextlogic.wish.http.WishHttpClient$RequestPool)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.contextlogic.wish.http.WishHttpClient$RequestPool $r3;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: com.contextlogic.wish.http.WishHttpClient$RequestPool;

        virtualinvoke $r0.<com.contextlogic.wish.cache.CachedImageFetcher: void fetchImage(java.lang.String,java.lang.Object,com.contextlogic.wish.http.WishHttpClient$RequestPool,long)>($r1, $r2, $r3, -1L);

        return;
    }

    public void fetchImage(java.lang.String, java.lang.Object, com.contextlogic.wish.http.WishHttpClient$RequestPool, long)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        com.contextlogic.wish.http.WishHttpClient$RequestPool $r1;
        long $l0;
        java.lang.Object $r2, $r6, $r6_1, $r6_2;
        byte $b1;
        java.util.regex.Pattern $r3;
        int $i2, $i3, $i2_1, $i2_2, $i2_3, $i2_4, $i2_5, $i2_6, $i2_7;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r9, $r11, $r12, $r13, $r13_1, $r11_1, $r12_1, $r11_2, $r13_2, $r12_2, $r11_3, $r5_1, $r5_2, $r5_3, $r5_4, $r13_3, $r12_3, $r11_4, $r5_5;
        boolean $z0, $z1, $z2, $z0_1, $z0_2, $z0_3, $z1_1, $z0_4, $z0_5, $z1_2, $z0_6;
        com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler $r7, $r7_1, $r7_2, $r7_3, $r7_4, $r7_5, $r7_6, $r7_7, $r7_8, $r7_9, $r7_10, $r7_11;
        com.contextlogic.wish.user.UserStatusManager $r8, $r8_1;
        java.util.regex.Matcher $r10;
        com.contextlogic.wish.http.WishHttpClient $r14;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $r5 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.lang.Object;

        $r1 := @parameter2: com.contextlogic.wish.http.WishHttpClient$RequestPool;

        $l0 := @parameter3: long;

        $r2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag>;

        if $r2 != null goto label8;

        $z0 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean cancelled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object imageTag> = $r6;

        $r6_1 = new java.lang.Object;

        specialinvoke $r6_1.<java.lang.Object: void <init>()>();

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag> = $r6_1;

        $r7 = new com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler;

        specialinvoke $r7.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void <init>(com.contextlogic.wish.cache.CachedImageFetcher)>($r0);

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler> = $r7;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label6;

        $r7_1 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

(0)     virtualinvoke $r7_1.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setCacheExpiry(long)>($l0);

     label2:
        $z0_1 = Phi($z0 #0, $z0_6 #9, $z0_6 #10);

        $r7_2 = Phi($r7_1 #0, $r7_10 #9, $r7_11 #10);

        $r7_3 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        virtualinvoke $r7_3.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setCanUseCachedResponse(boolean)>(1);

        $r7_4 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        virtualinvoke $r7_4.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setShouldCacheResponse(boolean)>(1);

        $r7_5 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        $z0_2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean cacheOnly>;

        virtualinvoke $r7_5.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setCacheOnly(boolean)>($z0_2);

        $r7_6 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        $i2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageWidth>;

        virtualinvoke $r7_6.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setRequestedWidth(int)>($i2);

        $r7_7 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        $i2_1 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageHeight>;

        virtualinvoke $r7_7.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setRequestedHeight(int)>($i2_1);

        $z0_3 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean useDynamicScaling>;

        $r8 = staticinvoke <com.contextlogic.wish.user.UserStatusManager: com.contextlogic.wish.user.UserStatusManager getInstance()>();

        $r9 = virtualinvoke $r8.<com.contextlogic.wish.user.UserStatusManager: java.lang.String getLemmingsUrl()>();

        $r8_1 = staticinvoke <com.contextlogic.wish.user.UserStatusManager: com.contextlogic.wish.user.UserStatusManager getInstance()>();

        $z1 = virtualinvoke $r8_1.<com.contextlogic.wish.user.UserStatusManager: boolean inResizeUrls(java.lang.String)>($r5);

        $z2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean useDynamicScaling>;

(1)     if $z2 != 0 goto label5;

(2)     if $r9 == null goto label5;

(3)     if $z1 == 0 goto label5;

        $r3 = <com.contextlogic.wish.cache.CachedImageFetcher: java.util.regex.Pattern CONTEST_ID_REGEX>;

        $r10 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        $r11 = null;

        $r12 = null;

        $z1_1 = virtualinvoke $r10.<java.util.regex.Matcher: boolean find()>();

(4)     if $z1_1 == 0 goto label3;

        $r13 = virtualinvoke $r10.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r13_1 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>(1);

        $r11_1 = $r13_1;

        $i3 = virtualinvoke $r13_1.<java.lang.String: int indexOf(int)>(45);

(5)     if $i3 == -1 goto label3;

        $i2_2 = $i3 + 1;

        $r12_1 = virtualinvoke $r13_1.<java.lang.String: java.lang.String substring(int)>($i2_2);

(6)     $r11_2 = virtualinvoke $r13_1.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label3:
        $r13_2 = Phi($r13 #4, $r13_1 #5, $r13_1 #6);

        $r12_2 = Phi($r12 #4, $r12 #5, $r12_1 #6);

        $r11_3 = Phi($r11 #4, $r11_1 #5, $r11_2 #6);

        $i2_3 = Phi($i2_1 #4, $i2_1 #5, $i2_2 #6);

(7)     if $r11_3 == null goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?contest_id=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11_3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&w=");

        $i2_4 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageWidth>;

        $r5_1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2_4);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5_1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&h=");

        $i2_5 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageHeight>;

        $r5_2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2_5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5_2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&m=");

        $i2_6 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int mode>;

        $r5_3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2_6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5_3);

        if $r12_2 == null goto label4;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&s=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12_2);

     label4:
        $r5_4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

(8)     $z0_4 = 0;

     label5:
        $z0_5 = Phi($z0_3 #1, $z0_3 #2, $z0_3 #3, $z0_3 #7, $z0_4 #8);

        $r13_3 = Phi($r13 #1, $r13 #2, $r13 #3, $r13_2 #7, $r13_2 #8);

        $r12_3 = Phi($r12 #1, $r12 #2, $r12 #3, $r12_2 #7, $r12_2 #8);

        $z1_2 = Phi($z1 #1, $z1 #2, $z1 #3, $z1_1 #7, $z1_1 #8);

        $r11_4 = Phi($r11 #1, $r11 #2, $r11 #3, $r11_3 #7, $r11_3 #8);

        $i2_7 = Phi($i2_1 #1, $i2_1 #2, $i2_1 #3, $i2_3 #7, $i2_6 #8);

        $r5_5 = Phi($r5 #1, $r5 #2, $r5 #3, $r5 #7, $r5_4 #8);

        $r7_8 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        virtualinvoke $r7_8.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setAllowDensityScaleUp(boolean)>($z0_5);

        $r14 = staticinvoke <com.contextlogic.wish.http.WishHttpClient: com.contextlogic.wish.http.WishHttpClient getInstance()>();

        $r6_2 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: java.lang.Object requestTag>;

        $r7_9 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        virtualinvoke $r14.<com.contextlogic.wish.http.WishHttpClient: void get(com.contextlogic.wish.http.WishHttpClient$RequestPool,java.lang.Object,java.lang.String,com.contextlogic.wish.http.HttpRequestParams,com.contextlogic.wish.http.HttpResponseHandler)>($r1, $r6_2, $r5_5, null, $r7_9);

        return;

     label6:
        $z0_6 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("graph.facebook.com");

        if $z0_6 == 0 goto label7;

        $r7_10 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        virtualinvoke $r7_10.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setCacheExpiry(long)>(86400000L);

(9)     goto label2;

     label7:
        $r7_11 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler responseHandler>;

        virtualinvoke $r7_11.<com.contextlogic.wish.cache.CachedImageFetcher$ImageResponseHandler: void setCacheExpiry(long)>(604800000L);

(10)    goto label2;

     label8:
        return;
    }

    public int getRequestedImageHeight()
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        int i0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        i0 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageHeight>;

        return i0;
    }

    public int getRequestedImageWidth()
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        int i0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        i0 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageWidth>;

        return i0;
    }

    public boolean getUseDynamicScaling()
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        boolean z0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        z0 = $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean useDynamicScaling>;

        return z0;
    }

    public void setCacheOnly(boolean)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $z0 := @parameter0: boolean;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean cacheOnly> = $z0;

        return;
    }

    public void setMode(int)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int mode> = $i0;

        return;
    }

    public void setRequestedImageHeight(int)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageHeight> = $i0;

        return;
    }

    public void setRequestedImageWidth(int)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        int $i0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $i0 := @parameter0: int;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: int requestedImageWidth> = $i0;

        return;
    }

    public void setUseDynamicScaling(boolean)
    {
        com.contextlogic.wish.cache.CachedImageFetcher $r0;
        boolean $z0;

        $r0 := @this: com.contextlogic.wish.cache.CachedImageFetcher;

        $z0 := @parameter0: boolean;

        $r0.<com.contextlogic.wish.cache.CachedImageFetcher: boolean useDynamicScaling> = $z0;

        return;
    }
}
