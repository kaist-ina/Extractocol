public class javax.crypto.Cipher extends java.lang.Object
{
    public static final int DECRYPT_MODE;
    public static final int ENCRYPT_MODE;
    public static final int PRIVATE_KEY;
    public static final int PUBLIC_KEY;
    public static final int SECRET_KEY;
    public static final int UNWRAP_MODE;
    public static final int WRAP_MODE;

    protected void <init>(javax.crypto.CipherSpi, java.security.Provider, java.lang.String)
    {
        javax.crypto.Cipher r0;
        javax.crypto.CipherSpi r1;
        java.security.Provider r2;
        java.lang.String r3;
        java.lang.RuntimeException $r4;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: javax.crypto.CipherSpi;

        r2 := @parameter1: java.security.Provider;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public static final javax.crypto.Cipher getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static final javax.crypto.Cipher getInstance(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, javax.crypto.NoSuchPaddingException
    {
        java.lang.String r0, r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static final javax.crypto.Cipher getInstance(java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException
    {
        java.lang.String r0;
        java.security.Provider r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.Provider;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.security.Provider getProvider()
    {
        javax.crypto.Cipher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.String getAlgorithm()
    {
        javax.crypto.Cipher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getBlockSize()
    {
        javax.crypto.Cipher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int getOutputSize(int)
    {
        javax.crypto.Cipher r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final byte[] getIV()
    {
        javax.crypto.Cipher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.security.AlgorithmParameters getParameters()
    {
        javax.crypto.Cipher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final javax.crypto.ExemptionMechanism getExemptionMechanism()
    {
        javax.crypto.Cipher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final void init(int, java.security.Key) throws java.security.InvalidKeyException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.Key r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void init(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.Key r1;
        java.security.SecureRandom r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final void init(int, java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final void init(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.security.SecureRandom r3;
        java.lang.RuntimeException $r4;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter3: java.security.SecureRandom;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public final void init(int, java.security.Key, java.security.AlgorithmParameters) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.Key r1;
        java.security.AlgorithmParameters r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.AlgorithmParameters;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final void init(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.Key r1;
        java.security.AlgorithmParameters r2;
        java.security.SecureRandom r3;
        java.lang.RuntimeException $r4;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.AlgorithmParameters;

        r3 := @parameter3: java.security.SecureRandom;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r4;
    }

    public final void init(int, java.security.cert.Certificate) throws java.security.InvalidKeyException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.cert.Certificate r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.cert.Certificate;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void init(int, java.security.cert.Certificate, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        javax.crypto.Cipher r0;
        int i0;
        java.security.cert.Certificate r1;
        java.security.SecureRandom r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.cert.Certificate;

        r2 := @parameter2: java.security.SecureRandom;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final byte[] update(byte[])
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final byte[] update(byte[], int, int)
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final int update(byte[], int, int, byte[]) throws javax.crypto.ShortBufferException
    {
        javax.crypto.Cipher r0;
        byte[] r1, r2;
        int i0, i1;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final int update(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException
    {
        javax.crypto.Cipher r0;
        byte[] r1, r2;
        int i0, i1, i2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final int update(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.crypto.ShortBufferException
    {
        javax.crypto.Cipher r0;
        java.nio.ByteBuffer r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final void updateAAD(byte[])
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void updateAAD(byte[], int, int)
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final void updateAAD(java.nio.ByteBuffer)
    {
        javax.crypto.Cipher r0;
        java.nio.ByteBuffer r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final byte[] doFinal() throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.Cipher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: javax.crypto.Cipher;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final int doFinal(byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.ShortBufferException, javax.crypto.BadPaddingException
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final byte[] doFinal(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final byte[] doFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final int doFinal(byte[], int, int, byte[]) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.Cipher r0;
        byte[] r1, r2;
        int i0, i1;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final int doFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.Cipher r0;
        byte[] r1, r2;
        int i0, i1, i2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final int doFinal(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.Cipher r0;
        java.nio.ByteBuffer r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final byte[] wrap(java.security.Key) throws javax.crypto.IllegalBlockSizeException, java.security.InvalidKeyException
    {
        javax.crypto.Cipher r0;
        java.security.Key r1;
        java.lang.RuntimeException $r2;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: java.security.Key;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.security.Key unwrap(byte[], java.lang.String, int) throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException
    {
        javax.crypto.Cipher r0;
        byte[] r1;
        java.lang.String r2;
        int i0;
        java.lang.RuntimeException $r3;

        r0 := @this: javax.crypto.Cipher;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static final int getMaxAllowedKeyLength(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static final java.security.spec.AlgorithmParameterSpec getMaxAllowedParameterSpec(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }
}
