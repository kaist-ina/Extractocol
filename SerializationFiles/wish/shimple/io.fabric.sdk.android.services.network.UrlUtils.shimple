public final class io.fabric.sdk.android.services.network.UrlUtils extends java.lang.Object
{
    public static final java.lang.String UTF8;

    private void <init>()
    {
        io.fabric.sdk.android.services.network.UrlUtils $r0;

        $r0 := @this: io.fabric.sdk.android.services.network.UrlUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.TreeMap getQueryParams(java.lang.String, boolean)
    {
        boolean $z0, $z1;
        java.util.TreeMap $r0;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        java.lang.String $r1, $r4, $r1_1, $r1_2, $r1_3, $r1_4, $r4_1, $r4_2, $r1_5, $r4_3, $r1_6, $r4_4, $r1_7, $r1_8, $r1_9, $r1_10;
        java.lang.String[] $r2, $r3;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        if $r1 != null goto label1;

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("&");

        $i0 = lengthof $r2;

(0)     $i2 = 0;

     label2:
        $r1_1 = Phi($r1 #0, $r1_6 #2);

        $r4 = Phi($r4 #0, $r4_4 #2);

        $i2_1 = Phi($i2 #0, $i2_2 #2);

        if $i2_1 >= $i0 goto label7;

        $r1_2 = $r2[$i2_1];

        $r3 = virtualinvoke $r1_2.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i1 = lengthof $r3;

        if $i1 != 2 goto label5;

        if $z0 == 0 goto label4;

        $r1_3 = $r3[0];

        $r1_4 = staticinvoke <io.fabric.sdk.android.services.network.UrlUtils: java.lang.String urlDecode(java.lang.String)>($r1_3);

        $r4_1 = $r3[1];

        $r4_2 = staticinvoke <io.fabric.sdk.android.services.network.UrlUtils: java.lang.String urlDecode(java.lang.String)>($r4_1);

(1)     virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1_4, $r4_2);

     label3:
        $r1_6 = Phi($r1_4 #1, $r1_5 #3, $r1_7 #4, $r1_9 #5, $r1_10 #6);

        $r4_4 = Phi($r4_2 #1, $r4_3 #3, $r4 #4, $r4 #5, $r4 #6);

        $i2_2 = $i2_1 + 1;

(2)     goto label2;

     label4:
        $r1_5 = $r3[0];

        $r4_3 = $r3[1];

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1_5, $r4_3);

(3)     goto label3;

     label5:
        $r1_7 = $r3[0];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1_7);

(4)     if $z1 != 0 goto label3;

        if $z0 == 0 goto label6;

        $r1_8 = $r3[0];

        $r1_9 = staticinvoke <io.fabric.sdk.android.services.network.UrlUtils: java.lang.String urlDecode(java.lang.String)>($r1_8);

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1_9, "");

(5)     goto label3;

     label6:
        $r1_10 = $r3[0];

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1_10, "");

(6)     goto label3;

     label7:
        return $r0;
    }

    public static java.util.TreeMap getQueryParams(java.net.URI, boolean)
    {
        java.net.URI $r0;
        boolean $z0;
        java.lang.String $r1;
        java.util.TreeMap $r2;

        $r0 := @parameter0: java.net.URI;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<java.net.URI: java.lang.String getRawQuery()>();

        $r2 = staticinvoke <io.fabric.sdk.android.services.network.UrlUtils: java.util.TreeMap getQueryParams(java.lang.String,boolean)>($r1, $z0);

        return $r2;
    }

    public static java.lang.String percentEncode(java.lang.String)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r1_1, $r1_2;
        int $i0, $i1, $i3, $i1_1, $i1_2, $i3_1, $i1_3, $i3_2, $i3_3, $i3_4, $i1_4, $i3_5;
        char $c2, $c4, $c4_1, $c4_2, $c4_3, $c4_4;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return "";

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1_1 = staticinvoke <io.fabric.sdk.android.services.network.UrlUtils: java.lang.String urlEncode(java.lang.String)>($r1);

        $i0 = virtualinvoke $r1_1.<java.lang.String: int length()>();

(0)     $i1 = 0;

     label2:
        $c4 = Phi($c4 #0, $c4_1 #2);

        $i1_1 = Phi($i1 #0, $i1_3 #2);

        $i3 = Phi($i3 #0, $i3_1 #2);

        if $i1_1 >= $i0 goto label7;

        $c2 = virtualinvoke $r1_1.<java.lang.String: char charAt(int)>($i1_1);

        if $c2 != 42 goto label4;

(1)     virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%2A");

     label3:
        $c4_1 = Phi($c4 #1, $c4 #3, $c4_3 #8, $c4_4 #9);

        $i1_2 = Phi($i1_1 #1, $i1_1 #3, $i1_4 #8, $i1_1 #9);

        $i3_1 = Phi($i3 #1, $i3 #3, $i3_4 #8, $i3_5 #9);

        $i1_3 = $i1_2 + 1;

(2)     goto label2;

     label4:
        if $c2 != 43 goto label5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%20");

(3)     goto label3;

     label5:
(4)     if $c2 != 37 goto label6;

        $i3_2 = $i1_1 + 2;

(5)     if $i3_2 >= $i0 goto label6;

        $i3_3 = $i1_1 + 1;

        $c4_2 = virtualinvoke $r1_1.<java.lang.String: char charAt(int)>($i3_3);

(6)     if $c4_2 != 55 goto label6;

        $i3_4 = $i1_1 + 2;

        $c4_3 = virtualinvoke $r1_1.<java.lang.String: char charAt(int)>($i3_4);

(7)     if $c4_3 != 69 goto label6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

        $i1_4 = $i1_1 + 2;

(8)     goto label3;

     label6:
        $c4_4 = Phi($c4 #4, $c4 #5, $c4_2 #6, $c4_3 #7);

        $i3_5 = Phi($i3 #4, $i3_2 #5, $i3_3 #6, $i3_4 #7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

(9)     goto label3;

     label7:
        $r1_2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1_2;
    }

    public static java.lang.String urlDecode(java.lang.String)
    {
        java.io.UnsupportedEncodingException $r0;
        java.lang.RuntimeException $r1;
        java.lang.String $r2, $r2_1, $r2_2, $r2_3;

        $r2 := @parameter0: java.lang.String;

(0)     if $r2 != null goto label1;

        return "";

     label1:
(1)     $r2_1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r2, "UTF8");

     label2:
        return $r2_1;

     label3:
        $r0 := @caughtexception;

        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r1 = new java.lang.RuntimeException;

        $r2_3 = virtualinvoke $r0.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2_3, $r0);

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String urlEncode(java.lang.String)
    {
        java.io.UnsupportedEncodingException $r0;
        java.lang.RuntimeException $r1;
        java.lang.String $r2, $r2_1, $r2_2, $r2_3;

        $r2 := @parameter0: java.lang.String;

(0)     if $r2 != null goto label1;

        return "";

     label1:
(1)     $r2_1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF8");

     label2:
        return $r2_1;

     label3:
        $r0 := @caughtexception;

        $r2_2 = Phi($r2 #0, $r2_1 #1);

        $r1 = new java.lang.RuntimeException;

        $r2_3 = virtualinvoke $r0.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2_3, $r0);

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
