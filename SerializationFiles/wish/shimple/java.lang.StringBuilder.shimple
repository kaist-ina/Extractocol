public final class java.lang.StringBuilder extends java.lang.AbstractStringBuilder implements java.lang.Appendable, java.lang.CharSequence, java.io.Serializable
{

    public void <init>()
    {
        java.lang.StringBuilder r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(int)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public void <init>(java.lang.CharSequence)
    {
        java.lang.StringBuilder r0;
        java.lang.CharSequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void <init>(java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>();

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder append(boolean)
    {
        java.lang.StringBuilder r0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder append(char)
    {
        java.lang.StringBuilder r0;
        char c0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        c0 := @parameter0: char;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder append(int)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder append(long)
    {
        java.lang.StringBuilder r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        l0 := @parameter0: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder append(float)
    {
        java.lang.StringBuilder r0;
        float f0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        f0 := @parameter0: float;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder append(double)
    {
        java.lang.StringBuilder r0;
        double d0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        d0 := @parameter0: double;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder append(java.lang.Object)
    {
        java.lang.StringBuilder r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder append(java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder append(java.lang.StringBuffer)
    {
        java.lang.StringBuilder r0;
        java.lang.StringBuffer r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.StringBuffer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder append(char[])
    {
        java.lang.StringBuilder r0;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: char[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder append(char[], int, int)
    {
        java.lang.StringBuilder r0;
        char[] r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder append(java.lang.CharSequence)
    {
        java.lang.StringBuilder r0;
        java.lang.CharSequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder append(java.lang.CharSequence, int, int)
    {
        java.lang.StringBuilder r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder appendCodePoint(int)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder delete(int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder deleteCharAt(int)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder insert(int, boolean)
    {
        java.lang.StringBuilder r0;
        int i0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder insert(int, char)
    {
        java.lang.StringBuilder r0;
        int i0;
        char c1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        c1 := @parameter1: char;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder insert(int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder insert(int, long)
    {
        java.lang.StringBuilder r0;
        int i0;
        long l1;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder insert(int, float)
    {
        java.lang.StringBuilder r0;
        int i0;
        float f0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder insert(int, double)
    {
        java.lang.StringBuilder r0;
        int i0;
        double d0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.StringBuilder insert(int, java.lang.Object)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder insert(int, java.lang.String)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder insert(int, char[])
    {
        java.lang.StringBuilder r0;
        int i0;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: char[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder insert(int, char[], int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: char[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder insert(int, java.lang.CharSequence)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.CharSequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder insert(int, java.lang.CharSequence, int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1, i2;
        java.lang.CharSequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder replace(int, int, java.lang.String)
    {
        java.lang.StringBuilder r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public java.lang.StringBuilder reverse()
    {
        java.lang.StringBuilder r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.lang.StringBuilder;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public volatile int offsetByCodePoints(int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1, $i2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = specialinvoke r0.<java.lang.AbstractStringBuilder: int offsetByCodePoints(int,int)>(i0, i1);

        return $i2;
    }

    public volatile int codePointCount(int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1, $i2;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = specialinvoke r0.<java.lang.AbstractStringBuilder: int codePointCount(int,int)>(i0, i1);

        return $i2;
    }

    public volatile int codePointBefore(int)
    {
        java.lang.StringBuilder r0;
        int i0, $i1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<java.lang.AbstractStringBuilder: int codePointBefore(int)>(i0);

        return $i1;
    }

    public volatile int codePointAt(int)
    {
        java.lang.StringBuilder r0;
        int i0, $i1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<java.lang.AbstractStringBuilder: int codePointAt(int)>(i0);

        return $i1;
    }

    public volatile void trimToSize()
    {
        java.lang.StringBuilder r0;

        r0 := @this: java.lang.StringBuilder;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void trimToSize()>();

        return;
    }

    public volatile int lastIndexOf(java.lang.String, int)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<java.lang.AbstractStringBuilder: int lastIndexOf(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public volatile int lastIndexOf(java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int lastIndexOf(java.lang.String)>(r1);

        return $i0;
    }

    public volatile int indexOf(java.lang.String, int)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<java.lang.AbstractStringBuilder: int indexOf(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public volatile int indexOf(java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int indexOf(java.lang.String)>(r1);

        return $i0;
    }

    public volatile java.lang.CharSequence subSequence(int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1;
        java.lang.CharSequence $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<java.lang.AbstractStringBuilder: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        return $r1;
    }

    public volatile java.lang.String substring(int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>(i0, i1);

        return $r1;
    }

    public volatile java.lang.String substring(int)
    {
        java.lang.StringBuilder r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<java.lang.AbstractStringBuilder: java.lang.String substring(int)>(i0);

        return $r1;
    }

    public volatile void setLength(int)
    {
        java.lang.StringBuilder r0;
        int i0;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void setLength(int)>(i0);

        return;
    }

    public volatile void setCharAt(int, char)
    {
        java.lang.StringBuilder r0;
        int i0;
        char c1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        c1 := @parameter1: char;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void setCharAt(int,char)>(i0, c1);

        return;
    }

    public volatile int length()
    {
        java.lang.StringBuilder r0;
        int $i0;

        r0 := @this: java.lang.StringBuilder;

        $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int length()>();

        return $i0;
    }

    public volatile void getChars(int, int, char[], int)
    {
        java.lang.StringBuilder r0;
        int i0, i1, i2;
        char[] r1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void getChars(int,int,char[],int)>(i0, i1, r1, i2);

        return;
    }

    public volatile void ensureCapacity(int)
    {
        java.lang.StringBuilder r0;
        int i0;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.AbstractStringBuilder: void ensureCapacity(int)>(i0);

        return;
    }

    public volatile char charAt(int)
    {
        java.lang.StringBuilder r0;
        int i0;
        char $c1;

        r0 := @this: java.lang.StringBuilder;

        i0 := @parameter0: int;

        $c1 = specialinvoke r0.<java.lang.AbstractStringBuilder: char charAt(int)>(i0);

        return $c1;
    }

    public volatile int capacity()
    {
        java.lang.StringBuilder r0;
        int $i0;

        r0 := @this: java.lang.StringBuilder;

        $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int capacity()>();

        return $i0;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.lang.StringBuilder r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.lang.StringBuilder r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.lang.StringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        java.lang.StringBuilder r0, $r1;
        char c0;

        r0 := @this: java.lang.StringBuilder;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        return $r1;
    }
}
