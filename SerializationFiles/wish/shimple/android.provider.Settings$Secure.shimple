public final class android.provider.Settings$Secure extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ACCESSIBILITY_DISPLAY_INVERSION_ENABLED;
    public static final java.lang.String ACCESSIBILITY_ENABLED;
    public static final java.lang.String ACCESSIBILITY_SPEAK_PASSWORD;
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String ALLOWED_GEOLOCATION_ORIGINS;
    public static final java.lang.String ALLOW_MOCK_LOCATION;
    public static final java.lang.String ANDROID_ID;
    public static final java.lang.String BACKGROUND_DATA;
    public static final java.lang.String BLUETOOTH_ON;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DEFAULT_INPUT_METHOD;
    public static final java.lang.String DEVELOPMENT_SETTINGS_ENABLED;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String ENABLED_ACCESSIBILITY_SERVICES;
    public static final java.lang.String ENABLED_INPUT_METHODS;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String INPUT_METHOD_SELECTOR_VISIBILITY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.lang.String LOCATION_MODE;
    public static final int LOCATION_MODE_BATTERY_SAVING;
    public static final int LOCATION_MODE_HIGH_ACCURACY;
    public static final int LOCATION_MODE_OFF;
    public static final int LOCATION_MODE_SENSORS_ONLY;
    public static final java.lang.String LOCATION_PROVIDERS_ALLOWED;
    public static final java.lang.String LOCK_PATTERN_ENABLED;
    public static final java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED;
    public static final java.lang.String LOCK_PATTERN_VISIBLE;
    public static final java.lang.String LOGGING_ID;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String PARENTAL_CONTROL_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_LAST_UPDATE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_URL;
    public static final java.lang.String SELECTED_INPUT_METHOD_SUBTYPE;
    public static final java.lang.String SETTINGS_CLASSNAME;
    public static final java.lang.String SKIP_FIRST_USE_HINTS;
    public static final java.lang.String SYS_PROP_SETTING_VERSION;
    public static final java.lang.String TOUCH_EXPLORATION_ENABLED;
    public static final java.lang.String TTS_DEFAULT_COUNTRY;
    public static final java.lang.String TTS_DEFAULT_LANG;
    public static final java.lang.String TTS_DEFAULT_PITCH;
    public static final java.lang.String TTS_DEFAULT_RATE;
    public static final java.lang.String TTS_DEFAULT_SYNTH;
    public static final java.lang.String TTS_DEFAULT_VARIANT;
    public static final java.lang.String TTS_ENABLED_PLUGINS;
    public static final java.lang.String TTS_USE_DEFAULTS;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE;
    public static final java.lang.String WIFI_WATCHDOG_AP_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_PING_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_WATCH_LIST;

    public void <init>()
    {
        android.provider.Settings$Secure r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.provider.Settings$Secure;

        specialinvoke r0.<android.provider.Settings$NameValueTable: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static final boolean isLocationProviderEnabled(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static final void setLocationProviderEnabled(android.content.ContentResolver, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        boolean z0;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    static void <clinit>()
    {
        <android.provider.Settings$Secure: android.net.Uri CONTENT_URI> = null;

        return;
    }
}
